{"version":3,"sources":["webpack:///./src/pages/notes.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_utils_typography__WEBPACK_IMPORTED_MODULE_4__","NoteIndex","_ref","data","location","notes","allMarkdownRemark","edges","a","createElement","title","keywords","map","_ref2","_ref2$node$fields","node","fields","slug","noteDate","noteTitle","key","style","marginBottom","rhythm","marginTop","boxShadow","to","m","module","exports","require","default","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_lincoln__WEBPACK_IMPORTED_MODULE_1__","typography_theme_lincoln__WEBPACK_IMPORTED_MODULE_1___default","Lincoln","overrideThemeStyles","a.gatsby-resp-image-link","color","textDecoration","fontWeight","textShadow","backgroundImage","pre","overflow","blockquote","borderLeftColor","typography","Typography","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","query","render","finalData","Fragment","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","Layout","header","_this$props","this","fontFamily","marginLeft","marginRight","maxWidth","padding","role","className","href","Component","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-notes-js-48bb06e111f3e8caae61.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { rhythm } from '../utils/typography';\n\nfunction NoteIndex({ data, location }) {\n  const notes = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout location={location} title=\"Back to Home Page\">\n      <SEO\n        title=\"Li Hau's Notes\"\n        keywords={[`blog`, `gatsby`, `javascript`, `react`, 'notes']}\n      />\n      <h1>Li Hau's Notes</h1>\n      {notes.map(({ node: { fields: { slug, noteDate, noteTitle } } }) => {\n        return (\n          <h4\n            key={slug}\n            style={{\n              marginBottom: rhythm(0.75),\n              marginTop: rhythm(0.75),\n            }}\n          >\n            <Link style={{ boxShadow: `none` }} to={slug}>\n              {`[${noteDate}] ${noteTitle}`}\n            </Link>\n          </h4>\n        );\n      })}\n    </Layout>\n  );\n}\n\nexport default NoteIndex;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { fields: { type: { eq: \"notes\" }, wip: { ne: true } } }\n      sort: { fields: [fields___noteDate], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            type\n            noteDate\n            noteTitle\n          }\n        }\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\nimport Lincoln from 'typography-theme-lincoln';\nimport './theme-prisms-dracula.css'\n\nconst PRIMARY_COLOR = '#612e77';\n\nLincoln.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n    a: {\n      color: PRIMARY_COLOR,\n      textDecoration: 'underline',\n      fontWeight: 600,\n      textShadow: 'initial',\n      backgroundImage: 'initial',\n    },\n    pre: {\n      overflow: 'scroll',\n    },\n    blockquote: {\n      borderLeftColor: PRIMARY_COLOR,\n    }\n  };\n};\n\nconst typography = new Typography(Lincoln);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport { rhythm } from '../utils/typography';\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props;\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header;\n\n    if (location.pathname === rootPath) {\n      header = null;\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      );\n    }\n\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer style={{ marginTop: rhythm(2) }}>\n          {'Built with '}\n          <span role=\"img\" className=\"emoji\">\n            {'💻'}\n          </span>\n          {' and '}\n          <span role=\"img\" className=\"emoji\">\n            {'❤️'}\n          </span>\n          {' • '}\n          <Link to={`/notes`}>notes</Link>\n          {' • '}\n          <a href=\"https://twitter.com/lihautan\">twitter</a>\n          {' • '}\n          <a href=\"https://github.com/tanhauhau\">github</a>\n          {' • '}\n          <a href=\"https://github.com/tanhauhau/tanhauhau.github.io/issues/new?assignees=&labels=grammar%2C+typo&template=fix-typos-and-grammars.md&title=%5BTYPO%5D\">\n            discuss\n          </a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}