{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","location","_components_seo__WEBPACK_IMPORTED_MODULE_2__","React","Component","pageQuery","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_lincoln__WEBPACK_IMPORTED_MODULE_1__","typography_theme_lincoln__WEBPACK_IMPORTED_MODULE_1___default","Lincoln","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","color","textDecoration","fontWeight","textShadow","backgroundImage","pre","overflow","blockquote","borderLeftColor","li","marginBottom","li > p","li > ul","marginTop","typography","Typography","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","StaticQueryDataRenderer","_ref","staticQueryData","query","finalData","Fragment","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","Layout","header","_this$props","style","fontFamily","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","marginLeft","marginRight","maxWidth","padding","role","className","href","SEO","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-34eb6780483d6b41c25f.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\nimport Lincoln from 'typography-theme-lincoln';\nimport './theme-prisms-dracula.css';\n\nconst PRIMARY_COLOR = '#612e77';\n\nLincoln.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n    a: {\n      color: PRIMARY_COLOR,\n      textDecoration: 'underline',\n      fontWeight: 600,\n      textShadow: 'initial',\n      backgroundImage: 'initial',\n    },\n    pre: {\n      overflow: 'scroll',\n    },\n    blockquote: {\n      borderLeftColor: PRIMARY_COLOR,\n    },\n    li: {\n      marginBottom: 0,\n    },\n    'li > p': {\n      marginBottom: 0,\n    },\n    'li > ul': {\n      marginTop: 0,\n    },\n  };\n};\n\nconst typography = new Typography(Lincoln);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport { rhythm } from '../utils/typography';\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props;\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header;\n\n    if (location.pathname === rootPath) {\n      header = null;\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      );\n    }\n\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer style={{ marginTop: rhythm(2) }}>\n          {'Built with '}\n          <span role=\"img\" className=\"emoji\">\n            {'💻'}\n          </span>\n          {' and '}\n          <span role=\"img\" className=\"emoji\">\n            {'❤️'}\n          </span>\n          {' • '}\n          <Link to={`/notes`}>notes</Link>\n          {' • '}\n          <a href=\"https://twitter.com/lihautan\">twitter</a>\n          {' • '}\n          <a href=\"https://github.com/tanhauhau\">github</a>\n          {' • '}\n          <a href=\"https://github.com/tanhauhau/tanhauhau.github.io/issues/new?assignees=&labels=grammar%2C+typo&template=fix-typos-and-grammars.md&title=%5BTYPO%5D\">\n            discuss\n          </a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}