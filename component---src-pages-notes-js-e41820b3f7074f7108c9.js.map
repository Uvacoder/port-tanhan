{"version":3,"sources":["webpack:///./src/pages/notes.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["NoteIndex","render","notes","this","props","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","title","_components_seo__WEBPACK_IMPORTED_MODULE_4__","keywords","map","_ref","_ref$node$fields","node","fields","slug","noteDate","noteTitle","key","style","marginBottom","rhythm","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","to","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_lincoln__WEBPACK_IMPORTED_MODULE_1__","typography_theme_lincoln__WEBPACK_IMPORTED_MODULE_1___default","Lincoln","overrideThemeStyles","a.gatsby-resp-image-link","color","textDecoration","fontWeight","textShadow","backgroundImage","pre","overflow","blockquote","borderLeftColor","typography","Typography","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","header","_this$props","fontFamily","marginLeft","marginRight","maxWidth","padding","role","className","href","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-notes-js-e41820b3f7074f7108c9.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { rhythm } from '../utils/typography';\n\nclass NoteIndex extends React.Component {\n  render() {\n    const notes = this.props.data.allMarkdownRemark.edges;\n\n    return (\n      <Layout location={this.props.location} title=\"Back to Home Page\">\n        <SEO\n          title=\"Li Hau's Notes\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`, 'notes']}\n        />\n        <h1>Li Hau's Notes</h1>\n        {notes.map(({ node: { fields: { slug, noteDate, noteTitle } } }) => {\n          return (\n            <h4\n              key={slug}\n              style={{\n                marginBottom: rhythm(0.75),\n                marginTop: rhythm(0.75),\n              }}\n            >\n              <Link style={{ boxShadow: `none` }} to={slug}>\n                {`[${noteDate}] ${noteTitle}`}\n              </Link>\n            </h4>\n          );\n        })}\n        <div style={{ marginTop: rhythm(2) }} />\n      </Layout>\n    );\n  }\n}\n\nexport default NoteIndex;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      filter: {\n        frontmatter: { wip: { ne: true } }\n        fields: { type: { eq: \"notes\" } }\n      }\n      sort: { fields: [fields___noteDate], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            type\n            noteDate\n            noteTitle\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\nimport Lincoln from 'typography-theme-lincoln';\nimport './theme-prisms-dracula.css'\n\nconst PRIMARY_COLOR = '#612e77';\n\nLincoln.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n    a: {\n      color: PRIMARY_COLOR,\n      textDecoration: 'underline',\n      fontWeight: 600,\n      textShadow: 'initial',\n      backgroundImage: 'initial',\n    },\n    pre: {\n      overflow: 'scroll',\n    },\n    blockquote: {\n      borderLeftColor: PRIMARY_COLOR,\n    }\n  };\n};\n\nconst typography = new Typography(Lincoln);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport { rhythm } from '../utils/typography';\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props;\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header;\n\n    if (location.pathname === rootPath) {\n      header = null;\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      );\n    }\n\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          {'Built with '}\n          <span role=\"img\" className=\"emoji\">\n            {'💻'}\n          </span>\n          {' and '}\n          <span role=\"img\" className=\"emoji\">\n            {'❤️'}\n          </span>\n          {' • '}\n          <Link to={`/notes`}>notes</Link>\n          {' • '}\n          <a href=\"https://twitter.com/lihautan\">twitter</a>\n          {' • '}\n          <a href=\"https://github.com/tanhauhau\">github</a>\n          {' • '}\n          <a href=\"https://github.com/tanhauhau/tanhauhau.github.io/issues/new?assignees=&labels=grammar%2C+typo&template=fix-typos-and-grammars.md&title=%5BTYPO%5D\">\n            discuss\n          </a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}