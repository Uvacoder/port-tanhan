{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_lincoln__WEBPACK_IMPORTED_MODULE_1__","typography_theme_lincoln__WEBPACK_IMPORTED_MODULE_1___default","Lincoln","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","color","textDecoration","fontWeight","textShadow","backgroundImage","pre","overflow","blockquote","borderLeftColor","typography","Typography","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","header","_this$props","style","fontFamily","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","marginLeft","marginRight","maxWidth","padding","role","className","href","SEO","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-adc4830a823ed255fa7d.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\nimport Lincoln from 'typography-theme-lincoln';\nimport './theme-prisms-dracula.css'\n\nconst PRIMARY_COLOR = '#612e77';\n\nLincoln.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n    a: {\n      color: PRIMARY_COLOR,\n      textDecoration: 'underline',\n      fontWeight: 600,\n      textShadow: 'initial',\n      backgroundImage: 'initial',\n    },\n    pre: {\n      overflow: 'scroll',\n    },\n    blockquote: {\n      borderLeftColor: PRIMARY_COLOR,\n    }\n  };\n};\n\nconst typography = new Typography(Lincoln);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport { rhythm } from '../utils/typography';\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props;\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header;\n\n    if (location.pathname === rootPath) {\n      header = null;\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      );\n    }\n\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer style={{ marginTop: rhythm(2) }}>\n          {'Built with '}\n          <span role=\"img\" className=\"emoji\">\n            {'💻'}\n          </span>\n          {' and '}\n          <span role=\"img\" className=\"emoji\">\n            {'❤️'}\n          </span>\n          {' • '}\n          <Link to={`/notes`}>notes</Link>\n          {' • '}\n          <a href=\"https://twitter.com/lihautan\">twitter</a>\n          {' • '}\n          <a href=\"https://github.com/tanhauhau\">github</a>\n          {' • '}\n          <a href=\"https://github.com/tanhauhau/tanhauhau.github.io/issues/new?assignees=&labels=grammar%2C+typo&template=fix-typos-and-grammars.md&title=%5BTYPO%5D\">\n            discuss\n          </a>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}