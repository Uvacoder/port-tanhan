function a(){}function n(a,n){for(const s in n)a[s]=n[s];return a}function s(a){return a()}function e(){return Object.create(null)}function t(a){a.forEach(s)}function o(a){return"function"==typeof a}function r(a,n){return a!=a?n==n:a!==n||a&&"object"==typeof a||"function"==typeof a}function c(a,s,e,t){return a[1]&&t?n(e.ctx.slice(),a[1](t(s))):e.ctx}function p(a,n,s,e,t,o,r){const p=function(a,n,s,e){if(a[2]&&e){const t=a[2](e(s));if(void 0===n.dirty)return t;if("object"==typeof t){const a=[],s=Math.max(n.dirty.length,t.length);for(let e=0;e<s;e+=1)a[e]=n.dirty[e]|t[e];return a}return n.dirty|t}return n.dirty}(n,e,t,o);if(p){const t=c(n,s,e,r);a.p(t,p)}}function i(a,n){a.appendChild(n)}function l(a,n,s){a.insertBefore(n,s||null)}function u(a){a.parentNode.removeChild(a)}function h(a,n){for(let s=0;s<a.length;s+=1)a[s]&&a[s].d(n)}function f(a){return document.createElement(a)}function d(a){return document.createElementNS("http://www.w3.org/2000/svg",a)}function k(a){return document.createTextNode(a)}function m(){return k(" ")}function g(){return k("")}function b(a,n,s){null==s?a.removeAttribute(n):a.getAttribute(n)!==s&&a.setAttribute(n,s)}function E(a){return Array.from(a.childNodes)}function v(a,n,s,e){for(let e=0;e<a.length;e+=1){const t=a[e];if(t.nodeName===n){let n=0;const o=[];for(;n<t.attributes.length;){const a=t.attributes[n++];s[a.name]||o.push(a.name)}for(let a=0;a<o.length;a++)t.removeAttribute(o[a]);return a.splice(e,1)[0]}}return e?d(n):f(n)}function w(a,n){for(let s=0;s<a.length;s+=1){const e=a[s];if(3===e.nodeType)return e.data=""+n,a.splice(s,1)[0]}return k(n)}function y(a){return w(a," ")}function x(a,n){n=""+n,a.wholeText!==n&&(a.data=n)}function T(a,n){a.value=null==n?"":n}function A(a,n,s,e){a.style.setProperty(n,s,e?"important":"")}class I{constructor(a=null){this.a=a,this.e=this.n=null}m(a,n,s=null){this.e||(this.e=f(n.nodeName),this.t=n,this.h(a)),this.i(s)}h(a){this.e.innerHTML=a,this.n=Array.from(this.e.childNodes)}i(a){for(let n=0;n<this.n.length;n+=1)l(this.t,this.n[n],a)}p(a){this.d(),this.h(a),this.i(this.a)}d(){this.n.forEach(u)}}let C;function O(a){C=a}function P(a){(function(){if(!C)throw new Error("Function called outside component initialization");return C})().$$.on_mount.push(a)}const L=[],S=[],j=[],D=[],M=Promise.resolve();let H=!1;function $(a){j.push(a)}let N=!1;const R=new Set;function F(){if(!N){N=!0;do{for(let a=0;a<L.length;a+=1){const n=L[a];O(n),U(n.$$)}for(L.length=0;S.length;)S.pop()();for(let a=0;a<j.length;a+=1){const n=j[a];R.has(n)||(R.add(n),n())}j.length=0}while(L.length);for(;D.length;)D.pop()();H=!1,N=!1,R.clear()}}function U(a){if(null!==a.fragment){a.update(),t(a.before_update);const n=a.dirty;a.dirty=[-1],a.fragment&&a.fragment.p(a.ctx,n),a.after_update.forEach($)}}const B=new Set;function q(a,n){a&&a.i&&(B.delete(a),a.i(n))}function W(a,n,s,e){if(a&&a.o){if(B.has(a))return;B.add(a),(void 0).c.push(()=>{B.delete(a),e&&(s&&a.d(1),e())}),a.o(n)}}function z(a){a&&a.c()}function J(a,n){a&&a.l(n)}function G(a,n,e){const{fragment:r,on_mount:c,on_destroy:p,after_update:i}=a.$$;r&&r.m(n,e),$(()=>{const n=c.map(s).filter(o);p?p.push(...n):t(n),a.$$.on_mount=[]}),i.forEach($)}function _(a,n){const s=a.$$;null!==s.fragment&&(t(s.on_destroy),s.fragment&&s.fragment.d(n),s.on_destroy=s.fragment=null,s.ctx=[])}function X(a,n){-1===a.$$.dirty[0]&&(L.push(a),H||(H=!0,M.then(F)),a.$$.dirty.fill(0)),a.$$.dirty[n/31|0]|=1<<n%31}function Y(n,s,o,r,c,p,i=[-1]){const l=C;O(n);const h=s.props||{},f=n.$$={fragment:null,ctx:null,props:p,update:a,not_equal:c,bound:e(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(l?l.$$.context:[]),callbacks:e(),dirty:i};let d=!1;if(f.ctx=o?o(n,h,(a,s,...e)=>{const t=e.length?e[0]:s;return f.ctx&&c(f.ctx[a],f.ctx[a]=t)&&(f.bound[a]&&f.bound[a](t),d&&X(n,a)),s}):[],f.update(),d=!0,t(f.before_update),f.fragment=!!r&&r(f.ctx),s.target){if(s.hydrate){const a=E(s.target);f.fragment&&f.fragment.l(a),a.forEach(u)}else f.fragment&&f.fragment.c();s.intro&&q(n.$$.fragment),G(n,s.target,s.anchor),F()}O(l)}class V{$destroy(){_(this,1),this.$destroy=a}$on(a,n){const s=this.$$.callbacks[a]||(this.$$.callbacks[a]=[]);return s.push(n),()=>{const a=s.indexOf(n);-1!==a&&s.splice(a,1)}}$set(){}}function Z(n){let s,e,t,o,r,c,p,h,g,x,T,A,I,C,O,P,L,S,j,D,M,H,$,N,R,F,U,B,q,W,z,J,G,_,X;return{c(){s=f("header"),e=f("nav"),t=f("ul"),o=f("li"),r=f("a"),c=k("Tan Li Hau"),p=m(),h=f("li"),g=f("a"),x=k("About"),T=m(),A=f("li"),I=f("a"),C=k("Writings"),O=m(),P=f("li"),L=f("a"),S=k("Talks"),j=m(),D=f("li"),M=f("a"),H=k("Notes"),$=m(),N=f("li"),R=f("a"),F=k("Newsletter"),U=m(),B=f("li"),q=f("a"),W=d("svg"),z=d("path"),J=m(),G=f("a"),_=d("svg"),X=d("path"),this.h()},l(a){s=v(a,"HEADER",{class:!0});var n=E(s);e=v(n,"NAV",{});var i=E(e);t=v(i,"UL",{class:!0});var l=E(t);o=v(l,"LI",{class:!0});var f=E(o);r=v(f,"A",{href:!0,class:!0});var d=E(r);c=w(d,"Tan Li Hau"),d.forEach(u),f.forEach(u),p=y(l),h=v(l,"LI",{class:!0});var k=E(h);g=v(k,"A",{href:!0,class:!0});var m=E(g);x=w(m,"About"),m.forEach(u),k.forEach(u),T=y(l),A=v(l,"LI",{class:!0});var b=E(A);I=v(b,"A",{href:!0,class:!0});var Y=E(I);C=w(Y,"Writings"),Y.forEach(u),b.forEach(u),O=y(l),P=v(l,"LI",{class:!0});var V=E(P);L=v(V,"A",{href:!0,class:!0});var Z=E(L);S=w(Z,"Talks"),Z.forEach(u),V.forEach(u),j=y(l),D=v(l,"LI",{class:!0});var K=E(D);M=v(K,"A",{href:!0,class:!0});var Q=E(M);H=w(Q,"Notes"),Q.forEach(u),K.forEach(u),$=y(l),N=v(l,"LI",{class:!0});var aa=E(N);R=v(aa,"A",{href:!0,class:!0});var na=E(R);F=w(na,"Newsletter"),na.forEach(u),aa.forEach(u),U=y(l),B=v(l,"LI",{class:!0});var sa=E(B);q=v(sa,"A",{"aria-label":!0,href:!0,class:!0});var ea=E(q);W=v(ea,"svg",{viewBox:!0,width:!0,height:!0,class:!0},1);var ta=E(W);z=v(ta,"path",{d:!0},1),E(z).forEach(u),ta.forEach(u),ea.forEach(u),J=y(sa),G=v(sa,"A",{"aria-label":!0,href:!0,class:!0});var oa=E(G);_=v(oa,"svg",{viewBox:!0,width:!0,height:!0,class:!0},1);var ra=E(_);X=v(ra,"path",{d:!0},1),E(X).forEach(u),ra.forEach(u),oa.forEach(u),sa.forEach(u),l.forEach(u),i.forEach(u),n.forEach(u),this.h()},h(){b(r,"href","/"),b(r,"class","svelte-f3e4uo"),b(o,"class","svelte-f3e4uo"),b(g,"href","/about"),b(g,"class","svelte-f3e4uo"),b(h,"class","svelte-f3e4uo"),b(I,"href","/blogs"),b(I,"class","svelte-f3e4uo"),b(A,"class","svelte-f3e4uo"),b(L,"href","/talks"),b(L,"class","svelte-f3e4uo"),b(P,"class","svelte-f3e4uo"),b(M,"href","/notes"),b(M,"class","svelte-f3e4uo"),b(D,"class","svelte-f3e4uo"),b(R,"href","/newsletter"),b(R,"class","svelte-f3e4uo"),b(N,"class","svelte-f3e4uo"),b(z,"d","M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66\n    10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5\n    4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"),b(W,"viewBox","0 0 24 24"),b(W,"width","1em"),b(W,"height","1em"),b(W,"class","svelte-f3e4uo"),b(q,"aria-label","Twitter account"),b(q,"href","https://twitter.com/lihautan"),b(q,"class","svelte-f3e4uo"),b(X,"d","M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0\n    0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07\n    5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65\n    5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42\n    3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"),b(_,"viewBox","0 0 24 24"),b(_,"width","1em"),b(_,"height","1em"),b(_,"class","svelte-f3e4uo"),b(G,"aria-label","Github account"),b(G,"href","https://github.com/tanhauhau"),b(G,"class","svelte-f3e4uo"),b(B,"class","social svelte-f3e4uo"),b(t,"class","svelte-f3e4uo"),b(s,"class","svelte-f3e4uo")},m(a,n){l(a,s,n),i(s,e),i(e,t),i(t,o),i(o,r),i(r,c),i(t,p),i(t,h),i(h,g),i(g,x),i(t,T),i(t,A),i(A,I),i(I,C),i(t,O),i(t,P),i(P,L),i(L,S),i(t,j),i(t,D),i(D,M),i(M,H),i(t,$),i(t,N),i(N,R),i(R,F),i(t,U),i(t,B),i(B,q),i(q,W),i(W,z),i(B,J),i(B,G),i(G,_),i(_,X)},p:a,i:a,o:a,d(a){a&&u(s)}}}class K extends V{constructor(a){super(),Y(this,a,null,Z,r,{})}}function Q(n){let s,e,t,o,r,c,p,h,d,g,x,A,I,C,O,P,L,S,j,D;return{c(){s=f("div"),e=f("h1"),t=k("Subscribe to my newsletter"),o=m(),r=f("h2"),c=k("Get the latest blog posts and project updates delivered right to your inbox"),p=m(),h=f("form"),d=f("div"),g=f("input"),x=m(),A=f("input"),C=m(),O=f("input"),P=m(),L=f("p"),S=k("Powered by Buttondown."),this.h()},l(a){s=v(a,"DIV",{class:!0});var n=E(s);e=v(n,"H1",{});var i=E(e);t=w(i,"Subscribe to my newsletter"),i.forEach(u),o=y(n),r=v(n,"H2",{class:!0});var l=E(r);c=w(l,"Get the latest blog posts and project updates delivered right to your inbox"),l.forEach(u),p=y(n),h=v(n,"FORM",{action:!0,method:!0,target:!0,onsubmit:!0,class:!0});var f=E(h);d=v(f,"DIV",{class:!0});var k=E(d);g=v(k,"INPUT",{type:!0,name:!0,id:!0,"aria-label":!0,placeholder:!0,class:!0}),x=y(k),A=v(k,"INPUT",{type:!0,value:!0,disabled:!0,class:!0}),k.forEach(u),C=y(f),O=v(f,"INPUT",{type:!0,value:!0,name:!0,class:!0}),P=y(f),L=v(f,"P",{class:!0});var m=E(L);S=w(m,"Powered by Buttondown."),m.forEach(u),f.forEach(u),n.forEach(u),this.h()},h(){b(r,"class","svelte-1k1s1co"),b(g,"type","email"),b(g,"name","email"),b(g,"id","bd-email"),b(g,"aria-label","email address"),b(g,"placeholder","youremail@example.com"),b(g,"class","svelte-1k1s1co"),b(A,"type","submit"),A.value="Subscribe",A.disabled=I=!n[0],b(A,"class","svelte-1k1s1co"),b(d,"class","form-item svelte-1k1s1co"),b(O,"type","hidden"),O.value="1",b(O,"name","embed"),b(O,"class","svelte-1k1s1co"),b(L,"class","svelte-1k1s1co"),b(h,"action","https://buttondown.email/api/emails/embed-subscribe/lihautan"),b(h,"method","post"),b(h,"target","popupwindow"),b(h,"onsubmit","window.open('https://buttondown.email/lihautan', 'popupwindow')"),b(h,"class","embeddable-buttondown-form"),b(s,"class","form svelte-1k1s1co")},m(a,u){var f,k,m,b;l(a,s,u),i(s,e),i(e,t),i(s,o),i(s,r),i(r,c),i(s,p),i(s,h),i(h,d),i(d,g),T(g,n[0]),i(d,x),i(d,A),i(h,C),i(h,O),i(h,P),i(h,L),i(L,S),j||(f=g,k="input",m=n[1],f.addEventListener(k,m,b),D=()=>f.removeEventListener(k,m,b),j=!0)},p(a,[n]){1&n&&g.value!==a[0]&&T(g,a[0]),1&n&&I!==(I=!a[0])&&(A.disabled=I)},i:a,o:a,d(a){a&&u(s),j=!1,D()}}}function aa(a,n,s){let e;return[e,function(){e=this.value,s(0,e)}]}class na extends V{constructor(a){super(),Y(this,a,aa,Q,r,{})}}function sa(a){return P(()=>(setTimeout(()=>{if(window.innerWidth>1080){const a=document.createElement("script");a.async=!0,a.type="text/javascript",a.src="//cdn.carbonads.com/carbon.js?serve=CE7ITK3E&placement=lihautancom",a.id="_carbonads_js",document.body.appendChild(a)}},5e3),()=>{try{const a=document.getElementById("carbonads");a.parentNode.removeChild(a)}catch(a){}})),[]}class ea extends V{constructor(a){super(),Y(this,a,sa,null,r,{})}}var ta="https://lihautan.com/creating-custom-javascript-syntax-with-babel/assets/hero-twitter-ebb286c0.jpg";function oa(a,n,s){const e=a.slice();return e[6]=n[s],e}function ra(a,n,s){const e=a.slice();return e[6]=n[s],e}function ca(a){let n,s;return{c(){n=f("meta"),this.h()},l(a){n=v(a,"META",{name:!0,content:!0}),this.h()},h(){b(n,"name","keywords"),b(n,"content",s=a[6])},m(a,s){l(a,n,s)},p(a,e){4&e&&s!==(s=a[6])&&b(n,"content",s)},d(a){a&&u(n)}}}function pa(a){let n,s,e=a[6]+"";return{c(){n=f("span"),s=k(e),this.h()},l(a){n=v(a,"SPAN",{class:!0});var t=E(n);s=w(t,e),t.forEach(u),this.h()},h(){b(n,"class","svelte-9tqnza")},m(a,e){l(a,n,e),i(n,s)},p(a,n){4&n&&e!==(e=a[6]+"")&&x(s,e)},d(a){a&&u(n)}}}function ia(a){let n,s,e,t,o,r,d,T,A,C,O,P,L,S,j,D,M,H,$,N,R,F,U,B,X,Y,V,Z,Q,aa,sa,ia,la,ua,ha,fa,da=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"Article",author:a[3],copyrightHolder:a[3],copyrightYear:"2020",creator:a[3],publisher:a[3],description:a[1],headline:a[0],name:a[0],inLanguage:"en"})}<\/script>`,ka=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"BreadcrumbList",description:"Breadcrumbs list",name:"Breadcrumbs",itemListElement:[{"@type":"ListItem",item:{"@id":"https://lihautan.com",name:"Homepage"},name:"Homepage",position:1},{"@type":"ListItem",item:{"@id":"https%3A%2F%2Flihautan.com%2Fcreating-custom-javascript-syntax-with-babel",name:a[0]},name:a[0],position:2}]})}<\/script>`;document.title=n=a[0]+" | Tan Li Hau";let ma=a[2],ga=[];for(let n=0;n<ma.length;n+=1)ga[n]=ca(ra(a,ma,n));U=new K({});let ba=a[2],Ea=[];for(let n=0;n<ba.length;n+=1)Ea[n]=pa(oa(a,ba,n));const va=a[5].default,wa=function(a,n,s,e){if(a){const t=c(a,n,s,e);return a[0](t)}}(va,a,a[4],null);return la=new na({}),ha=new ea({}),{c(){s=f("meta"),e=f("meta"),t=f("meta"),o=f("meta"),r=f("meta"),d=f("meta"),T=f("meta"),A=f("meta"),C=f("meta"),O=f("meta"),P=f("meta");for(let a=0;a<ga.length;a+=1)ga[a].c();L=f("meta"),S=f("meta"),D=g(),H=g(),$=m(),N=f("a"),R=k("Skip to content"),F=m(),z(U.$$.fragment),B=m(),X=f("main"),Y=f("h1"),V=k(a[0]),Z=m();for(let a=0;a<Ea.length;a+=1)Ea[a].c();Q=m(),aa=f("article"),wa&&wa.c(),sa=m(),ia=f("footer"),z(la.$$.fragment),ua=m(),z(ha.$$.fragment),this.h()},l(n){const c=function(a,n=document.body){return Array.from(n.querySelectorAll(a))}('[data-svelte="svelte-15e3uyc"]',document.head);s=v(c,"META",{name:!0,content:!0}),e=v(c,"META",{name:!0,content:!0}),t=v(c,"META",{name:!0,content:!0}),o=v(c,"META",{name:!0,content:!0}),r=v(c,"META",{name:!0,content:!0}),d=v(c,"META",{name:!0,content:!0}),T=v(c,"META",{name:!0,content:!0}),A=v(c,"META",{name:!0,content:!0}),C=v(c,"META",{name:!0,content:!0}),O=v(c,"META",{name:!0,content:!0}),P=v(c,"META",{name:!0,content:!0});for(let a=0;a<ga.length;a+=1)ga[a].l(c);L=v(c,"META",{itemprop:!0,content:!0}),S=v(c,"META",{itemprop:!0,content:!0}),D=g(),H=g(),c.forEach(u),$=y(n),N=v(n,"A",{href:!0,class:!0});var p=E(N);R=w(p,"Skip to content"),p.forEach(u),F=y(n),J(U.$$.fragment,n),B=y(n),X=v(n,"MAIN",{id:!0,class:!0});var i=E(X);Y=v(i,"H1",{});var l=E(Y);V=w(l,a[0]),l.forEach(u),Z=y(i);for(let a=0;a<Ea.length;a+=1)Ea[a].l(i);Q=y(i),aa=v(i,"ARTICLE",{});var h=E(aa);wa&&wa.l(h),h.forEach(u),i.forEach(u),sa=y(n),ia=v(n,"FOOTER",{class:!0});var f=E(ia);J(la.$$.fragment,f),ua=y(f),J(ha.$$.fragment,f),f.forEach(u),this.h()},h(){b(s,"name","description"),b(s,"content",a[1]),b(e,"name","image"),b(e,"content",ta),b(t,"name","og:image"),b(t,"content",ta),b(o,"name","og:title"),b(o,"content",a[0]),b(r,"name","og:description"),b(r,"content",a[1]),b(d,"name","og:type"),b(d,"content","website"),b(T,"name","twitter:card"),b(T,"content","summary_large_image"),b(A,"name","twitter:creator"),b(A,"content","@lihautan"),b(C,"name","twitter:title"),b(C,"content",a[0]),b(O,"name","twitter:description"),b(O,"content",a[1]),b(P,"name","twitter:image"),b(P,"content",ta),b(L,"itemprop","url"),b(L,"content","https%3A%2F%2Flihautan.com%2Fcreating-custom-javascript-syntax-with-babel"),b(S,"itemprop","image"),b(S,"content",ta),j=new I(D),M=new I(H),b(N,"href","#content"),b(N,"class","skip svelte-9tqnza"),b(X,"id","content"),b(X,"class","blog svelte-9tqnza"),b(ia,"class","svelte-9tqnza")},m(a,n){i(document.head,s),i(document.head,e),i(document.head,t),i(document.head,o),i(document.head,r),i(document.head,d),i(document.head,T),i(document.head,A),i(document.head,C),i(document.head,O),i(document.head,P);for(let a=0;a<ga.length;a+=1)ga[a].m(document.head,null);i(document.head,L),i(document.head,S),j.m(da,document.head),i(document.head,D),M.m(ka,document.head),i(document.head,H),l(a,$,n),l(a,N,n),i(N,R),l(a,F,n),G(U,a,n),l(a,B,n),l(a,X,n),i(X,Y),i(Y,V),i(X,Z);for(let a=0;a<Ea.length;a+=1)Ea[a].m(X,null);i(X,Q),i(X,aa),wa&&wa.m(aa,null),l(a,sa,n),l(a,ia,n),G(la,ia,null),i(ia,ua),G(ha,ia,null),fa=!0},p(a,[e]){if((!fa||1&e)&&n!==(n=a[0]+" | Tan Li Hau")&&(document.title=n),(!fa||2&e)&&b(s,"content",a[1]),(!fa||1&e)&&b(o,"content",a[0]),(!fa||2&e)&&b(r,"content",a[1]),(!fa||1&e)&&b(C,"content",a[0]),(!fa||2&e)&&b(O,"content",a[1]),4&e){let n;for(ma=a[2],n=0;n<ma.length;n+=1){const s=ra(a,ma,n);ga[n]?ga[n].p(s,e):(ga[n]=ca(s),ga[n].c(),ga[n].m(L.parentNode,L))}for(;n<ga.length;n+=1)ga[n].d(1);ga.length=ma.length}if((!fa||3&e)&&da!==(da=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"Article",author:a[3],copyrightHolder:a[3],copyrightYear:"2020",creator:a[3],publisher:a[3],description:a[1],headline:a[0],name:a[0],inLanguage:"en"})}<\/script>`)&&j.p(da),(!fa||1&e)&&ka!==(ka=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"BreadcrumbList",description:"Breadcrumbs list",name:"Breadcrumbs",itemListElement:[{"@type":"ListItem",item:{"@id":"https://lihautan.com",name:"Homepage"},name:"Homepage",position:1},{"@type":"ListItem",item:{"@id":"https%3A%2F%2Flihautan.com%2Fcreating-custom-javascript-syntax-with-babel",name:a[0]},name:a[0],position:2}]})}<\/script>`)&&M.p(ka),(!fa||1&e)&&x(V,a[0]),4&e){let n;for(ba=a[2],n=0;n<ba.length;n+=1){const s=oa(a,ba,n);Ea[n]?Ea[n].p(s,e):(Ea[n]=pa(s),Ea[n].c(),Ea[n].m(X,Q))}for(;n<Ea.length;n+=1)Ea[n].d(1);Ea.length=ba.length}wa&&wa.p&&16&e&&p(wa,va,a,a[4],e,null,null)},i(a){fa||(q(U.$$.fragment,a),q(wa,a),q(la.$$.fragment,a),q(ha.$$.fragment,a),fa=!0)},o(a){W(U.$$.fragment,a),W(wa,a),W(la.$$.fragment,a),W(ha.$$.fragment,a),fa=!1},d(a){u(s),u(e),u(t),u(o),u(r),u(d),u(T),u(A),u(C),u(O),u(P),h(ga,a),u(L),u(S),u(D),a&&j.d(),u(H),a&&M.d(),a&&u($),a&&u(N),a&&u(F),_(U,a),a&&u(B),a&&u(X),h(Ea,a),wa&&wa.d(a),a&&u(sa),a&&u(ia),_(la),_(ha)}}}function la(a,n,s){let{title:e=""}=n,{description:t=""}=n,{tags:o=[]}=n;const r={"@type":"Person",name:"Tan Li Hau"};let{$$slots:c={},$$scope:p}=n;return a.$set=a=>{"title"in a&&s(0,e=a.title),"description"in a&&s(1,t=a.description),"tags"in a&&s(2,o=a.tags),"$$scope"in a&&s(4,p=a.$$scope)},[e,t,o,r,p,c]}class ua extends V{constructor(a){super(),Y(this,a,la,ia,r,{title:0,description:1,tags:2})}}function ha(n){let s,e,t,o,r,c,p,h,d,g,x,T,I,C,O,P,L,S,j,D,M,H,$,N,R,F,U,B,q,W,z,J,G,_,X,Y,V,Z,K,Q,aa,na,sa,ea,ta,oa,ra,ca,pa,ia,la,ua,ha,fa,da,ka,ma,ga,ba,Ea,va,wa,ya,xa,Ta,Aa,Ia,Ca,Oa,Pa,La,Sa,ja,Da,Ma,Ha,$a,Na,Ra,Fa,Ua,Ba,qa,Wa,za,Ja,Ga,_a,Xa,Ya,Va,Za,Ka,Qa,an,nn,sn,en,tn,on,rn,cn,pn,ln,un,hn,fn,dn,kn,mn,gn,bn,En,vn,wn,yn,xn,Tn,An,In,Cn,On,Pn,Ln,Sn,jn,Dn,Mn,Hn,$n,Nn,Rn,Fn,Un,Bn,qn,Wn,zn,Jn,Gn,_n,Xn,Yn,Vn,Zn,Kn,Qn,as,ns,ss,es,ts,os,rs,cs,ps,is,ls,us,hs,fs,ds,ks,ms,gs,bs,Es,vs,ws,ys,xs,Ts,As,Is,Cs,Os,Ps,Ls,Ss,js,Ds,Ms,Hs,$s,Ns,Rs,Fs,Us,Bs,qs,Ws,zs,Js,Gs,_s,Xs,Ys,Vs,Zs,Ks,Qs,ae,ne,se,ee,te,oe,re,ce,pe,ie,le,ue,he,fe,de,ke,me,ge,be,Ee,ve,we,ye,xe,Te,Ae,Ie,Ce,Oe,Pe,Le,Se,je,De,Me,He,$e,Ne,Re,Fe,Ue,Be,qe,We,ze,Je,Ge,_e,Xe,Ye,Ve,Ze,Ke,Qe,at,nt,st,et,tt,ot,rt,ct,pt,it,lt,ut,ht,ft,dt,kt,mt,gt,bt,Et,vt,wt,yt,xt,Tt,At,It,Ct,Ot,Pt,Lt,St,jt,Dt,Mt,Ht,$t,Nt,Rt,Ft,Ut,Bt,qt,Wt,zt,Jt,Gt,_t,Xt,Yt,Vt,Zt,Kt,Qt,ao,no,so,eo,to,oo,ro,co,po,io,lo,uo,ho,fo,ko,mo,go,bo,Eo,vo,wo,yo,xo,To,Ao,Io,Co,Oo,Po,Lo,So,jo,Do,Mo,Ho,$o,No,Ro,Fo,Uo,Bo,qo,Wo,zo,Jo,Go,_o,Xo,Yo,Vo,Zo,Ko,Qo,ar,nr,sr,er,tr,or,rr,cr,pr,ir,lr,ur,hr,fr,dr,kr,mr,gr,br,Er,vr,wr,yr,xr,Tr,Ar,Ir,Cr,Or,Pr,Lr,Sr,jr,Dr,Mr,Hr,$r,Nr,Rr,Fr,Ur,Br,qr,Wr,zr,Jr,Gr,_r,Xr,Yr,Vr,Zr,Kr,Qr,ac,nc,sc,ec,tc,oc,rc,cc,pc,ic,lc,uc,hc,fc,dc,kc,mc,gc,bc,Ec,vc,wc,yc,xc,Tc,Ac,Ic,Cc,Oc,Pc,Lc,Sc,jc,Dc,Mc,Hc,$c,Nc,Rc,Fc,Uc,Bc,qc,Wc,zc,Jc,Gc,_c,Xc,Yc,Vc,Zc,Kc,Qc,ap,np,sp,ep,tp,op,rp,cp,pp,ip,lp,up,hp,fp,dp,kp,mp,gp,bp,Ep,vp,wp,yp,xp,Tp,Ap,Ip,Cp,Op,Pp,Lp,Sp,jp,Dp,Mp,Hp,$p,Np,Rp,Fp,Up,Bp,qp,Wp,zp,Jp,Gp,_p,Xp,Yp,Vp,Zp,Kp,Qp,ai,ni,si,ei,ti,oi,ri,ci,pi,ii,li,ui,hi,fi,di,ki,mi,gi,bi,Ei,vi,wi,yi,xi,Ti,Ai,Ii,Ci,Oi,Pi,Li,Si,ji,Di,Mi,Hi,$i,Ni,Ri,Fi,Ui,Bi,qi,Wi,zi,Ji,Gi,_i,Xi,Yi,Vi,Zi,Ki,Qi,al,nl,sl,el,tl,ol,rl,cl,pl,il,ll,ul,hl,fl,dl,kl,ml,gl,bl,El,vl,wl,yl,xl,Tl,Al,Il,Cl,Ol,Pl,Ll,Sl,jl,Dl,Ml,Hl,$l,Nl,Rl,Fl,Ul,Bl,ql,Wl,zl,Jl,Gl,_l,Xl,Yl,Vl,Zl,Kl,Ql,au,nu,su,eu,tu,ou,ru,cu,pu,iu,lu,uu,hu,fu,du,ku,mu,gu,bu,Eu,vu,wu,yu,xu,Tu,Au,Iu,Cu,Ou,Pu,Lu,Su,ju,Du,Mu,Hu,$u,Nu,Ru,Fu,Uu,Bu,qu,Wu,zu,Ju,Gu,_u,Xu,Yu,Vu,Zu,Ku,Qu,ah,nh,sh,eh,th,oh,rh,ch,ph,ih,lh,uh,hh,fh,dh,kh,mh,gh,bh,Eh,vh,wh,yh,xh,Th,Ah,Ih,Ch,Oh,Ph,Lh,Sh,jh,Dh,Mh,Hh,$h,Nh,Rh,Fh,Uh,Bh,qh,Wh,zh,Jh,Gh,_h,Xh,Yh,Vh,Zh,Kh,Qh,af,nf,sf,ef,tf,of,rf,cf,pf,lf,uf,hf,ff,df,kf,mf,gf,bf,Ef,vf,wf,yf,xf,Tf,Af,If,Cf,Of,Pf,Lf,Sf,jf,Df,Mf,Hf,$f,Nf,Rf,Ff,Uf,Bf,qf,Wf,zf,Jf,Gf,_f,Xf,Yf,Vf,Zf,Kf,Qf,ad,nd,sd,ed,td,od,rd,cd,pd,id,ld,ud,hd,fd,dd,kd,md,gd,bd,Ed,vd,wd,yd,xd,Td,Ad,Id,Cd,Od,Pd,Ld,Sd,jd,Dd,Md,Hd,$d,Nd,Rd,Fd,Ud,Bd,qd,Wd,zd,Jd,Gd,_d,Xd,Yd,Vd,Zd,Kd,Qd,ak,nk,sk,ek,tk,ok,rk,ck,pk,ik,lk,uk,hk,fk,dk,kk,mk,gk,bk,Ek,vk,wk,yk,xk,Tk,Ak,Ik,Ck,Ok,Pk,Lk,Sk,jk,Dk,Mk,Hk,$k,Nk,Rk,Fk,Uk,Bk,qk,Wk,zk,Jk,Gk,_k,Xk,Yk,Vk,Zk,Kk,Qk,am,nm,sm,em,tm,om,rm,cm,pm,im,lm,um,hm,fm,dm,km,mm,gm,bm,Em,vm,wm,ym,xm,Tm,Am,Im,Cm,Om,Pm,Lm,Sm,jm,Dm,Mm,Hm,$m,Nm,Rm,Fm,Um,Bm,qm,Wm,zm,Jm,Gm,_m,Xm,Ym,Vm,Zm,Km,Qm,ag,ng,sg,eg,tg,og,rg,cg,pg,ig,lg,ug,hg,fg,dg,kg,mg,gg,bg,Eg,vg,wg,yg,xg,Tg,Ag,Ig,Cg,Og,Pg,Lg,Sg,jg,Dg,Mg,Hg,$g,Ng,Rg,Fg,Ug,Bg,qg,Wg,zg,Jg,Gg,_g,Xg,Yg,Vg,Zg,Kg,Qg,ab,nb,sb,eb,tb,ob,rb,cb,pb,ib,lb,ub,hb,fb,db,kb,mb,gb,bb,Eb,vb,wb,yb,xb,Tb,Ab,Ib,Cb,Ob,Pb,Lb,Sb,jb,Db,Mb,Hb,$b,Nb,Rb,Fb,Ub,Bb,qb,Wb,zb,Jb,Gb,_b,Xb,Yb,Vb,Zb,Kb,Qb,aE;return{c(){s=f("section"),e=f("ul"),t=f("li"),o=f("a"),r=k("Overview"),c=f("li"),p=f("a"),h=k("Fork the babel"),d=f("ul"),g=f("li"),x=f("a"),T=k("Crash Course on Parsing Code to AST"),I=f("li"),C=f("a"),O=k("Our custom babel parser"),P=f("ul"),L=f("li"),S=f("a"),j=k("A new token: '@@'"),D=f("li"),M=f("a"),H=k("The new parser"),$=f("li"),N=f("a"),R=k("How parsing works"),F=f("ul"),U=f("li"),B=f("a"),q=k("this.eat, this.match, this.next"),W=f("li"),z=f("a"),J=k("Our babel plugin"),G=f("ul"),_=f("li"),X=f("a"),Y=k("1. Assume  currying  has been declared in the global scope."),V=f("li"),Z=f("a"),K=k("2. Use the  @babel/helpers"),Q=f("li"),aa=f("a"),na=k("Closing Note"),sa=f("li"),ea=f("a"),ta=k("Editor's Note"),oa=f("li"),ra=f("a"),ca=k("Further Reading"),pa=m(),ia=f("p"),la=k("Following my previous post on "),ua=f("a"),ha=k("writing a custom babel transformation"),fa=k(", today I am going to show you how you can create a custom JavaScript syntax with Babel."),da=m(),ka=f("section"),ma=f("h2"),ga=f("a"),ba=k("Overview"),Ea=m(),va=f("p"),wa=k("Let me show you what we will achieve at the end of this article:"),ya=m(),xa=f("pre"),Ta=m(),Aa=f("p"),Ia=k("We are going to create a "),Ca=f("a"),Oa=k("curry function"),Pa=k(" syntax "),La=f("code"),Sa=k("@@"),ja=k(". The syntax is like the "),Da=f("a"),Ma=k("generator function"),Ha=k(", except you place "),$a=f("code"),Na=k("@@"),Ra=k(" instead of "),Fa=f("code"),Ua=k("*"),Ba=k(" in between the "),qa=f("code"),Wa=k("function"),za=k(" keyword and the function name, eg "),Ja=f("code"),Ga=k("function @@ name(arg1, arg2)"),_a=k("."),Xa=m(),Ya=f("p"),Va=k("In this example, you can have "),Za=f("a"),Ka=k("partial application"),Qa=k(" with the function "),an=f("code"),nn=k("foo"),sn=k(". Calling "),en=f("code"),tn=k("foo"),on=k(" with the number of parameters less than the arguments required will return a new function of the remaining arguments:"),rn=m(),cn=f("pre"),pn=m(),ln=f("blockquote"),un=f("p"),hn=k("The reason I choose "),fn=f("code"),dn=k("@@"),kn=k(" is that you can't have "),mn=f("code"),gn=k("@"),bn=k(" in a variable name, so "),En=f("code"),vn=k("function@@foo(){}"),wn=k(' is still a valid syntax. And the "operator" '),yn=f("code"),xn=k("@"),Tn=k(" is used for "),An=f("a"),In=k("decorator functions"),Cn=k(" but I wanted to use something entirely new, thus "),On=f("code"),Pn=k("@@"),Ln=k("."),Sn=m(),jn=f("p"),Dn=k("To achieve this, we are going to:"),Mn=m(),Hn=f("ul"),$n=f("li"),Nn=k("Fork the babel parser"),Rn=m(),Fn=f("li"),Un=k("Create a custom babel transformation plugin"),Bn=m(),qn=f("p"),Wn=k("Sounds impossible 😨?"),zn=m(),Jn=f("p"),Gn=k("Don't worry, I will guide you through every step. Hopefully, at the end of this article, you will be the babel master amongst your peers. 🤠"),_n=m(),Xn=f("section"),Yn=f("h2"),Vn=f("a"),Zn=k("Fork the babel"),Kn=m(),Qn=f("p"),as=k("Head over to "),ns=f("a"),ss=k("babel's Github repo"),es=k(', click the "Fork" button located at the top left of the page.'),ts=m(),os=f("p"),rs=f("picture"),cs=f("source"),ps=f("source"),is=f("img"),ls=m(),us=f("p"),hs=k("If this is your first time forking a popular open-source project, congratulations! 🎉"),fs=m(),ds=f("p"),ks=k("Clone your forked babel to your local workspace and "),ms=f("a"),gs=k("set it up"),bs=k(":"),Es=m(),vs=f("pre"),ws=m(),ys=f("p"),xs=k("Meanwhile, let me briefly walk you through how the babel repository is organised."),Ts=m(),As=f("p"),Is=k("Babel uses a monorepo structure, all the packages, eg: "),Cs=f("code"),Os=k("@babel/core"),Ps=k(", "),Ls=f("code"),Ss=k("@babel/parser"),js=k(", "),Ds=f("code"),Ms=k("@babel/plugin-transform-react-jsx"),Hs=k(", etc are in the "),$s=f("code"),Ns=k("packages/"),Rs=k(" folder:"),Fs=m(),Us=f("pre"),Bs=m(),qs=f("blockquote"),Ws=f("small"),zs=k("**Trivia:** Babel uses [Makefile](https://opensource.com/article/18/8/what-how-makefile) for automating tasks. For build task, such as `make build`, it will use [Gulp](https://gulpjs.com) as the task runner."),Js=m(),Gs=f("section"),_s=f("h3"),Xs=f("a"),Ys=k("Crash Course on Parsing Code to AST"),Vs=m(),Zs=f("p"),Ks=k("Before we proceed, if you are unfamiliar with parsers and Abstract Syntax Tree (AST), I highly recommend to checkout "),Qs=f("a"),ae=k("Vaidehi Joshi"),ne=k("'s "),se=f("a"),ee=k("Leveling Up One’s Parsing Game With ASTs"),te=k("."),oe=m(),re=f("p"),ce=k("To summarise, this is what happened when babel is parsing your code:"),pe=m(),ie=f("ul"),le=f("li"),ue=k("Your code as a "),he=f("code"),fe=k("string"),de=k(" is a long list of characters: "),ke=f("code"),me=k("f, u, n, c, t, i, o, n, , @, @, f, ..."),ge=m(),be=f("li"),Ee=k("The first step is called "),ve=f("strong"),we=k("tokenization"),ye=k(", where babel scans through each character and creates "),xe=f("em"),Te=k("tokens"),Ae=k(", like "),Ie=f("code"),Ce=k("function, @@, foo, (, a, ..."),Oe=m(),Pe=f("li"),Le=k("The tokens then pass through a parser for "),Se=f("strong"),je=k("Syntax analysis"),De=k(", where babel creates an AST based on "),Me=f("a"),He=k("JavaScript language specification"),$e=k("."),Ne=m(),Re=f("p"),Fe=k("If you want to learn more in-depth on compilers in general, "),Ue=f("a"),Be=k("Robert Nystrom"),qe=k("'s "),We=f("a"),ze=k("Crafting Interpreters"),Je=k(" is a gem."),Ge=m(),_e=f("blockquote"),Xe=f("small"),Ye=k("Don't get scared of by the word **compiler**, it is nothing but parsing your code and generate XXX out of it. XXX could be machine code, which is the compiler most of us have in mind; XXX could be JavaScript compatible with older browsers, which is the case for Babel."),Ve=m(),Ze=f("section"),Ke=f("h2"),Qe=f("a"),at=k("Our custom babel parser"),nt=m(),st=f("p"),et=k("The folder we are going to work on is "),tt=f("code"),ot=k("packages/babel-parser/"),rt=k(":"),ct=m(),pt=f("pre"),it=m(),lt=f("p"),ut=k("We've talked about "),ht=f("em"),ft=k("tokenization"),dt=k(" and "),kt=f("em"),mt=k("parsing"),gt=k(", now it's clear where to find the code for each process. "),bt=f("code"),Et=k("plugins/"),vt=k(" folder contains plugins that extend the base parser and add custom syntaxes, such as "),wt=f("code"),yt=k("jsx"),xt=k(" and "),Tt=f("code"),At=k("flow"),It=k("."),Ct=m(),Ot=f("p"),Pt=k("Let's do a "),Lt=f("a"),St=k("Test-driven development (TDD)"),jt=k('. I find it easier to define the test case then slowly work our way to "fix" it. It is especially true in an unfamiliar codebase, TDD allows you to "easily" point out code places you need to change.'),Dt=m(),Mt=f("pre"),Ht=m(),$t=f("p"),Nt=k("You can run "),Rt=f("code"),Ft=k('TEST_ONLY=babel-parser TEST_GREP="curry function" make test-only'),Ut=k(" to run tests for "),Bt=f("code"),qt=k("babel-parser"),Wt=k(" and see your failing case:"),zt=m(),Jt=f("pre"),Gt=m(),_t=f("blockquote"),Xt=f("small"),Yt=k("If you find scanning through all the test cases takes time, you can directly call `jest` to run the test:"),Vt=m(),Zt=f("pre"),Kt=m(),Qt=f("p"),ao=k("Our parser found 2 seemingly innocent "),no=f("code"),so=k("@"),eo=k(" tokens at a place where they shouldn't be present."),to=m(),oo=f("p"),ro=k("How do I know that? Let's start the watch mode, "),co=f("code"),po=k("make watch"),io=k(", wear our detective cap 🕵️‍ and start digging!"),lo=m(),uo=f("p"),ho=k("Tracing the stack trace, led us to "),fo=f("a"),ko=f("code"),mo=k("packages/babel-parser/src/parser/expression.js"),go=k(" where it throws "),bo=f("code"),Eo=k("this.unexpected()"),vo=k("."),wo=m(),yo=f("p"),xo=k("Let us add some "),To=f("code"),Ao=k("console.log"),Io=k(":"),Co=m(),Oo=f("pre"),Po=m(),Lo=f("p"),So=k("As you can see, both tokens are "),jo=f("code"),Do=k("@"),Mo=k(" token:"),Ho=m(),$o=f("pre"),No=m(),Ro=f("p"),Fo=k("How do I know "),Uo=f("code"),Bo=k("this.state.type"),qo=k(" and "),Wo=f("code"),zo=k("this.lookahead().type"),Jo=k(" will give me the current and the next token?"),Go=m(),_o=f("p"),Xo=k("Well, I'll explained them "),Yo=f("a"),Vo=k("later"),Zo=k("."),Ko=m(),Qo=f("p"),ar=k("Let's recap what we've done so far before we move on:"),nr=m(),sr=f("ul"),er=f("li"),tr=k("We've written a test case for "),or=f("code"),rr=k("babel-parser"),cr=m(),pr=f("li"),ir=k("We ran "),lr=f("code"),ur=k("make test-only"),hr=k(" to run the test case"),fr=m(),dr=f("li"),kr=k("We've started the watch mode via "),mr=f("code"),gr=k("make watch"),br=m(),Er=f("li"),vr=k("We've learned about parser state, and console out the current token type, "),wr=f("code"),yr=k("this.state.type"),xr=m(),Tr=f("p"),Ar=k("Here's what we are going to do next:"),Ir=m(),Cr=f("p"),Or=k("If there's 2 consecutive "),Pr=f("code"),Lr=k("@"),Sr=k(", it should not be separate tokens, it should be a "),jr=f("code"),Dr=k("@@"),Mr=k(" token, the new token we just defined for our curry function"),Hr=m(),$r=f("section"),Nr=f("h3"),Rr=f("a"),Fr=k("A new token: '@@'"),Ur=m(),Br=f("p"),qr=k("Let's first look at where a token type is defined: "),Wr=f("a"),zr=k("packages/babel-parser/src/tokenizer/types.js"),Jr=k("."),Gr=m(),_r=f("p"),Xr=k("Here you see a list of tokens, so let's add our new token definition in as well:"),Yr=m(),Vr=f("pre"),Zr=m(),Kr=f("p"),Qr=k("Next, let's find out where the token gets created during "),ac=f("em"),nc=k("tokenization"),sc=k(". A quick search on "),ec=f("code"),tc=k("tt.at"),oc=k(" within "),rc=f("code"),cc=k("babel-parser/src/tokenizer"),pc=k(" lead us to "),ic=f("a"),lc=k("packages/babel-parser/src/tokenizer/index.js"),uc=m(),hc=f("blockquote"),fc=f("small"),dc=k("Well, token types are import as `tt` throughout the babel-parser."),kc=m(),mc=f("p"),gc=k("Let's create the token "),bc=f("code"),Ec=k("tt.atat"),vc=k(" instead of "),wc=f("code"),yc=k("tt.at"),xc=k(" if there's another "),Tc=f("code"),Ac=k("@"),Ic=k(" succeed the current "),Cc=f("code"),Oc=k("@"),Pc=k(":"),Lc=m(),Sc=f("pre"),jc=m(),Dc=f("p"),Mc=k("If you run the test again, you will see that the current token and the next token has changed:"),Hc=m(),$c=f("pre"),Nc=m(),Rc=f("p"),Fc=k("Yeah! It looks good and lets move on. "),Uc=f("span"),Bc=k("🏃‍"),qc=m(),Wc=f("section"),zc=f("h3"),Jc=f("a"),Gc=k("The new parser"),_c=m(),Xc=f("p"),Yc=k("Before we move on, let's inspect how "),Vc=f("a"),Zc=k("generator functions are represented in AST"),Kc=k(":"),Qc=m(),ap=f("p"),np=f("picture"),sp=f("source"),ep=f("source"),tp=f("img"),op=m(),rp=f("p"),cp=k("As you can see, a generator function is represented by the "),pp=f("code"),ip=k("generator: true"),lp=k(" attribute of a "),up=f("code"),hp=k("FunctionDeclaration"),fp=k("."),dp=m(),kp=f("p"),mp=k("Similarly, we can add a "),gp=f("code"),bp=k("curry: true"),Ep=k(" attribute of the "),vp=f("code"),wp=k("FunctionDeclaration"),yp=k(" too if it is a curry function:"),xp=m(),Tp=f("p"),Ap=f("picture"),Ip=f("source"),Cp=f("source"),Op=f("img"),Pp=m(),Lp=f("p"),Sp=k("We have a plan now, let's implement it."),jp=m(),Dp=f("p"),Mp=k("A quick search on "),Hp=f("em"),$p=k('"FunctionDeclaration"'),Np=k(" leads us to a function called "),Rp=f("code"),Fp=k("parseFunction"),Up=k(" in "),Bp=f("a"),qp=k("packages/babel-parser/src/parser/statement.js"),Wp=k(", and here we find a line that sets the "),zp=f("code"),Jp=k("generator"),Gp=k(" attribute, let's add one more line:"),_p=m(),Xp=f("pre"),Yp=m(),Vp=f("p"),Zp=k("If you run the test again, you will be amazed that it passed!"),Kp=m(),Qp=f("pre"),ai=m(),ni=f("p"),si=k("That's it? How did we miraculously fix it?"),ei=m(),ti=f("p"),oi=k("I am going to briefly explain how parsing works, and in the process hopefully, you understood what that one-liner change did."),ri=m(),ci=f("section"),pi=f("h3"),ii=f("a"),li=k("How parsing works"),ui=m(),hi=f("p"),fi=k("With the list of tokens from the "),di=f("em"),ki=k("tokenizer"),mi=k(", the parser consumes the token one by one and constructs the AST. The parser uses the language grammar specification to decide how to use the tokens, which token to expect next."),gi=m(),bi=f("p"),Ei=k("The grammar specification looks something like this:"),vi=m(),wi=f("pre"),yi=m(),xi=f("p"),Ti=k("It explains the precedence of each expressions/statements. For example, an "),Ai=f("code"),Ii=k("AdditiveExpression"),Ci=k(" is made up of either:"),Oi=m(),Pi=f("ul"),Li=f("li"),Si=k("a "),ji=f("code"),Di=k("MultiplicativeExpression"),Mi=k(", or"),Hi=m(),$i=f("li"),Ni=k("an "),Ri=f("code"),Fi=k("AdditiveExpression"),Ui=k(" followed by "),Bi=f("code"),qi=k("+"),Wi=k(" operator token followed by "),zi=f("code"),Ji=k("MultiplicativeExpression"),Gi=k(", or"),_i=m(),Xi=f("li"),Yi=k("an "),Vi=f("code"),Zi=k("AdditiveExpression"),Ki=k(" followed by "),Qi=f("code"),al=k("-"),nl=k(" operator token followed by "),sl=f("code"),el=k("MultiplicativeExpression"),tl=k("."),ol=m(),rl=f("p"),cl=k("So if you have an expression "),pl=f("code"),il=k("1 + 2 * 3"),ll=k(", it will be like:"),ul=m(),hl=f("pre"),fl=m(),dl=f("p"),kl=k("instead of"),ml=m(),gl=f("pre"),bl=m(),El=f("p"),vl=k("With these rules, we translate them into parser code:"),wl=m(),yl=f("pre"),xl=m(),Tl=f("p"),Al=f("em"),Il=k("This is a made-up code that oversimplifies what babel have, but I hope you get the gist of it."),Cl=m(),Ol=f("p"),Pl=k("As you can see here, the parser is recursively in nature, and it goes from the lowest precedence to the highest precedence expressions/statements. Eg: "),Ll=f("code"),Sl=k("parseAdditiveExpression"),jl=k(" calls "),Dl=f("code"),Ml=k("parseMultiplicativeExpression"),Hl=k(", which in turn calls "),$l=f("code"),Nl=k("parseExponentiationExpression"),Rl=k(", which in turn calls ... . This recursive process is called the "),Fl=f("a"),Ul=k("Recursive Descent Parsing"),Bl=k("."),ql=m(),Wl=f("section"),zl=f("h4"),Jl=f("a"),Gl=k("this.eat, this.match, this.next"),_l=m(),Xl=f("p"),Yl=k("If you have noticed, in my examples above, I used some utility function, such as "),Vl=f("code"),Zl=k("this.eat"),Kl=k(", "),Ql=f("code"),au=k("this.match"),nu=k(", "),su=f("code"),eu=k("this.next"),tu=k(", etc. These are babel parser's internal functions, yet they are quite ubiquitous amongst parsers as well:"),ou=m(),ru=f("ul"),cu=f("li"),pu=f("strong"),iu=f("code"),lu=k("this.match"),uu=k(" returns a "),hu=f("code"),fu=k("boolean"),du=k(" indicating whether the current token matches the condition"),ku=m(),mu=f("li"),gu=f("strong"),bu=f("code"),Eu=k("this.next"),vu=k(" moves the token list forward to point to the next token"),wu=m(),yu=f("li"),xu=f("strong"),Tu=f("code"),Au=k("this.eat"),Iu=k(" return what "),Cu=f("code"),Ou=k("this.match"),Pu=k(" returns and if "),Lu=f("code"),Su=k("this.match"),ju=k(" returns "),Du=f("code"),Mu=k("true"),Hu=k(", will do "),$u=f("code"),Nu=k("this.next"),Ru=f("ul"),Fu=f("li"),Uu=f("code"),Bu=k("this.eat"),qu=k(" is commonly used for optional operators, like "),Wu=f("code"),zu=k("*"),Ju=k(" in generator function, "),Gu=f("code"),_u=k(";"),Xu=k(" at the end of statements, and "),Yu=f("code"),Vu=k("?"),Zu=k(" in typescript types."),Ku=m(),Qu=f("li"),ah=f("strong"),nh=f("code"),sh=k("this.lookahead"),eh=k(" get the next token without moving forward to make a decision on the current node"),th=m(),oh=f("p"),rh=k("If you take a look again the parser code we just changed, it's easier to read it in now."),ch=m(),ph=f("pre"),ih=m(),lh=f("p"),uh=k("I know I didn't do a good job explaining how a parser works. Here are some resources that I learned from, and I highly recommend them:"),hh=m(),fh=f("ul"),dh=f("li"),kh=f("a"),mh=k("Crafting Interpreters"),gh=k(" by "),bh=f("a"),Eh=k("Robert Nystrom"),vh=m(),wh=f("li"),yh=f("a"),xh=k('Free Udacity course: "Compilers: Theory and Practice"'),Th=k(", offered by Georgia Tech"),Ah=m(),Ih=f("hr"),Ch=m(),Oh=f("p"),Ph=f("strong"),Lh=k("Side Note"),Sh=k(': You might be curious how am I able to visualize the custom syntax in the Babel AST Explorer, where I showed you the new "curry" attribute in the AST.'),jh=m(),Dh=f("p"),Mh=k("That's because I've added a new feature in the Babel AST Explorer where you can upload your custom parser!"),Hh=m(),$h=f("p"),Nh=k("If you go to "),Rh=f("code"),Fh=k("packages/babel-parser/lib"),Uh=k(", you would find the compiled version of your parser and the source map. Open the drawer of the Babel AST Explorer, you will see a button to upload a custom parser. Drag the "),Bh=f("code"),qh=k("packages/babel-parser/lib/index.js"),Wh=k(" in and you will be visualizing the AST generated via your custom parser!"),zh=m(),Jh=f("p"),Gh=f("img"),_h=m(),Xh=f("hr"),Yh=m(),Vh=f("section"),Zh=f("h2"),Kh=f("a"),Qh=k("Our babel plugin"),af=m(),nf=f("p"),sf=k("With our custom babel parser done, let's move on to write our babel plugin."),ef=m(),tf=f("p"),of=k("But maybe before that, you may have some doubts on how are we going to use our custom babel parser, especially with whatever build stack we are using right now?"),rf=m(),cf=f("p"),pf=k("Well, fret not. A babel plugin can provide a custom parser, which is "),lf=f("a"),uf=k("documented on the babel website"),hf=m(),ff=f("pre"),df=m(),kf=f("p"),mf=k("Since we forked out the babel parser, all existing babel parser options or built-in plugins will still work perfectly."),gf=m(),bf=f("p"),Ef=k("With this doubt out of the way, let see how we can make our curry function curryable? "),vf=f("em"),wf=k("(not entirely sure there's such word)"),yf=m(),xf=f("hr"),Tf=m(),Af=f("p"),If=k("Before we start, if you have eagerly tried to add our plugin into your build system, you would notice that the curry function gets compiled to a normal function."),Cf=m(),Of=f("p"),Pf=k("This is because, after parsing + transformation, babel will use "),Lf=f("a"),Sf=k("@babel/generator"),jf=k(" to generate code from the transformed AST. Since the "),Df=f("code"),Mf=k("@babel/generator"),Hf=k(" has no idea about the new "),$f=f("code"),Nf=k("curry"),Rf=k(" attribute we added, it will be omitted."),Ff=m(),Uf=f("blockquote"),Bf=f("p"),qf=k("If one day curry function becomes the new JavaScript syntax, you may want to make a pull request to add one more line "),Wf=f("a"),zf=k("here"),Jf=k("!"),Gf=m(),_f=f("hr"),Xf=m(),Yf=f("p"),Vf=k("Ok, to make our function curryable, we can wrap it with a "),Zf=f("code"),Kf=k("currying"),Qf=k(" helper higher-order function:"),ad=m(),nd=f("pre"),sd=m(),ed=f("blockquote"),td=f("p"),od=k("If you want to learn how to write a currying function, you can read this "),rd=f("a");cd=k("Currying in JS"),pd=k(" by "),id=f("a"),ld=k("Shirsh Zibbu"),ud=m(),hd=f("p"),fd=k("So when we transform our curry function, we can transform it into the following:"),dd=m(),kd=f("pre"),md=m(),gd=f("blockquote"),bd=f("p"),Ed=k("Let's first ignore "),vd=f("a"),wd=k("function hoisting"),yd=k(" in JavaScript, where you can call "),xd=f("code"),Td=k("foo"),Ad=k(" before it is defined."),Id=m(),Cd=f("p"),Od=k("If you have read my "),Pd=f("a"),Ld=k("step-by-step guide on babel transformation"),Sd=k(", writing this transformation should be manageable:"),jd=m(),Dd=f("pre"),Md=m(),Hd=f("p"),$d=k("The question is how do we provide the "),Nd=f("code"),Rd=k("currying"),Fd=k(" function?"),Ud=m(),Bd=f("p"),qd=k("There are 2 ways:"),Wd=m(),zd=f("section"),Jd=f("h3"),Gd=f("a"),_d=k("1. Assume "),Xd=f("code"),Yd=k("currying"),Vd=k(" has been declared in the global scope."),Zd=m(),Kd=f("p"),Qd=k("Basically, your job is done here."),ak=m(),nk=f("p"),sk=k("If "),ek=f("code"),tk=k("currying"),ok=k(" is not defined, then when executing the compiled code, the runtime will scream out "),rk=f("em"),ck=k('"currying is not defined"'),pk=k(", just like the "),ik=f("a"),lk=k('"regeneratorRuntime is not defined"'),uk=k("."),hk=m(),fk=f("p"),dk=k("So probably you have to educate the users to install "),kk=f("code"),mk=k("currying"),gk=k(" polyfills in order to use your "),bk=f("code"),Ek=k("babel-plugin-transformation-curry-function"),vk=k("."),wk=m(),yk=f("section"),xk=f("h3"),Tk=f("a"),Ak=k("2. Use the "),Ik=f("code"),Ck=k("@babel/helpers"),Ok=m(),Pk=f("p"),Lk=k("You can add a new helper to "),Sk=f("code"),jk=k("@babel/helpers"),Dk=k(", which of course you are unlikely to merge that into the official "),Mk=f("code"),Hk=k("@babel/helpers"),$k=k(", so you would have to figure a way to make "),Nk=f("code"),Rk=k("@babel/core"),Fk=k(" to resolve to your "),Uk=f("code"),Bk=k("@babel/helpers"),qk=k(":"),Wk=m(),zk=f("pre"),Jk=m(),Gk=f("p"),_k=f("em"),Xk=f("strong"),Yk=k("Disclaimer:"),Vk=k(" I have not personally tried this, but I believe it will work. If you encountered problems trying this, "),Zk=f("a"),Kk=k("DM me"),Qk=k(", I am very happy to discuss it with you."),am=m(),nm=f("p"),sm=k("Adding a new helper function into "),em=f("code"),tm=k("@babel/helpers"),om=k(" is very easy."),rm=m(),cm=f("p"),pm=k("Head over to "),im=f("a"),lm=k("packages/babel-helpers/src/helpers.js"),um=k(" and add a new entry:"),hm=m(),fm=f("pre"),dm=m(),km=f("p"),mm=k("The helper tag function specifies the "),gm=f("code"),bm=k("@babel/core"),Em=k(" version required. The trick here is to "),vm=f("code"),wm=k("export default"),ym=k(" the "),xm=f("code"),Tm=k("currying"),Am=k(" function."),Im=m(),Cm=f("p"),Om=k("To use the helper, just call the "),Pm=f("code"),Lm=k("this.addHelper()"),Sm=k(":"),jm=m(),Dm=f("pre"),Mm=m(),Hm=f("p"),$m=k("The "),Nm=f("code"),Rm=k("this.addHelper"),Fm=k(" will inject the helper at the top of the file if needed, and returns an "),Um=f("code"),Bm=k("Identifier"),qm=k(" to the injected function."),Wm=m(),zm=f("section"),Jm=f("h2"),Gm=f("a"),_m=k("Closing Note"),Xm=m(),Ym=f("p"),Vm=k("We've seen how we can modify the babel parser function, write our own babel transform plugin "),Zm=f("em"),Km=k("(which was brief mainly because I have "),Qm=f("a"),ag=k("a detailed cover in my previous post"),ng=k(")"),sg=k(", a brief touch on "),eg=f("code"),tg=k("@babel/generator"),og=k(" and also how we can add helper functions via "),rg=f("code"),cg=k("@babel/helpers"),pg=k("."),ig=m(),lg=f("p"),ug=k("Along the way, we had a crash course on how a parser works, which I will provide the links to "),hg=f("a"),fg=k("further reading"),dg=k(" at the bottom."),kg=m(),mg=f("p"),gg=k("The steps we've gone through above is similar to part of the "),bg=f("a"),Eg=k("TC39 proposal"),vg=m(),wg=f("a"),yg=k("process"),xg=k(" when defining a new JavaScript specification. When proposing a new specification, the champion of the proposal usually write polyfills or forked out babel to write proof-of-concept demos. As you've seen, forking a parser or writing polyfills is not the hardest part of the process, but to define the problem space, plan and think through the use cases and edge cases, and gather opinions and suggestions from the community. To this end, I am grateful to the proposal champion, for their effort in pushing the JavaScript language forward."),Tg=m(),Ag=f("p"),Ig=k("Finally, if you want to see the code we've done so far in a full picture, you can "),Cg=f("a"),Og=k("check it out from Github"),Pg=k("."),Lg=m(),Sg=f("hr"),jg=m(),Dg=f("section"),Mg=f("h2"),Hg=f("a"),$g=k("Editor's Note"),Ng=m(),Rg=f("p"),Fg=k("I've worked on the babel repository for a while, yet I've never added a new syntax to the babel parser before. Most of my contributions were just fixing bugs and specs compliance feature."),Ug=m(),Bg=f("p"),qg=k("Yet this idea of creating a new syntax has been in my mind for a while. So I took the chance of writing a blog to try it out. It is an exhilarating experience to see it work as expected."),Wg=m(),zg=f("p"),Jg=k("Having the ability to manipulate the syntax of the language you are writing is invigorating. It empowers us the possibility of writing less code or more straightforward code and shifts that complexity to compile time. Just as how "),Gg=f("code"),_g=k("async-await"),Xg=k(" solves the callback hell and promise-chaining hell."),Yg=m(),Vg=f("p"),Zg=k("If this article inspires you to some great idea, and you wish to discuss it with somebody, you are always more than welcome to reach out to me through "),Kg=f("a"),Qg=k("Twitter"),ab=k("."),nb=m(),sb=f("section"),eb=f("h2"),tb=f("a"),ob=k("Further Reading"),rb=m(),cb=f("p"),pb=k("About compilers:"),ib=m(),lb=f("ul"),ub=f("li"),hb=f("a"),fb=k("Crafting Interpreters"),db=k(" by "),kb=f("a"),mb=k("Robert Nystrom"),gb=m(),bb=f("li"),Eb=f("a"),vb=k('Free Udacity course: "Compilers: Theory and Practice"'),wb=k(", offered by Georgia Tech"),yb=m(),xb=f("li"),Tb=f("a"),Ab=k("Leveling Up One’s Parsing Game With ASTs"),Ib=k(" by "),Cb=f("a"),Ob=k("Vaidehi Joshi"),Pb=m(),Lb=f("p"),Sb=k("Misc:"),jb=m(),Db=f("ul"),Mb=f("li"),Hb=f("a"),$b=k("Understanding hoisting in JavaScript"),Nb=k(" by "),Rb=f("a"),Fb=k("Mabishi Wakio"),Ub=m(),Bb=f("li"),qb=f("a"),Wb=k("Currying in JS"),zb=k(" by "),Jb=f("a"),Gb=k("Shirsh Zibbu"),_b=m(),Xb=f("li"),Yb=f("a"),Vb=k("TC39 Proposals"),Zb=m(),Kb=f("li"),Qb=f("a"),aE=k("TC39 Process Document"),this.h()},l(a){s=v(a,"SECTION",{});var n=E(s);e=v(n,"UL",{class:!0,id:!0,role:!0,"aria-label":!0});var i=E(e);t=v(i,"LI",{});var l=E(t);o=v(l,"A",{href:!0});var f=E(o);r=w(f,"Overview"),f.forEach(u),l.forEach(u),c=v(i,"LI",{});var k=E(c);p=v(k,"A",{href:!0});var m=E(p);h=w(m,"Fork the babel"),m.forEach(u),k.forEach(u),d=v(i,"UL",{});var b=E(d);g=v(b,"LI",{});var A=E(g);x=v(A,"A",{href:!0});var nE=E(x);T=w(nE,"Crash Course on Parsing Code to AST"),nE.forEach(u),A.forEach(u),b.forEach(u),I=v(i,"LI",{});var sE=E(I);C=v(sE,"A",{href:!0});var eE=E(C);O=w(eE,"Our custom babel parser"),eE.forEach(u),sE.forEach(u),P=v(i,"UL",{});var tE=E(P);L=v(tE,"LI",{});var oE=E(L);S=v(oE,"A",{href:!0});var rE=E(S);j=w(rE,"A new token: '@@'"),rE.forEach(u),oE.forEach(u),D=v(tE,"LI",{});var cE=E(D);M=v(cE,"A",{href:!0});var pE=E(M);H=w(pE,"The new parser"),pE.forEach(u),cE.forEach(u),$=v(tE,"LI",{});var iE=E($);N=v(iE,"A",{href:!0});var lE=E(N);R=w(lE,"How parsing works"),lE.forEach(u),iE.forEach(u),F=v(tE,"UL",{});var uE=E(F);U=v(uE,"LI",{});var hE=E(U);B=v(hE,"A",{href:!0});var fE=E(B);q=w(fE,"this.eat, this.match, this.next"),fE.forEach(u),hE.forEach(u),uE.forEach(u),tE.forEach(u),W=v(i,"LI",{});var dE=E(W);z=v(dE,"A",{href:!0});var kE=E(z);J=w(kE,"Our babel plugin"),kE.forEach(u),dE.forEach(u),G=v(i,"UL",{});var mE=E(G);_=v(mE,"LI",{});var gE=E(_);X=v(gE,"A",{href:!0});var bE=E(X);Y=w(bE,"1. Assume  currying  has been declared in the global scope."),bE.forEach(u),gE.forEach(u),V=v(mE,"LI",{});var EE=E(V);Z=v(EE,"A",{href:!0});var vE=E(Z);K=w(vE,"2. Use the  @babel/helpers"),vE.forEach(u),EE.forEach(u),mE.forEach(u),Q=v(i,"LI",{});var wE=E(Q);aa=v(wE,"A",{href:!0});var yE=E(aa);na=w(yE,"Closing Note"),yE.forEach(u),wE.forEach(u),sa=v(i,"LI",{});var xE=E(sa);ea=v(xE,"A",{href:!0});var TE=E(ea);ta=w(TE,"Editor's Note"),TE.forEach(u),xE.forEach(u),oa=v(i,"LI",{});var AE=E(oa);ra=v(AE,"A",{href:!0});var IE=E(ra);ca=w(IE,"Further Reading"),IE.forEach(u),AE.forEach(u),i.forEach(u),n.forEach(u),pa=y(a),ia=v(a,"P",{});var CE=E(ia);la=w(CE,"Following my previous post on "),ua=v(CE,"A",{href:!0});var OE=E(ua);ha=w(OE,"writing a custom babel transformation"),OE.forEach(u),fa=w(CE,", today I am going to show you how you can create a custom JavaScript syntax with Babel."),CE.forEach(u),da=y(a),ka=v(a,"SECTION",{});var PE=E(ka);ma=v(PE,"H2",{});var LE=E(ma);ga=v(LE,"A",{href:!0,id:!0});var SE=E(ga);ba=w(SE,"Overview"),SE.forEach(u),LE.forEach(u),Ea=y(PE),va=v(PE,"P",{});var jE=E(va);wa=w(jE,"Let me show you what we will achieve at the end of this article:"),jE.forEach(u),ya=y(PE),xa=v(PE,"PRE",{class:!0}),E(xa).forEach(u),Ta=y(PE),Aa=v(PE,"P",{});var DE=E(Aa);Ia=w(DE,"We are going to create a "),Ca=v(DE,"A",{href:!0,rel:!0});var ME=E(Ca);Oa=w(ME,"curry function"),ME.forEach(u),Pa=w(DE," syntax "),La=v(DE,"CODE",{});var HE=E(La);Sa=w(HE,"@@"),HE.forEach(u),ja=w(DE,". The syntax is like the "),Da=v(DE,"A",{href:!0,rel:!0});var $E=E(Da);Ma=w($E,"generator function"),$E.forEach(u),Ha=w(DE,", except you place "),$a=v(DE,"CODE",{});var NE=E($a);Na=w(NE,"@@"),NE.forEach(u),Ra=w(DE," instead of "),Fa=v(DE,"CODE",{});var RE=E(Fa);Ua=w(RE,"*"),RE.forEach(u),Ba=w(DE," in between the "),qa=v(DE,"CODE",{});var FE=E(qa);Wa=w(FE,"function"),FE.forEach(u),za=w(DE," keyword and the function name, eg "),Ja=v(DE,"CODE",{});var UE=E(Ja);Ga=w(UE,"function @@ name(arg1, arg2)"),UE.forEach(u),_a=w(DE,"."),DE.forEach(u),Xa=y(PE),Ya=v(PE,"P",{});var BE=E(Ya);Va=w(BE,"In this example, you can have "),Za=v(BE,"A",{href:!0,rel:!0});var qE=E(Za);Ka=w(qE,"partial application"),qE.forEach(u),Qa=w(BE," with the function "),an=v(BE,"CODE",{});var WE=E(an);nn=w(WE,"foo"),WE.forEach(u),sn=w(BE,". Calling "),en=v(BE,"CODE",{});var zE=E(en);tn=w(zE,"foo"),zE.forEach(u),on=w(BE," with the number of parameters less than the arguments required will return a new function of the remaining arguments:"),BE.forEach(u),rn=y(PE),cn=v(PE,"PRE",{class:!0}),E(cn).forEach(u),pn=y(PE),ln=v(PE,"BLOCKQUOTE",{});var JE=E(ln);un=v(JE,"P",{});var GE=E(un);hn=w(GE,"The reason I choose "),fn=v(GE,"CODE",{});var _E=E(fn);dn=w(_E,"@@"),_E.forEach(u),kn=w(GE," is that you can't have "),mn=v(GE,"CODE",{});var XE=E(mn);gn=w(XE,"@"),XE.forEach(u),bn=w(GE," in a variable name, so "),En=v(GE,"CODE",{});var YE=E(En);vn=w(YE,"function@@foo(){}"),YE.forEach(u),wn=w(GE,' is still a valid syntax. And the "operator" '),yn=v(GE,"CODE",{});var VE=E(yn);xn=w(VE,"@"),VE.forEach(u),Tn=w(GE," is used for "),An=v(GE,"A",{href:!0,rel:!0});var ZE=E(An);In=w(ZE,"decorator functions"),ZE.forEach(u),Cn=w(GE," but I wanted to use something entirely new, thus "),On=v(GE,"CODE",{});var KE=E(On);Pn=w(KE,"@@"),KE.forEach(u),Ln=w(GE,"."),GE.forEach(u),JE.forEach(u),Sn=y(PE),jn=v(PE,"P",{});var QE=E(jn);Dn=w(QE,"To achieve this, we are going to:"),QE.forEach(u),Mn=y(PE),Hn=v(PE,"UL",{});var av=E(Hn);$n=v(av,"LI",{});var nv=E($n);Nn=w(nv,"Fork the babel parser"),nv.forEach(u),Rn=y(av),Fn=v(av,"LI",{});var sv=E(Fn);Un=w(sv,"Create a custom babel transformation plugin"),sv.forEach(u),av.forEach(u),Bn=y(PE),qn=v(PE,"P",{});var ev=E(qn);Wn=w(ev,"Sounds impossible 😨?"),ev.forEach(u),zn=y(PE),Jn=v(PE,"P",{});var tv=E(Jn);Gn=w(tv,"Don't worry, I will guide you through every step. Hopefully, at the end of this article, you will be the babel master amongst your peers. 🤠"),tv.forEach(u),PE.forEach(u),_n=y(a),Xn=v(a,"SECTION",{});var ov=E(Xn);Yn=v(ov,"H2",{});var rv=E(Yn);Vn=v(rv,"A",{href:!0,id:!0});var cv=E(Vn);Zn=w(cv,"Fork the babel"),cv.forEach(u),rv.forEach(u),Kn=y(ov),Qn=v(ov,"P",{});var pv=E(Qn);as=w(pv,"Head over to "),ns=v(pv,"A",{href:!0,rel:!0});var iv=E(ns);ss=w(iv,"babel's Github repo"),iv.forEach(u),es=w(pv,', click the "Fork" button located at the top left of the page.'),pv.forEach(u),ts=y(ov),os=v(ov,"P",{});var lv=E(os);rs=v(lv,"PICTURE",{});var uv=E(rs);cs=v(uv,"SOURCE",{type:!0,srcset:!0}),ps=v(uv,"SOURCE",{type:!0,srcset:!0}),is=v(uv,"IMG",{title:!0,alt:!0,"data-src":!0,loading:!0}),uv.forEach(u),lv.forEach(u),ls=y(ov),us=v(ov,"P",{});var hv=E(us);hs=w(hv,"If this is your first time forking a popular open-source project, congratulations! 🎉"),hv.forEach(u),fs=y(ov),ds=v(ov,"P",{});var fv=E(ds);ks=w(fv,"Clone your forked babel to your local workspace and "),ms=v(fv,"A",{href:!0,rel:!0});var dv=E(ms);gs=w(dv,"set it up"),dv.forEach(u),bs=w(fv,":"),fv.forEach(u),Es=y(ov),vs=v(ov,"PRE",{class:!0}),E(vs).forEach(u),ws=y(ov),ys=v(ov,"P",{});var kv=E(ys);xs=w(kv,"Meanwhile, let me briefly walk you through how the babel repository is organised."),kv.forEach(u),Ts=y(ov),As=v(ov,"P",{});var mv=E(As);Is=w(mv,"Babel uses a monorepo structure, all the packages, eg: "),Cs=v(mv,"CODE",{});var gv=E(Cs);Os=w(gv,"@babel/core"),gv.forEach(u),Ps=w(mv,", "),Ls=v(mv,"CODE",{});var bv=E(Ls);Ss=w(bv,"@babel/parser"),bv.forEach(u),js=w(mv,", "),Ds=v(mv,"CODE",{});var Ev=E(Ds);Ms=w(Ev,"@babel/plugin-transform-react-jsx"),Ev.forEach(u),Hs=w(mv,", etc are in the "),$s=v(mv,"CODE",{});var vv=E($s);Ns=w(vv,"packages/"),vv.forEach(u),Rs=w(mv," folder:"),mv.forEach(u),Fs=y(ov),Us=v(ov,"PRE",{class:!0}),E(Us).forEach(u),Bs=y(ov),qs=v(ov,"BLOCKQUOTE",{});var wv=E(qs);Ws=v(wv,"SMALL",{});var yv=E(Ws);zs=w(yv,"**Trivia:** Babel uses [Makefile](https://opensource.com/article/18/8/what-how-makefile) for automating tasks. For build task, such as `make build`, it will use [Gulp](https://gulpjs.com) as the task runner."),yv.forEach(u),wv.forEach(u),ov.forEach(u),Js=y(a),Gs=v(a,"SECTION",{});var xv=E(Gs);_s=v(xv,"H3",{});var Tv=E(_s);Xs=v(Tv,"A",{href:!0,id:!0});var Av=E(Xs);Ys=w(Av,"Crash Course on Parsing Code to AST"),Av.forEach(u),Tv.forEach(u),Vs=y(xv),Zs=v(xv,"P",{});var Iv=E(Zs);Ks=w(Iv,"Before we proceed, if you are unfamiliar with parsers and Abstract Syntax Tree (AST), I highly recommend to checkout "),Qs=v(Iv,"A",{href:!0,rel:!0});var Cv=E(Qs);ae=w(Cv,"Vaidehi Joshi"),Cv.forEach(u),ne=w(Iv,"'s "),se=v(Iv,"A",{href:!0,rel:!0});var Ov=E(se);ee=w(Ov,"Leveling Up One’s Parsing Game With ASTs"),Ov.forEach(u),te=w(Iv,"."),Iv.forEach(u),oe=y(xv),re=v(xv,"P",{});var Pv=E(re);ce=w(Pv,"To summarise, this is what happened when babel is parsing your code:"),Pv.forEach(u),pe=y(xv),ie=v(xv,"UL",{});var Lv=E(ie);le=v(Lv,"LI",{});var Sv=E(le);ue=w(Sv,"Your code as a "),he=v(Sv,"CODE",{});var jv=E(he);fe=w(jv,"string"),jv.forEach(u),de=w(Sv," is a long list of characters: "),ke=v(Sv,"CODE",{});var Dv=E(ke);me=w(Dv,"f, u, n, c, t, i, o, n, , @, @, f, ..."),Dv.forEach(u),Sv.forEach(u),ge=y(Lv),be=v(Lv,"LI",{});var Mv=E(be);Ee=w(Mv,"The first step is called "),ve=v(Mv,"STRONG",{});var Hv=E(ve);we=w(Hv,"tokenization"),Hv.forEach(u),ye=w(Mv,", where babel scans through each character and creates "),xe=v(Mv,"EM",{});var $v=E(xe);Te=w($v,"tokens"),$v.forEach(u),Ae=w(Mv,", like "),Ie=v(Mv,"CODE",{});var Nv=E(Ie);Ce=w(Nv,"function, @@, foo, (, a, ..."),Nv.forEach(u),Mv.forEach(u),Oe=y(Lv),Pe=v(Lv,"LI",{});var Rv=E(Pe);Le=w(Rv,"The tokens then pass through a parser for "),Se=v(Rv,"STRONG",{});var Fv=E(Se);je=w(Fv,"Syntax analysis"),Fv.forEach(u),De=w(Rv,", where babel creates an AST based on "),Me=v(Rv,"A",{href:!0,rel:!0});var Uv=E(Me);He=w(Uv,"JavaScript language specification"),Uv.forEach(u),$e=w(Rv,"."),Rv.forEach(u),Lv.forEach(u),Ne=y(xv),Re=v(xv,"P",{});var Bv=E(Re);Fe=w(Bv,"If you want to learn more in-depth on compilers in general, "),Ue=v(Bv,"A",{href:!0,rel:!0});var qv=E(Ue);Be=w(qv,"Robert Nystrom"),qv.forEach(u),qe=w(Bv,"'s "),We=v(Bv,"A",{href:!0,rel:!0});var Wv=E(We);ze=w(Wv,"Crafting Interpreters"),Wv.forEach(u),Je=w(Bv," is a gem."),Bv.forEach(u),Ge=y(xv),_e=v(xv,"BLOCKQUOTE",{});var zv=E(_e);Xe=v(zv,"SMALL",{});var Jv=E(Xe);Ye=w(Jv,"Don't get scared of by the word **compiler**, it is nothing but parsing your code and generate XXX out of it. XXX could be machine code, which is the compiler most of us have in mind; XXX could be JavaScript compatible with older browsers, which is the case for Babel."),Jv.forEach(u),zv.forEach(u),xv.forEach(u),Ve=y(a),Ze=v(a,"SECTION",{});var Gv=E(Ze);Ke=v(Gv,"H2",{});var _v=E(Ke);Qe=v(_v,"A",{href:!0,id:!0});var Xv=E(Qe);at=w(Xv,"Our custom babel parser"),Xv.forEach(u),_v.forEach(u),nt=y(Gv),st=v(Gv,"P",{});var Yv=E(st);et=w(Yv,"The folder we are going to work on is "),tt=v(Yv,"CODE",{});var Vv=E(tt);ot=w(Vv,"packages/babel-parser/"),Vv.forEach(u),rt=w(Yv,":"),Yv.forEach(u),ct=y(Gv),pt=v(Gv,"PRE",{class:!0}),E(pt).forEach(u),it=y(Gv),lt=v(Gv,"P",{});var Zv=E(lt);ut=w(Zv,"We've talked about "),ht=v(Zv,"EM",{});var Kv=E(ht);ft=w(Kv,"tokenization"),Kv.forEach(u),dt=w(Zv," and "),kt=v(Zv,"EM",{});var Qv=E(kt);mt=w(Qv,"parsing"),Qv.forEach(u),gt=w(Zv,", now it's clear where to find the code for each process. "),bt=v(Zv,"CODE",{});var aw=E(bt);Et=w(aw,"plugins/"),aw.forEach(u),vt=w(Zv," folder contains plugins that extend the base parser and add custom syntaxes, such as "),wt=v(Zv,"CODE",{});var nw=E(wt);yt=w(nw,"jsx"),nw.forEach(u),xt=w(Zv," and "),Tt=v(Zv,"CODE",{});var sw=E(Tt);At=w(sw,"flow"),sw.forEach(u),It=w(Zv,"."),Zv.forEach(u),Ct=y(Gv),Ot=v(Gv,"P",{});var ew=E(Ot);Pt=w(ew,"Let's do a "),Lt=v(ew,"A",{href:!0,rel:!0});var tw=E(Lt);St=w(tw,"Test-driven development (TDD)"),tw.forEach(u),jt=w(ew,'. I find it easier to define the test case then slowly work our way to "fix" it. It is especially true in an unfamiliar codebase, TDD allows you to "easily" point out code places you need to change.'),ew.forEach(u),Dt=y(Gv),Mt=v(Gv,"PRE",{class:!0}),E(Mt).forEach(u),Ht=y(Gv),$t=v(Gv,"P",{});var ow=E($t);Nt=w(ow,"You can run "),Rt=v(ow,"CODE",{});var rw=E(Rt);Ft=w(rw,'TEST_ONLY=babel-parser TEST_GREP="curry function" make test-only'),rw.forEach(u),Ut=w(ow," to run tests for "),Bt=v(ow,"CODE",{});var cw=E(Bt);qt=w(cw,"babel-parser"),cw.forEach(u),Wt=w(ow," and see your failing case:"),ow.forEach(u),zt=y(Gv),Jt=v(Gv,"PRE",{class:!0}),E(Jt).forEach(u),Gt=y(Gv),_t=v(Gv,"BLOCKQUOTE",{});var pw=E(_t);Xt=v(pw,"SMALL",{});var iw=E(Xt);Yt=w(iw,"If you find scanning through all the test cases takes time, you can directly call `jest` to run the test:"),iw.forEach(u),Vt=y(pw),Zt=v(pw,"PRE",{class:!0}),E(Zt).forEach(u),pw.forEach(u),Kt=y(Gv),Qt=v(Gv,"P",{});var lw=E(Qt);ao=w(lw,"Our parser found 2 seemingly innocent "),no=v(lw,"CODE",{});var uw=E(no);so=w(uw,"@"),uw.forEach(u),eo=w(lw," tokens at a place where they shouldn't be present."),lw.forEach(u),to=y(Gv),oo=v(Gv,"P",{});var hw=E(oo);ro=w(hw,"How do I know that? Let's start the watch mode, "),co=v(hw,"CODE",{});var fw=E(co);po=w(fw,"make watch"),fw.forEach(u),io=w(hw,", wear our detective cap 🕵️‍ and start digging!"),hw.forEach(u),lo=y(Gv),uo=v(Gv,"P",{});var dw=E(uo);ho=w(dw,"Tracing the stack trace, led us to "),fo=v(dw,"A",{href:!0,rel:!0});var kw=E(fo);ko=v(kw,"CODE",{});var mw=E(ko);mo=w(mw,"packages/babel-parser/src/parser/expression.js"),mw.forEach(u),kw.forEach(u),go=w(dw," where it throws "),bo=v(dw,"CODE",{});var gw=E(bo);Eo=w(gw,"this.unexpected()"),gw.forEach(u),vo=w(dw,"."),dw.forEach(u),wo=y(Gv),yo=v(Gv,"P",{});var bw=E(yo);xo=w(bw,"Let us add some "),To=v(bw,"CODE",{});var Ew=E(To);Ao=w(Ew,"console.log"),Ew.forEach(u),Io=w(bw,":"),bw.forEach(u),Co=y(Gv),Oo=v(Gv,"PRE",{class:!0}),E(Oo).forEach(u),Po=y(Gv),Lo=v(Gv,"P",{});var vw=E(Lo);So=w(vw,"As you can see, both tokens are "),jo=v(vw,"CODE",{});var ww=E(jo);Do=w(ww,"@"),ww.forEach(u),Mo=w(vw," token:"),vw.forEach(u),Ho=y(Gv),$o=v(Gv,"PRE",{class:!0}),E($o).forEach(u),No=y(Gv),Ro=v(Gv,"P",{});var yw=E(Ro);Fo=w(yw,"How do I know "),Uo=v(yw,"CODE",{});var xw=E(Uo);Bo=w(xw,"this.state.type"),xw.forEach(u),qo=w(yw," and "),Wo=v(yw,"CODE",{});var Tw=E(Wo);zo=w(Tw,"this.lookahead().type"),Tw.forEach(u),Jo=w(yw," will give me the current and the next token?"),yw.forEach(u),Go=y(Gv),_o=v(Gv,"P",{});var Aw=E(_o);Xo=w(Aw,"Well, I'll explained them "),Yo=v(Aw,"A",{href:!0});var Iw=E(Yo);Vo=w(Iw,"later"),Iw.forEach(u),Zo=w(Aw,"."),Aw.forEach(u),Ko=y(Gv),Qo=v(Gv,"P",{});var Cw=E(Qo);ar=w(Cw,"Let's recap what we've done so far before we move on:"),Cw.forEach(u),nr=y(Gv),sr=v(Gv,"UL",{});var Ow=E(sr);er=v(Ow,"LI",{});var Pw=E(er);tr=w(Pw,"We've written a test case for "),or=v(Pw,"CODE",{});var Lw=E(or);rr=w(Lw,"babel-parser"),Lw.forEach(u),Pw.forEach(u),cr=y(Ow),pr=v(Ow,"LI",{});var Sw=E(pr);ir=w(Sw,"We ran "),lr=v(Sw,"CODE",{});var jw=E(lr);ur=w(jw,"make test-only"),jw.forEach(u),hr=w(Sw," to run the test case"),Sw.forEach(u),fr=y(Ow),dr=v(Ow,"LI",{});var Dw=E(dr);kr=w(Dw,"We've started the watch mode via "),mr=v(Dw,"CODE",{});var Mw=E(mr);gr=w(Mw,"make watch"),Mw.forEach(u),Dw.forEach(u),br=y(Ow),Er=v(Ow,"LI",{});var Hw=E(Er);vr=w(Hw,"We've learned about parser state, and console out the current token type, "),wr=v(Hw,"CODE",{});var $w=E(wr);yr=w($w,"this.state.type"),$w.forEach(u),Hw.forEach(u),Ow.forEach(u),xr=y(Gv),Tr=v(Gv,"P",{});var Nw=E(Tr);Ar=w(Nw,"Here's what we are going to do next:"),Nw.forEach(u),Ir=y(Gv),Cr=v(Gv,"P",{});var Rw=E(Cr);Or=w(Rw,"If there's 2 consecutive "),Pr=v(Rw,"CODE",{});var Fw=E(Pr);Lr=w(Fw,"@"),Fw.forEach(u),Sr=w(Rw,", it should not be separate tokens, it should be a "),jr=v(Rw,"CODE",{});var Uw=E(jr);Dr=w(Uw,"@@"),Uw.forEach(u),Mr=w(Rw," token, the new token we just defined for our curry function"),Rw.forEach(u),Gv.forEach(u),Hr=y(a),$r=v(a,"SECTION",{});var Bw=E($r);Nr=v(Bw,"H3",{});var qw=E(Nr);Rr=v(qw,"A",{href:!0,id:!0});var Ww=E(Rr);Fr=w(Ww,"A new token: '@@'"),Ww.forEach(u),qw.forEach(u),Ur=y(Bw),Br=v(Bw,"P",{});var zw=E(Br);qr=w(zw,"Let's first look at where a token type is defined: "),Wr=v(zw,"A",{href:!0,rel:!0});var Jw=E(Wr);zr=w(Jw,"packages/babel-parser/src/tokenizer/types.js"),Jw.forEach(u),Jr=w(zw,"."),zw.forEach(u),Gr=y(Bw),_r=v(Bw,"P",{});var Gw=E(_r);Xr=w(Gw,"Here you see a list of tokens, so let's add our new token definition in as well:"),Gw.forEach(u),Yr=y(Bw),Vr=v(Bw,"PRE",{class:!0}),E(Vr).forEach(u),Zr=y(Bw),Kr=v(Bw,"P",{});var _w=E(Kr);Qr=w(_w,"Next, let's find out where the token gets created during "),ac=v(_w,"EM",{});var Xw=E(ac);nc=w(Xw,"tokenization"),Xw.forEach(u),sc=w(_w,". A quick search on "),ec=v(_w,"CODE",{});var Yw=E(ec);tc=w(Yw,"tt.at"),Yw.forEach(u),oc=w(_w," within "),rc=v(_w,"CODE",{});var Vw=E(rc);cc=w(Vw,"babel-parser/src/tokenizer"),Vw.forEach(u),pc=w(_w," lead us to "),ic=v(_w,"A",{href:!0,rel:!0});var Zw=E(ic);lc=w(Zw,"packages/babel-parser/src/tokenizer/index.js"),Zw.forEach(u),_w.forEach(u),uc=y(Bw),hc=v(Bw,"BLOCKQUOTE",{});var Kw=E(hc);fc=v(Kw,"SMALL",{});var Qw=E(fc);dc=w(Qw,"Well, token types are import as `tt` throughout the babel-parser."),Qw.forEach(u),Kw.forEach(u),kc=y(Bw),mc=v(Bw,"P",{});var ay=E(mc);gc=w(ay,"Let's create the token "),bc=v(ay,"CODE",{});var ny=E(bc);Ec=w(ny,"tt.atat"),ny.forEach(u),vc=w(ay," instead of "),wc=v(ay,"CODE",{});var sy=E(wc);yc=w(sy,"tt.at"),sy.forEach(u),xc=w(ay," if there's another "),Tc=v(ay,"CODE",{});var ey=E(Tc);Ac=w(ey,"@"),ey.forEach(u),Ic=w(ay," succeed the current "),Cc=v(ay,"CODE",{});var ty=E(Cc);Oc=w(ty,"@"),ty.forEach(u),Pc=w(ay,":"),ay.forEach(u),Lc=y(Bw),Sc=v(Bw,"PRE",{class:!0}),E(Sc).forEach(u),jc=y(Bw),Dc=v(Bw,"P",{});var oy=E(Dc);Mc=w(oy,"If you run the test again, you will see that the current token and the next token has changed:"),oy.forEach(u),Hc=y(Bw),$c=v(Bw,"PRE",{class:!0}),E($c).forEach(u),Nc=y(Bw),Rc=v(Bw,"P",{});var ry=E(Rc);Fc=w(ry,"Yeah! It looks good and lets move on. "),Uc=v(ry,"SPAN",{style:!0});var cy=E(Uc);Bc=w(cy,"🏃‍"),cy.forEach(u),ry.forEach(u),Bw.forEach(u),qc=y(a),Wc=v(a,"SECTION",{});var py=E(Wc);zc=v(py,"H3",{});var iy=E(zc);Jc=v(iy,"A",{href:!0,id:!0});var ly=E(Jc);Gc=w(ly,"The new parser"),ly.forEach(u),iy.forEach(u),_c=y(py),Xc=v(py,"P",{});var uy=E(Xc);Yc=w(uy,"Before we move on, let's inspect how "),Vc=v(uy,"A",{href:!0,rel:!0});var hy=E(Vc);Zc=w(hy,"generator functions are represented in AST"),hy.forEach(u),Kc=w(uy,":"),uy.forEach(u),Qc=y(py),ap=v(py,"P",{});var fy=E(ap);np=v(fy,"PICTURE",{});var dy=E(np);sp=v(dy,"SOURCE",{type:!0,srcset:!0}),ep=v(dy,"SOURCE",{type:!0,srcset:!0}),tp=v(dy,"IMG",{title:!0,alt:!0,"data-src":!0,loading:!0}),dy.forEach(u),fy.forEach(u),op=y(py),rp=v(py,"P",{});var ky=E(rp);cp=w(ky,"As you can see, a generator function is represented by the "),pp=v(ky,"CODE",{});var my=E(pp);ip=w(my,"generator: true"),my.forEach(u),lp=w(ky," attribute of a "),up=v(ky,"CODE",{});var gy=E(up);hp=w(gy,"FunctionDeclaration"),gy.forEach(u),fp=w(ky,"."),ky.forEach(u),dp=y(py),kp=v(py,"P",{});var by=E(kp);mp=w(by,"Similarly, we can add a "),gp=v(by,"CODE",{});var Ey=E(gp);bp=w(Ey,"curry: true"),Ey.forEach(u),Ep=w(by," attribute of the "),vp=v(by,"CODE",{});var vy=E(vp);wp=w(vy,"FunctionDeclaration"),vy.forEach(u),yp=w(by," too if it is a curry function:"),by.forEach(u),xp=y(py),Tp=v(py,"P",{});var wy=E(Tp);Ap=v(wy,"PICTURE",{});var yy=E(Ap);Ip=v(yy,"SOURCE",{type:!0,srcset:!0}),Cp=v(yy,"SOURCE",{type:!0,srcset:!0}),Op=v(yy,"IMG",{title:!0,alt:!0,"data-src":!0,loading:!0}),yy.forEach(u),wy.forEach(u),Pp=y(py),Lp=v(py,"P",{});var xy=E(Lp);Sp=w(xy,"We have a plan now, let's implement it."),xy.forEach(u),jp=y(py),Dp=v(py,"P",{});var Ty=E(Dp);Mp=w(Ty,"A quick search on "),Hp=v(Ty,"EM",{});var Ay=E(Hp);$p=w(Ay,'"FunctionDeclaration"'),Ay.forEach(u),Np=w(Ty," leads us to a function called "),Rp=v(Ty,"CODE",{});var Iy=E(Rp);Fp=w(Iy,"parseFunction"),Iy.forEach(u),Up=w(Ty," in "),Bp=v(Ty,"A",{href:!0,rel:!0});var Cy=E(Bp);qp=w(Cy,"packages/babel-parser/src/parser/statement.js"),Cy.forEach(u),Wp=w(Ty,", and here we find a line that sets the "),zp=v(Ty,"CODE",{});var Oy=E(zp);Jp=w(Oy,"generator"),Oy.forEach(u),Gp=w(Ty," attribute, let's add one more line:"),Ty.forEach(u),_p=y(py),Xp=v(py,"PRE",{class:!0}),E(Xp).forEach(u),Yp=y(py),Vp=v(py,"P",{});var Py=E(Vp);Zp=w(Py,"If you run the test again, you will be amazed that it passed!"),Py.forEach(u),Kp=y(py),Qp=v(py,"PRE",{class:!0}),E(Qp).forEach(u),ai=y(py),ni=v(py,"P",{});var Ly=E(ni);si=w(Ly,"That's it? How did we miraculously fix it?"),Ly.forEach(u),ei=y(py),ti=v(py,"P",{});var Sy=E(ti);oi=w(Sy,"I am going to briefly explain how parsing works, and in the process hopefully, you understood what that one-liner change did."),Sy.forEach(u),py.forEach(u),ri=y(a),ci=v(a,"SECTION",{});var jy=E(ci);pi=v(jy,"H3",{});var Dy=E(pi);ii=v(Dy,"A",{href:!0,id:!0});var My=E(ii);li=w(My,"How parsing works"),My.forEach(u),Dy.forEach(u),ui=y(jy),hi=v(jy,"P",{});var Hy=E(hi);fi=w(Hy,"With the list of tokens from the "),di=v(Hy,"EM",{});var $y=E(di);ki=w($y,"tokenizer"),$y.forEach(u),mi=w(Hy,", the parser consumes the token one by one and constructs the AST. The parser uses the language grammar specification to decide how to use the tokens, which token to expect next."),Hy.forEach(u),gi=y(jy),bi=v(jy,"P",{});var Ny=E(bi);Ei=w(Ny,"The grammar specification looks something like this:"),Ny.forEach(u),vi=y(jy),wi=v(jy,"PRE",{class:!0}),E(wi).forEach(u),yi=y(jy),xi=v(jy,"P",{});var Ry=E(xi);Ti=w(Ry,"It explains the precedence of each expressions/statements. For example, an "),Ai=v(Ry,"CODE",{});var Fy=E(Ai);Ii=w(Fy,"AdditiveExpression"),Fy.forEach(u),Ci=w(Ry," is made up of either:"),Ry.forEach(u),Oi=y(jy),Pi=v(jy,"UL",{});var Uy=E(Pi);Li=v(Uy,"LI",{});var By=E(Li);Si=w(By,"a "),ji=v(By,"CODE",{});var qy=E(ji);Di=w(qy,"MultiplicativeExpression"),qy.forEach(u),Mi=w(By,", or"),By.forEach(u),Hi=y(Uy),$i=v(Uy,"LI",{});var Wy=E($i);Ni=w(Wy,"an "),Ri=v(Wy,"CODE",{});var zy=E(Ri);Fi=w(zy,"AdditiveExpression"),zy.forEach(u),Ui=w(Wy," followed by "),Bi=v(Wy,"CODE",{});var Jy=E(Bi);qi=w(Jy,"+"),Jy.forEach(u),Wi=w(Wy," operator token followed by "),zi=v(Wy,"CODE",{});var Gy=E(zi);Ji=w(Gy,"MultiplicativeExpression"),Gy.forEach(u),Gi=w(Wy,", or"),Wy.forEach(u),_i=y(Uy),Xi=v(Uy,"LI",{});var _y=E(Xi);Yi=w(_y,"an "),Vi=v(_y,"CODE",{});var Xy=E(Vi);Zi=w(Xy,"AdditiveExpression"),Xy.forEach(u),Ki=w(_y," followed by "),Qi=v(_y,"CODE",{});var Yy=E(Qi);al=w(Yy,"-"),Yy.forEach(u),nl=w(_y," operator token followed by "),sl=v(_y,"CODE",{});var Vy=E(sl);el=w(Vy,"MultiplicativeExpression"),Vy.forEach(u),tl=w(_y,"."),_y.forEach(u),Uy.forEach(u),ol=y(jy),rl=v(jy,"P",{});var Zy=E(rl);cl=w(Zy,"So if you have an expression "),pl=v(Zy,"CODE",{});var Ky=E(pl);il=w(Ky,"1 + 2 * 3"),Ky.forEach(u),ll=w(Zy,", it will be like:"),Zy.forEach(u),ul=y(jy),hl=v(jy,"PRE",{class:!0}),E(hl).forEach(u),fl=y(jy),dl=v(jy,"P",{});var Qy=E(dl);kl=w(Qy,"instead of"),Qy.forEach(u),ml=y(jy),gl=v(jy,"PRE",{class:!0}),E(gl).forEach(u),bl=y(jy),El=v(jy,"P",{});var ax=E(El);vl=w(ax,"With these rules, we translate them into parser code:"),ax.forEach(u),wl=y(jy),yl=v(jy,"PRE",{class:!0}),E(yl).forEach(u),xl=y(jy),Tl=v(jy,"P",{});var nx=E(Tl);Al=v(nx,"EM",{});var sx=E(Al);Il=w(sx,"This is a made-up code that oversimplifies what babel have, but I hope you get the gist of it."),sx.forEach(u),nx.forEach(u),Cl=y(jy),Ol=v(jy,"P",{});var ex=E(Ol);Pl=w(ex,"As you can see here, the parser is recursively in nature, and it goes from the lowest precedence to the highest precedence expressions/statements. Eg: "),Ll=v(ex,"CODE",{});var tx=E(Ll);Sl=w(tx,"parseAdditiveExpression"),tx.forEach(u),jl=w(ex," calls "),Dl=v(ex,"CODE",{});var ox=E(Dl);Ml=w(ox,"parseMultiplicativeExpression"),ox.forEach(u),Hl=w(ex,", which in turn calls "),$l=v(ex,"CODE",{});var rx=E($l);Nl=w(rx,"parseExponentiationExpression"),rx.forEach(u),Rl=w(ex,", which in turn calls ... . This recursive process is called the "),Fl=v(ex,"A",{href:!0,rel:!0});var cx=E(Fl);Ul=w(cx,"Recursive Descent Parsing"),cx.forEach(u),Bl=w(ex,"."),ex.forEach(u),jy.forEach(u),ql=y(a),Wl=v(a,"SECTION",{});var px=E(Wl);zl=v(px,"H4",{});var ix=E(zl);Jl=v(ix,"A",{href:!0,id:!0});var lx=E(Jl);Gl=w(lx,"this.eat, this.match, this.next"),lx.forEach(u),ix.forEach(u),_l=y(px),Xl=v(px,"P",{});var ux=E(Xl);Yl=w(ux,"If you have noticed, in my examples above, I used some utility function, such as "),Vl=v(ux,"CODE",{});var hx=E(Vl);Zl=w(hx,"this.eat"),hx.forEach(u),Kl=w(ux,", "),Ql=v(ux,"CODE",{});var fx=E(Ql);au=w(fx,"this.match"),fx.forEach(u),nu=w(ux,", "),su=v(ux,"CODE",{});var dx=E(su);eu=w(dx,"this.next"),dx.forEach(u),tu=w(ux,", etc. These are babel parser's internal functions, yet they are quite ubiquitous amongst parsers as well:"),ux.forEach(u),ou=y(px),ru=v(px,"UL",{});var kx=E(ru);cu=v(kx,"LI",{});var mx=E(cu);pu=v(mx,"STRONG",{});var gx=E(pu);iu=v(gx,"CODE",{});var bx=E(iu);lu=w(bx,"this.match"),bx.forEach(u),gx.forEach(u),uu=w(mx," returns a "),hu=v(mx,"CODE",{});var Ex=E(hu);fu=w(Ex,"boolean"),Ex.forEach(u),du=w(mx," indicating whether the current token matches the condition"),mx.forEach(u),ku=y(kx),mu=v(kx,"LI",{});var vx=E(mu);gu=v(vx,"STRONG",{});var wx=E(gu);bu=v(wx,"CODE",{});var yx=E(bu);Eu=w(yx,"this.next"),yx.forEach(u),wx.forEach(u),vu=w(vx," moves the token list forward to point to the next token"),vx.forEach(u),wu=y(kx),yu=v(kx,"LI",{});var xx=E(yu);xu=v(xx,"STRONG",{});var Tx=E(xu);Tu=v(Tx,"CODE",{});var Ax=E(Tu);Au=w(Ax,"this.eat"),Ax.forEach(u),Tx.forEach(u),Iu=w(xx," return what "),Cu=v(xx,"CODE",{});var Ix=E(Cu);Ou=w(Ix,"this.match"),Ix.forEach(u),Pu=w(xx," returns and if "),Lu=v(xx,"CODE",{});var Cx=E(Lu);Su=w(Cx,"this.match"),Cx.forEach(u),ju=w(xx," returns "),Du=v(xx,"CODE",{});var Ox=E(Du);Mu=w(Ox,"true"),Ox.forEach(u),Hu=w(xx,", will do "),$u=v(xx,"CODE",{});var Px=E($u);Nu=w(Px,"this.next"),Px.forEach(u),Ru=v(xx,"UL",{});var Lx=E(Ru);Fu=v(Lx,"LI",{});var Sx=E(Fu);Uu=v(Sx,"CODE",{});var jx=E(Uu);Bu=w(jx,"this.eat"),jx.forEach(u),qu=w(Sx," is commonly used for optional operators, like "),Wu=v(Sx,"CODE",{});var Dx=E(Wu);zu=w(Dx,"*"),Dx.forEach(u),Ju=w(Sx," in generator function, "),Gu=v(Sx,"CODE",{});var Mx=E(Gu);_u=w(Mx,";"),Mx.forEach(u),Xu=w(Sx," at the end of statements, and "),Yu=v(Sx,"CODE",{});var Hx=E(Yu);Vu=w(Hx,"?"),Hx.forEach(u),Zu=w(Sx," in typescript types."),Sx.forEach(u),Lx.forEach(u),xx.forEach(u),Ku=y(kx),Qu=v(kx,"LI",{});var $x=E(Qu);ah=v($x,"STRONG",{});var Nx=E(ah);nh=v(Nx,"CODE",{});var Rx=E(nh);sh=w(Rx,"this.lookahead"),Rx.forEach(u),Nx.forEach(u),eh=w($x," get the next token without moving forward to make a decision on the current node"),$x.forEach(u),kx.forEach(u),th=y(px),oh=v(px,"P",{});var Fx=E(oh);rh=w(Fx,"If you take a look again the parser code we just changed, it's easier to read it in now."),Fx.forEach(u),ch=y(px),ph=v(px,"PRE",{class:!0}),E(ph).forEach(u),ih=y(px),lh=v(px,"P",{});var Ux=E(lh);uh=w(Ux,"I know I didn't do a good job explaining how a parser works. Here are some resources that I learned from, and I highly recommend them:"),Ux.forEach(u),hh=y(px),fh=v(px,"UL",{});var Bx=E(fh);dh=v(Bx,"LI",{});var qx=E(dh);kh=v(qx,"A",{href:!0,rel:!0});var Wx=E(kh);mh=w(Wx,"Crafting Interpreters"),Wx.forEach(u),gh=w(qx," by "),bh=v(qx,"A",{href:!0,rel:!0});var zx=E(bh);Eh=w(zx,"Robert Nystrom"),zx.forEach(u),qx.forEach(u),vh=y(Bx),wh=v(Bx,"LI",{});var Jx=E(wh);yh=v(Jx,"A",{href:!0,rel:!0});var Gx=E(yh);xh=w(Gx,'Free Udacity course: "Compilers: Theory and Practice"'),Gx.forEach(u),Th=w(Jx,", offered by Georgia Tech"),Jx.forEach(u),Bx.forEach(u),Ah=y(px),Ih=v(px,"HR",{}),Ch=y(px),Oh=v(px,"P",{});var _x=E(Oh);Ph=v(_x,"STRONG",{});var Xx=E(Ph);Lh=w(Xx,"Side Note"),Xx.forEach(u),Sh=w(_x,': You might be curious how am I able to visualize the custom syntax in the Babel AST Explorer, where I showed you the new "curry" attribute in the AST.'),_x.forEach(u),jh=y(px),Dh=v(px,"P",{});var Yx=E(Dh);Mh=w(Yx,"That's because I've added a new feature in the Babel AST Explorer where you can upload your custom parser!"),Yx.forEach(u),Hh=y(px),$h=v(px,"P",{});var Vx=E($h);Nh=w(Vx,"If you go to "),Rh=v(Vx,"CODE",{});var Zx=E(Rh);Fh=w(Zx,"packages/babel-parser/lib"),Zx.forEach(u),Uh=w(Vx,", you would find the compiled version of your parser and the source map. Open the drawer of the Babel AST Explorer, you will see a button to upload a custom parser. Drag the "),Bh=v(Vx,"CODE",{});var Kx=E(Bh);qh=w(Kx,"packages/babel-parser/lib/index.js"),Kx.forEach(u),Wh=w(Vx," in and you will be visualizing the AST generated via your custom parser!"),Vx.forEach(u),zh=y(px),Jh=v(px,"P",{});var Qx=E(Jh);Gh=v(Qx,"IMG",{title:!0,alt:!0,"data-src":!0,loading:!0}),Qx.forEach(u),_h=y(px),Xh=v(px,"HR",{}),px.forEach(u),Yh=y(a),Vh=v(a,"SECTION",{});var aT=E(Vh);Zh=v(aT,"H2",{});var nT=E(Zh);Kh=v(nT,"A",{href:!0,id:!0});var sT=E(Kh);Qh=w(sT,"Our babel plugin"),sT.forEach(u),nT.forEach(u),af=y(aT),nf=v(aT,"P",{});var eT=E(nf);sf=w(eT,"With our custom babel parser done, let's move on to write our babel plugin."),eT.forEach(u),ef=y(aT),tf=v(aT,"P",{});var tT=E(tf);of=w(tT,"But maybe before that, you may have some doubts on how are we going to use our custom babel parser, especially with whatever build stack we are using right now?"),tT.forEach(u),rf=y(aT),cf=v(aT,"P",{});var oT=E(cf);pf=w(oT,"Well, fret not. A babel plugin can provide a custom parser, which is "),lf=v(oT,"A",{href:!0,rel:!0});var rT=E(lf);uf=w(rT,"documented on the babel website"),rT.forEach(u),oT.forEach(u),hf=y(aT),ff=v(aT,"PRE",{class:!0}),E(ff).forEach(u),df=y(aT),kf=v(aT,"P",{});var cT=E(kf);mf=w(cT,"Since we forked out the babel parser, all existing babel parser options or built-in plugins will still work perfectly."),cT.forEach(u),gf=y(aT),bf=v(aT,"P",{});var pT=E(bf);Ef=w(pT,"With this doubt out of the way, let see how we can make our curry function curryable? "),vf=v(pT,"EM",{});var iT=E(vf);wf=w(iT,"(not entirely sure there's such word)"),iT.forEach(u),pT.forEach(u),yf=y(aT),xf=v(aT,"HR",{}),Tf=y(aT),Af=v(aT,"P",{});var lT=E(Af);If=w(lT,"Before we start, if you have eagerly tried to add our plugin into your build system, you would notice that the curry function gets compiled to a normal function."),lT.forEach(u),Cf=y(aT),Of=v(aT,"P",{});var uT=E(Of);Pf=w(uT,"This is because, after parsing + transformation, babel will use "),Lf=v(uT,"A",{href:!0,rel:!0});var hT=E(Lf);Sf=w(hT,"@babel/generator"),hT.forEach(u),jf=w(uT," to generate code from the transformed AST. Since the "),Df=v(uT,"CODE",{});var fT=E(Df);Mf=w(fT,"@babel/generator"),fT.forEach(u),Hf=w(uT," has no idea about the new "),$f=v(uT,"CODE",{});var dT=E($f);Nf=w(dT,"curry"),dT.forEach(u),Rf=w(uT," attribute we added, it will be omitted."),uT.forEach(u),Ff=y(aT),Uf=v(aT,"BLOCKQUOTE",{});var kT=E(Uf);Bf=v(kT,"P",{});var mT=E(Bf);qf=w(mT,"If one day curry function becomes the new JavaScript syntax, you may want to make a pull request to add one more line "),Wf=v(mT,"A",{href:!0,rel:!0});var gT=E(Wf);zf=w(gT,"here"),gT.forEach(u),Jf=w(mT,"!"),mT.forEach(u),kT.forEach(u),Gf=y(aT),_f=v(aT,"HR",{}),Xf=y(aT),Yf=v(aT,"P",{});var bT=E(Yf);Vf=w(bT,"Ok, to make our function curryable, we can wrap it with a "),Zf=v(bT,"CODE",{});var ET=E(Zf);Kf=w(ET,"currying"),ET.forEach(u),Qf=w(bT," helper higher-order function:"),bT.forEach(u),ad=y(aT),nd=v(aT,"PRE",{class:!0}),E(nd).forEach(u),sd=y(aT),ed=v(aT,"BLOCKQUOTE",{});var vT=E(ed);td=v(vT,"P",{});var wT=E(td);od=w(wT,"If you want to learn how to write a currying function, you can read this "),rd=v(wT,"A",{href:!0,rel:!0});var yT=E(rd);cd=w(yT,"Currying in JS"),yT.forEach(u),pd=w(wT," by "),id=v(wT,"A",{href:!0,rel:!0});var xT=E(id);ld=w(xT,"Shirsh Zibbu"),xT.forEach(u),wT.forEach(u),vT.forEach(u),ud=y(aT),hd=v(aT,"P",{});var TT=E(hd);fd=w(TT,"So when we transform our curry function, we can transform it into the following:"),TT.forEach(u),dd=y(aT),kd=v(aT,"PRE",{class:!0}),E(kd).forEach(u),md=y(aT),gd=v(aT,"BLOCKQUOTE",{});var AT=E(gd);bd=v(AT,"P",{});var IT=E(bd);Ed=w(IT,"Let's first ignore "),vd=v(IT,"A",{href:!0,rel:!0});var CT=E(vd);wd=w(CT,"function hoisting"),CT.forEach(u),yd=w(IT," in JavaScript, where you can call "),xd=v(IT,"CODE",{});var OT=E(xd);Td=w(OT,"foo"),OT.forEach(u),Ad=w(IT," before it is defined."),IT.forEach(u),AT.forEach(u),Id=y(aT),Cd=v(aT,"P",{});var PT=E(Cd);Od=w(PT,"If you have read my "),Pd=v(PT,"A",{href:!0});var LT=E(Pd);Ld=w(LT,"step-by-step guide on babel transformation"),LT.forEach(u),Sd=w(PT,", writing this transformation should be manageable:"),PT.forEach(u),jd=y(aT),Dd=v(aT,"PRE",{class:!0}),E(Dd).forEach(u),Md=y(aT),Hd=v(aT,"P",{});var ST=E(Hd);$d=w(ST,"The question is how do we provide the "),Nd=v(ST,"CODE",{});var jT=E(Nd);Rd=w(jT,"currying"),jT.forEach(u),Fd=w(ST," function?"),ST.forEach(u),Ud=y(aT),Bd=v(aT,"P",{});var DT=E(Bd);qd=w(DT,"There are 2 ways:"),DT.forEach(u),aT.forEach(u),Wd=y(a),zd=v(a,"SECTION",{});var MT=E(zd);Jd=v(MT,"H3",{});var HT=E(Jd);Gd=v(HT,"A",{href:!0,id:!0});var $T=E(Gd);_d=w($T,"1. Assume "),Xd=v($T,"CODE",{});var NT=E(Xd);Yd=w(NT,"currying"),NT.forEach(u),Vd=w($T," has been declared in the global scope."),$T.forEach(u),HT.forEach(u),Zd=y(MT),Kd=v(MT,"P",{});var RT=E(Kd);Qd=w(RT,"Basically, your job is done here."),RT.forEach(u),ak=y(MT),nk=v(MT,"P",{});var FT=E(nk);sk=w(FT,"If "),ek=v(FT,"CODE",{});var UT=E(ek);tk=w(UT,"currying"),UT.forEach(u),ok=w(FT," is not defined, then when executing the compiled code, the runtime will scream out "),rk=v(FT,"EM",{});var BT=E(rk);ck=w(BT,'"currying is not defined"'),BT.forEach(u),pk=w(FT,", just like the "),ik=v(FT,"A",{href:!0,rel:!0});var qT=E(ik);lk=w(qT,'"regeneratorRuntime is not defined"'),qT.forEach(u),uk=w(FT,"."),FT.forEach(u),hk=y(MT),fk=v(MT,"P",{});var WT=E(fk);dk=w(WT,"So probably you have to educate the users to install "),kk=v(WT,"CODE",{});var zT=E(kk);mk=w(zT,"currying"),zT.forEach(u),gk=w(WT," polyfills in order to use your "),bk=v(WT,"CODE",{});var JT=E(bk);Ek=w(JT,"babel-plugin-transformation-curry-function"),JT.forEach(u),vk=w(WT,"."),WT.forEach(u),MT.forEach(u),wk=y(a),yk=v(a,"SECTION",{});var GT=E(yk);xk=v(GT,"H3",{});var _T=E(xk);Tk=v(_T,"A",{href:!0,id:!0});var XT=E(Tk);Ak=w(XT,"2. Use the "),Ik=v(XT,"CODE",{});var YT=E(Ik);Ck=w(YT,"@babel/helpers"),YT.forEach(u),XT.forEach(u),_T.forEach(u),Ok=y(GT),Pk=v(GT,"P",{});var VT=E(Pk);Lk=w(VT,"You can add a new helper to "),Sk=v(VT,"CODE",{});var ZT=E(Sk);jk=w(ZT,"@babel/helpers"),ZT.forEach(u),Dk=w(VT,", which of course you are unlikely to merge that into the official "),Mk=v(VT,"CODE",{});var KT=E(Mk);Hk=w(KT,"@babel/helpers"),KT.forEach(u),$k=w(VT,", so you would have to figure a way to make "),Nk=v(VT,"CODE",{});var QT=E(Nk);Rk=w(QT,"@babel/core"),QT.forEach(u),Fk=w(VT," to resolve to your "),Uk=v(VT,"CODE",{});var aA=E(Uk);Bk=w(aA,"@babel/helpers"),aA.forEach(u),qk=w(VT,":"),VT.forEach(u),Wk=y(GT),zk=v(GT,"PRE",{class:!0}),E(zk).forEach(u),Jk=y(GT),Gk=v(GT,"P",{});var nA=E(Gk);_k=v(nA,"EM",{});var sA=E(_k);Xk=v(sA,"STRONG",{});var eA=E(Xk);Yk=w(eA,"Disclaimer:"),eA.forEach(u),Vk=w(sA," I have not personally tried this, but I believe it will work. If you encountered problems trying this, "),Zk=v(sA,"A",{href:!0,rel:!0});var tA=E(Zk);Kk=w(tA,"DM me"),tA.forEach(u),Qk=w(sA,", I am very happy to discuss it with you."),sA.forEach(u),nA.forEach(u),am=y(GT),nm=v(GT,"P",{});var oA=E(nm);sm=w(oA,"Adding a new helper function into "),em=v(oA,"CODE",{});var rA=E(em);tm=w(rA,"@babel/helpers"),rA.forEach(u),om=w(oA," is very easy."),oA.forEach(u),rm=y(GT),cm=v(GT,"P",{});var cA=E(cm);pm=w(cA,"Head over to "),im=v(cA,"A",{href:!0,rel:!0});var pA=E(im);lm=w(pA,"packages/babel-helpers/src/helpers.js"),pA.forEach(u),um=w(cA," and add a new entry:"),cA.forEach(u),hm=y(GT),fm=v(GT,"PRE",{class:!0}),E(fm).forEach(u),dm=y(GT),km=v(GT,"P",{});var iA=E(km);mm=w(iA,"The helper tag function specifies the "),gm=v(iA,"CODE",{});var lA=E(gm);bm=w(lA,"@babel/core"),lA.forEach(u),Em=w(iA," version required. The trick here is to "),vm=v(iA,"CODE",{});var uA=E(vm);wm=w(uA,"export default"),uA.forEach(u),ym=w(iA," the "),xm=v(iA,"CODE",{});var hA=E(xm);Tm=w(hA,"currying"),hA.forEach(u),Am=w(iA," function."),iA.forEach(u),Im=y(GT),Cm=v(GT,"P",{});var fA=E(Cm);Om=w(fA,"To use the helper, just call the "),Pm=v(fA,"CODE",{});var dA=E(Pm);Lm=w(dA,"this.addHelper()"),dA.forEach(u),Sm=w(fA,":"),fA.forEach(u),jm=y(GT),Dm=v(GT,"PRE",{class:!0}),E(Dm).forEach(u),Mm=y(GT),Hm=v(GT,"P",{});var kA=E(Hm);$m=w(kA,"The "),Nm=v(kA,"CODE",{});var mA=E(Nm);Rm=w(mA,"this.addHelper"),mA.forEach(u),Fm=w(kA," will inject the helper at the top of the file if needed, and returns an "),Um=v(kA,"CODE",{});var gA=E(Um);Bm=w(gA,"Identifier"),gA.forEach(u),qm=w(kA," to the injected function."),kA.forEach(u),GT.forEach(u),Wm=y(a),zm=v(a,"SECTION",{});var bA=E(zm);Jm=v(bA,"H2",{});var EA=E(Jm);Gm=v(EA,"A",{href:!0,id:!0});var vA=E(Gm);_m=w(vA,"Closing Note"),vA.forEach(u),EA.forEach(u),Xm=y(bA),Ym=v(bA,"P",{});var wA=E(Ym);Vm=w(wA,"We've seen how we can modify the babel parser function, write our own babel transform plugin "),Zm=v(wA,"EM",{});var yA=E(Zm);Km=w(yA,"(which was brief mainly because I have "),Qm=v(yA,"A",{href:!0});var xA=E(Qm);ag=w(xA,"a detailed cover in my previous post"),xA.forEach(u),ng=w(yA,")"),yA.forEach(u),sg=w(wA,", a brief touch on "),eg=v(wA,"CODE",{});var TA=E(eg);tg=w(TA,"@babel/generator"),TA.forEach(u),og=w(wA," and also how we can add helper functions via "),rg=v(wA,"CODE",{});var AA=E(rg);cg=w(AA,"@babel/helpers"),AA.forEach(u),pg=w(wA,"."),wA.forEach(u),ig=y(bA),lg=v(bA,"P",{});var IA=E(lg);ug=w(IA,"Along the way, we had a crash course on how a parser works, which I will provide the links to "),hg=v(IA,"A",{href:!0});var CA=E(hg);fg=w(CA,"further reading"),CA.forEach(u),dg=w(IA," at the bottom."),IA.forEach(u),kg=y(bA),mg=v(bA,"P",{});var OA=E(mg);gg=w(OA,"The steps we've gone through above is similar to part of the "),bg=v(OA,"A",{href:!0,rel:!0});var PA=E(bg);Eg=w(PA,"TC39 proposal"),PA.forEach(u),vg=y(OA),wg=v(OA,"A",{href:!0,rel:!0});var LA=E(wg);yg=w(LA,"process"),LA.forEach(u),xg=w(OA," when defining a new JavaScript specification. When proposing a new specification, the champion of the proposal usually write polyfills or forked out babel to write proof-of-concept demos. As you've seen, forking a parser or writing polyfills is not the hardest part of the process, but to define the problem space, plan and think through the use cases and edge cases, and gather opinions and suggestions from the community. To this end, I am grateful to the proposal champion, for their effort in pushing the JavaScript language forward."),OA.forEach(u),Tg=y(bA),Ag=v(bA,"P",{});var SA=E(Ag);Ig=w(SA,"Finally, if you want to see the code we've done so far in a full picture, you can "),Cg=v(SA,"A",{href:!0,rel:!0});var jA=E(Cg);Og=w(jA,"check it out from Github"),jA.forEach(u),Pg=w(SA,"."),SA.forEach(u),Lg=y(bA),Sg=v(bA,"HR",{}),bA.forEach(u),jg=y(a),Dg=v(a,"SECTION",{});var DA=E(Dg);Mg=v(DA,"H2",{});var MA=E(Mg);Hg=v(MA,"A",{href:!0,id:!0});var HA=E(Hg);$g=w(HA,"Editor's Note"),HA.forEach(u),MA.forEach(u),Ng=y(DA),Rg=v(DA,"P",{});var $A=E(Rg);Fg=w($A,"I've worked on the babel repository for a while, yet I've never added a new syntax to the babel parser before. Most of my contributions were just fixing bugs and specs compliance feature."),$A.forEach(u),Ug=y(DA),Bg=v(DA,"P",{});var NA=E(Bg);qg=w(NA,"Yet this idea of creating a new syntax has been in my mind for a while. So I took the chance of writing a blog to try it out. It is an exhilarating experience to see it work as expected."),NA.forEach(u),Wg=y(DA),zg=v(DA,"P",{});var RA=E(zg);Jg=w(RA,"Having the ability to manipulate the syntax of the language you are writing is invigorating. It empowers us the possibility of writing less code or more straightforward code and shifts that complexity to compile time. Just as how "),Gg=v(RA,"CODE",{});var FA=E(Gg);_g=w(FA,"async-await"),FA.forEach(u),Xg=w(RA," solves the callback hell and promise-chaining hell."),RA.forEach(u),Yg=y(DA),Vg=v(DA,"P",{});var UA=E(Vg);Zg=w(UA,"If this article inspires you to some great idea, and you wish to discuss it with somebody, you are always more than welcome to reach out to me through "),Kg=v(UA,"A",{href:!0,rel:!0});var BA=E(Kg);Qg=w(BA,"Twitter"),BA.forEach(u),ab=w(UA,"."),UA.forEach(u),DA.forEach(u),nb=y(a),sb=v(a,"SECTION",{});var qA=E(sb);eb=v(qA,"H2",{});var WA=E(eb);tb=v(WA,"A",{href:!0,id:!0});var zA=E(tb);ob=w(zA,"Further Reading"),zA.forEach(u),WA.forEach(u),rb=y(qA),cb=v(qA,"P",{});var JA=E(cb);pb=w(JA,"About compilers:"),JA.forEach(u),ib=y(qA),lb=v(qA,"UL",{});var GA=E(lb);ub=v(GA,"LI",{});var _A=E(ub);hb=v(_A,"A",{href:!0,rel:!0});var XA=E(hb);fb=w(XA,"Crafting Interpreters"),XA.forEach(u),db=w(_A," by "),kb=v(_A,"A",{href:!0,rel:!0});var YA=E(kb);mb=w(YA,"Robert Nystrom"),YA.forEach(u),_A.forEach(u),gb=y(GA),bb=v(GA,"LI",{});var VA=E(bb);Eb=v(VA,"A",{href:!0,rel:!0});var ZA=E(Eb);vb=w(ZA,'Free Udacity course: "Compilers: Theory and Practice"'),ZA.forEach(u),wb=w(VA,", offered by Georgia Tech"),VA.forEach(u),yb=y(GA),xb=v(GA,"LI",{});var KA=E(xb);Tb=v(KA,"A",{href:!0,rel:!0});var QA=E(Tb);Ab=w(QA,"Leveling Up One’s Parsing Game With ASTs"),QA.forEach(u),Ib=w(KA," by "),Cb=v(KA,"A",{href:!0,rel:!0});var aI=E(Cb);Ob=w(aI,"Vaidehi Joshi"),aI.forEach(u),KA.forEach(u),GA.forEach(u),Pb=y(qA),Lb=v(qA,"P",{});var nI=E(Lb);Sb=w(nI,"Misc:"),nI.forEach(u),jb=y(qA),Db=v(qA,"UL",{});var sI=E(Db);Mb=v(sI,"LI",{});var eI=E(Mb);Hb=v(eI,"A",{href:!0,rel:!0});var tI=E(Hb);$b=w(tI,"Understanding hoisting in JavaScript"),tI.forEach(u),Nb=w(eI," by "),Rb=v(eI,"A",{href:!0,rel:!0});var oI=E(Rb);Fb=w(oI,"Mabishi Wakio"),oI.forEach(u),eI.forEach(u),Ub=y(sI),Bb=v(sI,"LI",{});var rI=E(Bb);qb=v(rI,"A",{href:!0,rel:!0});var cI=E(qb);Wb=w(cI,"Currying in JS"),cI.forEach(u),zb=w(rI," by "),Jb=v(rI,"A",{href:!0,rel:!0});var pI=E(Jb);Gb=w(pI,"Shirsh Zibbu"),pI.forEach(u),rI.forEach(u),_b=y(sI),Xb=v(sI,"LI",{});var iI=E(Xb);Yb=v(iI,"A",{href:!0,rel:!0});var lI=E(Yb);Vb=w(lI,"TC39 Proposals"),lI.forEach(u),iI.forEach(u),Zb=y(sI),Kb=v(sI,"LI",{});var uI=E(Kb);Qb=v(uI,"A",{href:!0,rel:!0});var hI=E(Qb);aE=w(hI,"TC39 Process Document"),hI.forEach(u),uI.forEach(u),sI.forEach(u),qA.forEach(u),this.h()},h(){b(o,"href","#overview"),b(p,"href","#fork-the-babel"),b(x,"href","#crash-course-on-parsing-code-to-ast"),b(C,"href","#our-custom-babel-parser"),b(S,"href","#a-new-token"),b(M,"href","#the-new-parser"),b(N,"href","#how-parsing-works"),b(B,"href","#this-eat-this-match-this-next"),b(z,"href","#our-babel-plugin"),b(X,"href","#assume-currying-has-been-declared-in-the-global-scope"),b(Z,"href","#use-the-babel-helpers"),b(aa,"href","#closing-note"),b(ea,"href","#editor-s-note"),b(ra,"href","#further-reading"),b(e,"class","sitemap"),b(e,"id","sitemap"),b(e,"role","navigation"),b(e,"aria-label","Table of Contents"),b(ua,"href","/step-by-step-guide-for-writing-a-babel-transformation"),b(ga,"href","#overview"),b(ga,"id","overview"),b(xa,"class","language-js"),b(Ca,"href","https://en.wikipedia.org/wiki/Currying"),b(Ca,"rel","nofollow"),b(Da,"href","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*"),b(Da,"rel","nofollow"),b(Za,"href","https://scotch.io/tutorials/javascript-functional-programming-explained-partial-application-and-currying"),b(Za,"rel","nofollow"),b(cn,"class","language-js"),b(An,"href","https://medium.com/google-developers/exploring-es7-decorators-76ecb65fb841"),b(An,"rel","nofollow"),b(Vn,"href","#fork-the-babel"),b(Vn,"id","fork-the-babel"),b(ns,"href","https://github.com/babel/babel"),b(ns,"rel","nofollow"),b(cs,"type","image/webp"),b(cs,"srcset","c7ce0c4a376bfa80.webp"),b(ps,"type","image/jpeg"),b(ps,"srcset","c7ce0c4a376bfa80.png"),b(is,"title","Forking babel"),b(is,"alt","forking babel"),b(is,"data-src","c7ce0c4a376bfa80.png"),b(is,"loading","lazy"),b(ms,"href","https://github.com/tanhauhau/babel/blob/master/CONTRIBUTING.md#setup"),b(ms,"rel","nofollow"),b(vs,"class","language-sh"),b(Us,"class","language-yml"),b(Xs,"href","#crash-course-on-parsing-code-to-ast"),b(Xs,"id","crash-course-on-parsing-code-to-ast"),b(Qs,"href","https://twitter.com/vaidehijoshi"),b(Qs,"rel","nofollow"),b(se,"href","https://medium.com/basecs/leveling-up-ones-parsing-game-with-asts-d7a6fc2400ff"),b(se,"rel","nofollow"),b(Me,"href","https://www.ecma-international.org/ecma-262/10.0/index.html#Title"),b(Me,"rel","nofollow"),b(Ue,"href","https://twitter.com/munificentbob?lang=en"),b(Ue,"rel","nofollow"),b(We,"href","https://craftinginterpreters.com/introduction.html"),b(We,"rel","nofollow"),b(Qe,"href","#our-custom-babel-parser"),b(Qe,"id","our-custom-babel-parser"),b(pt,"class","language-null"),b(Lt,"href","https://en.wikipedia.org/wiki/Test-driven_development"),b(Lt,"rel","nofollow"),b(Mt,"class","language-js"),b(Jt,"class","language-sh"),b(Zt,"class","language-sh"),b(fo,"href","https://github.com/tanhauhau/babel/blob/feat/curry-function/packages/babel-parser/src/parser/expression.js#L2092"),b(fo,"rel","nofollow"),b(Oo,"class","language-js"),b($o,"class","language-js"),b(Yo,"href","#thiseat-thismatch-thisnext"),b(Rr,"href","#a-new-token"),b(Rr,"id","a-new-token"),b(Wr,"href","https://github.com/tanhauhau/babel/blob/feat/curry-function/packages/babel-parser/src/tokenizer/types.js#L86"),b(Wr,"rel","nofollow"),b(Vr,"class","language-js"),b(ic,"href","https://github.com/tanhauhau/babel/blob/da0af5fd99a9b747370a2240df3abf2940b9649c/packages/babel-parser/src/tokenizer/index.js#L790"),b(ic,"rel","nofollow"),b(Sc,"class","language-js"),b($c,"class","language-js"),A(Uc,"transform","scaleX(-1)"),A(Uc,"display","inline-block"),b(Jc,"href","#the-new-parser"),b(Jc,"id","the-new-parser"),b(Vc,"href","https://lihautan.com/babel-ast-explorer/#?eyJiYWJlbFNldHRpbmdzIjp7InZlcnNpb24iOiI3LjYuMCJ9LCJ0cmVlU2V0dGluZ3MiOnsiaGlkZUVtcHR5Ijp0cnVlLCJoaWRlTG9jYXRpb24iOnRydWUsImhpZGVUeXBlIjp0cnVlfSwiY29kZSI6ImZ1bmN0aW9uICogZm9vKCkge30ifQ=="),b(Vc,"rel","nofollow"),b(sp,"type","image/webp"),b(sp,"srcset","9d2558b42a6dcb5a.webp"),b(ep,"type","image/jpeg"),b(ep,"srcset","9d2558b42a6dcb5a.png"),b(tp,"title","AST for generator function"),b(tp,"alt","AST for generator function"),b(tp,"data-src","9d2558b42a6dcb5a.png"),b(tp,"loading","lazy"),b(Ip,"type","image/webp"),b(Ip,"srcset","75a034faffa701aa.webp"),b(Cp,"type","image/jpeg"),b(Cp,"srcset","75a034faffa701aa.png"),b(Op,"title","AST for curry function"),b(Op,"alt","AST for curry function"),b(Op,"data-src","75a034faffa701aa.png"),b(Op,"loading","lazy"),b(Bp,"href","https://github.com/tanhauhau/babel/blob/da0af5fd99a9b747370a2240df3abf2940b9649c/packages/babel-parser/src/parser/statement.js#L1030"),b(Bp,"rel","nofollow"),b(Xp,"class","language-js"),b(Qp,"class","language-sh"),b(ii,"href","#how-parsing-works"),b(ii,"id","how-parsing-works"),b(wi,"class","language-null"),b(hl,"class","language-null"),b(gl,"class","language-null"),b(yl,"class","language-js"),b(Fl,"href","https://craftinginterpreters.com/parsing-expressions.html#recursive-descent-parsing"),b(Fl,"rel","nofollow"),b(Jl,"href","#this-eat-this-match-this-next"),b(Jl,"id","this-eat-this-match-this-next"),b(ph,"class","language-js"),b(kh,"href","https://craftinginterpreters.com/introduction.html"),b(kh,"rel","nofollow"),b(bh,"href","https://twitter.com/munificentbob?lang=en"),b(bh,"rel","nofollow"),b(yh,"href","https://www.udacity.com/course/compilers-theory-and-practice--ud168"),b(yh,"rel","nofollow"),b(Gh,"title","null"),b(Gh,"alt","Uploading custom parser"),b(Gh,"data-src","4325833eef29ed21.gif"),b(Gh,"loading","lazy"),b(Kh,"href","#our-babel-plugin"),b(Kh,"id","our-babel-plugin"),b(lf,"href","https://babeljs.io/docs/en/babel-parser#will-the-babel-parser-support-a-plugin-system"),b(lf,"rel","nofollow"),b(ff,"class","language-js"),b(Lf,"href","https://babeljs.io/docs/en/babel-generator"),b(Lf,"rel","nofollow"),b(Wf,"href","https://github.com/tanhauhau/babel/blob/da0af5fd99a9b747370a2240df3abf2940b9649c/packages/babel-generator/src/generators/methods.js#L82"),b(Wf,"rel","nofollow"),b(nd,"class","language-js"),b(rd,"href","https://hackernoon.com/currying-in-js-d9ddc64f162e"),b(rd,"rel","nofollow"),b(id,"href","https://twitter.com/zhirzh"),b(id,"rel","nofollow"),b(kd,"class","language-js"),b(vd,"href","https://scotch.io/tutorials/understanding-hoisting-in-javascript"),b(vd,"rel","nofollow"),b(Pd,"href","/step-by-step-guide-for-writing-a-babel-transformation"),b(Dd,"class","language-js"),b(Gd,"href","#assume-currying-has-been-declared-in-the-global-scope"),b(Gd,"id","assume-currying-has-been-declared-in-the-global-scope"),b(ik,"href","https://www.google.com/search?q=regeneratorRuntime+is+not+defined"),b(ik,"rel","nofollow"),b(Tk,"href","#use-the-babel-helpers"),b(Tk,"id","use-the-babel-helpers"),b(zk,"class","language-js"),b(Zk,"href","https://twitter.com/lihautan"),b(Zk,"rel","nofollow"),b(im,"href","https://github.com/tanhauhau/babel/blob/feat/curry-function/packages/babel-helpers/src/helpers.js"),b(im,"rel","nofollow"),b(fm,"class","language-js"),b(Dm,"class","language-js"),b(Gm,"href","#closing-note"),b(Gm,"id","closing-note"),b(Qm,"href","/step-by-step-guide-for-writing-a-babel-transformation"),b(hg,"href","#further-reading"),b(bg,"href","https://github.com/tc39/proposals"),b(bg,"rel","nofollow"),b(wg,"href","https://tc39.es/process-document/"),b(wg,"rel","nofollow"),b(Cg,"href","https://github.com/tanhauhau/babel/compare/3a7b6e1c2...b793efad1"),b(Cg,"rel","nofollow"),b(Hg,"href","#editor-s-note"),b(Hg,"id","editor-s-note"),b(Kg,"href","https://twitter.com/lihautan"),b(Kg,"rel","nofollow"),b(tb,"href","#further-reading"),b(tb,"id","further-reading"),b(hb,"href","https://craftinginterpreters.com/introduction.html"),b(hb,"rel","nofollow"),b(kb,"href","https://twitter.com/munificentbob?lang=en"),b(kb,"rel","nofollow"),b(Eb,"href","https://www.udacity.com/course/compilers-theory-and-practice--ud168"),b(Eb,"rel","nofollow"),b(Tb,"href","https://medium.com/basecs/leveling-up-ones-parsing-game-with-asts-d7a6fc2400ff"),b(Tb,"rel","nofollow"),b(Cb,"href","https://twitter.com/vaidehijoshi"),b(Cb,"rel","nofollow"),b(Hb,"href","https://scotch.io/tutorials/understanding-hoisting-in-javascript"),b(Hb,"rel","nofollow"),b(Rb,"href","https://twitter.com/emabishi"),b(Rb,"rel","nofollow"),b(qb,"href","https://hackernoon.com/currying-in-js-d9ddc64f162e"),b(qb,"rel","nofollow"),b(Jb,"href","https://twitter.com/zhirzh"),b(Jb,"rel","nofollow"),b(Yb,"href","https://github.com/tc39/proposals"),b(Yb,"rel","nofollow"),b(Qb,"href","https://tc39.es/process-document/"),b(Qb,"rel","nofollow")},m(a,n){l(a,s,n),i(s,e),i(e,t),i(t,o),i(o,r),i(e,c),i(c,p),i(p,h),i(e,d),i(d,g),i(g,x),i(x,T),i(e,I),i(I,C),i(C,O),i(e,P),i(P,L),i(L,S),i(S,j),i(P,D),i(D,M),i(M,H),i(P,$),i($,N),i(N,R),i(P,F),i(F,U),i(U,B),i(B,q),i(e,W),i(W,z),i(z,J),i(e,G),i(G,_),i(_,X),i(X,Y),i(G,V),i(V,Z),i(Z,K),i(e,Q),i(Q,aa),i(aa,na),i(e,sa),i(sa,ea),i(ea,ta),i(e,oa),i(oa,ra),i(ra,ca),l(a,pa,n),l(a,ia,n),i(ia,la),i(ia,ua),i(ua,ha),i(ia,fa),l(a,da,n),l(a,ka,n),i(ka,ma),i(ma,ga),i(ga,ba),i(ka,Ea),i(ka,va),i(va,wa),i(ka,ya),i(ka,xa),xa.innerHTML='<code class="language-js"><span class="token comment">// \'@@\' makes the function &#96;foo&#96; curried</span>\n<span class="token keyword">function</span> @@ <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">return</span> a <span class="token operator">+</span> b <span class="token operator">+</span> c<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 6</span></code>',i(ka,Ta),i(ka,Aa),i(Aa,Ia),i(Aa,Ca),i(Ca,Oa),i(Aa,Pa),i(Aa,La),i(La,Sa),i(Aa,ja),i(Aa,Da),i(Da,Ma),i(Aa,Ha),i(Aa,$a),i($a,Na),i(Aa,Ra),i(Aa,Fa),i(Fa,Ua),i(Aa,Ba),i(Aa,qa),i(qa,Wa),i(Aa,za),i(Aa,Ja),i(Ja,Ga),i(Aa,_a),i(ka,Xa),i(ka,Ya),i(Ya,Va),i(Ya,Za),i(Za,Ka),i(Ya,Qa),i(Ya,an),i(an,nn),i(Ya,sn),i(Ya,en),i(en,tn),i(Ya,on),i(ka,rn),i(ka,cn),cn.innerHTML='<code class="language-js"><span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 6</span>\n\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// (n) => 1 + 2 + n</span>\n<span class="token function">bar</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 6</span></code>',i(ka,pn),i(ka,ln),i(ln,un),i(un,hn),i(un,fn),i(fn,dn),i(un,kn),i(un,mn),i(mn,gn),i(un,bn),i(un,En),i(En,vn),i(un,wn),i(un,yn),i(yn,xn),i(un,Tn),i(un,An),i(An,In),i(un,Cn),i(un,On),i(On,Pn),i(un,Ln),i(ka,Sn),i(ka,jn),i(jn,Dn),i(ka,Mn),i(ka,Hn),i(Hn,$n),i($n,Nn),i(Hn,Rn),i(Hn,Fn),i(Fn,Un),i(ka,Bn),i(ka,qn),i(qn,Wn),i(ka,zn),i(ka,Jn),i(Jn,Gn),l(a,_n,n),l(a,Xn,n),i(Xn,Yn),i(Yn,Vn),i(Vn,Zn),i(Xn,Kn),i(Xn,Qn),i(Qn,as),i(Qn,ns),i(ns,ss),i(Qn,es),i(Xn,ts),i(Xn,os),i(os,rs),i(rs,cs),i(rs,ps),i(rs,is),i(Xn,ls),i(Xn,us),i(us,hs),i(Xn,fs),i(Xn,ds),i(ds,ks),i(ds,ms),i(ms,gs),i(ds,bs),i(Xn,Es),i(Xn,vs),vs.innerHTML='<code class="language-sh">$ <span class="token function">git</span> clone https://github.com/tanhauhau/babel.git\n\n<span class="token comment"># set up</span>\n$ <span class="token builtin class-name">cd</span> babel\n$ <span class="token function">make</span> bootstrap\n$ <span class="token function">make</span> build</code>',i(Xn,ws),i(Xn,ys),i(ys,xs),i(Xn,Ts),i(Xn,As),i(As,Is),i(As,Cs),i(Cs,Os),i(As,Ps),i(As,Ls),i(Ls,Ss),i(As,js),i(As,Ds),i(Ds,Ms),i(As,Hs),i(As,$s),i($s,Ns),i(As,Rs),i(Xn,Fs),i(Xn,Us),Us.innerHTML='<code class="language-yml"><span class="token punctuation">-</span> doc\n<span class="token punctuation">-</span> packages\n  <span class="token punctuation">-</span> babel<span class="token punctuation">-</span>core\n  <span class="token punctuation">-</span> babel<span class="token punctuation">-</span>parser\n  <span class="token punctuation">-</span> babel<span class="token punctuation">-</span>plugin<span class="token punctuation">-</span>transform<span class="token punctuation">-</span>react<span class="token punctuation">-</span>jsx\n  <span class="token punctuation">-</span> <span class="token punctuation">...</span>\n<span class="token punctuation">-</span> Gulpfile.js\n<span class="token punctuation">-</span> Makefile\n<span class="token punctuation">-</span> <span class="token punctuation">...</span></code>',i(Xn,Bs),i(Xn,qs),i(qs,Ws),i(Ws,zs),l(a,Js,n),l(a,Gs,n),i(Gs,_s),i(_s,Xs),i(Xs,Ys),i(Gs,Vs),i(Gs,Zs),i(Zs,Ks),i(Zs,Qs),i(Qs,ae),i(Zs,ne),i(Zs,se),i(se,ee),i(Zs,te),i(Gs,oe),i(Gs,re),i(re,ce),i(Gs,pe),i(Gs,ie),i(ie,le),i(le,ue),i(le,he),i(he,fe),i(le,de),i(le,ke),i(ke,me),i(ie,ge),i(ie,be),i(be,Ee),i(be,ve),i(ve,we),i(be,ye),i(be,xe),i(xe,Te),i(be,Ae),i(be,Ie),i(Ie,Ce),i(ie,Oe),i(ie,Pe),i(Pe,Le),i(Pe,Se),i(Se,je),i(Pe,De),i(Pe,Me),i(Me,He),i(Pe,$e),i(Gs,Ne),i(Gs,Re),i(Re,Fe),i(Re,Ue),i(Ue,Be),i(Re,qe),i(Re,We),i(We,ze),i(Re,Je),i(Gs,Ge),i(Gs,_e),i(_e,Xe),i(Xe,Ye),l(a,Ve,n),l(a,Ze,n),i(Ze,Ke),i(Ke,Qe),i(Qe,at),i(Ze,nt),i(Ze,st),i(st,et),i(st,tt),i(tt,ot),i(st,rt),i(Ze,ct),i(Ze,pt),pt.innerHTML='<code class="language-">- src/\n  - tokenizer/\n  - parser/\n  - plugins/\n    - jsx/\n    - typescript/\n    - flow/\n    - ...\n- test/</code>',i(Ze,it),i(Ze,lt),i(lt,ut),i(lt,ht),i(ht,ft),i(lt,dt),i(lt,kt),i(kt,mt),i(lt,gt),i(lt,bt),i(bt,Et),i(lt,vt),i(lt,wt),i(wt,yt),i(lt,xt),i(lt,Tt),i(Tt,At),i(lt,It),i(Ze,Ct),i(Ze,Ot),i(Ot,Pt),i(Ot,Lt),i(Lt,St),i(Ot,jt),i(Ze,Dt),i(Ze,Mt),Mt.innerHTML='<code class="language-js"><span class="token comment">// filename: packages/babel-parser/test/curry-function.js</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> parse <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">\'../lib\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">getParser</span><span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">parse</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> sourceType<span class="token punctuation">:</span> <span class="token string">\'module\'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">\'curry function syntax\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">\'should parse\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">getParser</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">function @@ foo() &#123;&#125;</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchSnapshot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>',i(Ze,Ht),i(Ze,$t),i($t,Nt),i($t,Rt),i(Rt,Ft),i($t,Ut),i($t,Bt),i(Bt,qt),i($t,Wt),i(Ze,zt),i(Ze,Jt),Jt.innerHTML='<code class="language-sh">SyntaxError: Unexpected token <span class="token punctuation">(</span><span class="token number">1</span>:9<span class="token punctuation">)</span>\n\nat Parser.raise <span class="token punctuation">(</span>packages/babel-parser/src/parser/location.js:39:63<span class="token punctuation">)</span>\nat Parser.raise <span class="token punctuation">[</span>as unexpected<span class="token punctuation">]</span> <span class="token punctuation">(</span>packages/babel-parser/src/parser/util.js:133:16<span class="token punctuation">)</span>\nat Parser.unexpected <span class="token punctuation">[</span>as parseIdentifierName<span class="token punctuation">]</span> <span class="token punctuation">(</span>packages/babel-parser/src/parser/expression.js:2090:18<span class="token punctuation">)</span>\nat Parser.parseIdentifierName <span class="token punctuation">[</span>as parseIdentifier<span class="token punctuation">]</span> <span class="token punctuation">(</span>packages/babel-parser/src/parser/expression.js:2052:23<span class="token punctuation">)</span>\nat Parser.parseIdentifier <span class="token punctuation">(</span>packages/babel-parser/src/parser/statement.js:1096:52<span class="token punctuation">)</span></code>',i(Ze,Gt),i(Ze,_t),i(_t,Xt),i(Xt,Yt),i(_t,Vt),i(_t,Zt),Zt.innerHTML='<code class="language-sh"><span class="token assign-left variable">BABEL_ENV</span><span class="token operator">=</span>test node_modules/.bin/jest -u packages/babel-parser/test/curry-function.js</code>',i(Ze,Kt),i(Ze,Qt),i(Qt,ao),i(Qt,no),i(no,so),i(Qt,eo),i(Ze,to),i(Ze,oo),i(oo,ro),i(oo,co),i(co,po),i(oo,io),i(Ze,lo),i(Ze,uo),i(uo,ho),i(uo,fo),i(fo,ko),i(ko,mo),i(uo,go),i(uo,bo),i(bo,Eo),i(uo,vo),i(Ze,wo),i(Ze,yo),i(yo,xo),i(yo,To),i(To,Ao),i(yo,Io),i(Ze,Co),i(Ze,Oo),Oo.innerHTML='<code class="language-js"><span class="token comment">// filename: packages/babel-parser/src/parser/expression.js</span>\n<span class="token function">parseIdentifierName</span><span class="token punctuation">(</span>pos<span class="token punctuation">:</span> number<span class="token punctuation">,</span> liberal<span class="token operator">?</span><span class="token punctuation">:</span> boolean<span class="token punctuation">)</span><span class="token punctuation">:</span> string <span class="token punctuation">&#123;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// current token</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">lookahead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// next token</span>\n    <span class="token keyword">throw</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">unexpected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(Ze,Po),i(Ze,Lo),i(Lo,So),i(Lo,jo),i(jo,Do),i(Lo,Mo),i(Ze,Ho),i(Ze,$o),$o.innerHTML='<code class="language-js">TokenType <span class="token punctuation">&#123;</span>\n  label<span class="token punctuation">:</span> <span class="token string">\'@\'</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">&#125;</span></code>',i(Ze,No),i(Ze,Ro),i(Ro,Fo),i(Ro,Uo),i(Uo,Bo),i(Ro,qo),i(Ro,Wo),i(Wo,zo),i(Ro,Jo),i(Ze,Go),i(Ze,_o),i(_o,Xo),i(_o,Yo),i(Yo,Vo),i(_o,Zo),i(Ze,Ko),i(Ze,Qo),i(Qo,ar),i(Ze,nr),i(Ze,sr),i(sr,er),i(er,tr),i(er,or),i(or,rr),i(sr,cr),i(sr,pr),i(pr,ir),i(pr,lr),i(lr,ur),i(pr,hr),i(sr,fr),i(sr,dr),i(dr,kr),i(dr,mr),i(mr,gr),i(sr,br),i(sr,Er),i(Er,vr),i(Er,wr),i(wr,yr),i(Ze,xr),i(Ze,Tr),i(Tr,Ar),i(Ze,Ir),i(Ze,Cr),i(Cr,Or),i(Cr,Pr),i(Pr,Lr),i(Cr,Sr),i(Cr,jr),i(jr,Dr),i(Cr,Mr),l(a,Hr,n),l(a,$r,n),i($r,Nr),i(Nr,Rr),i(Rr,Fr),i($r,Ur),i($r,Br),i(Br,qr),i(Br,Wr),i(Wr,zr),i(Br,Jr),i($r,Gr),i($r,_r),i(_r,Xr),i($r,Yr),i($r,Vr),Vr.innerHTML='<code class="language-js"><span class="token comment">// filename: packages/babel-parser/src/tokenizer/types.js</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> types<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">[</span>name<span class="token punctuation">:</span> string<span class="token punctuation">]</span><span class="token punctuation">:</span> TokenType <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// ...</span>\n  at<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">TokenType</span><span class="token punctuation">(</span><span class="token string">\'@\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="prism-highlight-code-line">  atat<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">TokenType</span><span class="token punctuation">(</span><span class="token string">\'@@\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>\n<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>',i($r,Zr),i($r,Kr),i(Kr,Qr),i(Kr,ac),i(ac,nc),i(Kr,sc),i(Kr,ec),i(ec,tc),i(Kr,oc),i(Kr,rc),i(rc,cc),i(Kr,pc),i(Kr,ic),i(ic,lc),i($r,uc),i($r,hc),i(hc,fc),i(fc,dc),i($r,kc),i($r,mc),i(mc,gc),i(mc,bc),i(bc,Ec),i(mc,vc),i(mc,wc),i(wc,yc),i(mc,xc),i(mc,Tc),i(Tc,Ac),i(mc,Ic),i(mc,Cc),i(Cc,Oc),i(mc,Pc),i($r,Lc),i($r,Sc),Sc.innerHTML='<code class="language-js"><span class="token comment">// filename: packages/babel-parser/src/tokenizer/index.js</span>\n\n<span class="token function">getTokenFromCode</span><span class="token punctuation">(</span>code<span class="token punctuation">:</span> number<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">switch</span> <span class="token punctuation">(</span>code<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// ...</span>\n    <span class="token keyword">case</span> charCodes<span class="token punctuation">.</span>atSign<span class="token punctuation">:</span>\n<span class="prism-highlight-code-line">      <span class="token comment">// if the next character is a &#96;@&#96;</span></span>\n<span class="prism-highlight-code-line">      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>input<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>pos <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> charCodes<span class="token punctuation">.</span>atSign<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></span>\n<span class="prism-highlight-code-line">        <span class="token comment">// create &#96;tt.atat&#96; instead</span></span>\n<span class="prism-highlight-code-line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">finishOp</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span>atat<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="prism-highlight-code-line">      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span></span>\n<span class="prism-highlight-code-line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">finishOp</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span>at<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="prism-highlight-code-line">      <span class="token punctuation">&#125;</span></span>\n<span class="prism-highlight-code-line">      <span class="token keyword">return</span><span class="token punctuation">;</span></span>\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i($r,jc),i($r,Dc),i(Dc,Mc),i($r,Hc),i($r,$c),$c.innerHTML='<code class="language-js"><span class="token comment">// current token</span>\nTokenType <span class="token punctuation">&#123;</span>\n  label<span class="token punctuation">:</span> <span class="token string">\'@@\'</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token comment">// next token</span>\nTokenType <span class="token punctuation">&#123;</span>\n  label<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">&#125;</span></code>',i($r,Nc),i($r,Rc),i(Rc,Fc),i(Rc,Uc),i(Uc,Bc),l(a,qc,n),l(a,Wc,n),i(Wc,zc),i(zc,Jc),i(Jc,Gc),i(Wc,_c),i(Wc,Xc),i(Xc,Yc),i(Xc,Vc),i(Vc,Zc),i(Xc,Kc),i(Wc,Qc),i(Wc,ap),i(ap,np),i(np,sp),i(np,ep),i(np,tp),i(Wc,op),i(Wc,rp),i(rp,cp),i(rp,pp),i(pp,ip),i(rp,lp),i(rp,up),i(up,hp),i(rp,fp),i(Wc,dp),i(Wc,kp),i(kp,mp),i(kp,gp),i(gp,bp),i(kp,Ep),i(kp,vp),i(vp,wp),i(kp,yp),i(Wc,xp),i(Wc,Tp),i(Tp,Ap),i(Ap,Ip),i(Ap,Cp),i(Ap,Op),i(Wc,Pp),i(Wc,Lp),i(Lp,Sp),i(Wc,jp),i(Wc,Dp),i(Dp,Mp),i(Dp,Hp),i(Hp,$p),i(Dp,Np),i(Dp,Rp),i(Rp,Fp),i(Dp,Up),i(Dp,Bp),i(Bp,qp),i(Dp,Wp),i(Dp,zp),i(zp,Jp),i(Dp,Gp),i(Wc,_p),i(Wc,Xp),Xp.innerHTML='<code class="language-js"><span class="token comment">// filename: packages/babel-parser/src/parser/statement.js</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">StatementParser</span> <span class="token keyword">extends</span> <span class="token class-name">ExpressionParser</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// ...</span>\n  parseFunction<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">:</span> <span class="token constant">N</span><span class="token punctuation">.</span>NormalFunction<span class="token operator">></span><span class="token punctuation">(</span>\n    node<span class="token punctuation">:</span> <span class="token constant">T</span><span class="token punctuation">,</span>\n    statement<span class="token operator">?</span><span class="token punctuation">:</span> number <span class="token operator">=</span> <span class="token constant">FUNC_NO_FLAGS</span><span class="token punctuation">,</span>\n    isAsync<span class="token operator">?</span><span class="token punctuation">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span>\n  <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token constant">T</span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// ...</span>\n    node<span class="token punctuation">.</span>generator <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span>star<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="prism-highlight-code-line">    node<span class="token punctuation">.</span>curry <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span>atat<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(Wc,Yp),i(Wc,Vp),i(Vp,Zp),i(Wc,Kp),i(Wc,Qp),Qp.innerHTML='<code class="language-sh"> PASS  packages/babel-parser/test/curry-function.js\n  curry <span class="token keyword">function</span> syntax\n    ✓ should parse <span class="token punctuation">(</span>12ms<span class="token punctuation">)</span></code>',i(Wc,ai),i(Wc,ni),i(ni,si),i(Wc,ei),i(Wc,ti),i(ti,oi),l(a,ri,n),l(a,ci,n),i(ci,pi),i(pi,ii),i(ii,li),i(ci,ui),i(ci,hi),i(hi,fi),i(hi,di),i(di,ki),i(hi,mi),i(ci,gi),i(ci,bi),i(bi,Ei),i(ci,vi),i(ci,wi),wi.innerHTML='<code class="language-">...\nExponentiationExpression -&gt; UnaryExpression\n                            UpdateExpression ** ExponentiationExpression\nMultiplicativeExpression -&gt; ExponentiationExpression\n                            MultiplicativeExpression (&quot;*&quot; or &quot;/&quot; or &quot;%&quot;) ExponentiationExpression\nAdditiveExpression       -&gt; MultiplicativeExpression\n                            AdditiveExpression + MultiplicativeExpression\n                            AdditiveExpression - MultiplicativeExpression\n...</code>',i(ci,yi),i(ci,xi),i(xi,Ti),i(xi,Ai),i(Ai,Ii),i(xi,Ci),i(ci,Oi),i(ci,Pi),i(Pi,Li),i(Li,Si),i(Li,ji),i(ji,Di),i(Li,Mi),i(Pi,Hi),i(Pi,$i),i($i,Ni),i($i,Ri),i(Ri,Fi),i($i,Ui),i($i,Bi),i(Bi,qi),i($i,Wi),i($i,zi),i(zi,Ji),i($i,Gi),i(Pi,_i),i(Pi,Xi),i(Xi,Yi),i(Xi,Vi),i(Vi,Zi),i(Xi,Ki),i(Xi,Qi),i(Qi,al),i(Xi,nl),i(Xi,sl),i(sl,el),i(Xi,tl),i(ci,ol),i(ci,rl),i(rl,cl),i(rl,pl),i(pl,il),i(rl,ll),i(ci,ul),i(ci,hl),hl.innerHTML='<code class="language-">(AdditiveExpression &quot;+&quot; 1 (MultiplicativeExpression &quot;*&quot; 2 3))</code>',i(ci,fl),i(ci,dl),i(dl,kl),i(ci,ml),i(ci,gl),gl.innerHTML='<code class="language-">(MultiplicativeExpression &quot;*&quot; (AdditiveExpression &quot;+&quot; 1 2) 3)</code>',i(ci,bl),i(ci,El),i(El,vl),i(ci,wl),i(ci,yl),yl.innerHTML='<code class="language-js"><span class="token keyword">class</span> <span class="token class-name">Parser</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// ...</span>\n  <span class="token function">parseAdditiveExpression</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">const</span> left <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">parseMultiplicativeExpression</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// if the current token is &#96;+&#96; or &#96;-&#96;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span>plus<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span>minus<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      <span class="token keyword">const</span> operator <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>type<span class="token punctuation">;</span>\n      <span class="token comment">// move on to the next token</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">nextToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> right <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">parseMultiplicativeExpression</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token comment">// create the node</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">finishNode</span><span class="token punctuation">(</span>\n        <span class="token punctuation">&#123;</span>\n          operator<span class="token punctuation">,</span>\n          left<span class="token punctuation">,</span>\n          right<span class="token punctuation">,</span>\n        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n        <span class="token string">\'BinaryExpression\'</span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>\n      <span class="token comment">// return as MultiplicativeExpression</span>\n      <span class="token keyword">return</span> left<span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(ci,xl),i(ci,Tl),i(Tl,Al),i(Al,Il),i(ci,Cl),i(ci,Ol),i(Ol,Pl),i(Ol,Ll),i(Ll,Sl),i(Ol,jl),i(Ol,Dl),i(Dl,Ml),i(Ol,Hl),i(Ol,$l),i($l,Nl),i(Ol,Rl),i(Ol,Fl),i(Fl,Ul),i(Ol,Bl),l(a,ql,n),l(a,Wl,n),i(Wl,zl),i(zl,Jl),i(Jl,Gl),i(Wl,_l),i(Wl,Xl),i(Xl,Yl),i(Xl,Vl),i(Vl,Zl),i(Xl,Kl),i(Xl,Ql),i(Ql,au),i(Xl,nu),i(Xl,su),i(su,eu),i(Xl,tu),i(Wl,ou),i(Wl,ru),i(ru,cu),i(cu,pu),i(pu,iu),i(iu,lu),i(cu,uu),i(cu,hu),i(hu,fu),i(cu,du),i(ru,ku),i(ru,mu),i(mu,gu),i(gu,bu),i(bu,Eu),i(mu,vu),i(ru,wu),i(ru,yu),i(yu,xu),i(xu,Tu),i(Tu,Au),i(yu,Iu),i(yu,Cu),i(Cu,Ou),i(yu,Pu),i(yu,Lu),i(Lu,Su),i(yu,ju),i(yu,Du),i(Du,Mu),i(yu,Hu),i(yu,$u),i($u,Nu),i(yu,Ru),i(Ru,Fu),i(Fu,Uu),i(Uu,Bu),i(Fu,qu),i(Fu,Wu),i(Wu,zu),i(Fu,Ju),i(Fu,Gu),i(Gu,_u),i(Fu,Xu),i(Fu,Yu),i(Yu,Vu),i(Fu,Zu),i(ru,Ku),i(ru,Qu),i(Qu,ah),i(ah,nh),i(nh,sh),i(Qu,eh),i(Wl,th),i(Wl,oh),i(oh,rh),i(Wl,ch),i(Wl,ph),ph.innerHTML='<code class="language-js"><span class="token comment">// filename: packages/babel-parser/src/parser/statement.js</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">StatementParser</span> <span class="token keyword">extends</span> <span class="token class-name">ExpressionParser</span> <span class="token punctuation">&#123;</span>\n  <span class="token function">parseStatementContent</span><span class="token punctuation">(</span><span class="token comment">/* ...*/</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// ...</span>\n    <span class="token comment">// NOTE: we call match to check the current token</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span>_function<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token comment">// NOTE: function statement has a higher precendence than a generic statement</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">parseFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span>\n  <span class="token punctuation">&#125;</span>\n  <span class="token comment">// ...</span>\n  <span class="token function">parseFunction</span><span class="token punctuation">(</span><span class="token comment">/* ... */</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// NOTE: we call eat to check whether the optional token exists</span>\n    node<span class="token punctuation">.</span>generator <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span>star<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="prism-highlight-code-line">    node<span class="token punctuation">.</span>curry <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">eat</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span>atat<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n    node<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">parseFunctionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(Wl,ih),i(Wl,lh),i(lh,uh),i(Wl,hh),i(Wl,fh),i(fh,dh),i(dh,kh),i(kh,mh),i(dh,gh),i(dh,bh),i(bh,Eh),i(fh,vh),i(fh,wh),i(wh,yh),i(yh,xh),i(wh,Th),i(Wl,Ah),i(Wl,Ih),i(Wl,Ch),i(Wl,Oh),i(Oh,Ph),i(Ph,Lh),i(Oh,Sh),i(Wl,jh),i(Wl,Dh),i(Dh,Mh),i(Wl,Hh),i(Wl,$h),i($h,Nh),i($h,Rh),i(Rh,Fh),i($h,Uh),i($h,Bh),i(Bh,qh),i($h,Wh),i(Wl,zh),i(Wl,Jh),i(Jh,Gh),i(Wl,_h),i(Wl,Xh),l(a,Yh,n),l(a,Vh,n),i(Vh,Zh),i(Zh,Kh),i(Kh,Qh),i(Vh,af),i(Vh,nf),i(nf,sf),i(Vh,ef),i(Vh,tf),i(tf,of),i(Vh,rf),i(Vh,cf),i(cf,pf),i(cf,lf),i(lf,uf),i(Vh,hf),i(Vh,ff),ff.innerHTML='<code class="language-js"><span class="token comment">// filename: babel-plugin-transformation-curry-function.js</span>\n<span class="token keyword">import</span> customParser <span class="token keyword">from</span> <span class="token string">\'./custom-parser\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">ourBabelPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>\n    <span class="token function">parserOverride</span><span class="token punctuation">(</span><span class="token parameter">code<span class="token punctuation">,</span> opts</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      <span class="token keyword">return</span> customParser<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> opts<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span></code>',i(Vh,df),i(Vh,kf),i(kf,mf),i(Vh,gf),i(Vh,bf),i(bf,Ef),i(bf,vf),i(vf,wf),i(Vh,yf),i(Vh,xf),i(Vh,Tf),i(Vh,Af),i(Af,If),i(Vh,Cf),i(Vh,Of),i(Of,Pf),i(Of,Lf),i(Lf,Sf),i(Of,jf),i(Of,Df),i(Df,Mf),i(Of,Hf),i(Of,$f),i($f,Nf),i(Of,Rf),i(Vh,Ff);i(Vh,Uf),i(Uf,Bf),i(Bf,qf),i(Bf,Wf),i(Wf,zf),i(Bf,Jf),i(Vh,Gf),i(Vh,_f),i(Vh,Xf),i(Vh,Yf),i(Yf,Vf),i(Yf,Zf),i(Zf,Kf),i(Yf,Qf),i(Vh,ad),i(Vh,nd),nd.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">currying</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">const</span> numParamsRequired <span class="token operator">=</span> fn<span class="token punctuation">.</span>length<span class="token punctuation">;</span>\n  <span class="token keyword">function</span> <span class="token function">curryFactory</span><span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      <span class="token keyword">const</span> newParams <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>newParams<span class="token punctuation">.</span>length <span class="token operator">>=</span> numParamsRequired<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n        <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>newParams<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span>\n      <span class="token keyword">return</span> <span class="token function">curryFactory</span><span class="token punctuation">(</span>newParams<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span>\n  <span class="token punctuation">&#125;</span>\n  <span class="token keyword">return</span> <span class="token function">curryFactory</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span></code>',i(Vh,sd),i(Vh,ed),i(ed,td),i(td,od),i(td,rd),i(rd,cd),i(td,pd),i(td,id),i(id,ld),i(Vh,ud),i(Vh,hd),i(hd,fd),i(Vh,dd),i(Vh,kd),kd.innerHTML='<code class="language-js"><span class="token comment">// from</span>\n<span class="token keyword">function</span> @@ <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">return</span> a <span class="token operator">+</span> b <span class="token operator">+</span> c<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token comment">// to</span>\n<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token function">currying</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">return</span> a <span class="token operator">+</span> b <span class="token operator">+</span> c<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>',i(Vh,md),i(Vh,gd),i(gd,bd),i(bd,Ed),i(bd,vd),i(vd,wd),i(bd,yd),i(bd,xd),i(xd,Td),i(bd,Ad),i(Vh,Id),i(Vh,Cd),i(Cd,Od),i(Cd,Pd),i(Pd,Ld),i(Cd,Sd),i(Vh,jd),i(Vh,Dd),Dd.innerHTML='<code class="language-js"><span class="token comment">// filename: babel-plugin-transformation-curry-function.js</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">ourBabelPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// ...</span>\n<span class="prism-highlight-code-line">    visitor<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span></span>\n<span class="prism-highlight-code-line">      <span class="token function">FunctionDeclaration</span><span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></span>\n<span class="prism-highlight-code-line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'curry\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>node<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></span>\n<span class="prism-highlight-code-line">          <span class="token comment">// const foo = curry(function () &#123; ... &#125;);</span></span>\n<span class="prism-highlight-code-line">          path<span class="token punctuation">.</span>node<span class="token punctuation">.</span>curry <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>\n<span class="prism-highlight-code-line">          path<span class="token punctuation">.</span><span class="token function">replaceWith</span><span class="token punctuation">(</span></span>\n<span class="prism-highlight-code-line">            t<span class="token punctuation">.</span><span class="token function">variableDeclaration</span><span class="token punctuation">(</span><span class="token string">\'const\'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span></span>\n<span class="prism-highlight-code-line">              t<span class="token punctuation">.</span><span class="token function">variableDeclarator</span><span class="token punctuation">(</span></span>\n<span class="prism-highlight-code-line">                t<span class="token punctuation">.</span><span class="token function">identifier</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'id.name\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>node<span class="token punctuation">)</span><span class="token punctuation">,</span></span>\n<span class="prism-highlight-code-line">                t<span class="token punctuation">.</span><span class="token function">callExpression</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">identifier</span><span class="token punctuation">(</span><span class="token string">\'currying\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span></span>\n<span class="prism-highlight-code-line">                  t<span class="token punctuation">.</span><span class="token function">toExpression</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span>node<span class="token punctuation">)</span><span class="token punctuation">,</span></span>\n<span class="prism-highlight-code-line">                <span class="token punctuation">]</span><span class="token punctuation">)</span></span>\n<span class="prism-highlight-code-line">              <span class="token punctuation">)</span><span class="token punctuation">,</span></span>\n<span class="prism-highlight-code-line">            <span class="token punctuation">]</span><span class="token punctuation">)</span></span>\n<span class="prism-highlight-code-line">          <span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="prism-highlight-code-line">        <span class="token punctuation">&#125;</span></span>\n<span class="prism-highlight-code-line">      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></span>\n<span class="prism-highlight-code-line">    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span></code>',i(Vh,Md),i(Vh,Hd),i(Hd,$d),i(Hd,Nd),i(Nd,Rd),i(Hd,Fd),i(Vh,Ud),i(Vh,Bd),i(Bd,qd),l(a,Wd,n),l(a,zd,n),i(zd,Jd),i(Jd,Gd),i(Gd,_d),i(Gd,Xd),i(Xd,Yd),i(Gd,Vd),i(zd,Zd),i(zd,Kd),i(Kd,Qd),i(zd,ak),i(zd,nk),i(nk,sk),i(nk,ek),i(ek,tk),i(nk,ok),i(nk,rk),i(rk,ck),i(nk,pk),i(nk,ik),i(ik,lk),i(nk,uk),i(zd,hk),i(zd,fk),i(fk,dk),i(fk,kk),i(kk,mk),i(fk,gk),i(fk,bk),i(bk,Ek),i(fk,vk),l(a,wk,n),l(a,yk,n),i(yk,xk),i(xk,Tk),i(Tk,Ak),i(Tk,Ik),i(Ik,Ck),i(yk,Ok),i(yk,Pk),i(Pk,Lk),i(Pk,Sk),i(Sk,jk),i(Pk,Dk),i(Pk,Mk),i(Mk,Hk),i(Pk,$k),i(Pk,Nk),i(Nk,Rk),i(Pk,Fk),i(Pk,Uk),i(Uk,Bk),i(Pk,qk),i(yk,Wk),i(yk,zk),zk.innerHTML='<code class="language-js"><span class="token comment">// filename: package.json</span>\n<span class="token punctuation">&#123;</span>\n  <span class="token string">"resolutions"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>\n    <span class="token string">"@babel/helpers"</span><span class="token punctuation">:</span> <span class="token string">"7.6.0--your-custom-forked-version"</span><span class="token punctuation">,</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(yk,Jk),i(yk,Gk),i(Gk,_k),i(_k,Xk),i(Xk,Yk),i(_k,Vk),i(_k,Zk),i(Zk,Kk),i(_k,Qk),i(yk,am),i(yk,nm),i(nm,sm),i(nm,em),i(em,tm),i(nm,om),i(yk,rm),i(yk,cm),i(cm,pm),i(cm,im),i(im,lm),i(cm,um),i(yk,hm),i(yk,fm),fm.innerHTML='<code class="language-js">helpers<span class="token punctuation">.</span>currying <span class="token operator">=</span> <span class="token function">helper</span><span class="token punctuation">(</span><span class="token string">"7.6.0"</span><span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">\n  export default function currying(fn) &#123;\n    const numParamsRequired = fn.length;\n    function curryFactory(params) &#123;\n      return function (...args) &#123;\n        const newParams = params.concat(args);\n        if (newParams.length >= numParamsRequired) &#123;\n          return fn(...newParams);\n        &#125;\n        return curryFactory(newParams);\n      &#125;\n    &#125;\n    return curryFactory([]);\n  &#125;\n</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">;</span></code>',i(yk,dm),i(yk,km),i(km,mm),i(km,gm),i(gm,bm),i(km,Em),i(km,vm),i(vm,wm),i(km,ym),i(km,xm),i(xm,Tm),i(km,Am),i(yk,Im),i(yk,Cm),i(Cm,Om),i(Cm,Pm),i(Pm,Lm),i(Cm,Sm),i(yk,jm),i(yk,Dm),Dm.innerHTML='<code class="language-js"><span class="token comment">// ...</span>\npath<span class="token punctuation">.</span><span class="token function">replaceWith</span><span class="token punctuation">(</span>\n  t<span class="token punctuation">.</span><span class="token function">variableDeclaration</span><span class="token punctuation">(</span><span class="token string">\'const\'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n    t<span class="token punctuation">.</span><span class="token function">variableDeclarator</span><span class="token punctuation">(</span>\n      t<span class="token punctuation">.</span><span class="token function">identifier</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'id.name\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>node<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      t<span class="token punctuation">.</span><span class="token function">callExpression</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addHelper</span><span class="token punctuation">(</span><span class="token string">"currying"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n        t<span class="token punctuation">.</span><span class="token function">toExpression</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span>node<span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">)</span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span></code>',i(yk,Mm),i(yk,Hm),i(Hm,$m),i(Hm,Nm),i(Nm,Rm),i(Hm,Fm),i(Hm,Um),i(Um,Bm),i(Hm,qm),l(a,Wm,n),l(a,zm,n),i(zm,Jm),i(Jm,Gm),i(Gm,_m),i(zm,Xm),i(zm,Ym),i(Ym,Vm),i(Ym,Zm),i(Zm,Km),i(Zm,Qm),i(Qm,ag),i(Zm,ng),i(Ym,sg),i(Ym,eg),i(eg,tg),i(Ym,og),i(Ym,rg),i(rg,cg),i(Ym,pg),i(zm,ig),i(zm,lg),i(lg,ug),i(lg,hg),i(hg,fg),i(lg,dg),i(zm,kg),i(zm,mg),i(mg,gg),i(mg,bg),i(bg,Eg),i(mg,vg),i(mg,wg),i(wg,yg),i(mg,xg),i(zm,Tg),i(zm,Ag),i(Ag,Ig),i(Ag,Cg),i(Cg,Og),i(Ag,Pg),i(zm,Lg),i(zm,Sg),l(a,jg,n),l(a,Dg,n),i(Dg,Mg),i(Mg,Hg),i(Hg,$g),i(Dg,Ng),i(Dg,Rg),i(Rg,Fg),i(Dg,Ug),i(Dg,Bg),i(Bg,qg),i(Dg,Wg),i(Dg,zg),i(zg,Jg),i(zg,Gg),i(Gg,_g),i(zg,Xg),i(Dg,Yg),i(Dg,Vg),i(Vg,Zg),i(Vg,Kg),i(Kg,Qg),i(Vg,ab),l(a,nb,n),l(a,sb,n),i(sb,eb),i(eb,tb),i(tb,ob),i(sb,rb),i(sb,cb),i(cb,pb),i(sb,ib),i(sb,lb),i(lb,ub),i(ub,hb),i(hb,fb),i(ub,db),i(ub,kb),i(kb,mb),i(lb,gb),i(lb,bb),i(bb,Eb),i(Eb,vb),i(bb,wb),i(lb,yb),i(lb,xb),i(xb,Tb),i(Tb,Ab),i(xb,Ib),i(xb,Cb),i(Cb,Ob),i(sb,Pb),i(sb,Lb),i(Lb,Sb),i(sb,jb),i(sb,Db),i(Db,Mb),i(Mb,Hb),i(Hb,$b),i(Mb,Nb),i(Mb,Rb),i(Rb,Fb),i(Db,Ub),i(Db,Bb),i(Bb,qb),i(qb,Wb),i(Bb,zb),i(Bb,Jb),i(Jb,Gb),i(Db,_b),i(Db,Xb),i(Xb,Yb),i(Yb,Vb),i(Db,Zb),i(Db,Kb),i(Kb,Qb),i(Qb,aE)},p:a,d(a){a&&u(s),a&&u(pa),a&&u(ia),a&&u(da),a&&u(ka),a&&u(_n),a&&u(Xn),a&&u(Js),a&&u(Gs),a&&u(Ve),a&&u(Ze),a&&u(Hr),a&&u($r),a&&u(qc),a&&u(Wc),a&&u(ri),a&&u(ci),a&&u(ql),a&&u(Wl),a&&u(Yh),a&&u(Vh),a&&u(Wd),a&&u(zd),a&&u(wk),a&&u(yk),a&&u(Wm),a&&u(zm),a&&u(jg),a&&u(Dg),a&&u(nb),a&&u(sb)}}}function fa(a){let s,e;const t=[da];let o={$$slots:{default:[ha]},$$scope:{ctx:a}};for(let a=0;a<t.length;a+=1)o=n(o,t[a]);return s=new ua({props:o}),{c(){z(s.$$.fragment)},l(a){J(s.$$.fragment,a)},m(a,n){G(s,a,n),e=!0},p(a,[n]){const e=0&n?function(a,n){const s={},e={},t={$$scope:1};let o=a.length;for(;o--;){const r=a[o],c=n[o];if(c){for(const a in r)a in c||(e[a]=1);for(const a in c)t[a]||(s[a]=c[a],t[a]=1);a[o]=c}else for(const a in r)t[a]=1}for(const a in e)a in s||(s[a]=void 0);return s}(t,[(o=da,"object"==typeof o&&null!==o?o:{})]):{};var o;1&n&&(e.$$scope={dirty:n,ctx:a}),s.$set(e)},i(a){e||(q(s.$$.fragment,a),e=!0)},o(a){W(s.$$.fragment,a),e=!1},d(a){_(s,a)}}}const da={title:"Creating custom JavaScript syntax with Babel",date:"2019-09-25T08:00:00Z",description:"Forking babel parser and creating your custom JavaScript syntax isn't as hard as you think.",tags:["JavaScript","babel","ast","transform"],series:"Intermediate Babel",slug:"creating-custom-javascript-syntax-with-babel",type:"blog"};class ka extends V{constructor(a){super(),Y(this,a,null,fa,r,{})}}setTimeout(()=>{new ka({target:document.querySelector("#app"),hydrate:!0});if(document.querySelector(".twitter-tweet")){const a=document.createElement("script");a.async=!0,a.src="https://platform.twitter.com/widgets.js",a.charset="utf-8",document.body.appendChild(a)}if("loading"in HTMLImageElement.prototype){document.querySelectorAll('img[loading="lazy"]').forEach(a=>{a.src=a.dataset.src})}else{const a=document.createElement("script");a.src="https://cdnjs.cloudflare.com/ajax/libs/lazysizes/5.1.2/lazysizes.min.js",document.body.appendChild(a)}},3e3);
