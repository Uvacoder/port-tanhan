function a(){}function n(a,n){for(const e in n)a[e]=n[e];return a}function e(a){return a()}function s(){return Object.create(null)}function t(a){a.forEach(e)}function o(a){return"function"==typeof a}function r(a,n){return a!=a?n==n:a!==n||a&&"object"==typeof a||"function"==typeof a}function c(a,e,s,t){return a[1]&&t?n(s.ctx.slice(),a[1](t(e))):s.ctx}function p(a,n,e,s,t,o,r){const p=function(a,n,e,s){if(a[2]&&s){const t=a[2](s(e));if(void 0===n.dirty)return t;if("object"==typeof t){const a=[],e=Math.max(n.dirty.length,t.length);for(let s=0;s<e;s+=1)a[s]=n.dirty[s]|t[s];return a}return n.dirty|t}return n.dirty}(n,s,t,o);if(p){const t=c(n,e,s,r);a.p(t,p)}}function i(a,n){a.appendChild(n)}function l(a,n,e){a.insertBefore(n,e||null)}function u(a){a.parentNode.removeChild(a)}function h(a,n){for(let e=0;e<a.length;e+=1)a[e]&&a[e].d(n)}function f(a){return document.createElement(a)}function d(a){return document.createElementNS("http://www.w3.org/2000/svg",a)}function k(a){return document.createTextNode(a)}function m(){return k(" ")}function g(){return k("")}function b(a,n,e){null==e?a.removeAttribute(n):a.getAttribute(n)!==e&&a.setAttribute(n,e)}function y(a){return Array.from(a.childNodes)}function E(a,n,e,s){for(let s=0;s<a.length;s+=1){const t=a[s];if(t.nodeName===n){let n=0;const o=[];for(;n<t.attributes.length;){const a=t.attributes[n++];e[a.name]||o.push(a.name)}for(let a=0;a<o.length;a++)t.removeAttribute(o[a]);return a.splice(s,1)[0]}}return s?d(n):f(n)}function v(a,n){for(let e=0;e<a.length;e+=1){const s=a[e];if(3===s.nodeType)return s.data=""+n,a.splice(e,1)[0]}return k(n)}function w(a){return v(a," ")}function x(a,n){n=""+n,a.wholeText!==n&&(a.data=n)}function T(a,n){a.value=null==n?"":n}function A(a,n,e,s){a.style.setProperty(n,e,s?"important":"")}class I{constructor(a=null){this.a=a,this.e=this.n=null}m(a,n,e=null){this.e||(this.e=f(n.nodeName),this.t=n,this.h(a)),this.i(e)}h(a){this.e.innerHTML=a,this.n=Array.from(this.e.childNodes)}i(a){for(let n=0;n<this.n.length;n+=1)l(this.t,this.n[n],a)}p(a){this.d(),this.h(a),this.i(this.a)}d(){this.n.forEach(u)}}let C;function O(a){C=a}function P(a){(function(){if(!C)throw new Error("Function called outside component initialization");return C})().$$.on_mount.push(a)}const L=[],S=[],j=[],D=[],M=Promise.resolve();let H=!1;function $(a){j.push(a)}let N=!1;const R=new Set;function F(){if(!N){N=!0;do{for(let a=0;a<L.length;a+=1){const n=L[a];O(n),U(n.$$)}for(L.length=0;S.length;)S.pop()();for(let a=0;a<j.length;a+=1){const n=j[a];R.has(n)||(R.add(n),n())}j.length=0}while(L.length);for(;D.length;)D.pop()();H=!1,N=!1,R.clear()}}function U(a){if(null!==a.fragment){a.update(),t(a.before_update);const n=a.dirty;a.dirty=[-1],a.fragment&&a.fragment.p(a.ctx,n),a.after_update.forEach($)}}const B=new Set;function q(a,n){a&&a.i&&(B.delete(a),a.i(n))}function W(a,n,e,s){if(a&&a.o){if(B.has(a))return;B.add(a),(void 0).c.push(()=>{B.delete(a),s&&(e&&a.d(1),s())}),a.o(n)}}function z(a){a&&a.c()}function J(a,n){a&&a.l(n)}function G(a,n,s){const{fragment:r,on_mount:c,on_destroy:p,after_update:i}=a.$$;r&&r.m(n,s),$(()=>{const n=c.map(e).filter(o);p?p.push(...n):t(n),a.$$.on_mount=[]}),i.forEach($)}function _(a,n){const e=a.$$;null!==e.fragment&&(t(e.on_destroy),e.fragment&&e.fragment.d(n),e.on_destroy=e.fragment=null,e.ctx=[])}function X(a,n){-1===a.$$.dirty[0]&&(L.push(a),H||(H=!0,M.then(F)),a.$$.dirty.fill(0)),a.$$.dirty[n/31|0]|=1<<n%31}function Y(n,e,o,r,c,p,i=[-1]){const l=C;O(n);const h=e.props||{},f=n.$$={fragment:null,ctx:null,props:p,update:a,not_equal:c,bound:s(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(l?l.$$.context:[]),callbacks:s(),dirty:i};let d=!1;if(f.ctx=o?o(n,h,(a,e,...s)=>{const t=s.length?s[0]:e;return f.ctx&&c(f.ctx[a],f.ctx[a]=t)&&(f.bound[a]&&f.bound[a](t),d&&X(n,a)),e}):[],f.update(),d=!0,t(f.before_update),f.fragment=!!r&&r(f.ctx),e.target){if(e.hydrate){const a=y(e.target);f.fragment&&f.fragment.l(a),a.forEach(u)}else f.fragment&&f.fragment.c();e.intro&&q(n.$$.fragment),G(n,e.target,e.anchor),F()}O(l)}class V{$destroy(){_(this,1),this.$destroy=a}$on(a,n){const e=this.$$.callbacks[a]||(this.$$.callbacks[a]=[]);return e.push(n),()=>{const a=e.indexOf(n);-1!==a&&e.splice(a,1)}}$set(){}}function Z(n){let e,s,t,o,r,c,p,h,g,x,T,A,I,C,O,P,L,S,j,D,M,H,$,N,R,F,U,B,q,W,z,J,G,_,X;return{c(){e=f("header"),s=f("nav"),t=f("ul"),o=f("li"),r=f("a"),c=k("Tan Li Hau"),p=m(),h=f("li"),g=f("a"),x=k("About"),T=m(),A=f("li"),I=f("a"),C=k("Writings"),O=m(),P=f("li"),L=f("a"),S=k("Talks"),j=m(),D=f("li"),M=f("a"),H=k("Notes"),$=m(),N=f("li"),R=f("a"),F=k("Newsletter"),U=m(),B=f("li"),q=f("a"),W=d("svg"),z=d("path"),J=m(),G=f("a"),_=d("svg"),X=d("path"),this.h()},l(a){e=E(a,"HEADER",{class:!0});var n=y(e);s=E(n,"NAV",{});var i=y(s);t=E(i,"UL",{class:!0});var l=y(t);o=E(l,"LI",{class:!0});var f=y(o);r=E(f,"A",{href:!0,class:!0});var d=y(r);c=v(d,"Tan Li Hau"),d.forEach(u),f.forEach(u),p=w(l),h=E(l,"LI",{class:!0});var k=y(h);g=E(k,"A",{href:!0,class:!0});var m=y(g);x=v(m,"About"),m.forEach(u),k.forEach(u),T=w(l),A=E(l,"LI",{class:!0});var b=y(A);I=E(b,"A",{href:!0,class:!0});var Y=y(I);C=v(Y,"Writings"),Y.forEach(u),b.forEach(u),O=w(l),P=E(l,"LI",{class:!0});var V=y(P);L=E(V,"A",{href:!0,class:!0});var Z=y(L);S=v(Z,"Talks"),Z.forEach(u),V.forEach(u),j=w(l),D=E(l,"LI",{class:!0});var K=y(D);M=E(K,"A",{href:!0,class:!0});var Q=y(M);H=v(Q,"Notes"),Q.forEach(u),K.forEach(u),$=w(l),N=E(l,"LI",{class:!0});var aa=y(N);R=E(aa,"A",{href:!0,class:!0});var na=y(R);F=v(na,"Newsletter"),na.forEach(u),aa.forEach(u),U=w(l),B=E(l,"LI",{class:!0});var ea=y(B);q=E(ea,"A",{"aria-label":!0,href:!0,class:!0});var sa=y(q);W=E(sa,"svg",{viewBox:!0,width:!0,height:!0,class:!0},1);var ta=y(W);z=E(ta,"path",{d:!0},1),y(z).forEach(u),ta.forEach(u),sa.forEach(u),J=w(ea),G=E(ea,"A",{"aria-label":!0,href:!0,class:!0});var oa=y(G);_=E(oa,"svg",{viewBox:!0,width:!0,height:!0,class:!0},1);var ra=y(_);X=E(ra,"path",{d:!0},1),y(X).forEach(u),ra.forEach(u),oa.forEach(u),ea.forEach(u),l.forEach(u),i.forEach(u),n.forEach(u),this.h()},h(){b(r,"href","/"),b(r,"class","svelte-f3e4uo"),b(o,"class","svelte-f3e4uo"),b(g,"href","/about"),b(g,"class","svelte-f3e4uo"),b(h,"class","svelte-f3e4uo"),b(I,"href","/blogs"),b(I,"class","svelte-f3e4uo"),b(A,"class","svelte-f3e4uo"),b(L,"href","/talks"),b(L,"class","svelte-f3e4uo"),b(P,"class","svelte-f3e4uo"),b(M,"href","/notes"),b(M,"class","svelte-f3e4uo"),b(D,"class","svelte-f3e4uo"),b(R,"href","/newsletter"),b(R,"class","svelte-f3e4uo"),b(N,"class","svelte-f3e4uo"),b(z,"d","M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66\n    10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5\n    4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"),b(W,"viewBox","0 0 24 24"),b(W,"width","1em"),b(W,"height","1em"),b(W,"class","svelte-f3e4uo"),b(q,"aria-label","Twitter account"),b(q,"href","https://twitter.com/lihautan"),b(q,"class","svelte-f3e4uo"),b(X,"d","M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0\n    0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07\n    5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65\n    5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42\n    3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"),b(_,"viewBox","0 0 24 24"),b(_,"width","1em"),b(_,"height","1em"),b(_,"class","svelte-f3e4uo"),b(G,"aria-label","Github account"),b(G,"href","https://github.com/tanhauhau"),b(G,"class","svelte-f3e4uo"),b(B,"class","social svelte-f3e4uo"),b(t,"class","svelte-f3e4uo"),b(e,"class","svelte-f3e4uo")},m(a,n){l(a,e,n),i(e,s),i(s,t),i(t,o),i(o,r),i(r,c),i(t,p),i(t,h),i(h,g),i(g,x),i(t,T),i(t,A),i(A,I),i(I,C),i(t,O),i(t,P),i(P,L),i(L,S),i(t,j),i(t,D),i(D,M),i(M,H),i(t,$),i(t,N),i(N,R),i(R,F),i(t,U),i(t,B),i(B,q),i(q,W),i(W,z),i(B,J),i(B,G),i(G,_),i(_,X)},p:a,i:a,o:a,d(a){a&&u(e)}}}class K extends V{constructor(a){super(),Y(this,a,null,Z,r,{})}}function Q(n){let e,s,t,o,r,c,p,h,d,g,x,A,I,C,O,P,L,S,j,D;return{c(){e=f("div"),s=f("h1"),t=k("Subscribe to my newsletter"),o=m(),r=f("h2"),c=k("Get the latest blog posts and project updates delivered right to your inbox"),p=m(),h=f("form"),d=f("div"),g=f("input"),x=m(),A=f("input"),C=m(),O=f("input"),P=m(),L=f("p"),S=k("Powered by Buttondown."),this.h()},l(a){e=E(a,"DIV",{class:!0});var n=y(e);s=E(n,"H1",{});var i=y(s);t=v(i,"Subscribe to my newsletter"),i.forEach(u),o=w(n),r=E(n,"H2",{class:!0});var l=y(r);c=v(l,"Get the latest blog posts and project updates delivered right to your inbox"),l.forEach(u),p=w(n),h=E(n,"FORM",{action:!0,method:!0,target:!0,onsubmit:!0,class:!0});var f=y(h);d=E(f,"DIV",{class:!0});var k=y(d);g=E(k,"INPUT",{type:!0,name:!0,id:!0,"aria-label":!0,placeholder:!0,class:!0}),x=w(k),A=E(k,"INPUT",{type:!0,value:!0,disabled:!0,class:!0}),k.forEach(u),C=w(f),O=E(f,"INPUT",{type:!0,value:!0,name:!0,class:!0}),P=w(f),L=E(f,"P",{class:!0});var m=y(L);S=v(m,"Powered by Buttondown."),m.forEach(u),f.forEach(u),n.forEach(u),this.h()},h(){b(r,"class","svelte-1k1s1co"),b(g,"type","email"),b(g,"name","email"),b(g,"id","bd-email"),b(g,"aria-label","email address"),b(g,"placeholder","youremail@example.com"),b(g,"class","svelte-1k1s1co"),b(A,"type","submit"),A.value="Subscribe",A.disabled=I=!n[0],b(A,"class","svelte-1k1s1co"),b(d,"class","form-item svelte-1k1s1co"),b(O,"type","hidden"),O.value="1",b(O,"name","embed"),b(O,"class","svelte-1k1s1co"),b(L,"class","svelte-1k1s1co"),b(h,"action","https://buttondown.email/api/emails/embed-subscribe/lihautan"),b(h,"method","post"),b(h,"target","popupwindow"),b(h,"onsubmit","window.open('https://buttondown.email/lihautan', 'popupwindow')"),b(h,"class","embeddable-buttondown-form"),b(e,"class","form svelte-1k1s1co")},m(a,u){var f,k,m,b;l(a,e,u),i(e,s),i(s,t),i(e,o),i(e,r),i(r,c),i(e,p),i(e,h),i(h,d),i(d,g),T(g,n[0]),i(d,x),i(d,A),i(h,C),i(h,O),i(h,P),i(h,L),i(L,S),j||(f=g,k="input",m=n[1],f.addEventListener(k,m,b),D=()=>f.removeEventListener(k,m,b),j=!0)},p(a,[n]){1&n&&g.value!==a[0]&&T(g,a[0]),1&n&&I!==(I=!a[0])&&(A.disabled=I)},i:a,o:a,d(a){a&&u(e),j=!1,D()}}}function aa(a,n,e){let s;return[s,function(){s=this.value,e(0,s)}]}class na extends V{constructor(a){super(),Y(this,a,aa,Q,r,{})}}function ea(a){return P(()=>(setTimeout(()=>{if(window.innerWidth>1080){const a=document.createElement("script");a.async=!0,a.type="text/javascript",a.src="//cdn.carbonads.com/carbon.js?serve=CE7ITK3E&placement=lihautancom",a.id="_carbonads_js",document.body.appendChild(a)}},5e3),()=>{try{const a=document.getElementById("carbonads");a.parentNode.removeChild(a)}catch(a){}})),[]}class sa extends V{constructor(a){super(),Y(this,a,ea,null,r,{})}}var ta="https://lihautan.com/creating-custom-javascript-syntax-with-babel/assets/hero-twitter-ebb286c0.jpg";function oa(a,n,e){const s=a.slice();return s[6]=n[e],s}function ra(a,n,e){const s=a.slice();return s[6]=n[e],s}function ca(a){let n,e;return{c(){n=f("meta"),this.h()},l(a){n=E(a,"META",{name:!0,content:!0}),this.h()},h(){b(n,"name","keywords"),b(n,"content",e=a[6])},m(a,e){l(a,n,e)},p(a,s){4&s&&e!==(e=a[6])&&b(n,"content",e)},d(a){a&&u(n)}}}function pa(a){let n,e,s=a[6]+"";return{c(){n=f("span"),e=k(s),this.h()},l(a){n=E(a,"SPAN",{class:!0});var t=y(n);e=v(t,s),t.forEach(u),this.h()},h(){b(n,"class","svelte-9tqnza")},m(a,s){l(a,n,s),i(n,e)},p(a,n){4&n&&s!==(s=a[6]+"")&&x(e,s)},d(a){a&&u(n)}}}function ia(a){let n,e,s,t,o,r,d,T,A,C,O,P,L,S,j,D,M,H,$,N,R,F,U,B,X,Y,V,Z,Q,aa,ea,ia,la,ua,ha,fa,da=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"Article",author:a[3],copyrightHolder:a[3],copyrightYear:"2020",creator:a[3],publisher:a[3],description:a[1],headline:a[0],name:a[0],inLanguage:"en"})}<\/script>`,ka=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"BreadcrumbList",description:"Breadcrumbs list",name:"Breadcrumbs",itemListElement:[{"@type":"ListItem",item:{"@id":"https://lihautan.com",name:"Homepage"},name:"Homepage",position:1},{"@type":"ListItem",item:{"@id":"https%3A%2F%2Flihautan.com%2Fcreating-custom-javascript-syntax-with-babel",name:a[0]},name:a[0],position:2}]})}<\/script>`;document.title=n=a[0]+" | Tan Li Hau";let ma=a[2],ga=[];for(let n=0;n<ma.length;n+=1)ga[n]=ca(ra(a,ma,n));U=new K({});let ba=a[2],ya=[];for(let n=0;n<ba.length;n+=1)ya[n]=pa(oa(a,ba,n));const Ea=a[5].default,va=function(a,n,e,s){if(a){const t=c(a,n,e,s);return a[0](t)}}(Ea,a,a[4],null);return la=new na({}),ha=new sa({}),{c(){e=f("meta"),s=f("meta"),t=f("meta"),o=f("meta"),r=f("meta"),d=f("meta"),T=f("meta"),A=f("meta"),C=f("meta"),O=f("meta"),P=f("meta");for(let a=0;a<ga.length;a+=1)ga[a].c();L=f("meta"),S=f("meta"),D=g(),H=g(),$=m(),N=f("a"),R=k("Skip to content"),F=m(),z(U.$$.fragment),B=m(),X=f("main"),Y=f("h1"),V=k(a[0]),Z=m();for(let a=0;a<ya.length;a+=1)ya[a].c();Q=m(),aa=f("article"),va&&va.c(),ea=m(),ia=f("footer"),z(la.$$.fragment),ua=m(),z(ha.$$.fragment),this.h()},l(n){const c=function(a,n=document.body){return Array.from(n.querySelectorAll(a))}('[data-svelte="svelte-15e3uyc"]',document.head);e=E(c,"META",{name:!0,content:!0}),s=E(c,"META",{name:!0,content:!0}),t=E(c,"META",{name:!0,content:!0}),o=E(c,"META",{name:!0,content:!0}),r=E(c,"META",{name:!0,content:!0}),d=E(c,"META",{name:!0,content:!0}),T=E(c,"META",{name:!0,content:!0}),A=E(c,"META",{name:!0,content:!0}),C=E(c,"META",{name:!0,content:!0}),O=E(c,"META",{name:!0,content:!0}),P=E(c,"META",{name:!0,content:!0});for(let a=0;a<ga.length;a+=1)ga[a].l(c);L=E(c,"META",{itemprop:!0,content:!0}),S=E(c,"META",{itemprop:!0,content:!0}),D=g(),H=g(),c.forEach(u),$=w(n),N=E(n,"A",{href:!0,class:!0});var p=y(N);R=v(p,"Skip to content"),p.forEach(u),F=w(n),J(U.$$.fragment,n),B=w(n),X=E(n,"MAIN",{id:!0,class:!0});var i=y(X);Y=E(i,"H1",{});var l=y(Y);V=v(l,a[0]),l.forEach(u),Z=w(i);for(let a=0;a<ya.length;a+=1)ya[a].l(i);Q=w(i),aa=E(i,"ARTICLE",{});var h=y(aa);va&&va.l(h),h.forEach(u),i.forEach(u),ea=w(n),ia=E(n,"FOOTER",{class:!0});var f=y(ia);J(la.$$.fragment,f),ua=w(f),J(ha.$$.fragment,f),f.forEach(u),this.h()},h(){b(e,"name","description"),b(e,"content",a[1]),b(s,"name","image"),b(s,"content",ta),b(t,"name","og:image"),b(t,"content",ta),b(o,"name","og:title"),b(o,"content",a[0]),b(r,"name","og:description"),b(r,"content",a[1]),b(d,"name","og:type"),b(d,"content","website"),b(T,"name","twitter:card"),b(T,"content","summary_large_image"),b(A,"name","twitter:creator"),b(A,"content","@lihautan"),b(C,"name","twitter:title"),b(C,"content",a[0]),b(O,"name","twitter:description"),b(O,"content",a[1]),b(P,"name","twitter:image"),b(P,"content",ta),b(L,"itemprop","url"),b(L,"content","https%3A%2F%2Flihautan.com%2Fcreating-custom-javascript-syntax-with-babel"),b(S,"itemprop","image"),b(S,"content",ta),j=new I(D),M=new I(H),b(N,"href","#content"),b(N,"class","skip svelte-9tqnza"),b(X,"id","content"),b(X,"class","blog svelte-9tqnza"),b(ia,"class","svelte-9tqnza")},m(a,n){i(document.head,e),i(document.head,s),i(document.head,t),i(document.head,o),i(document.head,r),i(document.head,d),i(document.head,T),i(document.head,A),i(document.head,C),i(document.head,O),i(document.head,P);for(let a=0;a<ga.length;a+=1)ga[a].m(document.head,null);i(document.head,L),i(document.head,S),j.m(da,document.head),i(document.head,D),M.m(ka,document.head),i(document.head,H),l(a,$,n),l(a,N,n),i(N,R),l(a,F,n),G(U,a,n),l(a,B,n),l(a,X,n),i(X,Y),i(Y,V),i(X,Z);for(let a=0;a<ya.length;a+=1)ya[a].m(X,null);i(X,Q),i(X,aa),va&&va.m(aa,null),l(a,ea,n),l(a,ia,n),G(la,ia,null),i(ia,ua),G(ha,ia,null),fa=!0},p(a,[s]){if((!fa||1&s)&&n!==(n=a[0]+" | Tan Li Hau")&&(document.title=n),(!fa||2&s)&&b(e,"content",a[1]),(!fa||1&s)&&b(o,"content",a[0]),(!fa||2&s)&&b(r,"content",a[1]),(!fa||1&s)&&b(C,"content",a[0]),(!fa||2&s)&&b(O,"content",a[1]),4&s){let n;for(ma=a[2],n=0;n<ma.length;n+=1){const e=ra(a,ma,n);ga[n]?ga[n].p(e,s):(ga[n]=ca(e),ga[n].c(),ga[n].m(L.parentNode,L))}for(;n<ga.length;n+=1)ga[n].d(1);ga.length=ma.length}if((!fa||3&s)&&da!==(da=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"Article",author:a[3],copyrightHolder:a[3],copyrightYear:"2020",creator:a[3],publisher:a[3],description:a[1],headline:a[0],name:a[0],inLanguage:"en"})}<\/script>`)&&j.p(da),(!fa||1&s)&&ka!==(ka=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"BreadcrumbList",description:"Breadcrumbs list",name:"Breadcrumbs",itemListElement:[{"@type":"ListItem",item:{"@id":"https://lihautan.com",name:"Homepage"},name:"Homepage",position:1},{"@type":"ListItem",item:{"@id":"https%3A%2F%2Flihautan.com%2Fcreating-custom-javascript-syntax-with-babel",name:a[0]},name:a[0],position:2}]})}<\/script>`)&&M.p(ka),(!fa||1&s)&&x(V,a[0]),4&s){let n;for(ba=a[2],n=0;n<ba.length;n+=1){const e=oa(a,ba,n);ya[n]?ya[n].p(e,s):(ya[n]=pa(e),ya[n].c(),ya[n].m(X,Q))}for(;n<ya.length;n+=1)ya[n].d(1);ya.length=ba.length}va&&va.p&&16&s&&p(va,Ea,a,a[4],s,null,null)},i(a){fa||(q(U.$$.fragment,a),q(va,a),q(la.$$.fragment,a),q(ha.$$.fragment,a),fa=!0)},o(a){W(U.$$.fragment,a),W(va,a),W(la.$$.fragment,a),W(ha.$$.fragment,a),fa=!1},d(a){u(e),u(s),u(t),u(o),u(r),u(d),u(T),u(A),u(C),u(O),u(P),h(ga,a),u(L),u(S),u(D),a&&j.d(),u(H),a&&M.d(),a&&u($),a&&u(N),a&&u(F),_(U,a),a&&u(B),a&&u(X),h(ya,a),va&&va.d(a),a&&u(ea),a&&u(ia),_(la),_(ha)}}}function la(a,n,e){let{title:s=""}=n,{description:t=""}=n,{tags:o=[]}=n;const r={"@type":"Person",name:"Tan Li Hau"};let{$$slots:c={},$$scope:p}=n;return a.$set=a=>{"title"in a&&e(0,s=a.title),"description"in a&&e(1,t=a.description),"tags"in a&&e(2,o=a.tags),"$$scope"in a&&e(4,p=a.$$scope)},[s,t,o,r,p,c]}class ua extends V{constructor(a){super(),Y(this,a,la,ia,r,{title:0,description:1,tags:2})}}function ha(n){let e,s,t,o,r,c,p,h,d,g,x,T,I,C,O,P,L,S,j,D,M,H,$,N,R,F,U,B,q,W,z,J,G,_,X,Y,V,Z,K,Q,aa,na,ea,sa,ta,oa,ra,ca,pa,ia,la,ua,ha,fa,da,ka,ma,ga,ba,ya,Ea,va,wa,xa,Ta,Aa,Ia,Ca,Oa,Pa,La,Sa,ja,Da,Ma,Ha,$a,Na,Ra,Fa,Ua,Ba,qa,Wa,za,Ja,Ga,_a,Xa,Ya,Va,Za,Ka,Qa,an,nn,en,sn,tn,on,rn,cn,pn,ln,un,hn,fn,dn,kn,mn,gn,bn,yn,En,vn,wn,xn,Tn,An,In,Cn,On,Pn,Ln,Sn,jn,Dn,Mn,Hn,$n,Nn,Rn,Fn,Un,Bn,qn,Wn,zn,Jn,Gn,_n,Xn,Yn,Vn,Zn,Kn,Qn,ae,ne,ee,se,te,oe,re,ce,pe,ie,le,ue,he,fe,de,ke,me,ge,be,ye,Ee,ve,we,xe,Te,Ae,Ie,Ce,Oe,Pe,Le,Se,je,De,Me,He,$e,Ne,Re,Fe,Ue,Be,qe,We,ze,Je,Ge,_e,Xe,Ye,Ve,Ze,Ke,Qe,as,ns,es,ss,ts,os,rs,cs,ps,is,ls,us,hs,fs,ds,ks,ms,gs,bs,ys,Es,vs,ws,xs,Ts,As,Is,Cs,Os,Ps,Ls,Ss,js,Ds,Ms,Hs,$s,Ns,Rs,Fs,Us,Bs,qs,Ws,zs,Js,Gs,_s,Xs,Ys,Vs,Zs,Ks,Qs,at,nt,et,st,tt,ot,rt,ct,pt,it,lt,ut,ht,ft,dt,kt,mt,gt,bt,yt,Et,vt,wt,xt,Tt,At,It,Ct,Ot,Pt,Lt,St,jt,Dt,Mt,Ht,$t,Nt,Rt,Ft,Ut,Bt,qt,Wt,zt,Jt,Gt,_t,Xt,Yt,Vt,Zt,Kt,Qt,ao,no,eo,so,to,oo,ro,co,po,io,lo,uo,ho,fo,ko,mo,go,bo,yo,Eo,vo,wo,xo,To,Ao,Io,Co,Oo,Po,Lo,So,jo,Do,Mo,Ho,$o,No,Ro,Fo,Uo,Bo,qo,Wo,zo,Jo,Go,_o,Xo,Yo,Vo,Zo,Ko,Qo,ar,nr,er,sr,tr,or,rr,cr,pr,ir,lr,ur,hr,fr,dr,kr,mr,gr,br,yr,Er,vr,wr,xr,Tr,Ar,Ir,Cr,Or,Pr,Lr,Sr,jr,Dr,Mr,Hr,$r,Nr,Rr,Fr,Ur,Br,qr,Wr,zr,Jr,Gr,_r,Xr,Yr,Vr,Zr,Kr,Qr,ac,nc,ec,sc,tc,oc,rc,cc,pc,ic,lc,uc,hc,fc,dc,kc,mc,gc,bc,yc,Ec,vc,wc,xc,Tc,Ac,Ic,Cc,Oc,Pc,Lc,Sc,jc,Dc,Mc,Hc,$c,Nc,Rc,Fc,Uc,Bc,qc,Wc,zc,Jc,Gc,_c,Xc,Yc,Vc,Zc,Kc,Qc,ap,np,ep,sp,tp,op,rp,cp,pp,ip,lp,up,hp,fp,dp,kp,mp,gp,bp,yp,Ep,vp,wp,xp,Tp,Ap,Ip,Cp,Op,Pp,Lp,Sp,jp,Dp,Mp,Hp,$p,Np,Rp,Fp,Up,Bp,qp,Wp,zp,Jp,Gp,_p,Xp,Yp,Vp,Zp,Kp,Qp,ai,ni,ei,si,ti,oi,ri,ci,pi,ii,li,ui,hi,fi,di,ki,mi,gi,bi,yi,Ei,vi,wi,xi,Ti,Ai,Ii,Ci,Oi,Pi,Li,Si,ji,Di,Mi,Hi,$i,Ni,Ri,Fi,Ui,Bi,qi,Wi,zi,Ji,Gi,_i,Xi,Yi,Vi,Zi,Ki,Qi,al,nl,el,sl,tl,ol,rl,cl,pl,il,ll,ul,hl,fl,dl,kl,ml,gl,bl,yl,El,vl,wl,xl,Tl,Al,Il,Cl,Ol,Pl,Ll,Sl,jl,Dl,Ml,Hl,$l,Nl,Rl,Fl,Ul,Bl,ql,Wl,zl,Jl,Gl,_l,Xl,Yl,Vl,Zl,Kl,Ql,au,nu,eu,su,tu,ou,ru,cu,pu,iu,lu,uu,hu,fu,du,ku,mu,gu,bu,yu,Eu,vu,wu,xu,Tu,Au,Iu,Cu,Ou,Pu,Lu,Su,ju,Du,Mu,Hu,$u,Nu,Ru,Fu,Uu,Bu,qu,Wu,zu,Ju,Gu,_u,Xu,Yu,Vu,Zu,Ku,Qu,ah,nh,eh,sh,th,oh,rh,ch,ph,ih,lh,uh,hh,fh,dh,kh,mh,gh,bh,yh,Eh,vh,wh,xh,Th,Ah,Ih,Ch,Oh,Ph,Lh,Sh,jh,Dh,Mh,Hh,$h,Nh,Rh,Fh,Uh,Bh,qh,Wh,zh,Jh,Gh,_h,Xh,Yh,Vh,Zh,Kh,Qh,af,nf,ef,sf,tf,of,rf,cf,pf,lf,uf,hf,ff,df,kf,mf,gf,bf,yf,Ef,vf,wf,xf,Tf,Af,If,Cf,Of,Pf,Lf,Sf,jf,Df,Mf,Hf,$f,Nf,Rf,Ff,Uf,Bf,qf,Wf,zf,Jf,Gf,_f,Xf,Yf,Vf,Zf,Kf,Qf,ad,nd,ed,sd,td,od,rd,cd,pd,id,ld,ud,hd,fd,dd,kd,md,gd,bd,yd,Ed,vd,wd,xd,Td,Ad,Id,Cd,Od,Pd,Ld,Sd,jd,Dd,Md,Hd,$d,Nd,Rd,Fd,Ud,Bd,qd,Wd,zd,Jd,Gd,_d,Xd,Yd,Vd,Zd,Kd,Qd,ak,nk,ek,sk,tk,ok,rk,ck,pk,ik,lk,uk,hk,fk,dk,kk,mk,gk,bk,yk,Ek,vk,wk,xk,Tk,Ak,Ik,Ck,Ok,Pk,Lk,Sk,jk,Dk,Mk,Hk,$k,Nk,Rk,Fk,Uk,Bk,qk,Wk,zk,Jk,Gk,_k,Xk,Yk,Vk,Zk,Kk,Qk,am,nm,em,sm,tm,om,rm,cm,pm,im,lm,um,hm,fm,dm,km,mm,gm,bm,ym,Em,vm,wm,xm,Tm,Am,Im,Cm,Om,Pm,Lm,Sm,jm,Dm,Mm,Hm,$m,Nm,Rm,Fm,Um,Bm,qm,Wm,zm,Jm,Gm,_m,Xm,Ym,Vm,Zm,Km,Qm,ag,ng,eg,sg,tg,og,rg,cg,pg,ig,lg,ug,hg,fg,dg,kg,mg,gg,bg,yg,Eg,vg,wg,xg,Tg,Ag,Ig,Cg,Og,Pg,Lg,Sg,jg,Dg,Mg,Hg,$g,Ng,Rg,Fg,Ug,Bg,qg,Wg,zg,Jg,Gg,_g,Xg,Yg,Vg,Zg,Kg,Qg,ab,nb,eb,sb,tb,ob,rb,cb,pb,ib,lb,ub,hb,fb,db,kb,mb,gb,bb,yb,Eb,vb,wb,xb,Tb,Ab,Ib,Cb,Ob,Pb,Lb,Sb,jb,Db,Mb,Hb,$b,Nb,Rb,Fb,Ub,Bb,qb,Wb,zb,Jb,Gb,_b,Xb,Yb,Vb,Zb,Kb,Qb,ay;return{c(){e=f("section"),s=f("ul"),t=f("li"),o=f("a"),r=k("Overview"),c=f("li"),p=f("a"),h=k("Fork the babel"),d=f("ul"),g=f("li"),x=f("a"),T=k("Crash Course on Parsing Code to AST"),I=f("li"),C=f("a"),O=k("Our custom babel parser"),P=f("ul"),L=f("li"),S=f("a"),j=k("A new token: '@@'"),D=f("li"),M=f("a"),H=k("The new parser"),$=f("li"),N=f("a"),R=k("How parsing works"),F=f("ul"),U=f("li"),B=f("a"),q=k("this.eat, this.match, this.next"),W=f("li"),z=f("a"),J=k("Our babel plugin"),G=f("ul"),_=f("li"),X=f("a"),Y=k("1. Assume  currying  has been declared in the global scope."),V=f("li"),Z=f("a"),K=k("2. Use the  @babel/helpers"),Q=f("li"),aa=f("a"),na=k("Closing Note"),ea=f("li"),sa=f("a"),ta=k("Editor's Note"),oa=f("li"),ra=f("a"),ca=k("Further Reading"),pa=m(),ia=f("p"),la=k("Following my previous post on "),ua=f("a"),ha=k("writing a custom babel transformation"),fa=k(", today I am going to show you how you can create a custom JavaScript syntax with Babel."),da=m(),ka=f("section"),ma=f("h2"),ga=f("a"),ba=k("Overview"),ya=m(),Ea=f("p"),va=k("Let me show you what we will achieve at the end of this article:"),wa=m(),xa=f("pre"),Ta=m(),Aa=f("p"),Ia=k("We are going to create a "),Ca=f("a"),Oa=k("curry function"),Pa=k(" syntax "),La=f("code"),Sa=k("@@"),ja=k(". The syntax is like the "),Da=f("a"),Ma=k("generator function"),Ha=k(", except you place "),$a=f("code"),Na=k("@@"),Ra=k(" instead of "),Fa=f("code"),Ua=k("*"),Ba=k(" in between the "),qa=f("code"),Wa=k("function"),za=k(" keyword and the function name, eg "),Ja=f("code"),Ga=k("function @@ name(arg1, arg2)"),_a=k("."),Xa=m(),Ya=f("p"),Va=k("In this example, you can have "),Za=f("a"),Ka=k("partial application"),Qa=k(" with the function "),an=f("code"),nn=k("foo"),en=k(". Calling "),sn=f("code"),tn=k("foo"),on=k(" with the number of parameters less than the arguments required will return a new function of the remaining arguments:"),rn=m(),cn=f("pre"),pn=m(),ln=f("blockquote"),un=f("p"),hn=k("The reason I choose "),fn=f("code"),dn=k("@@"),kn=k(" is that you can't have "),mn=f("code"),gn=k("@"),bn=k(" in a variable name, so "),yn=f("code"),En=k("function@@foo(){}"),vn=k(' is still a valid syntax. And the "operator" '),wn=f("code"),xn=k("@"),Tn=k(" is used for "),An=f("a"),In=k("decorator functions"),Cn=k(" but I wanted to use something entirely new, thus "),On=f("code"),Pn=k("@@"),Ln=k("."),Sn=m(),jn=f("p"),Dn=k("To achieve this, we are going to:"),Mn=m(),Hn=f("ul"),$n=f("li"),Nn=k("Fork the babel parser"),Rn=m(),Fn=f("li"),Un=k("Create a custom babel transformation plugin"),Bn=m(),qn=f("p"),Wn=k("Sounds impossible 😨?"),zn=m(),Jn=f("p"),Gn=k("Don't worry, I will guide you through every step. Hopefully, at the end of this article, you will be the babel master amongst your peers. 🤠"),_n=m(),Xn=f("section"),Yn=f("h2"),Vn=f("a"),Zn=k("Fork the babel"),Kn=m(),Qn=f("p"),ae=k("Head over to "),ne=f("a"),ee=k("babel's Github repo"),se=k(', click the "Fork" button located at the top left of the page.'),te=m(),oe=f("p"),re=f("picture"),ce=f("source"),pe=f("source"),ie=f("img"),le=m(),ue=f("p"),he=k("If this is your first time forking a popular open-source project, congratulations! 🎉"),fe=m(),de=f("p"),ke=k("Clone your forked babel to your local workspace and "),me=f("a"),ge=k("set it up"),be=k(":"),ye=m(),Ee=f("pre"),ve=m(),we=f("p"),xe=k("Meanwhile, let me briefly walk you through how the babel repository is organised."),Te=m(),Ae=f("p"),Ie=k("Babel uses a monorepo structure, all the packages, eg: "),Ce=f("code"),Oe=k("@babel/core"),Pe=k(", "),Le=f("code"),Se=k("@babel/parser"),je=k(", "),De=f("code"),Me=k("@babel/plugin-transform-react-jsx"),He=k(", etc are in the "),$e=f("code"),Ne=k("packages/"),Re=k(" folder:"),Fe=m(),Ue=f("pre"),Be=m(),qe=f("blockquote"),We=f("small"),ze=k("**Trivia:** Babel uses [Makefile](https://opensource.com/article/18/8/what-how-makefile) for automating tasks. For build task, such as `make build`, it will use [Gulp](https://gulpjs.com) as the task runner."),Je=m(),Ge=f("section"),_e=f("h3"),Xe=f("a"),Ye=k("Crash Course on Parsing Code to AST"),Ve=m(),Ze=f("p"),Ke=k("Before we proceed, if you are unfamiliar with parsers and Abstract Syntax Tree (AST), I highly recommend to checkout "),Qe=f("a"),as=k("Vaidehi Joshi"),ns=k("'s "),es=f("a"),ss=k("Leveling Up One’s Parsing Game With ASTs"),ts=k("."),os=m(),rs=f("p"),cs=k("To summarise, this is what happened when babel is parsing your code:"),ps=m(),is=f("ul"),ls=f("li"),us=k("Your code as a "),hs=f("code"),fs=k("string"),ds=k(" is a long list of characters: "),ks=f("code"),ms=k("f, u, n, c, t, i, o, n, , @, @, f, ..."),gs=m(),bs=f("li"),ys=k("The first step is called "),Es=f("strong"),vs=k("tokenization"),ws=k(", where babel scans through each character and creates "),xs=f("em"),Ts=k("tokens"),As=k(", like "),Is=f("code"),Cs=k("function, @@, foo, (, a, ..."),Os=m(),Ps=f("li"),Ls=k("The tokens then pass through a parser for "),Ss=f("strong"),js=k("Syntax analysis"),Ds=k(", where babel creates an AST based on "),Ms=f("a"),Hs=k("JavaScript language specification"),$s=k("."),Ns=m(),Rs=f("p"),Fs=k("If you want to learn more in-depth on compilers in general, "),Us=f("a"),Bs=k("Robert Nystrom"),qs=k("'s "),Ws=f("a"),zs=k("Crafting Interpreters"),Js=k(" is a gem."),Gs=m(),_s=f("blockquote"),Xs=f("small"),Ys=k("Don't get scared of by the word **compiler**, it is nothing but parsing your code and generate XXX out of it. XXX could be machine code, which is the compiler most of us have in mind; XXX could be JavaScript compatible with older browsers, which is the case for Babel."),Vs=m(),Zs=f("section"),Ks=f("h2"),Qs=f("a"),at=k("Our custom babel parser"),nt=m(),et=f("p"),st=k("The folder we are going to work on is "),tt=f("code"),ot=k("packages/babel-parser/"),rt=k(":"),ct=m(),pt=f("pre"),it=m(),lt=f("p"),ut=k("We've talked about "),ht=f("em"),ft=k("tokenization"),dt=k(" and "),kt=f("em"),mt=k("parsing"),gt=k(", now it's clear where to find the code for each process. "),bt=f("code"),yt=k("plugins/"),Et=k(" folder contains plugins that extend the base parser and add custom syntaxes, such as "),vt=f("code"),wt=k("jsx"),xt=k(" and "),Tt=f("code"),At=k("flow"),It=k("."),Ct=m(),Ot=f("p"),Pt=k("Let's do a "),Lt=f("a"),St=k("Test-driven development (TDD)"),jt=k('. I find it easier to define the test case then slowly work our way to "fix" it. It is especially true in an unfamiliar codebase, TDD allows you to "easily" point out code places you need to change.'),Dt=m(),Mt=f("pre"),Ht=m(),$t=f("p"),Nt=k("You can run "),Rt=f("code"),Ft=k('TEST_ONLY=babel-parser TEST_GREP="curry function" make test-only'),Ut=k(" to run tests for "),Bt=f("code"),qt=k("babel-parser"),Wt=k(" and see your failing case:"),zt=m(),Jt=f("pre"),Gt=m(),_t=f("blockquote"),Xt=f("small"),Yt=k("If you find scanning through all the test cases takes time, you can directly call `jest` to run the test:"),Vt=m(),Zt=f("pre"),Kt=m(),Qt=f("p"),ao=k("Our parser found 2 seemingly innocent "),no=f("code"),eo=k("@"),so=k(" tokens at a place where they shouldn't be present."),to=m(),oo=f("p"),ro=k("How do I know that? Let's start the watch mode, "),co=f("code"),po=k("make watch"),io=k(", wear our detective cap 🕵️‍ and start digging!"),lo=m(),uo=f("p"),ho=k("Tracing the stack trace, led us to "),fo=f("a"),ko=f("code"),mo=k("packages/babel-parser/src/parser/expression.js"),go=k(" where it throws "),bo=f("code"),yo=k("this.unexpected()"),Eo=k("."),vo=m(),wo=f("p"),xo=k("Let us add some "),To=f("code"),Ao=k("console.log"),Io=k(":"),Co=m(),Oo=f("pre"),Po=m(),Lo=f("p"),So=k("As you can see, both tokens are "),jo=f("code"),Do=k("@"),Mo=k(" token:"),Ho=m(),$o=f("pre"),No=m(),Ro=f("p"),Fo=k("How do I know "),Uo=f("code"),Bo=k("this.state.type"),qo=k(" and "),Wo=f("code"),zo=k("this.lookahead().type"),Jo=k(" will give me the current and the next token?"),Go=m(),_o=f("p"),Xo=k("Well, I'll explained them "),Yo=f("a"),Vo=k("later"),Zo=k("."),Ko=m(),Qo=f("p"),ar=k("Let's recap what we've done so far before we move on:"),nr=m(),er=f("ul"),sr=f("li"),tr=k("We've written a test case for "),or=f("code"),rr=k("babel-parser"),cr=m(),pr=f("li"),ir=k("We ran "),lr=f("code"),ur=k("make test-only"),hr=k(" to run the test case"),fr=m(),dr=f("li"),kr=k("We've started the watch mode via "),mr=f("code"),gr=k("make watch"),br=m(),yr=f("li"),Er=k("We've learned about parser state, and console out the current token type, "),vr=f("code"),wr=k("this.state.type"),xr=m(),Tr=f("p"),Ar=k("Here's what we are going to do next:"),Ir=m(),Cr=f("p"),Or=k("If there's 2 consecutive "),Pr=f("code"),Lr=k("@"),Sr=k(", it should not be separate tokens, it should be a "),jr=f("code"),Dr=k("@@"),Mr=k(" token, the new token we just defined for our curry function"),Hr=m(),$r=f("section"),Nr=f("h3"),Rr=f("a"),Fr=k("A new token: '@@'"),Ur=m(),Br=f("p"),qr=k("Let's first look at where a token type is defined: "),Wr=f("a"),zr=k("packages/babel-parser/src/tokenizer/types.js"),Jr=k("."),Gr=m(),_r=f("p"),Xr=k("Here you see a list of tokens, so let's add our new token definition in as well:"),Yr=m(),Vr=f("pre"),Zr=m(),Kr=f("p"),Qr=k("Next, let's find out where the token gets created during "),ac=f("em"),nc=k("tokenization"),ec=k(". A quick search on "),sc=f("code"),tc=k("tt.at"),oc=k(" within "),rc=f("code"),cc=k("babel-parser/src/tokenizer"),pc=k(" lead us to "),ic=f("a"),lc=k("packages/babel-parser/src/tokenizer/index.js"),uc=m(),hc=f("blockquote"),fc=f("small"),dc=k("Well, token types are import as `tt` throughout the babel-parser."),kc=m(),mc=f("p"),gc=k("Let's create the token "),bc=f("code"),yc=k("tt.atat"),Ec=k(" instead of "),vc=f("code"),wc=k("tt.at"),xc=k(" if there's another "),Tc=f("code"),Ac=k("@"),Ic=k(" succeed the current "),Cc=f("code"),Oc=k("@"),Pc=k(":"),Lc=m(),Sc=f("pre"),jc=m(),Dc=f("p"),Mc=k("If you run the test again, you will see that the current token and the next token has changed:"),Hc=m(),$c=f("pre"),Nc=m(),Rc=f("p"),Fc=k("Yeah! It looks good and lets move on. "),Uc=f("span"),Bc=k("🏃‍"),qc=m(),Wc=f("section"),zc=f("h3"),Jc=f("a"),Gc=k("The new parser"),_c=m(),Xc=f("p"),Yc=k("Before we move on, let's inspect how "),Vc=f("a"),Zc=k("generator functions are represented in AST"),Kc=k(":"),Qc=m(),ap=f("p"),np=f("picture"),ep=f("source"),sp=f("source"),tp=f("img"),op=m(),rp=f("p"),cp=k("As you can see, a generator function is represented by the "),pp=f("code"),ip=k("generator: true"),lp=k(" attribute of a "),up=f("code"),hp=k("FunctionDeclaration"),fp=k("."),dp=m(),kp=f("p"),mp=k("Similarly, we can add a "),gp=f("code"),bp=k("curry: true"),yp=k(" attribute of the "),Ep=f("code"),vp=k("FunctionDeclaration"),wp=k(" too if it is a curry function:"),xp=m(),Tp=f("p"),Ap=f("picture"),Ip=f("source"),Cp=f("source"),Op=f("img"),Pp=m(),Lp=f("p"),Sp=k("We have a plan now, let's implement it."),jp=m(),Dp=f("p"),Mp=k("A quick search on "),Hp=f("em"),$p=k('"FunctionDeclaration"'),Np=k(" leads us to a function called "),Rp=f("code"),Fp=k("parseFunction"),Up=k(" in "),Bp=f("a"),qp=k("packages/babel-parser/src/parser/statement.js"),Wp=k(", and here we find a line that sets the "),zp=f("code"),Jp=k("generator"),Gp=k(" attribute, let's add one more line:"),_p=m(),Xp=f("pre"),Yp=m(),Vp=f("p"),Zp=k("If you run the test again, you will be amazed that it passed!"),Kp=m(),Qp=f("pre"),ai=m(),ni=f("p"),ei=k("That's it? How did we miraculously fix it?"),si=m(),ti=f("p"),oi=k("I am going to briefly explain how parsing works, and in the process hopefully, you understood what that one-liner change did."),ri=m(),ci=f("section"),pi=f("h3"),ii=f("a"),li=k("How parsing works"),ui=m(),hi=f("p"),fi=k("With the list of tokens from the "),di=f("em"),ki=k("tokenizer"),mi=k(", the parser consumes the token one by one and constructs the AST. The parser uses the language grammar specification to decide how to use the tokens, which token to expect next."),gi=m(),bi=f("p"),yi=k("The grammar specification looks something like this:"),Ei=m(),vi=f("pre"),wi=m(),xi=f("p"),Ti=k("It explains the precedence of each expressions/statements. For example, an "),Ai=f("code"),Ii=k("AdditiveExpression"),Ci=k(" is made up of either:"),Oi=m(),Pi=f("ul"),Li=f("li"),Si=k("a "),ji=f("code"),Di=k("MultiplicativeExpression"),Mi=k(", or"),Hi=m(),$i=f("li"),Ni=k("an "),Ri=f("code"),Fi=k("AdditiveExpression"),Ui=k(" followed by "),Bi=f("code"),qi=k("+"),Wi=k(" operator token followed by "),zi=f("code"),Ji=k("MultiplicativeExpression"),Gi=k(", or"),_i=m(),Xi=f("li"),Yi=k("an "),Vi=f("code"),Zi=k("AdditiveExpression"),Ki=k(" followed by "),Qi=f("code"),al=k("-"),nl=k(" operator token followed by "),el=f("code"),sl=k("MultiplicativeExpression"),tl=k("."),ol=m(),rl=f("p"),cl=k("So if you have an expression "),pl=f("code"),il=k("1 + 2 * 3"),ll=k(", it will be like:"),ul=m(),hl=f("pre"),fl=m(),dl=f("p"),kl=k("instead of"),ml=m(),gl=f("pre"),bl=m(),yl=f("p"),El=k("With these rules, we translate them into parser code:"),vl=m(),wl=f("pre"),xl=m(),Tl=f("p"),Al=f("em"),Il=k("This is a made-up code that oversimplifies what babel have, but I hope you get the gist of it."),Cl=m(),Ol=f("p"),Pl=k("As you can see here, the parser is recursively in nature, and it goes from the lowest precedence to the highest precedence expressions/statements. Eg: "),Ll=f("code"),Sl=k("parseAdditiveExpression"),jl=k(" calls "),Dl=f("code"),Ml=k("parseMultiplicativeExpression"),Hl=k(", which in turn calls "),$l=f("code"),Nl=k("parseExponentiationExpression"),Rl=k(", which in turn calls ... . This recursive process is called the "),Fl=f("a"),Ul=k("Recursive Descent Parsing"),Bl=k("."),ql=m(),Wl=f("section"),zl=f("h4"),Jl=f("a"),Gl=k("this.eat, this.match, this.next"),_l=m(),Xl=f("p"),Yl=k("If you have noticed, in my examples above, I used some utility function, such as "),Vl=f("code"),Zl=k("this.eat"),Kl=k(", "),Ql=f("code"),au=k("this.match"),nu=k(", "),eu=f("code"),su=k("this.next"),tu=k(", etc. These are babel parser's internal functions, yet they are quite ubiquitous amongst parsers as well:"),ou=m(),ru=f("ul"),cu=f("li"),pu=f("strong"),iu=f("code"),lu=k("this.match"),uu=k(" returns a "),hu=f("code"),fu=k("boolean"),du=k(" indicating whether the current token matches the condition"),ku=m(),mu=f("li"),gu=f("strong"),bu=f("code"),yu=k("this.next"),Eu=k(" moves the token list forward to point to the next token"),vu=m(),wu=f("li"),xu=f("strong"),Tu=f("code"),Au=k("this.eat"),Iu=k(" return what "),Cu=f("code"),Ou=k("this.match"),Pu=k(" returns and if "),Lu=f("code"),Su=k("this.match"),ju=k(" returns "),Du=f("code"),Mu=k("true"),Hu=k(", will do "),$u=f("code"),Nu=k("this.next"),Ru=f("ul"),Fu=f("li"),Uu=f("code"),Bu=k("this.eat"),qu=k(" is commonly used for optional operators, like "),Wu=f("code"),zu=k("*"),Ju=k(" in generator function, "),Gu=f("code"),_u=k(";"),Xu=k(" at the end of statements, and "),Yu=f("code"),Vu=k("?"),Zu=k(" in typescript types."),Ku=m(),Qu=f("li"),ah=f("strong"),nh=f("code"),eh=k("this.lookahead"),sh=k(" get the next token without moving forward to make a decision on the current node"),th=m(),oh=f("p"),rh=k("If you take a look again the parser code we just changed, it's easier to read it in now."),ch=m(),ph=f("pre"),ih=m(),lh=f("p"),uh=k("I know I didn't do a good job explaining how a parser works. Here are some resources that I learned from, and I highly recommend them:"),hh=m(),fh=f("ul"),dh=f("li"),kh=f("a"),mh=k("Crafting Interpreters"),gh=k(" by "),bh=f("a"),yh=k("Robert Nystrom"),Eh=m(),vh=f("li"),wh=f("a"),xh=k('Free Udacity course: "Compilers: Theory and Practice"'),Th=k(", offered by Georgia Tech"),Ah=m(),Ih=f("hr"),Ch=m(),Oh=f("p"),Ph=f("strong"),Lh=k("Side Note"),Sh=k(': You might be curious how am I able to visualize the custom syntax in the Babel AST Explorer, where I showed you the new "curry" attribute in the AST.'),jh=m(),Dh=f("p"),Mh=k("That's because I've added a new feature in the Babel AST Explorer where you can upload your custom parser!"),Hh=m(),$h=f("p"),Nh=k("If you go to "),Rh=f("code"),Fh=k("packages/babel-parser/lib"),Uh=k(", you would find the compiled version of your parser and the source map. Open the drawer of the Babel AST Explorer, you will see a button to upload a custom parser. Drag the "),Bh=f("code"),qh=k("packages/babel-parser/lib/index.js"),Wh=k(" in and you will be visualizing the AST generated via your custom parser!"),zh=m(),Jh=f("p"),Gh=f("img"),_h=m(),Xh=f("hr"),Yh=m(),Vh=f("section"),Zh=f("h2"),Kh=f("a"),Qh=k("Our babel plugin"),af=m(),nf=f("p"),ef=k("With our custom babel parser done, let's move on to write our babel plugin."),sf=m(),tf=f("p"),of=k("But maybe before that, you may have some doubts on how are we going to use our custom babel parser, especially with whatever build stack we are using right now?"),rf=m(),cf=f("p"),pf=k("Well, fret not. A babel plugin can provide a custom parser, which is "),lf=f("a"),uf=k("documented on the babel website"),hf=m(),ff=f("pre"),df=m(),kf=f("p"),mf=k("Since we forked out the babel parser, all existing babel parser options or built-in plugins will still work perfectly."),gf=m(),bf=f("p"),yf=k("With this doubt out of the way, let see how we can make our curry function curryable? "),Ef=f("em"),vf=k("(not entirely sure there's such word)"),wf=m(),xf=f("hr"),Tf=m(),Af=f("p"),If=k("Before we start, if you have eagerly tried to add our plugin into your build system, you would notice that the curry function gets compiled to a normal function."),Cf=m(),Of=f("p"),Pf=k("This is because, after parsing + transformation, babel will use "),Lf=f("a"),Sf=k("@babel/generator"),jf=k(" to generate code from the transformed AST. Since the "),Df=f("code"),Mf=k("@babel/generator"),Hf=k(" has no idea about the new "),$f=f("code"),Nf=k("curry"),Rf=k(" attribute we added, it will be omitted."),Ff=m(),Uf=f("blockquote"),Bf=f("p"),qf=k("If one day curry function becomes the new JavaScript syntax, you may want to make a pull request to add one more line "),Wf=f("a"),zf=k("here"),Jf=k("!"),Gf=m(),_f=f("hr"),Xf=m(),Yf=f("p"),Vf=k("Ok, to make our function curryable, we can wrap it with a "),Zf=f("code"),Kf=k("currying"),Qf=k(" helper higher-order function:"),ad=m(),nd=f("pre"),ed=m(),sd=f("blockquote"),td=f("p"),od=k("If you want to learn how to write a currying function, you can read this "),rd=f("a");cd=k("Currying in JS"),pd=k(" by "),id=f("a"),ld=k("Shirsh Zibbu"),ud=m(),hd=f("p"),fd=k("So when we transform our curry function, we can transform it into the following:"),dd=m(),kd=f("pre"),md=m(),gd=f("blockquote"),bd=f("p"),yd=k("Let's first ignore "),Ed=f("a"),vd=k("function hoisting"),wd=k(" in JavaScript, where you can call "),xd=f("code"),Td=k("foo"),Ad=k(" before it is defined."),Id=m(),Cd=f("p"),Od=k("If you have read my "),Pd=f("a"),Ld=k("step-by-step guide on babel transformation"),Sd=k(", writing this transformation should be manageable:"),jd=m(),Dd=f("pre"),Md=m(),Hd=f("p"),$d=k("The question is how do we provide the "),Nd=f("code"),Rd=k("currying"),Fd=k(" function?"),Ud=m(),Bd=f("p"),qd=k("There are 2 ways:"),Wd=m(),zd=f("section"),Jd=f("h3"),Gd=f("a"),_d=k("1. Assume "),Xd=f("code"),Yd=k("currying"),Vd=k(" has been declared in the global scope."),Zd=m(),Kd=f("p"),Qd=k("Basically, your job is done here."),ak=m(),nk=f("p"),ek=k("If "),sk=f("code"),tk=k("currying"),ok=k(" is not defined, then when executing the compiled code, the runtime will scream out "),rk=f("em"),ck=k('"currying is not defined"'),pk=k(", just like the "),ik=f("a"),lk=k('"regeneratorRuntime is not defined"'),uk=k("."),hk=m(),fk=f("p"),dk=k("So probably you have to educate the users to install "),kk=f("code"),mk=k("currying"),gk=k(" polyfills in order to use your "),bk=f("code"),yk=k("babel-plugin-transformation-curry-function"),Ek=k("."),vk=m(),wk=f("section"),xk=f("h3"),Tk=f("a"),Ak=k("2. Use the "),Ik=f("code"),Ck=k("@babel/helpers"),Ok=m(),Pk=f("p"),Lk=k("You can add a new helper to "),Sk=f("code"),jk=k("@babel/helpers"),Dk=k(", which of course you are unlikely to merge that into the official "),Mk=f("code"),Hk=k("@babel/helpers"),$k=k(", so you would have to figure a way to make "),Nk=f("code"),Rk=k("@babel/core"),Fk=k(" to resolve to your "),Uk=f("code"),Bk=k("@babel/helpers"),qk=k(":"),Wk=m(),zk=f("pre"),Jk=m(),Gk=f("p"),_k=f("em"),Xk=f("strong"),Yk=k("Disclaimer:"),Vk=k(" I have not personally tried this, but I believe it will work. If you encountered problems trying this, "),Zk=f("a"),Kk=k("DM me"),Qk=k(", I am very happy to discuss it with you."),am=m(),nm=f("p"),em=k("Adding a new helper function into "),sm=f("code"),tm=k("@babel/helpers"),om=k(" is very easy."),rm=m(),cm=f("p"),pm=k("Head over to "),im=f("a"),lm=k("packages/babel-helpers/src/helpers.js"),um=k(" and add a new entry:"),hm=m(),fm=f("pre"),dm=m(),km=f("p"),mm=k("The helper tag function specifies the "),gm=f("code"),bm=k("@babel/core"),ym=k(" version required. The trick here is to "),Em=f("code"),vm=k("export default"),wm=k(" the "),xm=f("code"),Tm=k("currying"),Am=k(" function."),Im=m(),Cm=f("p"),Om=k("To use the helper, just call the "),Pm=f("code"),Lm=k("this.addHelper()"),Sm=k(":"),jm=m(),Dm=f("pre"),Mm=m(),Hm=f("p"),$m=k("The "),Nm=f("code"),Rm=k("this.addHelper"),Fm=k(" will inject the helper at the top of the file if needed, and returns an "),Um=f("code"),Bm=k("Identifier"),qm=k(" to the injected function."),Wm=m(),zm=f("section"),Jm=f("h2"),Gm=f("a"),_m=k("Closing Note"),Xm=m(),Ym=f("p"),Vm=k("We've seen how we can modify the babel parser function, write our own babel transform plugin "),Zm=f("em"),Km=k("(which was brief mainly because I have "),Qm=f("a"),ag=k("a detailed cover in my previous post"),ng=k(")"),eg=k(", a brief touch on "),sg=f("code"),tg=k("@babel/generator"),og=k(" and also how we can add helper functions via "),rg=f("code"),cg=k("@babel/helpers"),pg=k("."),ig=m(),lg=f("p"),ug=k("Along the way, we had a crash course on how a parser works, which I will provide the links to "),hg=f("a"),fg=k("further reading"),dg=k(" at the bottom."),kg=m(),mg=f("p"),gg=k("The steps we've gone through above is similar to part of the "),bg=f("a"),yg=k("TC39 proposal"),Eg=m(),vg=f("a"),wg=k("process"),xg=k(" when defining a new JavaScript specification. When proposing a new specification, the champion of the proposal usually write polyfills or forked out babel to write proof-of-concept demos. As you've seen, forking a parser or writing polyfills is not the hardest part of the process, but to define the problem space, plan and think through the use cases and edge cases, and gather opinions and suggestions from the community. To this end, I am grateful to the proposal champion, for their effort in pushing the JavaScript language forward."),Tg=m(),Ag=f("p"),Ig=k("Finally, if you want to see the code we've done so far in a full picture, you can "),Cg=f("a"),Og=k("check it out from Github"),Pg=k("."),Lg=m(),Sg=f("hr"),jg=m(),Dg=f("section"),Mg=f("h2"),Hg=f("a"),$g=k("Editor's Note"),Ng=m(),Rg=f("p"),Fg=k("I've worked on the babel repository for a while, yet I've never added a new syntax to the babel parser before. Most of my contributions were just fixing bugs and specs compliance feature."),Ug=m(),Bg=f("p"),qg=k("Yet this idea of creating a new syntax has been in my mind for a while. So I took the chance of writing a blog to try it out. It is an exhilarating experience to see it work as expected."),Wg=m(),zg=f("p"),Jg=k("Having the ability to manipulate the syntax of the language you are writing is invigorating. It empowers us the possibility of writing less code or more straightforward code and shifts that complexity to compile time. Just as how "),Gg=f("code"),_g=k("async-await"),Xg=k(" solves the callback hell and promise-chaining hell."),Yg=m(),Vg=f("p"),Zg=k("If this article inspires you to some great idea, and you wish to discuss it with somebody, you are always more than welcome to reach out to me through "),Kg=f("a"),Qg=k("Twitter"),ab=k("."),nb=m(),eb=f("section"),sb=f("h2"),tb=f("a"),ob=k("Further Reading"),rb=m(),cb=f("p"),pb=k("About compilers:"),ib=m(),lb=f("ul"),ub=f("li"),hb=f("a"),fb=k("Crafting Interpreters"),db=k(" by "),kb=f("a"),mb=k("Robert Nystrom"),gb=m(),bb=f("li"),yb=f("a"),Eb=k('Free Udacity course: "Compilers: Theory and Practice"'),vb=k(", offered by Georgia Tech"),wb=m(),xb=f("li"),Tb=f("a"),Ab=k("Leveling Up One’s Parsing Game With ASTs"),Ib=k(" by "),Cb=f("a"),Ob=k("Vaidehi Joshi"),Pb=m(),Lb=f("p"),Sb=k("Misc:"),jb=m(),Db=f("ul"),Mb=f("li"),Hb=f("a"),$b=k("Understanding hoisting in JavaScript"),Nb=k(" by "),Rb=f("a"),Fb=k("Mabishi Wakio"),Ub=m(),Bb=f("li"),qb=f("a"),Wb=k("Currying in JS"),zb=k(" by "),Jb=f("a"),Gb=k("Shirsh Zibbu"),_b=m(),Xb=f("li"),Yb=f("a"),Vb=k("TC39 Proposals"),Zb=m(),Kb=f("li"),Qb=f("a"),ay=k("TC39 Process Document"),this.h()},l(a){e=E(a,"SECTION",{});var n=y(e);s=E(n,"UL",{class:!0,id:!0,role:!0,"aria-label":!0});var i=y(s);t=E(i,"LI",{});var l=y(t);o=E(l,"A",{href:!0});var f=y(o);r=v(f,"Overview"),f.forEach(u),l.forEach(u),c=E(i,"LI",{});var k=y(c);p=E(k,"A",{href:!0});var m=y(p);h=v(m,"Fork the babel"),m.forEach(u),k.forEach(u),d=E(i,"UL",{});var b=y(d);g=E(b,"LI",{});var A=y(g);x=E(A,"A",{href:!0});var ny=y(x);T=v(ny,"Crash Course on Parsing Code to AST"),ny.forEach(u),A.forEach(u),b.forEach(u),I=E(i,"LI",{});var ey=y(I);C=E(ey,"A",{href:!0});var sy=y(C);O=v(sy,"Our custom babel parser"),sy.forEach(u),ey.forEach(u),P=E(i,"UL",{});var ty=y(P);L=E(ty,"LI",{});var oy=y(L);S=E(oy,"A",{href:!0});var ry=y(S);j=v(ry,"A new token: '@@'"),ry.forEach(u),oy.forEach(u),D=E(ty,"LI",{});var cy=y(D);M=E(cy,"A",{href:!0});var py=y(M);H=v(py,"The new parser"),py.forEach(u),cy.forEach(u),$=E(ty,"LI",{});var iy=y($);N=E(iy,"A",{href:!0});var ly=y(N);R=v(ly,"How parsing works"),ly.forEach(u),iy.forEach(u),F=E(ty,"UL",{});var uy=y(F);U=E(uy,"LI",{});var hy=y(U);B=E(hy,"A",{href:!0});var fy=y(B);q=v(fy,"this.eat, this.match, this.next"),fy.forEach(u),hy.forEach(u),uy.forEach(u),ty.forEach(u),W=E(i,"LI",{});var dy=y(W);z=E(dy,"A",{href:!0});var ky=y(z);J=v(ky,"Our babel plugin"),ky.forEach(u),dy.forEach(u),G=E(i,"UL",{});var my=y(G);_=E(my,"LI",{});var gy=y(_);X=E(gy,"A",{href:!0});var by=y(X);Y=v(by,"1. Assume  currying  has been declared in the global scope."),by.forEach(u),gy.forEach(u),V=E(my,"LI",{});var yy=y(V);Z=E(yy,"A",{href:!0});var Ey=y(Z);K=v(Ey,"2. Use the  @babel/helpers"),Ey.forEach(u),yy.forEach(u),my.forEach(u),Q=E(i,"LI",{});var vy=y(Q);aa=E(vy,"A",{href:!0});var wy=y(aa);na=v(wy,"Closing Note"),wy.forEach(u),vy.forEach(u),ea=E(i,"LI",{});var xy=y(ea);sa=E(xy,"A",{href:!0});var Ty=y(sa);ta=v(Ty,"Editor's Note"),Ty.forEach(u),xy.forEach(u),oa=E(i,"LI",{});var Ay=y(oa);ra=E(Ay,"A",{href:!0});var Iy=y(ra);ca=v(Iy,"Further Reading"),Iy.forEach(u),Ay.forEach(u),i.forEach(u),n.forEach(u),pa=w(a),ia=E(a,"P",{});var Cy=y(ia);la=v(Cy,"Following my previous post on "),ua=E(Cy,"A",{href:!0});var Oy=y(ua);ha=v(Oy,"writing a custom babel transformation"),Oy.forEach(u),fa=v(Cy,", today I am going to show you how you can create a custom JavaScript syntax with Babel."),Cy.forEach(u),da=w(a),ka=E(a,"SECTION",{});var Py=y(ka);ma=E(Py,"H2",{});var Ly=y(ma);ga=E(Ly,"A",{href:!0,id:!0});var Sy=y(ga);ba=v(Sy,"Overview"),Sy.forEach(u),Ly.forEach(u),ya=w(Py),Ea=E(Py,"P",{});var jy=y(Ea);va=v(jy,"Let me show you what we will achieve at the end of this article:"),jy.forEach(u),wa=w(Py),xa=E(Py,"PRE",{class:!0}),y(xa).forEach(u),Ta=w(Py),Aa=E(Py,"P",{});var Dy=y(Aa);Ia=v(Dy,"We are going to create a "),Ca=E(Dy,"A",{href:!0,rel:!0});var My=y(Ca);Oa=v(My,"curry function"),My.forEach(u),Pa=v(Dy," syntax "),La=E(Dy,"CODE",{});var Hy=y(La);Sa=v(Hy,"@@"),Hy.forEach(u),ja=v(Dy,". The syntax is like the "),Da=E(Dy,"A",{href:!0,rel:!0});var $y=y(Da);Ma=v($y,"generator function"),$y.forEach(u),Ha=v(Dy,", except you place "),$a=E(Dy,"CODE",{});var Ny=y($a);Na=v(Ny,"@@"),Ny.forEach(u),Ra=v(Dy," instead of "),Fa=E(Dy,"CODE",{});var Ry=y(Fa);Ua=v(Ry,"*"),Ry.forEach(u),Ba=v(Dy," in between the "),qa=E(Dy,"CODE",{});var Fy=y(qa);Wa=v(Fy,"function"),Fy.forEach(u),za=v(Dy," keyword and the function name, eg "),Ja=E(Dy,"CODE",{});var Uy=y(Ja);Ga=v(Uy,"function @@ name(arg1, arg2)"),Uy.forEach(u),_a=v(Dy,"."),Dy.forEach(u),Xa=w(Py),Ya=E(Py,"P",{});var By=y(Ya);Va=v(By,"In this example, you can have "),Za=E(By,"A",{href:!0,rel:!0});var qy=y(Za);Ka=v(qy,"partial application"),qy.forEach(u),Qa=v(By," with the function "),an=E(By,"CODE",{});var Wy=y(an);nn=v(Wy,"foo"),Wy.forEach(u),en=v(By,". Calling "),sn=E(By,"CODE",{});var zy=y(sn);tn=v(zy,"foo"),zy.forEach(u),on=v(By," with the number of parameters less than the arguments required will return a new function of the remaining arguments:"),By.forEach(u),rn=w(Py),cn=E(Py,"PRE",{class:!0}),y(cn).forEach(u),pn=w(Py),ln=E(Py,"BLOCKQUOTE",{});var Jy=y(ln);un=E(Jy,"P",{});var Gy=y(un);hn=v(Gy,"The reason I choose "),fn=E(Gy,"CODE",{});var _y=y(fn);dn=v(_y,"@@"),_y.forEach(u),kn=v(Gy," is that you can't have "),mn=E(Gy,"CODE",{});var Xy=y(mn);gn=v(Xy,"@"),Xy.forEach(u),bn=v(Gy," in a variable name, so "),yn=E(Gy,"CODE",{});var Yy=y(yn);En=v(Yy,"function@@foo(){}"),Yy.forEach(u),vn=v(Gy,' is still a valid syntax. And the "operator" '),wn=E(Gy,"CODE",{});var Vy=y(wn);xn=v(Vy,"@"),Vy.forEach(u),Tn=v(Gy," is used for "),An=E(Gy,"A",{href:!0,rel:!0});var Zy=y(An);In=v(Zy,"decorator functions"),Zy.forEach(u),Cn=v(Gy," but I wanted to use something entirely new, thus "),On=E(Gy,"CODE",{});var Ky=y(On);Pn=v(Ky,"@@"),Ky.forEach(u),Ln=v(Gy,"."),Gy.forEach(u),Jy.forEach(u),Sn=w(Py),jn=E(Py,"P",{});var Qy=y(jn);Dn=v(Qy,"To achieve this, we are going to:"),Qy.forEach(u),Mn=w(Py),Hn=E(Py,"UL",{});var aE=y(Hn);$n=E(aE,"LI",{});var nE=y($n);Nn=v(nE,"Fork the babel parser"),nE.forEach(u),Rn=w(aE),Fn=E(aE,"LI",{});var eE=y(Fn);Un=v(eE,"Create a custom babel transformation plugin"),eE.forEach(u),aE.forEach(u),Bn=w(Py),qn=E(Py,"P",{});var sE=y(qn);Wn=v(sE,"Sounds impossible 😨?"),sE.forEach(u),zn=w(Py),Jn=E(Py,"P",{});var tE=y(Jn);Gn=v(tE,"Don't worry, I will guide you through every step. Hopefully, at the end of this article, you will be the babel master amongst your peers. 🤠"),tE.forEach(u),Py.forEach(u),_n=w(a),Xn=E(a,"SECTION",{});var oE=y(Xn);Yn=E(oE,"H2",{});var rE=y(Yn);Vn=E(rE,"A",{href:!0,id:!0});var cE=y(Vn);Zn=v(cE,"Fork the babel"),cE.forEach(u),rE.forEach(u),Kn=w(oE),Qn=E(oE,"P",{});var pE=y(Qn);ae=v(pE,"Head over to "),ne=E(pE,"A",{href:!0,rel:!0});var iE=y(ne);ee=v(iE,"babel's Github repo"),iE.forEach(u),se=v(pE,', click the "Fork" button located at the top left of the page.'),pE.forEach(u),te=w(oE),oe=E(oE,"P",{});var lE=y(oe);re=E(lE,"PICTURE",{});var uE=y(re);ce=E(uE,"SOURCE",{type:!0,srcset:!0}),pe=E(uE,"SOURCE",{type:!0,srcset:!0}),ie=E(uE,"IMG",{title:!0,alt:!0,"data-src":!0,loading:!0}),uE.forEach(u),lE.forEach(u),le=w(oE),ue=E(oE,"P",{});var hE=y(ue);he=v(hE,"If this is your first time forking a popular open-source project, congratulations! 🎉"),hE.forEach(u),fe=w(oE),de=E(oE,"P",{});var fE=y(de);ke=v(fE,"Clone your forked babel to your local workspace and "),me=E(fE,"A",{href:!0,rel:!0});var dE=y(me);ge=v(dE,"set it up"),dE.forEach(u),be=v(fE,":"),fE.forEach(u),ye=w(oE),Ee=E(oE,"PRE",{class:!0}),y(Ee).forEach(u),ve=w(oE),we=E(oE,"P",{});var kE=y(we);xe=v(kE,"Meanwhile, let me briefly walk you through how the babel repository is organised."),kE.forEach(u),Te=w(oE),Ae=E(oE,"P",{});var mE=y(Ae);Ie=v(mE,"Babel uses a monorepo structure, all the packages, eg: "),Ce=E(mE,"CODE",{});var gE=y(Ce);Oe=v(gE,"@babel/core"),gE.forEach(u),Pe=v(mE,", "),Le=E(mE,"CODE",{});var bE=y(Le);Se=v(bE,"@babel/parser"),bE.forEach(u),je=v(mE,", "),De=E(mE,"CODE",{});var yE=y(De);Me=v(yE,"@babel/plugin-transform-react-jsx"),yE.forEach(u),He=v(mE,", etc are in the "),$e=E(mE,"CODE",{});var EE=y($e);Ne=v(EE,"packages/"),EE.forEach(u),Re=v(mE," folder:"),mE.forEach(u),Fe=w(oE),Ue=E(oE,"PRE",{class:!0}),y(Ue).forEach(u),Be=w(oE),qe=E(oE,"BLOCKQUOTE",{});var vE=y(qe);We=E(vE,"SMALL",{});var wE=y(We);ze=v(wE,"**Trivia:** Babel uses [Makefile](https://opensource.com/article/18/8/what-how-makefile) for automating tasks. For build task, such as `make build`, it will use [Gulp](https://gulpjs.com) as the task runner."),wE.forEach(u),vE.forEach(u),oE.forEach(u),Je=w(a),Ge=E(a,"SECTION",{});var xE=y(Ge);_e=E(xE,"H3",{});var TE=y(_e);Xe=E(TE,"A",{href:!0,id:!0});var AE=y(Xe);Ye=v(AE,"Crash Course on Parsing Code to AST"),AE.forEach(u),TE.forEach(u),Ve=w(xE),Ze=E(xE,"P",{});var IE=y(Ze);Ke=v(IE,"Before we proceed, if you are unfamiliar with parsers and Abstract Syntax Tree (AST), I highly recommend to checkout "),Qe=E(IE,"A",{href:!0,rel:!0});var CE=y(Qe);as=v(CE,"Vaidehi Joshi"),CE.forEach(u),ns=v(IE,"'s "),es=E(IE,"A",{href:!0,rel:!0});var OE=y(es);ss=v(OE,"Leveling Up One’s Parsing Game With ASTs"),OE.forEach(u),ts=v(IE,"."),IE.forEach(u),os=w(xE),rs=E(xE,"P",{});var PE=y(rs);cs=v(PE,"To summarise, this is what happened when babel is parsing your code:"),PE.forEach(u),ps=w(xE),is=E(xE,"UL",{});var LE=y(is);ls=E(LE,"LI",{});var SE=y(ls);us=v(SE,"Your code as a "),hs=E(SE,"CODE",{});var jE=y(hs);fs=v(jE,"string"),jE.forEach(u),ds=v(SE," is a long list of characters: "),ks=E(SE,"CODE",{});var DE=y(ks);ms=v(DE,"f, u, n, c, t, i, o, n, , @, @, f, ..."),DE.forEach(u),SE.forEach(u),gs=w(LE),bs=E(LE,"LI",{});var ME=y(bs);ys=v(ME,"The first step is called "),Es=E(ME,"STRONG",{});var HE=y(Es);vs=v(HE,"tokenization"),HE.forEach(u),ws=v(ME,", where babel scans through each character and creates "),xs=E(ME,"EM",{});var $E=y(xs);Ts=v($E,"tokens"),$E.forEach(u),As=v(ME,", like "),Is=E(ME,"CODE",{});var NE=y(Is);Cs=v(NE,"function, @@, foo, (, a, ..."),NE.forEach(u),ME.forEach(u),Os=w(LE),Ps=E(LE,"LI",{});var RE=y(Ps);Ls=v(RE,"The tokens then pass through a parser for "),Ss=E(RE,"STRONG",{});var FE=y(Ss);js=v(FE,"Syntax analysis"),FE.forEach(u),Ds=v(RE,", where babel creates an AST based on "),Ms=E(RE,"A",{href:!0,rel:!0});var UE=y(Ms);Hs=v(UE,"JavaScript language specification"),UE.forEach(u),$s=v(RE,"."),RE.forEach(u),LE.forEach(u),Ns=w(xE),Rs=E(xE,"P",{});var BE=y(Rs);Fs=v(BE,"If you want to learn more in-depth on compilers in general, "),Us=E(BE,"A",{href:!0,rel:!0});var qE=y(Us);Bs=v(qE,"Robert Nystrom"),qE.forEach(u),qs=v(BE,"'s "),Ws=E(BE,"A",{href:!0,rel:!0});var WE=y(Ws);zs=v(WE,"Crafting Interpreters"),WE.forEach(u),Js=v(BE," is a gem."),BE.forEach(u),Gs=w(xE),_s=E(xE,"BLOCKQUOTE",{});var zE=y(_s);Xs=E(zE,"SMALL",{});var JE=y(Xs);Ys=v(JE,"Don't get scared of by the word **compiler**, it is nothing but parsing your code and generate XXX out of it. XXX could be machine code, which is the compiler most of us have in mind; XXX could be JavaScript compatible with older browsers, which is the case for Babel."),JE.forEach(u),zE.forEach(u),xE.forEach(u),Vs=w(a),Zs=E(a,"SECTION",{});var GE=y(Zs);Ks=E(GE,"H2",{});var _E=y(Ks);Qs=E(_E,"A",{href:!0,id:!0});var XE=y(Qs);at=v(XE,"Our custom babel parser"),XE.forEach(u),_E.forEach(u),nt=w(GE),et=E(GE,"P",{});var YE=y(et);st=v(YE,"The folder we are going to work on is "),tt=E(YE,"CODE",{});var VE=y(tt);ot=v(VE,"packages/babel-parser/"),VE.forEach(u),rt=v(YE,":"),YE.forEach(u),ct=w(GE),pt=E(GE,"PRE",{class:!0}),y(pt).forEach(u),it=w(GE),lt=E(GE,"P",{});var ZE=y(lt);ut=v(ZE,"We've talked about "),ht=E(ZE,"EM",{});var KE=y(ht);ft=v(KE,"tokenization"),KE.forEach(u),dt=v(ZE," and "),kt=E(ZE,"EM",{});var QE=y(kt);mt=v(QE,"parsing"),QE.forEach(u),gt=v(ZE,", now it's clear where to find the code for each process. "),bt=E(ZE,"CODE",{});var av=y(bt);yt=v(av,"plugins/"),av.forEach(u),Et=v(ZE," folder contains plugins that extend the base parser and add custom syntaxes, such as "),vt=E(ZE,"CODE",{});var nv=y(vt);wt=v(nv,"jsx"),nv.forEach(u),xt=v(ZE," and "),Tt=E(ZE,"CODE",{});var ev=y(Tt);At=v(ev,"flow"),ev.forEach(u),It=v(ZE,"."),ZE.forEach(u),Ct=w(GE),Ot=E(GE,"P",{});var sv=y(Ot);Pt=v(sv,"Let's do a "),Lt=E(sv,"A",{href:!0,rel:!0});var tv=y(Lt);St=v(tv,"Test-driven development (TDD)"),tv.forEach(u),jt=v(sv,'. I find it easier to define the test case then slowly work our way to "fix" it. It is especially true in an unfamiliar codebase, TDD allows you to "easily" point out code places you need to change.'),sv.forEach(u),Dt=w(GE),Mt=E(GE,"PRE",{class:!0}),y(Mt).forEach(u),Ht=w(GE),$t=E(GE,"P",{});var ov=y($t);Nt=v(ov,"You can run "),Rt=E(ov,"CODE",{});var rv=y(Rt);Ft=v(rv,'TEST_ONLY=babel-parser TEST_GREP="curry function" make test-only'),rv.forEach(u),Ut=v(ov," to run tests for "),Bt=E(ov,"CODE",{});var cv=y(Bt);qt=v(cv,"babel-parser"),cv.forEach(u),Wt=v(ov," and see your failing case:"),ov.forEach(u),zt=w(GE),Jt=E(GE,"PRE",{class:!0}),y(Jt).forEach(u),Gt=w(GE),_t=E(GE,"BLOCKQUOTE",{});var pv=y(_t);Xt=E(pv,"SMALL",{});var iv=y(Xt);Yt=v(iv,"If you find scanning through all the test cases takes time, you can directly call `jest` to run the test:"),iv.forEach(u),Vt=w(pv),Zt=E(pv,"PRE",{class:!0}),y(Zt).forEach(u),pv.forEach(u),Kt=w(GE),Qt=E(GE,"P",{});var lv=y(Qt);ao=v(lv,"Our parser found 2 seemingly innocent "),no=E(lv,"CODE",{});var uv=y(no);eo=v(uv,"@"),uv.forEach(u),so=v(lv," tokens at a place where they shouldn't be present."),lv.forEach(u),to=w(GE),oo=E(GE,"P",{});var hv=y(oo);ro=v(hv,"How do I know that? Let's start the watch mode, "),co=E(hv,"CODE",{});var fv=y(co);po=v(fv,"make watch"),fv.forEach(u),io=v(hv,", wear our detective cap 🕵️‍ and start digging!"),hv.forEach(u),lo=w(GE),uo=E(GE,"P",{});var dv=y(uo);ho=v(dv,"Tracing the stack trace, led us to "),fo=E(dv,"A",{href:!0,rel:!0});var kv=y(fo);ko=E(kv,"CODE",{});var mv=y(ko);mo=v(mv,"packages/babel-parser/src/parser/expression.js"),mv.forEach(u),kv.forEach(u),go=v(dv," where it throws "),bo=E(dv,"CODE",{});var gv=y(bo);yo=v(gv,"this.unexpected()"),gv.forEach(u),Eo=v(dv,"."),dv.forEach(u),vo=w(GE),wo=E(GE,"P",{});var bv=y(wo);xo=v(bv,"Let us add some "),To=E(bv,"CODE",{});var yv=y(To);Ao=v(yv,"console.log"),yv.forEach(u),Io=v(bv,":"),bv.forEach(u),Co=w(GE),Oo=E(GE,"PRE",{class:!0}),y(Oo).forEach(u),Po=w(GE),Lo=E(GE,"P",{});var Ev=y(Lo);So=v(Ev,"As you can see, both tokens are "),jo=E(Ev,"CODE",{});var vv=y(jo);Do=v(vv,"@"),vv.forEach(u),Mo=v(Ev," token:"),Ev.forEach(u),Ho=w(GE),$o=E(GE,"PRE",{class:!0}),y($o).forEach(u),No=w(GE),Ro=E(GE,"P",{});var wv=y(Ro);Fo=v(wv,"How do I know "),Uo=E(wv,"CODE",{});var xv=y(Uo);Bo=v(xv,"this.state.type"),xv.forEach(u),qo=v(wv," and "),Wo=E(wv,"CODE",{});var Tv=y(Wo);zo=v(Tv,"this.lookahead().type"),Tv.forEach(u),Jo=v(wv," will give me the current and the next token?"),wv.forEach(u),Go=w(GE),_o=E(GE,"P",{});var Av=y(_o);Xo=v(Av,"Well, I'll explained them "),Yo=E(Av,"A",{href:!0});var Iv=y(Yo);Vo=v(Iv,"later"),Iv.forEach(u),Zo=v(Av,"."),Av.forEach(u),Ko=w(GE),Qo=E(GE,"P",{});var Cv=y(Qo);ar=v(Cv,"Let's recap what we've done so far before we move on:"),Cv.forEach(u),nr=w(GE),er=E(GE,"UL",{});var Ov=y(er);sr=E(Ov,"LI",{});var Pv=y(sr);tr=v(Pv,"We've written a test case for "),or=E(Pv,"CODE",{});var Lv=y(or);rr=v(Lv,"babel-parser"),Lv.forEach(u),Pv.forEach(u),cr=w(Ov),pr=E(Ov,"LI",{});var Sv=y(pr);ir=v(Sv,"We ran "),lr=E(Sv,"CODE",{});var jv=y(lr);ur=v(jv,"make test-only"),jv.forEach(u),hr=v(Sv," to run the test case"),Sv.forEach(u),fr=w(Ov),dr=E(Ov,"LI",{});var Dv=y(dr);kr=v(Dv,"We've started the watch mode via "),mr=E(Dv,"CODE",{});var Mv=y(mr);gr=v(Mv,"make watch"),Mv.forEach(u),Dv.forEach(u),br=w(Ov),yr=E(Ov,"LI",{});var Hv=y(yr);Er=v(Hv,"We've learned about parser state, and console out the current token type, "),vr=E(Hv,"CODE",{});var $v=y(vr);wr=v($v,"this.state.type"),$v.forEach(u),Hv.forEach(u),Ov.forEach(u),xr=w(GE),Tr=E(GE,"P",{});var Nv=y(Tr);Ar=v(Nv,"Here's what we are going to do next:"),Nv.forEach(u),Ir=w(GE),Cr=E(GE,"P",{});var Rv=y(Cr);Or=v(Rv,"If there's 2 consecutive "),Pr=E(Rv,"CODE",{});var Fv=y(Pr);Lr=v(Fv,"@"),Fv.forEach(u),Sr=v(Rv,", it should not be separate tokens, it should be a "),jr=E(Rv,"CODE",{});var Uv=y(jr);Dr=v(Uv,"@@"),Uv.forEach(u),Mr=v(Rv," token, the new token we just defined for our curry function"),Rv.forEach(u),GE.forEach(u),Hr=w(a),$r=E(a,"SECTION",{});var Bv=y($r);Nr=E(Bv,"H3",{});var qv=y(Nr);Rr=E(qv,"A",{href:!0,id:!0});var Wv=y(Rr);Fr=v(Wv,"A new token: '@@'"),Wv.forEach(u),qv.forEach(u),Ur=w(Bv),Br=E(Bv,"P",{});var zv=y(Br);qr=v(zv,"Let's first look at where a token type is defined: "),Wr=E(zv,"A",{href:!0,rel:!0});var Jv=y(Wr);zr=v(Jv,"packages/babel-parser/src/tokenizer/types.js"),Jv.forEach(u),Jr=v(zv,"."),zv.forEach(u),Gr=w(Bv),_r=E(Bv,"P",{});var Gv=y(_r);Xr=v(Gv,"Here you see a list of tokens, so let's add our new token definition in as well:"),Gv.forEach(u),Yr=w(Bv),Vr=E(Bv,"PRE",{class:!0}),y(Vr).forEach(u),Zr=w(Bv),Kr=E(Bv,"P",{});var _v=y(Kr);Qr=v(_v,"Next, let's find out where the token gets created during "),ac=E(_v,"EM",{});var Xv=y(ac);nc=v(Xv,"tokenization"),Xv.forEach(u),ec=v(_v,". A quick search on "),sc=E(_v,"CODE",{});var Yv=y(sc);tc=v(Yv,"tt.at"),Yv.forEach(u),oc=v(_v," within "),rc=E(_v,"CODE",{});var Vv=y(rc);cc=v(Vv,"babel-parser/src/tokenizer"),Vv.forEach(u),pc=v(_v," lead us to "),ic=E(_v,"A",{href:!0,rel:!0});var Zv=y(ic);lc=v(Zv,"packages/babel-parser/src/tokenizer/index.js"),Zv.forEach(u),_v.forEach(u),uc=w(Bv),hc=E(Bv,"BLOCKQUOTE",{});var Kv=y(hc);fc=E(Kv,"SMALL",{});var Qv=y(fc);dc=v(Qv,"Well, token types are import as `tt` throughout the babel-parser."),Qv.forEach(u),Kv.forEach(u),kc=w(Bv),mc=E(Bv,"P",{});var aw=y(mc);gc=v(aw,"Let's create the token "),bc=E(aw,"CODE",{});var nw=y(bc);yc=v(nw,"tt.atat"),nw.forEach(u),Ec=v(aw," instead of "),vc=E(aw,"CODE",{});var ew=y(vc);wc=v(ew,"tt.at"),ew.forEach(u),xc=v(aw," if there's another "),Tc=E(aw,"CODE",{});var sw=y(Tc);Ac=v(sw,"@"),sw.forEach(u),Ic=v(aw," succeed the current "),Cc=E(aw,"CODE",{});var tw=y(Cc);Oc=v(tw,"@"),tw.forEach(u),Pc=v(aw,":"),aw.forEach(u),Lc=w(Bv),Sc=E(Bv,"PRE",{class:!0}),y(Sc).forEach(u),jc=w(Bv),Dc=E(Bv,"P",{});var ow=y(Dc);Mc=v(ow,"If you run the test again, you will see that the current token and the next token has changed:"),ow.forEach(u),Hc=w(Bv),$c=E(Bv,"PRE",{class:!0}),y($c).forEach(u),Nc=w(Bv),Rc=E(Bv,"P",{});var rw=y(Rc);Fc=v(rw,"Yeah! It looks good and lets move on. "),Uc=E(rw,"SPAN",{style:!0});var cw=y(Uc);Bc=v(cw,"🏃‍"),cw.forEach(u),rw.forEach(u),Bv.forEach(u),qc=w(a),Wc=E(a,"SECTION",{});var pw=y(Wc);zc=E(pw,"H3",{});var iw=y(zc);Jc=E(iw,"A",{href:!0,id:!0});var lw=y(Jc);Gc=v(lw,"The new parser"),lw.forEach(u),iw.forEach(u),_c=w(pw),Xc=E(pw,"P",{});var uw=y(Xc);Yc=v(uw,"Before we move on, let's inspect how "),Vc=E(uw,"A",{href:!0,rel:!0});var hw=y(Vc);Zc=v(hw,"generator functions are represented in AST"),hw.forEach(u),Kc=v(uw,":"),uw.forEach(u),Qc=w(pw),ap=E(pw,"P",{});var fw=y(ap);np=E(fw,"PICTURE",{});var dw=y(np);ep=E(dw,"SOURCE",{type:!0,srcset:!0}),sp=E(dw,"SOURCE",{type:!0,srcset:!0}),tp=E(dw,"IMG",{title:!0,alt:!0,"data-src":!0,loading:!0}),dw.forEach(u),fw.forEach(u),op=w(pw),rp=E(pw,"P",{});var kw=y(rp);cp=v(kw,"As you can see, a generator function is represented by the "),pp=E(kw,"CODE",{});var mw=y(pp);ip=v(mw,"generator: true"),mw.forEach(u),lp=v(kw," attribute of a "),up=E(kw,"CODE",{});var gw=y(up);hp=v(gw,"FunctionDeclaration"),gw.forEach(u),fp=v(kw,"."),kw.forEach(u),dp=w(pw),kp=E(pw,"P",{});var bw=y(kp);mp=v(bw,"Similarly, we can add a "),gp=E(bw,"CODE",{});var yw=y(gp);bp=v(yw,"curry: true"),yw.forEach(u),yp=v(bw," attribute of the "),Ep=E(bw,"CODE",{});var Ew=y(Ep);vp=v(Ew,"FunctionDeclaration"),Ew.forEach(u),wp=v(bw," too if it is a curry function:"),bw.forEach(u),xp=w(pw),Tp=E(pw,"P",{});var vw=y(Tp);Ap=E(vw,"PICTURE",{});var ww=y(Ap);Ip=E(ww,"SOURCE",{type:!0,srcset:!0}),Cp=E(ww,"SOURCE",{type:!0,srcset:!0}),Op=E(ww,"IMG",{title:!0,alt:!0,"data-src":!0,loading:!0}),ww.forEach(u),vw.forEach(u),Pp=w(pw),Lp=E(pw,"P",{});var xw=y(Lp);Sp=v(xw,"We have a plan now, let's implement it."),xw.forEach(u),jp=w(pw),Dp=E(pw,"P",{});var Tw=y(Dp);Mp=v(Tw,"A quick search on "),Hp=E(Tw,"EM",{});var Aw=y(Hp);$p=v(Aw,'"FunctionDeclaration"'),Aw.forEach(u),Np=v(Tw," leads us to a function called "),Rp=E(Tw,"CODE",{});var Iw=y(Rp);Fp=v(Iw,"parseFunction"),Iw.forEach(u),Up=v(Tw," in "),Bp=E(Tw,"A",{href:!0,rel:!0});var Cw=y(Bp);qp=v(Cw,"packages/babel-parser/src/parser/statement.js"),Cw.forEach(u),Wp=v(Tw,", and here we find a line that sets the "),zp=E(Tw,"CODE",{});var Ow=y(zp);Jp=v(Ow,"generator"),Ow.forEach(u),Gp=v(Tw," attribute, let's add one more line:"),Tw.forEach(u),_p=w(pw),Xp=E(pw,"PRE",{class:!0}),y(Xp).forEach(u),Yp=w(pw),Vp=E(pw,"P",{});var Pw=y(Vp);Zp=v(Pw,"If you run the test again, you will be amazed that it passed!"),Pw.forEach(u),Kp=w(pw),Qp=E(pw,"PRE",{class:!0}),y(Qp).forEach(u),ai=w(pw),ni=E(pw,"P",{});var Lw=y(ni);ei=v(Lw,"That's it? How did we miraculously fix it?"),Lw.forEach(u),si=w(pw),ti=E(pw,"P",{});var Sw=y(ti);oi=v(Sw,"I am going to briefly explain how parsing works, and in the process hopefully, you understood what that one-liner change did."),Sw.forEach(u),pw.forEach(u),ri=w(a),ci=E(a,"SECTION",{});var jw=y(ci);pi=E(jw,"H3",{});var Dw=y(pi);ii=E(Dw,"A",{href:!0,id:!0});var Mw=y(ii);li=v(Mw,"How parsing works"),Mw.forEach(u),Dw.forEach(u),ui=w(jw),hi=E(jw,"P",{});var Hw=y(hi);fi=v(Hw,"With the list of tokens from the "),di=E(Hw,"EM",{});var $w=y(di);ki=v($w,"tokenizer"),$w.forEach(u),mi=v(Hw,", the parser consumes the token one by one and constructs the AST. The parser uses the language grammar specification to decide how to use the tokens, which token to expect next."),Hw.forEach(u),gi=w(jw),bi=E(jw,"P",{});var Nw=y(bi);yi=v(Nw,"The grammar specification looks something like this:"),Nw.forEach(u),Ei=w(jw),vi=E(jw,"PRE",{class:!0}),y(vi).forEach(u),wi=w(jw),xi=E(jw,"P",{});var Rw=y(xi);Ti=v(Rw,"It explains the precedence of each expressions/statements. For example, an "),Ai=E(Rw,"CODE",{});var Fw=y(Ai);Ii=v(Fw,"AdditiveExpression"),Fw.forEach(u),Ci=v(Rw," is made up of either:"),Rw.forEach(u),Oi=w(jw),Pi=E(jw,"UL",{});var Uw=y(Pi);Li=E(Uw,"LI",{});var Bw=y(Li);Si=v(Bw,"a "),ji=E(Bw,"CODE",{});var qw=y(ji);Di=v(qw,"MultiplicativeExpression"),qw.forEach(u),Mi=v(Bw,", or"),Bw.forEach(u),Hi=w(Uw),$i=E(Uw,"LI",{});var Ww=y($i);Ni=v(Ww,"an "),Ri=E(Ww,"CODE",{});var zw=y(Ri);Fi=v(zw,"AdditiveExpression"),zw.forEach(u),Ui=v(Ww," followed by "),Bi=E(Ww,"CODE",{});var Jw=y(Bi);qi=v(Jw,"+"),Jw.forEach(u),Wi=v(Ww," operator token followed by "),zi=E(Ww,"CODE",{});var Gw=y(zi);Ji=v(Gw,"MultiplicativeExpression"),Gw.forEach(u),Gi=v(Ww,", or"),Ww.forEach(u),_i=w(Uw),Xi=E(Uw,"LI",{});var _w=y(Xi);Yi=v(_w,"an "),Vi=E(_w,"CODE",{});var Xw=y(Vi);Zi=v(Xw,"AdditiveExpression"),Xw.forEach(u),Ki=v(_w," followed by "),Qi=E(_w,"CODE",{});var Yw=y(Qi);al=v(Yw,"-"),Yw.forEach(u),nl=v(_w," operator token followed by "),el=E(_w,"CODE",{});var Vw=y(el);sl=v(Vw,"MultiplicativeExpression"),Vw.forEach(u),tl=v(_w,"."),_w.forEach(u),Uw.forEach(u),ol=w(jw),rl=E(jw,"P",{});var Zw=y(rl);cl=v(Zw,"So if you have an expression "),pl=E(Zw,"CODE",{});var Kw=y(pl);il=v(Kw,"1 + 2 * 3"),Kw.forEach(u),ll=v(Zw,", it will be like:"),Zw.forEach(u),ul=w(jw),hl=E(jw,"PRE",{class:!0}),y(hl).forEach(u),fl=w(jw),dl=E(jw,"P",{});var Qw=y(dl);kl=v(Qw,"instead of"),Qw.forEach(u),ml=w(jw),gl=E(jw,"PRE",{class:!0}),y(gl).forEach(u),bl=w(jw),yl=E(jw,"P",{});var ax=y(yl);El=v(ax,"With these rules, we translate them into parser code:"),ax.forEach(u),vl=w(jw),wl=E(jw,"PRE",{class:!0}),y(wl).forEach(u),xl=w(jw),Tl=E(jw,"P",{});var nx=y(Tl);Al=E(nx,"EM",{});var ex=y(Al);Il=v(ex,"This is a made-up code that oversimplifies what babel have, but I hope you get the gist of it."),ex.forEach(u),nx.forEach(u),Cl=w(jw),Ol=E(jw,"P",{});var sx=y(Ol);Pl=v(sx,"As you can see here, the parser is recursively in nature, and it goes from the lowest precedence to the highest precedence expressions/statements. Eg: "),Ll=E(sx,"CODE",{});var tx=y(Ll);Sl=v(tx,"parseAdditiveExpression"),tx.forEach(u),jl=v(sx," calls "),Dl=E(sx,"CODE",{});var ox=y(Dl);Ml=v(ox,"parseMultiplicativeExpression"),ox.forEach(u),Hl=v(sx,", which in turn calls "),$l=E(sx,"CODE",{});var rx=y($l);Nl=v(rx,"parseExponentiationExpression"),rx.forEach(u),Rl=v(sx,", which in turn calls ... . This recursive process is called the "),Fl=E(sx,"A",{href:!0,rel:!0});var cx=y(Fl);Ul=v(cx,"Recursive Descent Parsing"),cx.forEach(u),Bl=v(sx,"."),sx.forEach(u),jw.forEach(u),ql=w(a),Wl=E(a,"SECTION",{});var px=y(Wl);zl=E(px,"H4",{});var ix=y(zl);Jl=E(ix,"A",{href:!0,id:!0});var lx=y(Jl);Gl=v(lx,"this.eat, this.match, this.next"),lx.forEach(u),ix.forEach(u),_l=w(px),Xl=E(px,"P",{});var ux=y(Xl);Yl=v(ux,"If you have noticed, in my examples above, I used some utility function, such as "),Vl=E(ux,"CODE",{});var hx=y(Vl);Zl=v(hx,"this.eat"),hx.forEach(u),Kl=v(ux,", "),Ql=E(ux,"CODE",{});var fx=y(Ql);au=v(fx,"this.match"),fx.forEach(u),nu=v(ux,", "),eu=E(ux,"CODE",{});var dx=y(eu);su=v(dx,"this.next"),dx.forEach(u),tu=v(ux,", etc. These are babel parser's internal functions, yet they are quite ubiquitous amongst parsers as well:"),ux.forEach(u),ou=w(px),ru=E(px,"UL",{});var kx=y(ru);cu=E(kx,"LI",{});var mx=y(cu);pu=E(mx,"STRONG",{});var gx=y(pu);iu=E(gx,"CODE",{});var bx=y(iu);lu=v(bx,"this.match"),bx.forEach(u),gx.forEach(u),uu=v(mx," returns a "),hu=E(mx,"CODE",{});var yx=y(hu);fu=v(yx,"boolean"),yx.forEach(u),du=v(mx," indicating whether the current token matches the condition"),mx.forEach(u),ku=w(kx),mu=E(kx,"LI",{});var Ex=y(mu);gu=E(Ex,"STRONG",{});var vx=y(gu);bu=E(vx,"CODE",{});var wx=y(bu);yu=v(wx,"this.next"),wx.forEach(u),vx.forEach(u),Eu=v(Ex," moves the token list forward to point to the next token"),Ex.forEach(u),vu=w(kx),wu=E(kx,"LI",{});var xx=y(wu);xu=E(xx,"STRONG",{});var Tx=y(xu);Tu=E(Tx,"CODE",{});var Ax=y(Tu);Au=v(Ax,"this.eat"),Ax.forEach(u),Tx.forEach(u),Iu=v(xx," return what "),Cu=E(xx,"CODE",{});var Ix=y(Cu);Ou=v(Ix,"this.match"),Ix.forEach(u),Pu=v(xx," returns and if "),Lu=E(xx,"CODE",{});var Cx=y(Lu);Su=v(Cx,"this.match"),Cx.forEach(u),ju=v(xx," returns "),Du=E(xx,"CODE",{});var Ox=y(Du);Mu=v(Ox,"true"),Ox.forEach(u),Hu=v(xx,", will do "),$u=E(xx,"CODE",{});var Px=y($u);Nu=v(Px,"this.next"),Px.forEach(u),Ru=E(xx,"UL",{});var Lx=y(Ru);Fu=E(Lx,"LI",{});var Sx=y(Fu);Uu=E(Sx,"CODE",{});var jx=y(Uu);Bu=v(jx,"this.eat"),jx.forEach(u),qu=v(Sx," is commonly used for optional operators, like "),Wu=E(Sx,"CODE",{});var Dx=y(Wu);zu=v(Dx,"*"),Dx.forEach(u),Ju=v(Sx," in generator function, "),Gu=E(Sx,"CODE",{});var Mx=y(Gu);_u=v(Mx,";"),Mx.forEach(u),Xu=v(Sx," at the end of statements, and "),Yu=E(Sx,"CODE",{});var Hx=y(Yu);Vu=v(Hx,"?"),Hx.forEach(u),Zu=v(Sx," in typescript types."),Sx.forEach(u),Lx.forEach(u),xx.forEach(u),Ku=w(kx),Qu=E(kx,"LI",{});var $x=y(Qu);ah=E($x,"STRONG",{});var Nx=y(ah);nh=E(Nx,"CODE",{});var Rx=y(nh);eh=v(Rx,"this.lookahead"),Rx.forEach(u),Nx.forEach(u),sh=v($x," get the next token without moving forward to make a decision on the current node"),$x.forEach(u),kx.forEach(u),th=w(px),oh=E(px,"P",{});var Fx=y(oh);rh=v(Fx,"If you take a look again the parser code we just changed, it's easier to read it in now."),Fx.forEach(u),ch=w(px),ph=E(px,"PRE",{class:!0}),y(ph).forEach(u),ih=w(px),lh=E(px,"P",{});var Ux=y(lh);uh=v(Ux,"I know I didn't do a good job explaining how a parser works. Here are some resources that I learned from, and I highly recommend them:"),Ux.forEach(u),hh=w(px),fh=E(px,"UL",{});var Bx=y(fh);dh=E(Bx,"LI",{});var qx=y(dh);kh=E(qx,"A",{href:!0,rel:!0});var Wx=y(kh);mh=v(Wx,"Crafting Interpreters"),Wx.forEach(u),gh=v(qx," by "),bh=E(qx,"A",{href:!0,rel:!0});var zx=y(bh);yh=v(zx,"Robert Nystrom"),zx.forEach(u),qx.forEach(u),Eh=w(Bx),vh=E(Bx,"LI",{});var Jx=y(vh);wh=E(Jx,"A",{href:!0,rel:!0});var Gx=y(wh);xh=v(Gx,'Free Udacity course: "Compilers: Theory and Practice"'),Gx.forEach(u),Th=v(Jx,", offered by Georgia Tech"),Jx.forEach(u),Bx.forEach(u),Ah=w(px),Ih=E(px,"HR",{}),Ch=w(px),Oh=E(px,"P",{});var _x=y(Oh);Ph=E(_x,"STRONG",{});var Xx=y(Ph);Lh=v(Xx,"Side Note"),Xx.forEach(u),Sh=v(_x,': You might be curious how am I able to visualize the custom syntax in the Babel AST Explorer, where I showed you the new "curry" attribute in the AST.'),_x.forEach(u),jh=w(px),Dh=E(px,"P",{});var Yx=y(Dh);Mh=v(Yx,"That's because I've added a new feature in the Babel AST Explorer where you can upload your custom parser!"),Yx.forEach(u),Hh=w(px),$h=E(px,"P",{});var Vx=y($h);Nh=v(Vx,"If you go to "),Rh=E(Vx,"CODE",{});var Zx=y(Rh);Fh=v(Zx,"packages/babel-parser/lib"),Zx.forEach(u),Uh=v(Vx,", you would find the compiled version of your parser and the source map. Open the drawer of the Babel AST Explorer, you will see a button to upload a custom parser. Drag the "),Bh=E(Vx,"CODE",{});var Kx=y(Bh);qh=v(Kx,"packages/babel-parser/lib/index.js"),Kx.forEach(u),Wh=v(Vx," in and you will be visualizing the AST generated via your custom parser!"),Vx.forEach(u),zh=w(px),Jh=E(px,"P",{});var Qx=y(Jh);Gh=E(Qx,"IMG",{title:!0,alt:!0,"data-src":!0,loading:!0}),Qx.forEach(u),_h=w(px),Xh=E(px,"HR",{}),px.forEach(u),Yh=w(a),Vh=E(a,"SECTION",{});var aT=y(Vh);Zh=E(aT,"H2",{});var nT=y(Zh);Kh=E(nT,"A",{href:!0,id:!0});var eT=y(Kh);Qh=v(eT,"Our babel plugin"),eT.forEach(u),nT.forEach(u),af=w(aT),nf=E(aT,"P",{});var sT=y(nf);ef=v(sT,"With our custom babel parser done, let's move on to write our babel plugin."),sT.forEach(u),sf=w(aT),tf=E(aT,"P",{});var tT=y(tf);of=v(tT,"But maybe before that, you may have some doubts on how are we going to use our custom babel parser, especially with whatever build stack we are using right now?"),tT.forEach(u),rf=w(aT),cf=E(aT,"P",{});var oT=y(cf);pf=v(oT,"Well, fret not. A babel plugin can provide a custom parser, which is "),lf=E(oT,"A",{href:!0,rel:!0});var rT=y(lf);uf=v(rT,"documented on the babel website"),rT.forEach(u),oT.forEach(u),hf=w(aT),ff=E(aT,"PRE",{class:!0}),y(ff).forEach(u),df=w(aT),kf=E(aT,"P",{});var cT=y(kf);mf=v(cT,"Since we forked out the babel parser, all existing babel parser options or built-in plugins will still work perfectly."),cT.forEach(u),gf=w(aT),bf=E(aT,"P",{});var pT=y(bf);yf=v(pT,"With this doubt out of the way, let see how we can make our curry function curryable? "),Ef=E(pT,"EM",{});var iT=y(Ef);vf=v(iT,"(not entirely sure there's such word)"),iT.forEach(u),pT.forEach(u),wf=w(aT),xf=E(aT,"HR",{}),Tf=w(aT),Af=E(aT,"P",{});var lT=y(Af);If=v(lT,"Before we start, if you have eagerly tried to add our plugin into your build system, you would notice that the curry function gets compiled to a normal function."),lT.forEach(u),Cf=w(aT),Of=E(aT,"P",{});var uT=y(Of);Pf=v(uT,"This is because, after parsing + transformation, babel will use "),Lf=E(uT,"A",{href:!0,rel:!0});var hT=y(Lf);Sf=v(hT,"@babel/generator"),hT.forEach(u),jf=v(uT," to generate code from the transformed AST. Since the "),Df=E(uT,"CODE",{});var fT=y(Df);Mf=v(fT,"@babel/generator"),fT.forEach(u),Hf=v(uT," has no idea about the new "),$f=E(uT,"CODE",{});var dT=y($f);Nf=v(dT,"curry"),dT.forEach(u),Rf=v(uT," attribute we added, it will be omitted."),uT.forEach(u),Ff=w(aT),Uf=E(aT,"BLOCKQUOTE",{});var kT=y(Uf);Bf=E(kT,"P",{});var mT=y(Bf);qf=v(mT,"If one day curry function becomes the new JavaScript syntax, you may want to make a pull request to add one more line "),Wf=E(mT,"A",{href:!0,rel:!0});var gT=y(Wf);zf=v(gT,"here"),gT.forEach(u),Jf=v(mT,"!"),mT.forEach(u),kT.forEach(u),Gf=w(aT),_f=E(aT,"HR",{}),Xf=w(aT),Yf=E(aT,"P",{});var bT=y(Yf);Vf=v(bT,"Ok, to make our function curryable, we can wrap it with a "),Zf=E(bT,"CODE",{});var yT=y(Zf);Kf=v(yT,"currying"),yT.forEach(u),Qf=v(bT," helper higher-order function:"),bT.forEach(u),ad=w(aT),nd=E(aT,"PRE",{class:!0}),y(nd).forEach(u),ed=w(aT),sd=E(aT,"BLOCKQUOTE",{});var ET=y(sd);td=E(ET,"P",{});var vT=y(td);od=v(vT,"If you want to learn how to write a currying function, you can read this "),rd=E(vT,"A",{href:!0,rel:!0});var wT=y(rd);cd=v(wT,"Currying in JS"),wT.forEach(u),pd=v(vT," by "),id=E(vT,"A",{href:!0,rel:!0});var xT=y(id);ld=v(xT,"Shirsh Zibbu"),xT.forEach(u),vT.forEach(u),ET.forEach(u),ud=w(aT),hd=E(aT,"P",{});var TT=y(hd);fd=v(TT,"So when we transform our curry function, we can transform it into the following:"),TT.forEach(u),dd=w(aT),kd=E(aT,"PRE",{class:!0}),y(kd).forEach(u),md=w(aT),gd=E(aT,"BLOCKQUOTE",{});var AT=y(gd);bd=E(AT,"P",{});var IT=y(bd);yd=v(IT,"Let's first ignore "),Ed=E(IT,"A",{href:!0,rel:!0});var CT=y(Ed);vd=v(CT,"function hoisting"),CT.forEach(u),wd=v(IT," in JavaScript, where you can call "),xd=E(IT,"CODE",{});var OT=y(xd);Td=v(OT,"foo"),OT.forEach(u),Ad=v(IT," before it is defined."),IT.forEach(u),AT.forEach(u),Id=w(aT),Cd=E(aT,"P",{});var PT=y(Cd);Od=v(PT,"If you have read my "),Pd=E(PT,"A",{href:!0});var LT=y(Pd);Ld=v(LT,"step-by-step guide on babel transformation"),LT.forEach(u),Sd=v(PT,", writing this transformation should be manageable:"),PT.forEach(u),jd=w(aT),Dd=E(aT,"PRE",{class:!0}),y(Dd).forEach(u),Md=w(aT),Hd=E(aT,"P",{});var ST=y(Hd);$d=v(ST,"The question is how do we provide the "),Nd=E(ST,"CODE",{});var jT=y(Nd);Rd=v(jT,"currying"),jT.forEach(u),Fd=v(ST," function?"),ST.forEach(u),Ud=w(aT),Bd=E(aT,"P",{});var DT=y(Bd);qd=v(DT,"There are 2 ways:"),DT.forEach(u),aT.forEach(u),Wd=w(a),zd=E(a,"SECTION",{});var MT=y(zd);Jd=E(MT,"H3",{});var HT=y(Jd);Gd=E(HT,"A",{href:!0,id:!0});var $T=y(Gd);_d=v($T,"1. Assume "),Xd=E($T,"CODE",{});var NT=y(Xd);Yd=v(NT,"currying"),NT.forEach(u),Vd=v($T," has been declared in the global scope."),$T.forEach(u),HT.forEach(u),Zd=w(MT),Kd=E(MT,"P",{});var RT=y(Kd);Qd=v(RT,"Basically, your job is done here."),RT.forEach(u),ak=w(MT),nk=E(MT,"P",{});var FT=y(nk);ek=v(FT,"If "),sk=E(FT,"CODE",{});var UT=y(sk);tk=v(UT,"currying"),UT.forEach(u),ok=v(FT," is not defined, then when executing the compiled code, the runtime will scream out "),rk=E(FT,"EM",{});var BT=y(rk);ck=v(BT,'"currying is not defined"'),BT.forEach(u),pk=v(FT,", just like the "),ik=E(FT,"A",{href:!0,rel:!0});var qT=y(ik);lk=v(qT,'"regeneratorRuntime is not defined"'),qT.forEach(u),uk=v(FT,"."),FT.forEach(u),hk=w(MT),fk=E(MT,"P",{});var WT=y(fk);dk=v(WT,"So probably you have to educate the users to install "),kk=E(WT,"CODE",{});var zT=y(kk);mk=v(zT,"currying"),zT.forEach(u),gk=v(WT," polyfills in order to use your "),bk=E(WT,"CODE",{});var JT=y(bk);yk=v(JT,"babel-plugin-transformation-curry-function"),JT.forEach(u),Ek=v(WT,"."),WT.forEach(u),MT.forEach(u),vk=w(a),wk=E(a,"SECTION",{});var GT=y(wk);xk=E(GT,"H3",{});var _T=y(xk);Tk=E(_T,"A",{href:!0,id:!0});var XT=y(Tk);Ak=v(XT,"2. Use the "),Ik=E(XT,"CODE",{});var YT=y(Ik);Ck=v(YT,"@babel/helpers"),YT.forEach(u),XT.forEach(u),_T.forEach(u),Ok=w(GT),Pk=E(GT,"P",{});var VT=y(Pk);Lk=v(VT,"You can add a new helper to "),Sk=E(VT,"CODE",{});var ZT=y(Sk);jk=v(ZT,"@babel/helpers"),ZT.forEach(u),Dk=v(VT,", which of course you are unlikely to merge that into the official "),Mk=E(VT,"CODE",{});var KT=y(Mk);Hk=v(KT,"@babel/helpers"),KT.forEach(u),$k=v(VT,", so you would have to figure a way to make "),Nk=E(VT,"CODE",{});var QT=y(Nk);Rk=v(QT,"@babel/core"),QT.forEach(u),Fk=v(VT," to resolve to your "),Uk=E(VT,"CODE",{});var aA=y(Uk);Bk=v(aA,"@babel/helpers"),aA.forEach(u),qk=v(VT,":"),VT.forEach(u),Wk=w(GT),zk=E(GT,"PRE",{class:!0}),y(zk).forEach(u),Jk=w(GT),Gk=E(GT,"P",{});var nA=y(Gk);_k=E(nA,"EM",{});var eA=y(_k);Xk=E(eA,"STRONG",{});var sA=y(Xk);Yk=v(sA,"Disclaimer:"),sA.forEach(u),Vk=v(eA," I have not personally tried this, but I believe it will work. If you encountered problems trying this, "),Zk=E(eA,"A",{href:!0,rel:!0});var tA=y(Zk);Kk=v(tA,"DM me"),tA.forEach(u),Qk=v(eA,", I am very happy to discuss it with you."),eA.forEach(u),nA.forEach(u),am=w(GT),nm=E(GT,"P",{});var oA=y(nm);em=v(oA,"Adding a new helper function into "),sm=E(oA,"CODE",{});var rA=y(sm);tm=v(rA,"@babel/helpers"),rA.forEach(u),om=v(oA," is very easy."),oA.forEach(u),rm=w(GT),cm=E(GT,"P",{});var cA=y(cm);pm=v(cA,"Head over to "),im=E(cA,"A",{href:!0,rel:!0});var pA=y(im);lm=v(pA,"packages/babel-helpers/src/helpers.js"),pA.forEach(u),um=v(cA," and add a new entry:"),cA.forEach(u),hm=w(GT),fm=E(GT,"PRE",{class:!0}),y(fm).forEach(u),dm=w(GT),km=E(GT,"P",{});var iA=y(km);mm=v(iA,"The helper tag function specifies the "),gm=E(iA,"CODE",{});var lA=y(gm);bm=v(lA,"@babel/core"),lA.forEach(u),ym=v(iA," version required. The trick here is to "),Em=E(iA,"CODE",{});var uA=y(Em);vm=v(uA,"export default"),uA.forEach(u),wm=v(iA," the "),xm=E(iA,"CODE",{});var hA=y(xm);Tm=v(hA,"currying"),hA.forEach(u),Am=v(iA," function."),iA.forEach(u),Im=w(GT),Cm=E(GT,"P",{});var fA=y(Cm);Om=v(fA,"To use the helper, just call the "),Pm=E(fA,"CODE",{});var dA=y(Pm);Lm=v(dA,"this.addHelper()"),dA.forEach(u),Sm=v(fA,":"),fA.forEach(u),jm=w(GT),Dm=E(GT,"PRE",{class:!0}),y(Dm).forEach(u),Mm=w(GT),Hm=E(GT,"P",{});var kA=y(Hm);$m=v(kA,"The "),Nm=E(kA,"CODE",{});var mA=y(Nm);Rm=v(mA,"this.addHelper"),mA.forEach(u),Fm=v(kA," will inject the helper at the top of the file if needed, and returns an "),Um=E(kA,"CODE",{});var gA=y(Um);Bm=v(gA,"Identifier"),gA.forEach(u),qm=v(kA," to the injected function."),kA.forEach(u),GT.forEach(u),Wm=w(a),zm=E(a,"SECTION",{});var bA=y(zm);Jm=E(bA,"H2",{});var yA=y(Jm);Gm=E(yA,"A",{href:!0,id:!0});var EA=y(Gm);_m=v(EA,"Closing Note"),EA.forEach(u),yA.forEach(u),Xm=w(bA),Ym=E(bA,"P",{});var vA=y(Ym);Vm=v(vA,"We've seen how we can modify the babel parser function, write our own babel transform plugin "),Zm=E(vA,"EM",{});var wA=y(Zm);Km=v(wA,"(which was brief mainly because I have "),Qm=E(wA,"A",{href:!0});var xA=y(Qm);ag=v(xA,"a detailed cover in my previous post"),xA.forEach(u),ng=v(wA,")"),wA.forEach(u),eg=v(vA,", a brief touch on "),sg=E(vA,"CODE",{});var TA=y(sg);tg=v(TA,"@babel/generator"),TA.forEach(u),og=v(vA," and also how we can add helper functions via "),rg=E(vA,"CODE",{});var AA=y(rg);cg=v(AA,"@babel/helpers"),AA.forEach(u),pg=v(vA,"."),vA.forEach(u),ig=w(bA),lg=E(bA,"P",{});var IA=y(lg);ug=v(IA,"Along the way, we had a crash course on how a parser works, which I will provide the links to "),hg=E(IA,"A",{href:!0});var CA=y(hg);fg=v(CA,"further reading"),CA.forEach(u),dg=v(IA," at the bottom."),IA.forEach(u),kg=w(bA),mg=E(bA,"P",{});var OA=y(mg);gg=v(OA,"The steps we've gone through above is similar to part of the "),bg=E(OA,"A",{href:!0,rel:!0});var PA=y(bg);yg=v(PA,"TC39 proposal"),PA.forEach(u),Eg=w(OA),vg=E(OA,"A",{href:!0,rel:!0});var LA=y(vg);wg=v(LA,"process"),LA.forEach(u),xg=v(OA," when defining a new JavaScript specification. When proposing a new specification, the champion of the proposal usually write polyfills or forked out babel to write proof-of-concept demos. As you've seen, forking a parser or writing polyfills is not the hardest part of the process, but to define the problem space, plan and think through the use cases and edge cases, and gather opinions and suggestions from the community. To this end, I am grateful to the proposal champion, for their effort in pushing the JavaScript language forward."),OA.forEach(u),Tg=w(bA),Ag=E(bA,"P",{});var SA=y(Ag);Ig=v(SA,"Finally, if you want to see the code we've done so far in a full picture, you can "),Cg=E(SA,"A",{href:!0,rel:!0});var jA=y(Cg);Og=v(jA,"check it out from Github"),jA.forEach(u),Pg=v(SA,"."),SA.forEach(u),Lg=w(bA),Sg=E(bA,"HR",{}),bA.forEach(u),jg=w(a),Dg=E(a,"SECTION",{});var DA=y(Dg);Mg=E(DA,"H2",{});var MA=y(Mg);Hg=E(MA,"A",{href:!0,id:!0});var HA=y(Hg);$g=v(HA,"Editor's Note"),HA.forEach(u),MA.forEach(u),Ng=w(DA),Rg=E(DA,"P",{});var $A=y(Rg);Fg=v($A,"I've worked on the babel repository for a while, yet I've never added a new syntax to the babel parser before. Most of my contributions were just fixing bugs and specs compliance feature."),$A.forEach(u),Ug=w(DA),Bg=E(DA,"P",{});var NA=y(Bg);qg=v(NA,"Yet this idea of creating a new syntax has been in my mind for a while. So I took the chance of writing a blog to try it out. It is an exhilarating experience to see it work as expected."),NA.forEach(u),Wg=w(DA),zg=E(DA,"P",{});var RA=y(zg);Jg=v(RA,"Having the ability to manipulate the syntax of the language you are writing is invigorating. It empowers us the possibility of writing less code or more straightforward code and shifts that complexity to compile time. Just as how "),Gg=E(RA,"CODE",{});var FA=y(Gg);_g=v(FA,"async-await"),FA.forEach(u),Xg=v(RA," solves the callback hell and promise-chaining hell."),RA.forEach(u),Yg=w(DA),Vg=E(DA,"P",{});var UA=y(Vg);Zg=v(UA,"If this article inspires you to some great idea, and you wish to discuss it with somebody, you are always more than welcome to reach out to me through "),Kg=E(UA,"A",{href:!0,rel:!0});var BA=y(Kg);Qg=v(BA,"Twitter"),BA.forEach(u),ab=v(UA,"."),UA.forEach(u),DA.forEach(u),nb=w(a),eb=E(a,"SECTION",{});var qA=y(eb);sb=E(qA,"H2",{});var WA=y(sb);tb=E(WA,"A",{href:!0,id:!0});var zA=y(tb);ob=v(zA,"Further Reading"),zA.forEach(u),WA.forEach(u),rb=w(qA),cb=E(qA,"P",{});var JA=y(cb);pb=v(JA,"About compilers:"),JA.forEach(u),ib=w(qA),lb=E(qA,"UL",{});var GA=y(lb);ub=E(GA,"LI",{});var _A=y(ub);hb=E(_A,"A",{href:!0,rel:!0});var XA=y(hb);fb=v(XA,"Crafting Interpreters"),XA.forEach(u),db=v(_A," by "),kb=E(_A,"A",{href:!0,rel:!0});var YA=y(kb);mb=v(YA,"Robert Nystrom"),YA.forEach(u),_A.forEach(u),gb=w(GA),bb=E(GA,"LI",{});var VA=y(bb);yb=E(VA,"A",{href:!0,rel:!0});var ZA=y(yb);Eb=v(ZA,'Free Udacity course: "Compilers: Theory and Practice"'),ZA.forEach(u),vb=v(VA,", offered by Georgia Tech"),VA.forEach(u),wb=w(GA),xb=E(GA,"LI",{});var KA=y(xb);Tb=E(KA,"A",{href:!0,rel:!0});var QA=y(Tb);Ab=v(QA,"Leveling Up One’s Parsing Game With ASTs"),QA.forEach(u),Ib=v(KA," by "),Cb=E(KA,"A",{href:!0,rel:!0});var aI=y(Cb);Ob=v(aI,"Vaidehi Joshi"),aI.forEach(u),KA.forEach(u),GA.forEach(u),Pb=w(qA),Lb=E(qA,"P",{});var nI=y(Lb);Sb=v(nI,"Misc:"),nI.forEach(u),jb=w(qA),Db=E(qA,"UL",{});var eI=y(Db);Mb=E(eI,"LI",{});var sI=y(Mb);Hb=E(sI,"A",{href:!0,rel:!0});var tI=y(Hb);$b=v(tI,"Understanding hoisting in JavaScript"),tI.forEach(u),Nb=v(sI," by "),Rb=E(sI,"A",{href:!0,rel:!0});var oI=y(Rb);Fb=v(oI,"Mabishi Wakio"),oI.forEach(u),sI.forEach(u),Ub=w(eI),Bb=E(eI,"LI",{});var rI=y(Bb);qb=E(rI,"A",{href:!0,rel:!0});var cI=y(qb);Wb=v(cI,"Currying in JS"),cI.forEach(u),zb=v(rI," by "),Jb=E(rI,"A",{href:!0,rel:!0});var pI=y(Jb);Gb=v(pI,"Shirsh Zibbu"),pI.forEach(u),rI.forEach(u),_b=w(eI),Xb=E(eI,"LI",{});var iI=y(Xb);Yb=E(iI,"A",{href:!0,rel:!0});var lI=y(Yb);Vb=v(lI,"TC39 Proposals"),lI.forEach(u),iI.forEach(u),Zb=w(eI),Kb=E(eI,"LI",{});var uI=y(Kb);Qb=E(uI,"A",{href:!0,rel:!0});var hI=y(Qb);ay=v(hI,"TC39 Process Document"),hI.forEach(u),uI.forEach(u),eI.forEach(u),qA.forEach(u),this.h()},h(){b(o,"href","#overview"),b(p,"href","#fork-the-babel"),b(x,"href","#crash-course-on-parsing-code-to-ast"),b(C,"href","#our-custom-babel-parser"),b(S,"href","#a-new-token"),b(M,"href","#the-new-parser"),b(N,"href","#how-parsing-works"),b(B,"href","#this-eat-this-match-this-next"),b(z,"href","#our-babel-plugin"),b(X,"href","#assume-currying-has-been-declared-in-the-global-scope"),b(Z,"href","#use-the-babel-helpers"),b(aa,"href","#closing-note"),b(sa,"href","#editor-s-note"),b(ra,"href","#further-reading"),b(s,"class","sitemap"),b(s,"id","sitemap"),b(s,"role","navigation"),b(s,"aria-label","Table of Contents"),b(ua,"href","/step-by-step-guide-for-writing-a-babel-transformation"),b(ga,"href","#overview"),b(ga,"id","overview"),b(xa,"class","language-js"),b(Ca,"href","https://en.wikipedia.org/wiki/Currying"),b(Ca,"rel","nofollow"),b(Da,"href","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*"),b(Da,"rel","nofollow"),b(Za,"href","https://scotch.io/tutorials/javascript-functional-programming-explained-partial-application-and-currying"),b(Za,"rel","nofollow"),b(cn,"class","language-js"),b(An,"href","https://medium.com/google-developers/exploring-es7-decorators-76ecb65fb841"),b(An,"rel","nofollow"),b(Vn,"href","#fork-the-babel"),b(Vn,"id","fork-the-babel"),b(ne,"href","https://github.com/babel/babel"),b(ne,"rel","nofollow"),b(ce,"type","image/webp"),b(ce,"srcset","c7ce0c4a376bfa80.webp"),b(pe,"type","image/jpeg"),b(pe,"srcset","c7ce0c4a376bfa80.png"),b(ie,"title","Forking babel"),b(ie,"alt","forking babel"),b(ie,"data-src","c7ce0c4a376bfa80.png"),b(ie,"loading","lazy"),b(me,"href","https://github.com/tanhauhau/babel/blob/master/CONTRIBUTING.md#setup"),b(me,"rel","nofollow"),b(Ee,"class","language-sh"),b(Ue,"class","language-yml"),b(Xe,"href","#crash-course-on-parsing-code-to-ast"),b(Xe,"id","crash-course-on-parsing-code-to-ast"),b(Qe,"href","https://twitter.com/vaidehijoshi"),b(Qe,"rel","nofollow"),b(es,"href","https://medium.com/basecs/leveling-up-ones-parsing-game-with-asts-d7a6fc2400ff"),b(es,"rel","nofollow"),b(Ms,"href","https://www.ecma-international.org/ecma-262/10.0/index.html#Title"),b(Ms,"rel","nofollow"),b(Us,"href","https://twitter.com/munificentbob?lang=en"),b(Us,"rel","nofollow"),b(Ws,"href","https://craftinginterpreters.com/introduction.html"),b(Ws,"rel","nofollow"),b(Qs,"href","#our-custom-babel-parser"),b(Qs,"id","our-custom-babel-parser"),b(pt,"class","language-null"),b(Lt,"href","https://en.wikipedia.org/wiki/Test-driven_development"),b(Lt,"rel","nofollow"),b(Mt,"class","language-js"),b(Jt,"class","language-sh"),b(Zt,"class","language-sh"),b(fo,"href","https://github.com/tanhauhau/babel/blob/feat/curry-function/packages/babel-parser/src/parser/expression.js#L2092"),b(fo,"rel","nofollow"),b(Oo,"class","language-js"),b($o,"class","language-js"),b(Yo,"href","#thiseat-thismatch-thisnext"),b(Rr,"href","#a-new-token"),b(Rr,"id","a-new-token"),b(Wr,"href","https://github.com/tanhauhau/babel/blob/feat/curry-function/packages/babel-parser/src/tokenizer/types.js#L86"),b(Wr,"rel","nofollow"),b(Vr,"class","language-js"),b(ic,"href","https://github.com/tanhauhau/babel/blob/da0af5fd99a9b747370a2240df3abf2940b9649c/packages/babel-parser/src/tokenizer/index.js#L790"),b(ic,"rel","nofollow"),b(Sc,"class","language-js"),b($c,"class","language-js"),A(Uc,"transform","scaleX(-1)"),A(Uc,"display","inline-block"),b(Jc,"href","#the-new-parser"),b(Jc,"id","the-new-parser"),b(Vc,"href","https://lihautan.com/babel-ast-explorer/#?eyJiYWJlbFNldHRpbmdzIjp7InZlcnNpb24iOiI3LjYuMCJ9LCJ0cmVlU2V0dGluZ3MiOnsiaGlkZUVtcHR5Ijp0cnVlLCJoaWRlTG9jYXRpb24iOnRydWUsImhpZGVUeXBlIjp0cnVlfSwiY29kZSI6ImZ1bmN0aW9uICogZm9vKCkge30ifQ=="),b(Vc,"rel","nofollow"),b(ep,"type","image/webp"),b(ep,"srcset","9d2558b42a6dcb5a.webp"),b(sp,"type","image/jpeg"),b(sp,"srcset","9d2558b42a6dcb5a.png"),b(tp,"title","AST for generator function"),b(tp,"alt","AST for generator function"),b(tp,"data-src","9d2558b42a6dcb5a.png"),b(tp,"loading","lazy"),b(Ip,"type","image/webp"),b(Ip,"srcset","75a034faffa701aa.webp"),b(Cp,"type","image/jpeg"),b(Cp,"srcset","75a034faffa701aa.png"),b(Op,"title","AST for curry function"),b(Op,"alt","AST for curry function"),b(Op,"data-src","75a034faffa701aa.png"),b(Op,"loading","lazy"),b(Bp,"href","https://github.com/tanhauhau/babel/blob/da0af5fd99a9b747370a2240df3abf2940b9649c/packages/babel-parser/src/parser/statement.js#L1030"),b(Bp,"rel","nofollow"),b(Xp,"class","language-js"),b(Qp,"class","language-sh"),b(ii,"href","#how-parsing-works"),b(ii,"id","how-parsing-works"),b(vi,"class","language-null"),b(hl,"class","language-null"),b(gl,"class","language-null"),b(wl,"class","language-js"),b(Fl,"href","https://craftinginterpreters.com/parsing-expressions.html#recursive-descent-parsing"),b(Fl,"rel","nofollow"),b(Jl,"href","#this-eat-this-match-this-next"),b(Jl,"id","this-eat-this-match-this-next"),b(ph,"class","language-js"),b(kh,"href","https://craftinginterpreters.com/introduction.html"),b(kh,"rel","nofollow"),b(bh,"href","https://twitter.com/munificentbob?lang=en"),b(bh,"rel","nofollow"),b(wh,"href","https://www.udacity.com/course/compilers-theory-and-practice--ud168"),b(wh,"rel","nofollow"),b(Gh,"title","null"),b(Gh,"alt","Uploading custom parser"),b(Gh,"data-src","4325833eef29ed21.gif"),b(Gh,"loading","lazy"),b(Kh,"href","#our-babel-plugin"),b(Kh,"id","our-babel-plugin"),b(lf,"href","https://babeljs.io/docs/en/babel-parser#will-the-babel-parser-support-a-plugin-system"),b(lf,"rel","nofollow"),b(ff,"class","language-js"),b(Lf,"href","https://babeljs.io/docs/en/babel-generator"),b(Lf,"rel","nofollow"),b(Wf,"href","https://github.com/tanhauhau/babel/blob/da0af5fd99a9b747370a2240df3abf2940b9649c/packages/babel-generator/src/generators/methods.js#L82"),b(Wf,"rel","nofollow"),b(nd,"class","language-js"),b(rd,"href","https://hackernoon.com/currying-in-js-d9ddc64f162e"),b(rd,"rel","nofollow"),b(id,"href","https://twitter.com/zhirzh"),b(id,"rel","nofollow"),b(kd,"class","language-js"),b(Ed,"href","https://scotch.io/tutorials/understanding-hoisting-in-javascript"),b(Ed,"rel","nofollow"),b(Pd,"href","/step-by-step-guide-for-writing-a-babel-transformation"),b(Dd,"class","language-js"),b(Gd,"href","#assume-currying-has-been-declared-in-the-global-scope"),b(Gd,"id","assume-currying-has-been-declared-in-the-global-scope"),b(ik,"href","https://www.google.com/search?q=regeneratorRuntime+is+not+defined"),b(ik,"rel","nofollow"),b(Tk,"href","#use-the-babel-helpers"),b(Tk,"id","use-the-babel-helpers"),b(zk,"class","language-js"),b(Zk,"href","https://twitter.com/lihautan"),b(Zk,"rel","nofollow"),b(im,"href","https://github.com/tanhauhau/babel/blob/feat/curry-function/packages/babel-helpers/src/helpers.js"),b(im,"rel","nofollow"),b(fm,"class","language-js"),b(Dm,"class","language-js"),b(Gm,"href","#closing-note"),b(Gm,"id","closing-note"),b(Qm,"href","/step-by-step-guide-for-writing-a-babel-transformation"),b(hg,"href","#further-reading"),b(bg,"href","https://github.com/tc39/proposals"),b(bg,"rel","nofollow"),b(vg,"href","https://tc39.es/process-document/"),b(vg,"rel","nofollow"),b(Cg,"href","https://github.com/tanhauhau/babel/compare/3a7b6e1c2...b793efad1"),b(Cg,"rel","nofollow"),b(Hg,"href","#editor-s-note"),b(Hg,"id","editor-s-note"),b(Kg,"href","https://twitter.com/lihautan"),b(Kg,"rel","nofollow"),b(tb,"href","#further-reading"),b(tb,"id","further-reading"),b(hb,"href","https://craftinginterpreters.com/introduction.html"),b(hb,"rel","nofollow"),b(kb,"href","https://twitter.com/munificentbob?lang=en"),b(kb,"rel","nofollow"),b(yb,"href","https://www.udacity.com/course/compilers-theory-and-practice--ud168"),b(yb,"rel","nofollow"),b(Tb,"href","https://medium.com/basecs/leveling-up-ones-parsing-game-with-asts-d7a6fc2400ff"),b(Tb,"rel","nofollow"),b(Cb,"href","https://twitter.com/vaidehijoshi"),b(Cb,"rel","nofollow"),b(Hb,"href","https://scotch.io/tutorials/understanding-hoisting-in-javascript"),b(Hb,"rel","nofollow"),b(Rb,"href","https://twitter.com/emabishi"),b(Rb,"rel","nofollow"),b(qb,"href","https://hackernoon.com/currying-in-js-d9ddc64f162e"),b(qb,"rel","nofollow"),b(Jb,"href","https://twitter.com/zhirzh"),b(Jb,"rel","nofollow"),b(Yb,"href","https://github.com/tc39/proposals"),b(Yb,"rel","nofollow"),b(Qb,"href","https://tc39.es/process-document/"),b(Qb,"rel","nofollow")},m(a,n){l(a,e,n),i(e,s),i(s,t),i(t,o),i(o,r),i(s,c),i(c,p),i(p,h),i(s,d),i(d,g),i(g,x),i(x,T),i(s,I),i(I,C),i(C,O),i(s,P),i(P,L),i(L,S),i(S,j),i(P,D),i(D,M),i(M,H),i(P,$),i($,N),i(N,R),i(P,F),i(F,U),i(U,B),i(B,q),i(s,W),i(W,z),i(z,J),i(s,G),i(G,_),i(_,X),i(X,Y),i(G,V),i(V,Z),i(Z,K),i(s,Q),i(Q,aa),i(aa,na),i(s,ea),i(ea,sa),i(sa,ta),i(s,oa),i(oa,ra),i(ra,ca),l(a,pa,n),l(a,ia,n),i(ia,la),i(ia,ua),i(ua,ha),i(ia,fa),l(a,da,n),l(a,ka,n),i(ka,ma),i(ma,ga),i(ga,ba),i(ka,ya),i(ka,Ea),i(Ea,va),i(ka,wa),i(ka,xa),xa.innerHTML='<code class="language-js"><span class="token comment">// \'@@\' makes the function &#96;foo&#96; curried</span>\n<span class="token keyword">function</span> @@ <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">return</span> a <span class="token operator">+</span> b <span class="token operator">+</span> c<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n<span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 6</span></code>',i(ka,Ta),i(ka,Aa),i(Aa,Ia),i(Aa,Ca),i(Ca,Oa),i(Aa,Pa),i(Aa,La),i(La,Sa),i(Aa,ja),i(Aa,Da),i(Da,Ma),i(Aa,Ha),i(Aa,$a),i($a,Na),i(Aa,Ra),i(Aa,Fa),i(Fa,Ua),i(Aa,Ba),i(Aa,qa),i(qa,Wa),i(Aa,za),i(Aa,Ja),i(Ja,Ga),i(Aa,_a),i(ka,Xa),i(ka,Ya),i(Ya,Va),i(Ya,Za),i(Za,Ka),i(Ya,Qa),i(Ya,an),i(an,nn),i(Ya,en),i(Ya,sn),i(sn,tn),i(Ya,on),i(ka,rn),i(ka,cn),cn.innerHTML='<code class="language-js"><span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 6</span>\n\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// (n) => 1 + 2 + n</span>\n<span class="token function">bar</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 6</span></code>',i(ka,pn),i(ka,ln),i(ln,un),i(un,hn),i(un,fn),i(fn,dn),i(un,kn),i(un,mn),i(mn,gn),i(un,bn),i(un,yn),i(yn,En),i(un,vn),i(un,wn),i(wn,xn),i(un,Tn),i(un,An),i(An,In),i(un,Cn),i(un,On),i(On,Pn),i(un,Ln),i(ka,Sn),i(ka,jn),i(jn,Dn),i(ka,Mn),i(ka,Hn),i(Hn,$n),i($n,Nn),i(Hn,Rn),i(Hn,Fn),i(Fn,Un),i(ka,Bn),i(ka,qn),i(qn,Wn),i(ka,zn),i(ka,Jn),i(Jn,Gn),l(a,_n,n),l(a,Xn,n),i(Xn,Yn),i(Yn,Vn),i(Vn,Zn),i(Xn,Kn),i(Xn,Qn),i(Qn,ae),i(Qn,ne),i(ne,ee),i(Qn,se),i(Xn,te),i(Xn,oe),i(oe,re),i(re,ce),i(re,pe),i(re,ie),i(Xn,le),i(Xn,ue),i(ue,he),i(Xn,fe),i(Xn,de),i(de,ke),i(de,me),i(me,ge),i(de,be),i(Xn,ye),i(Xn,Ee),Ee.innerHTML='<code class="language-sh">$ git clone https://github.com/tanhauhau/babel.git\n\n# set up\n$ cd babel\n$ make bootstrap\n$ make build</code>',i(Xn,ve),i(Xn,we),i(we,xe),i(Xn,Te),i(Xn,Ae),i(Ae,Ie),i(Ae,Ce),i(Ce,Oe),i(Ae,Pe),i(Ae,Le),i(Le,Se),i(Ae,je),i(Ae,De),i(De,Me),i(Ae,He),i(Ae,$e),i($e,Ne),i(Ae,Re),i(Xn,Fe),i(Xn,Ue),Ue.innerHTML='<code class="language-yml"><span class="token punctuation">-</span> doc\n<span class="token punctuation">-</span> packages\n  <span class="token punctuation">-</span> babel<span class="token punctuation">-</span>core\n  <span class="token punctuation">-</span> babel<span class="token punctuation">-</span>parser\n  <span class="token punctuation">-</span> babel<span class="token punctuation">-</span>plugin<span class="token punctuation">-</span>transform<span class="token punctuation">-</span>react<span class="token punctuation">-</span>jsx\n  <span class="token punctuation">-</span> <span class="token punctuation">...</span>\n<span class="token punctuation">-</span> Gulpfile.js\n<span class="token punctuation">-</span> Makefile\n<span class="token punctuation">-</span> <span class="token punctuation">...</span></code>',i(Xn,Be),i(Xn,qe),i(qe,We),i(We,ze),l(a,Je,n),l(a,Ge,n),i(Ge,_e),i(_e,Xe),i(Xe,Ye),i(Ge,Ve),i(Ge,Ze),i(Ze,Ke),i(Ze,Qe),i(Qe,as),i(Ze,ns),i(Ze,es),i(es,ss),i(Ze,ts),i(Ge,os),i(Ge,rs),i(rs,cs),i(Ge,ps),i(Ge,is),i(is,ls),i(ls,us),i(ls,hs),i(hs,fs),i(ls,ds),i(ls,ks),i(ks,ms),i(is,gs),i(is,bs),i(bs,ys),i(bs,Es),i(Es,vs),i(bs,ws),i(bs,xs),i(xs,Ts),i(bs,As),i(bs,Is),i(Is,Cs),i(is,Os),i(is,Ps),i(Ps,Ls),i(Ps,Ss),i(Ss,js),i(Ps,Ds),i(Ps,Ms),i(Ms,Hs),i(Ps,$s),i(Ge,Ns),i(Ge,Rs),i(Rs,Fs),i(Rs,Us),i(Us,Bs),i(Rs,qs),i(Rs,Ws),i(Ws,zs),i(Rs,Js),i(Ge,Gs),i(Ge,_s),i(_s,Xs),i(Xs,Ys),l(a,Vs,n),l(a,Zs,n),i(Zs,Ks),i(Ks,Qs),i(Qs,at),i(Zs,nt),i(Zs,et),i(et,st),i(et,tt),i(tt,ot),i(et,rt),i(Zs,ct),i(Zs,pt),pt.innerHTML='\n<code class="language-">- src/\n  - tokenizer/\n  - parser/\n  - plugins/\n    - jsx/\n    - typescript/\n    - flow/\n    - ...\n- test/</code>',i(Zs,it),i(Zs,lt),i(lt,ut),i(lt,ht),i(ht,ft),i(lt,dt),i(lt,kt),i(kt,mt),i(lt,gt),i(lt,bt),i(bt,yt),i(lt,Et),i(lt,vt),i(vt,wt),i(lt,xt),i(lt,Tt),i(Tt,At),i(lt,It),i(Zs,Ct),i(Zs,Ot),i(Ot,Pt),i(Ot,Lt),i(Lt,St),i(Ot,jt),i(Zs,Dt),i(Zs,Mt),Mt.innerHTML='<code class="language-js"><span class="token comment">// filename: packages/babel-parser/test/curry-function.js</span>\n\n<span class="token keyword module">import</span> <span class="token punctuation">&#123;</span> parse <span class="token punctuation">&#125;</span> <span class="token keyword module">from</span> <span class="token string">\'../lib\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">getParser</span><span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token function">parse</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> sourceType<span class="token punctuation">:</span> <span class="token string">\'module\'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token function">describe</span><span class="token punctuation">(</span><span class="token string">\'curry function syntax\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">\'should parse\'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token function">expect</span><span class="token punctuation">(</span><span class="token function">getParser</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">function @@ foo() &#123;&#125;</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token method function property-access">toMatchSnapshot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>',i(Zs,Ht),i(Zs,$t),i($t,Nt),i($t,Rt),i(Rt,Ft),i($t,Ut),i($t,Bt),i(Bt,qt),i($t,Wt),i(Zs,zt),i(Zs,Jt),Jt.innerHTML='<code class="language-sh">SyntaxError: Unexpected token (1:9)\n\nat Parser.raise (packages/babel-parser/src/parser/location.js:39:63)\nat Parser.raise [as unexpected] (packages/babel-parser/src/parser/util.js:133:16)\nat Parser.unexpected [as parseIdentifierName] (packages/babel-parser/src/parser/expression.js:2090:18)\nat Parser.parseIdentifierName [as parseIdentifier] (packages/babel-parser/src/parser/expression.js:2052:23)\nat Parser.parseIdentifier (packages/babel-parser/src/parser/statement.js:1096:52)</code>',i(Zs,Gt),i(Zs,_t),i(_t,Xt),i(Xt,Yt),i(_t,Vt),i(_t,Zt),Zt.innerHTML='<code class="language-sh">BABEL_ENV=test node_modules/.bin/jest -u packages/babel-parser/test/curry-function.js</code>',i(Zs,Kt),i(Zs,Qt),i(Qt,ao),i(Qt,no),i(no,eo),i(Qt,so),i(Zs,to),i(Zs,oo),i(oo,ro),i(oo,co),i(co,po),i(oo,io),i(Zs,lo),i(Zs,uo),i(uo,ho),i(uo,fo),i(fo,ko),i(ko,mo),i(uo,go),i(uo,bo),i(bo,yo),i(uo,Eo),i(Zs,vo),i(Zs,wo),i(wo,xo),i(wo,To),i(To,Ao),i(wo,Io),i(Zs,Co),i(Zs,Oo),Oo.innerHTML='<code class="language-js"><span class="token comment">// filename: packages/babel-parser/src/parser/expression.js</span>\n<span class="token function">parseIdentifierName</span><span class="token punctuation">(</span>pos<span class="token punctuation">:</span> number<span class="token punctuation">,</span> liberal<span class="token operator">?</span><span class="token punctuation">:</span> boolean<span class="token punctuation">)</span><span class="token punctuation">:</span> string <span class="token punctuation">&#123;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">match</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span><span class="token property-access">name</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>\n    <span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">type</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// current token</span>\n    <span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">lookahead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token property-access">type</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// next token</span>\n    <span class="token keyword">throw</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">unexpected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(Zs,Po),i(Zs,Lo),i(Lo,So),i(Lo,jo),i(jo,Do),i(Lo,Mo),i(Zs,Ho),i(Zs,$o),$o.innerHTML='<code class="language-js"><span class="token maybe-class-name">TokenType</span> <span class="token punctuation">&#123;</span>\n  label<span class="token punctuation">:</span> <span class="token string">\'@\'</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">&#125;</span></code>',i(Zs,No),i(Zs,Ro),i(Ro,Fo),i(Ro,Uo),i(Uo,Bo),i(Ro,qo),i(Ro,Wo),i(Wo,zo),i(Ro,Jo),i(Zs,Go),i(Zs,_o),i(_o,Xo),i(_o,Yo),i(Yo,Vo),i(_o,Zo),i(Zs,Ko),i(Zs,Qo),i(Qo,ar),i(Zs,nr),i(Zs,er),i(er,sr),i(sr,tr),i(sr,or),i(or,rr),i(er,cr),i(er,pr),i(pr,ir),i(pr,lr),i(lr,ur),i(pr,hr),i(er,fr),i(er,dr),i(dr,kr),i(dr,mr),i(mr,gr),i(er,br),i(er,yr),i(yr,Er),i(yr,vr),i(vr,wr),i(Zs,xr),i(Zs,Tr),i(Tr,Ar),i(Zs,Ir),i(Zs,Cr),i(Cr,Or),i(Cr,Pr),i(Pr,Lr),i(Cr,Sr),i(Cr,jr),i(jr,Dr),i(Cr,Mr),l(a,Hr,n),l(a,$r,n),i($r,Nr),i(Nr,Rr),i(Rr,Fr),i($r,Ur),i($r,Br),i(Br,qr),i(Br,Wr),i(Wr,zr),i(Br,Jr),i($r,Gr),i($r,_r),i(_r,Xr),i($r,Yr),i($r,Vr),Vr.innerHTML='<code class="language-js"><span class="token comment">// filename: packages/babel-parser/src/tokenizer/types.js</span>\n\n<span class="token keyword module">export</span> <span class="token keyword">const</span> types<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">[</span>name<span class="token punctuation">:</span> string<span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token maybe-class-name">TokenType</span> <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// ...</span>\n  at<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">TokenType</span><span class="token punctuation">(</span><span class="token string">\'@\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token comment">// highlight-next-line</span>\n  atat<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">TokenType</span><span class="token punctuation">(</span><span class="token string">\'@@\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>',i($r,Zr),i($r,Kr),i(Kr,Qr),i(Kr,ac),i(ac,nc),i(Kr,ec),i(Kr,sc),i(sc,tc),i(Kr,oc),i(Kr,rc),i(rc,cc),i(Kr,pc),i(Kr,ic),i(ic,lc),i($r,uc),i($r,hc),i(hc,fc),i(fc,dc),i($r,kc),i($r,mc),i(mc,gc),i(mc,bc),i(bc,yc),i(mc,Ec),i(mc,vc),i(vc,wc),i(mc,xc),i(mc,Tc),i(Tc,Ac),i(mc,Ic),i(mc,Cc),i(Cc,Oc),i(mc,Pc),i($r,Lc),i($r,Sc),Sc.innerHTML='<code class="language-js"><span class="token comment">// filename: packages/babel-parser/src/tokenizer/index.js</span>\n\n<span class="token function">getTokenFromCode</span><span class="token punctuation">(</span>code<span class="token punctuation">:</span> number<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">switch</span> <span class="token punctuation">(</span>code<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// ...</span>\n    <span class="token keyword">case</span> charCodes<span class="token punctuation">.</span><span class="token property-access">atSign</span><span class="token punctuation">:</span>\n      <span class="token comment">// highlight-start</span>\n      <span class="token comment">// if the next character is a &#96;@&#96;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">input</span><span class="token punctuation">.</span><span class="token method function property-access">charCodeAt</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">pos</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> charCodes<span class="token punctuation">.</span><span class="token property-access">atSign</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n        <span class="token comment">// create &#96;tt.atat&#96; instead</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">finishOp</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span><span class="token property-access">atat</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">finishOp</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span><span class="token property-access">at</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span>\n      <span class="token keyword">return</span><span class="token punctuation">;</span>\n      <span class="token comment">// highlight-end</span>\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i($r,jc),i($r,Dc),i(Dc,Mc),i($r,Hc),i($r,$c),$c.innerHTML='<code class="language-js"><span class="token comment">// current token</span>\n<span class="token maybe-class-name">TokenType</span> <span class="token punctuation">&#123;</span>\n  label<span class="token punctuation">:</span> <span class="token string">\'@@\'</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token comment">// next token</span>\n<span class="token maybe-class-name">TokenType</span> <span class="token punctuation">&#123;</span>\n  label<span class="token punctuation">:</span> <span class="token string">\'name\'</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">&#125;</span></code>',i($r,Nc),i($r,Rc),i(Rc,Fc),i(Rc,Uc),i(Uc,Bc),l(a,qc,n),l(a,Wc,n),i(Wc,zc),i(zc,Jc),i(Jc,Gc),i(Wc,_c),i(Wc,Xc),i(Xc,Yc),i(Xc,Vc),i(Vc,Zc),i(Xc,Kc),i(Wc,Qc),i(Wc,ap),i(ap,np),i(np,ep),i(np,sp),i(np,tp),i(Wc,op),i(Wc,rp),i(rp,cp),i(rp,pp),i(pp,ip),i(rp,lp),i(rp,up),i(up,hp),i(rp,fp),i(Wc,dp),i(Wc,kp),i(kp,mp),i(kp,gp),i(gp,bp),i(kp,yp),i(kp,Ep),i(Ep,vp),i(kp,wp),i(Wc,xp),i(Wc,Tp),i(Tp,Ap),i(Ap,Ip),i(Ap,Cp),i(Ap,Op),i(Wc,Pp),i(Wc,Lp),i(Lp,Sp),i(Wc,jp),i(Wc,Dp),i(Dp,Mp),i(Dp,Hp),i(Hp,$p),i(Dp,Np),i(Dp,Rp),i(Rp,Fp),i(Dp,Up),i(Dp,Bp),i(Bp,qp),i(Dp,Wp),i(Dp,zp),i(zp,Jp),i(Dp,Gp),i(Wc,_p),i(Wc,Xp),Xp.innerHTML='<code class="language-js"><span class="token comment">// filename: packages/babel-parser/src/parser/statement.js</span>\n\n<span class="token keyword module">export</span> <span class="token keyword module">default</span> <span class="token keyword">class</span> <span class="token class-name">StatementParser</span> <span class="token keyword">extends</span> <span class="token class-name">ExpressionParser</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// ...</span>\n  parseFunction<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">:</span> <span class="token constant">N</span><span class="token punctuation">.</span><span class="token property-access"><span class="token maybe-class-name">NormalFunction</span></span><span class="token operator">></span><span class="token punctuation">(</span>\n    node<span class="token punctuation">:</span> <span class="token constant">T</span><span class="token punctuation">,</span>\n    statement<span class="token operator">?</span><span class="token punctuation">:</span> number <span class="token operator">=</span> <span class="token constant">FUNC_NO_FLAGS</span><span class="token punctuation">,</span>\n    isAsync<span class="token operator">?</span><span class="token punctuation">:</span> boolean <span class="token operator">=</span> <span class="token boolean">false</span>\n  <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token constant">T</span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// ...</span>\n    node<span class="token punctuation">.</span><span class="token property-access">generator</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">eat</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span><span class="token property-access">star</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// highlight-next-line</span>\n    node<span class="token punctuation">.</span><span class="token property-access">curry</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">eat</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span><span class="token property-access">atat</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(Wc,Yp),i(Wc,Vp),i(Vp,Zp),i(Wc,Kp),i(Wc,Qp),Qp.innerHTML='<code class="language-sh"> PASS  packages/babel-parser/test/curry-function.js\n  curry function syntax\n    ✓ should parse (12ms)</code>',i(Wc,ai),i(Wc,ni),i(ni,ei),i(Wc,si),i(Wc,ti),i(ti,oi),l(a,ri,n),l(a,ci,n),i(ci,pi),i(pi,ii),i(ii,li),i(ci,ui),i(ci,hi),i(hi,fi),i(hi,di),i(di,ki),i(hi,mi),i(ci,gi),i(ci,bi),i(bi,yi),i(ci,Ei),i(ci,vi),vi.innerHTML='\n<code class="language-">...\nExponentiationExpression -&gt; UnaryExpression\n                            UpdateExpression ** ExponentiationExpression\nMultiplicativeExpression -&gt; ExponentiationExpression\n                            MultiplicativeExpression (&quot;*&quot; or &quot;/&quot; or &quot;%&quot;) ExponentiationExpression\nAdditiveExpression       -&gt; MultiplicativeExpression\n                            AdditiveExpression + MultiplicativeExpression\n                            AdditiveExpression - MultiplicativeExpression\n...</code>',i(ci,wi),i(ci,xi),i(xi,Ti),i(xi,Ai),i(Ai,Ii),i(xi,Ci),i(ci,Oi),i(ci,Pi),i(Pi,Li),i(Li,Si),i(Li,ji),i(ji,Di),i(Li,Mi),i(Pi,Hi),i(Pi,$i),i($i,Ni),i($i,Ri),i(Ri,Fi),i($i,Ui),i($i,Bi),i(Bi,qi),i($i,Wi),i($i,zi),i(zi,Ji),i($i,Gi),i(Pi,_i),i(Pi,Xi),i(Xi,Yi),i(Xi,Vi),i(Vi,Zi),i(Xi,Ki),i(Xi,Qi),i(Qi,al),i(Xi,nl),i(Xi,el),i(el,sl),i(Xi,tl),i(ci,ol),i(ci,rl),i(rl,cl),i(rl,pl),i(pl,il),i(rl,ll),i(ci,ul),i(ci,hl),hl.innerHTML='\n<code class="language-">(AdditiveExpression &quot;+&quot; 1 (MultiplicativeExpression &quot;*&quot; 2 3))</code>',i(ci,fl),i(ci,dl),i(dl,kl),i(ci,ml),i(ci,gl),gl.innerHTML='\n<code class="language-">(MultiplicativeExpression &quot;*&quot; (AdditiveExpression &quot;+&quot; 1 2) 3)</code>',i(ci,bl),i(ci,yl),i(yl,El),i(ci,vl),i(ci,wl),wl.innerHTML='<code class="language-js"><span class="token keyword">class</span> <span class="token class-name">Parser</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// ...</span>\n  <span class="token function">parseAdditiveExpression</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">const</span> left <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">parseMultiplicativeExpression</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// if the current token is &#96;+&#96; or &#96;-&#96;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">match</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span><span class="token property-access">plus</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">match</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span><span class="token property-access">minus</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      <span class="token keyword">const</span> operator <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token property-access">state</span><span class="token punctuation">.</span><span class="token property-access">type</span><span class="token punctuation">;</span>\n      <span class="token comment">// move on to the next token</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">nextToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> right <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">parseMultiplicativeExpression</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token comment">// create the node</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">finishNode</span><span class="token punctuation">(</span>\n        <span class="token punctuation">&#123;</span>\n          operator<span class="token punctuation">,</span>\n          left<span class="token punctuation">,</span>\n          right<span class="token punctuation">,</span>\n        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n        <span class="token string">\'BinaryExpression\'</span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>\n      <span class="token comment">// return as MultiplicativeExpression</span>\n      <span class="token keyword">return</span> left<span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(ci,xl),i(ci,Tl),i(Tl,Al),i(Al,Il),i(ci,Cl),i(ci,Ol),i(Ol,Pl),i(Ol,Ll),i(Ll,Sl),i(Ol,jl),i(Ol,Dl),i(Dl,Ml),i(Ol,Hl),i(Ol,$l),i($l,Nl),i(Ol,Rl),i(Ol,Fl),i(Fl,Ul),i(Ol,Bl),l(a,ql,n),l(a,Wl,n),i(Wl,zl),i(zl,Jl),i(Jl,Gl),i(Wl,_l),i(Wl,Xl),i(Xl,Yl),i(Xl,Vl),i(Vl,Zl),i(Xl,Kl),i(Xl,Ql),i(Ql,au),i(Xl,nu),i(Xl,eu),i(eu,su),i(Xl,tu),i(Wl,ou),i(Wl,ru),i(ru,cu),i(cu,pu),i(pu,iu),i(iu,lu),i(cu,uu),i(cu,hu),i(hu,fu),i(cu,du),i(ru,ku),i(ru,mu),i(mu,gu),i(gu,bu),i(bu,yu),i(mu,Eu),i(ru,vu),i(ru,wu),i(wu,xu),i(xu,Tu),i(Tu,Au),i(wu,Iu),i(wu,Cu),i(Cu,Ou),i(wu,Pu),i(wu,Lu),i(Lu,Su),i(wu,ju),i(wu,Du),i(Du,Mu),i(wu,Hu),i(wu,$u),i($u,Nu),i(wu,Ru),i(Ru,Fu),i(Fu,Uu),i(Uu,Bu),i(Fu,qu),i(Fu,Wu),i(Wu,zu),i(Fu,Ju),i(Fu,Gu),i(Gu,_u),i(Fu,Xu),i(Fu,Yu),i(Yu,Vu),i(Fu,Zu),i(ru,Ku),i(ru,Qu),i(Qu,ah),i(ah,nh),i(nh,eh),i(Qu,sh),i(Wl,th),i(Wl,oh),i(oh,rh),i(Wl,ch),i(Wl,ph),ph.innerHTML='<code class="language-js"><span class="token comment">// filename: packages/babel-parser/src/parser/statement.js</span>\n\n<span class="token keyword module">export</span> <span class="token keyword module">default</span> <span class="token keyword">class</span> <span class="token class-name">StatementParser</span> <span class="token keyword">extends</span> <span class="token class-name">ExpressionParser</span> <span class="token punctuation">&#123;</span>\n  <span class="token function">parseStatementContent</span><span class="token punctuation">(</span><span class="token comment">/* ...*/</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// ...</span>\n    <span class="token comment">// NOTE: we call match to check the current token</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">match</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span><span class="token property-access">_function</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token comment">// NOTE: function statement has a higher precendence than a generic statement</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">parseFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span>\n  <span class="token punctuation">&#125;</span>\n  <span class="token comment">// ...</span>\n  <span class="token function">parseFunction</span><span class="token punctuation">(</span><span class="token comment">/* ... */</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// NOTE: we call eat to check whether the optional token exists</span>\n    node<span class="token punctuation">.</span><span class="token property-access">generator</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">eat</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span><span class="token property-access">star</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// highlight-next-line</span>\n    node<span class="token punctuation">.</span><span class="token property-access">curry</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">eat</span><span class="token punctuation">(</span>tt<span class="token punctuation">.</span><span class="token property-access">atat</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    node<span class="token punctuation">.</span><span class="token property-access">id</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">parseFunctionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(Wl,ih),i(Wl,lh),i(lh,uh),i(Wl,hh),i(Wl,fh),i(fh,dh),i(dh,kh),i(kh,mh),i(dh,gh),i(dh,bh),i(bh,yh),i(fh,Eh),i(fh,vh),i(vh,wh),i(wh,xh),i(vh,Th),i(Wl,Ah),i(Wl,Ih),i(Wl,Ch),i(Wl,Oh),i(Oh,Ph),i(Ph,Lh),i(Oh,Sh),i(Wl,jh),i(Wl,Dh),i(Dh,Mh),i(Wl,Hh),i(Wl,$h),i($h,Nh),i($h,Rh),i(Rh,Fh),i($h,Uh),i($h,Bh),i(Bh,qh),i($h,Wh),i(Wl,zh),i(Wl,Jh),i(Jh,Gh),i(Wl,_h),i(Wl,Xh),l(a,Yh,n),l(a,Vh,n),i(Vh,Zh),i(Zh,Kh),i(Kh,Qh),i(Vh,af),i(Vh,nf),i(nf,ef),i(Vh,sf),i(Vh,tf),i(tf,of),i(Vh,rf),i(Vh,cf),i(cf,pf),i(cf,lf),i(lf,uf),i(Vh,hf),i(Vh,ff),ff.innerHTML='<code class="language-js"><span class="token comment">// filename: babel-plugin-transformation-curry-function.js</span>\n<span class="token keyword module">import</span> customParser <span class="token keyword module">from</span> <span class="token string">\'./custom-parser\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword module">export</span> <span class="token keyword module">default</span> <span class="token keyword">function</span> <span class="token function">ourBabelPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>\n    <span class="token function">parserOverride</span><span class="token punctuation">(</span><span class="token parameter">code<span class="token punctuation">,</span> opts</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      <span class="token keyword">return</span> customParser<span class="token punctuation">.</span><span class="token method function property-access">parse</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span> opts<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span></code>',i(Vh,df),i(Vh,kf),i(kf,mf),i(Vh,gf),i(Vh,bf),i(bf,yf),i(bf,Ef),i(Ef,vf),i(Vh,wf),i(Vh,xf),i(Vh,Tf),i(Vh,Af),i(Af,If),i(Vh,Cf),i(Vh,Of),i(Of,Pf),i(Of,Lf),i(Lf,Sf),i(Of,jf),i(Of,Df),i(Df,Mf),i(Of,Hf),i(Of,$f),i($f,Nf),i(Of,Rf),i(Vh,Ff);i(Vh,Uf),i(Uf,Bf),i(Bf,qf),i(Bf,Wf),i(Wf,zf),i(Bf,Jf),i(Vh,Gf),i(Vh,_f),i(Vh,Xf),i(Vh,Yf),i(Yf,Vf),i(Yf,Zf),i(Zf,Kf),i(Yf,Qf),i(Vh,ad),i(Vh,nd),nd.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">currying</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">const</span> numParamsRequired <span class="token operator">=</span> fn<span class="token punctuation">.</span><span class="token property-access">length</span><span class="token punctuation">;</span>\n  <span class="token keyword">function</span> <span class="token function">curryFactory</span><span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token spread operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      <span class="token keyword">const</span> newParams <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token method function property-access">concat</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>newParams<span class="token punctuation">.</span><span class="token property-access">length</span> <span class="token operator">>=</span> numParamsRequired<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n        <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token spread operator">...</span>newParams<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span>\n      <span class="token keyword">return</span> <span class="token function">curryFactory</span><span class="token punctuation">(</span>newParams<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span>\n  <span class="token punctuation">&#125;</span>\n  <span class="token keyword">return</span> <span class="token function">curryFactory</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span></code>',i(Vh,ed),i(Vh,sd),i(sd,td),i(td,od),i(td,rd),i(rd,cd),i(td,pd),i(td,id),i(id,ld),i(Vh,ud),i(Vh,hd),i(hd,fd),i(Vh,dd),i(Vh,kd),kd.innerHTML='<code class="language-js"><span class="token comment">// from</span>\n<span class="token keyword">function</span> @@ <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">return</span> a <span class="token operator">+</span> b <span class="token operator">+</span> c<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token comment">// to</span>\n<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token function">currying</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">return</span> a <span class="token operator">+</span> b <span class="token operator">+</span> c<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>',i(Vh,md),i(Vh,gd),i(gd,bd),i(bd,yd),i(bd,Ed),i(Ed,vd),i(bd,wd),i(bd,xd),i(xd,Td),i(bd,Ad),i(Vh,Id),i(Vh,Cd),i(Cd,Od),i(Cd,Pd),i(Pd,Ld),i(Cd,Sd),i(Vh,jd),i(Vh,Dd),Dd.innerHTML='<code class="language-js"><span class="token comment">// filename: babel-plugin-transformation-curry-function.js</span>\n<span class="token keyword module">export</span> <span class="token keyword module">default</span> <span class="token keyword">function</span> <span class="token function">ourBabelPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// ...</span>\n    <span class="token comment">// highlight-start</span>\n    visitor<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>\n      <span class="token function"><span class="token maybe-class-name">FunctionDeclaration</span></span><span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token method function property-access">get</span><span class="token punctuation">(</span><span class="token string">\'curry\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token property-access">node</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n          <span class="token comment">// const foo = curry(function () &#123; ... &#125;);</span>\n          path<span class="token punctuation">.</span><span class="token property-access">node</span><span class="token punctuation">.</span><span class="token property-access">curry</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n          path<span class="token punctuation">.</span><span class="token method function property-access">replaceWith</span><span class="token punctuation">(</span>\n            t<span class="token punctuation">.</span><span class="token method function property-access">variableDeclaration</span><span class="token punctuation">(</span><span class="token string">\'const\'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n              t<span class="token punctuation">.</span><span class="token method function property-access">variableDeclarator</span><span class="token punctuation">(</span>\n                t<span class="token punctuation">.</span><span class="token method function property-access">identifier</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token method function property-access">get</span><span class="token punctuation">(</span><span class="token string">\'id.name\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token property-access">node</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                t<span class="token punctuation">.</span><span class="token method function property-access">callExpression</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token method function property-access">identifier</span><span class="token punctuation">(</span><span class="token string">\'currying\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n                  t<span class="token punctuation">.</span><span class="token method function property-access">toExpression</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token property-access">node</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n                <span class="token punctuation">]</span><span class="token punctuation">)</span>\n              <span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">)</span>\n          <span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">&#125;</span>\n      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n    <span class="token comment">// highlight-end</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span></code>',i(Vh,Md),i(Vh,Hd),i(Hd,$d),i(Hd,Nd),i(Nd,Rd),i(Hd,Fd),i(Vh,Ud),i(Vh,Bd),i(Bd,qd),l(a,Wd,n),l(a,zd,n),i(zd,Jd),i(Jd,Gd),i(Gd,_d),i(Gd,Xd),i(Xd,Yd),i(Gd,Vd),i(zd,Zd),i(zd,Kd),i(Kd,Qd),i(zd,ak),i(zd,nk),i(nk,ek),i(nk,sk),i(sk,tk),i(nk,ok),i(nk,rk),i(rk,ck),i(nk,pk),i(nk,ik),i(ik,lk),i(nk,uk),i(zd,hk),i(zd,fk),i(fk,dk),i(fk,kk),i(kk,mk),i(fk,gk),i(fk,bk),i(bk,yk),i(fk,Ek),l(a,vk,n),l(a,wk,n),i(wk,xk),i(xk,Tk),i(Tk,Ak),i(Tk,Ik),i(Ik,Ck),i(wk,Ok),i(wk,Pk),i(Pk,Lk),i(Pk,Sk),i(Sk,jk),i(Pk,Dk),i(Pk,Mk),i(Mk,Hk),i(Pk,$k),i(Pk,Nk),i(Nk,Rk),i(Pk,Fk),i(Pk,Uk),i(Uk,Bk),i(Pk,qk),i(wk,Wk),i(wk,zk),zk.innerHTML='<code class="language-js"><span class="token comment">// filename: package.json</span>\n<span class="token punctuation">&#123;</span>\n  <span class="token string">"resolutions"</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>\n    <span class="token string">"@babel/helpers"</span><span class="token punctuation">:</span> <span class="token string">"7.6.0--your-custom-forked-version"</span><span class="token punctuation">,</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(wk,Jk),i(wk,Gk),i(Gk,_k),i(_k,Xk),i(Xk,Yk),i(_k,Vk),i(_k,Zk),i(Zk,Kk),i(_k,Qk),i(wk,am),i(wk,nm),i(nm,em),i(nm,sm),i(sm,tm),i(nm,om),i(wk,rm),i(wk,cm),i(cm,pm),i(cm,im),i(im,lm),i(cm,um),i(wk,hm),i(wk,fm),fm.innerHTML='<code class="language-js">helpers<span class="token punctuation">.</span><span class="token property-access">currying</span> <span class="token operator">=</span> <span class="token function">helper</span><span class="token punctuation">(</span><span class="token string">"7.6.0"</span><span class="token punctuation">)</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">\n  export default function currying(fn) &#123;\n    const numParamsRequired = fn.length;\n    function curryFactory(params) &#123;\n      return function (...args) &#123;\n        const newParams = params.concat(args);\n        if (newParams.length >= numParamsRequired) &#123;\n          return fn(...newParams);\n        &#125;\n        return curryFactory(newParams);\n      &#125;\n    &#125;\n    return curryFactory([]);\n  &#125;\n</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">;</span></code>',i(wk,dm),i(wk,km),i(km,mm),i(km,gm),i(gm,bm),i(km,ym),i(km,Em),i(Em,vm),i(km,wm),i(km,xm),i(xm,Tm),i(km,Am),i(wk,Im),i(wk,Cm),i(Cm,Om),i(Cm,Pm),i(Pm,Lm),i(Cm,Sm),i(wk,jm),i(wk,Dm),Dm.innerHTML='<code class="language-js"><span class="token comment">// ...</span>\npath<span class="token punctuation">.</span><span class="token method function property-access">replaceWith</span><span class="token punctuation">(</span>\n  t<span class="token punctuation">.</span><span class="token method function property-access">variableDeclaration</span><span class="token punctuation">(</span><span class="token string">\'const\'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n    t<span class="token punctuation">.</span><span class="token method function property-access">variableDeclarator</span><span class="token punctuation">(</span>\n      t<span class="token punctuation">.</span><span class="token method function property-access">identifier</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token method function property-access">get</span><span class="token punctuation">(</span><span class="token string">\'id.name\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token property-access">node</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      t<span class="token punctuation">.</span><span class="token method function property-access">callExpression</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token method function property-access">addHelper</span><span class="token punctuation">(</span><span class="token string">"currying"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n        t<span class="token punctuation">.</span><span class="token method function property-access">toExpression</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token property-access">node</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">]</span><span class="token punctuation">)</span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span></code>',i(wk,Mm),i(wk,Hm),i(Hm,$m),i(Hm,Nm),i(Nm,Rm),i(Hm,Fm),i(Hm,Um),i(Um,Bm),i(Hm,qm),l(a,Wm,n),l(a,zm,n),i(zm,Jm),i(Jm,Gm),i(Gm,_m),i(zm,Xm),i(zm,Ym),i(Ym,Vm),i(Ym,Zm),i(Zm,Km),i(Zm,Qm),i(Qm,ag),i(Zm,ng),i(Ym,eg),i(Ym,sg),i(sg,tg),i(Ym,og),i(Ym,rg),i(rg,cg),i(Ym,pg),i(zm,ig),i(zm,lg),i(lg,ug),i(lg,hg),i(hg,fg),i(lg,dg),i(zm,kg),i(zm,mg),i(mg,gg),i(mg,bg),i(bg,yg),i(mg,Eg),i(mg,vg),i(vg,wg),i(mg,xg),i(zm,Tg),i(zm,Ag),i(Ag,Ig),i(Ag,Cg),i(Cg,Og),i(Ag,Pg),i(zm,Lg),i(zm,Sg),l(a,jg,n),l(a,Dg,n),i(Dg,Mg),i(Mg,Hg),i(Hg,$g),i(Dg,Ng),i(Dg,Rg),i(Rg,Fg),i(Dg,Ug),i(Dg,Bg),i(Bg,qg),i(Dg,Wg),i(Dg,zg),i(zg,Jg),i(zg,Gg),i(Gg,_g),i(zg,Xg),i(Dg,Yg),i(Dg,Vg),i(Vg,Zg),i(Vg,Kg),i(Kg,Qg),i(Vg,ab),l(a,nb,n),l(a,eb,n),i(eb,sb),i(sb,tb),i(tb,ob),i(eb,rb),i(eb,cb),i(cb,pb),i(eb,ib),i(eb,lb),i(lb,ub),i(ub,hb),i(hb,fb),i(ub,db),i(ub,kb),i(kb,mb),i(lb,gb),i(lb,bb),i(bb,yb),i(yb,Eb),i(bb,vb),i(lb,wb),i(lb,xb),i(xb,Tb),i(Tb,Ab),i(xb,Ib),i(xb,Cb),i(Cb,Ob),i(eb,Pb),i(eb,Lb),i(Lb,Sb),i(eb,jb),i(eb,Db),i(Db,Mb),i(Mb,Hb),i(Hb,$b),i(Mb,Nb),i(Mb,Rb),i(Rb,Fb),i(Db,Ub),i(Db,Bb),i(Bb,qb),i(qb,Wb),i(Bb,zb),i(Bb,Jb),i(Jb,Gb),i(Db,_b),i(Db,Xb),i(Xb,Yb),i(Yb,Vb),i(Db,Zb),i(Db,Kb),i(Kb,Qb),i(Qb,ay)},p:a,d(a){a&&u(e),a&&u(pa),a&&u(ia),a&&u(da),a&&u(ka),a&&u(_n),a&&u(Xn),a&&u(Je),a&&u(Ge),a&&u(Vs),a&&u(Zs),a&&u(Hr),a&&u($r),a&&u(qc),a&&u(Wc),a&&u(ri),a&&u(ci),a&&u(ql),a&&u(Wl),a&&u(Yh),a&&u(Vh),a&&u(Wd),a&&u(zd),a&&u(vk),a&&u(wk),a&&u(Wm),a&&u(zm),a&&u(jg),a&&u(Dg),a&&u(nb),a&&u(eb)}}}function fa(a){let e,s;const t=[da];let o={$$slots:{default:[ha]},$$scope:{ctx:a}};for(let a=0;a<t.length;a+=1)o=n(o,t[a]);return e=new ua({props:o}),{c(){z(e.$$.fragment)},l(a){J(e.$$.fragment,a)},m(a,n){G(e,a,n),s=!0},p(a,[n]){const s=0&n?function(a,n){const e={},s={},t={$$scope:1};let o=a.length;for(;o--;){const r=a[o],c=n[o];if(c){for(const a in r)a in c||(s[a]=1);for(const a in c)t[a]||(e[a]=c[a],t[a]=1);a[o]=c}else for(const a in r)t[a]=1}for(const a in s)a in e||(e[a]=void 0);return e}(t,[(o=da,"object"==typeof o&&null!==o?o:{})]):{};var o;1&n&&(s.$$scope={dirty:n,ctx:a}),e.$set(s)},i(a){s||(q(e.$$.fragment,a),s=!0)},o(a){W(e.$$.fragment,a),s=!1},d(a){_(e,a)}}}const da={title:"Creating custom JavaScript syntax with Babel",date:"2019-09-25T08:00:00Z",description:"Forking babel parser and creating your custom JavaScript syntax isn't as hard as you think.",tags:["JavaScript","babel","ast","transform"],series:"Intermediate Babel",slug:"creating-custom-javascript-syntax-with-babel",type:"blog"};class ka extends V{constructor(a){super(),Y(this,a,null,fa,r,{})}}setTimeout(()=>{new ka({target:document.querySelector("#app"),hydrate:!0});if(document.querySelector(".twitter-tweet")){const a=document.createElement("script");a.async=!0,a.src="https://platform.twitter.com/widgets.js",a.charset="utf-8",document.body.appendChild(a)}if("loading"in HTMLImageElement.prototype){document.querySelectorAll('img[loading="lazy"]').forEach(a=>{a.src=a.dataset.src})}else{const a=document.createElement("script");a.src="https://cdnjs.cloudflare.com/ajax/libs/lazysizes/5.1.2/lazysizes.min.js",document.body.appendChild(a)}},3e3);
