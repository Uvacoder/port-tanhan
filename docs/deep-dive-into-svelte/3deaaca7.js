function n(){}function a(n,a){for(const t in a)n[t]=a[t];return n}function t(n){return n()}function s(){return Object.create(null)}function e(n){n.forEach(t)}function o(n){return"function"==typeof n}function c(n,a){return n!=n?a==a:n!==a||n&&"object"==typeof n||"function"==typeof n}function p(n,t,s,e){return n[1]&&e?a(s.ctx.slice(),n[1](e(t))):s.ctx}function r(n,a,t,s,e,o,c){const r=function(n,a,t,s){if(n[2]&&s){const e=n[2](s(t));if(void 0===a.dirty)return e;if("object"==typeof e){const n=[],t=Math.max(a.dirty.length,e.length);for(let s=0;s<t;s+=1)n[s]=a.dirty[s]|e[s];return n}return a.dirty|e}return a.dirty}(a,s,e,o);if(r){const e=p(a,t,s,c);n.p(e,r)}}function l(n,a){n.appendChild(a)}function i(n,a,t){n.insertBefore(a,t||null)}function u(n){n.parentNode.removeChild(n)}function h(n,a){for(let t=0;t<n.length;t+=1)n[t]&&n[t].d(a)}function k(n){return document.createElement(n)}function f(n){return document.createElementNS("http://www.w3.org/2000/svg",n)}function d(n){return document.createTextNode(n)}function m(){return d(" ")}function v(){return d("")}function g(n,a,t){null==t?n.removeAttribute(a):n.getAttribute(a)!==t&&n.setAttribute(a,t)}function E(n){return Array.from(n.childNodes)}function w(n,a,t,s){for(let s=0;s<n.length;s+=1){const e=n[s];if(e.nodeName===a){let a=0;const o=[];for(;a<e.attributes.length;){const n=e.attributes[a++];t[n.name]||o.push(n.name)}for(let n=0;n<o.length;n++)e.removeAttribute(o[n]);return n.splice(s,1)[0]}}return s?f(a):k(a)}function y(n,a){for(let t=0;t<n.length;t+=1){const s=n[t];if(3===s.nodeType)return s.data=""+a,n.splice(t,1)[0]}return d(a)}function b(n){return y(n," ")}function S(n,a){a=""+a,n.wholeText!==a&&(n.data=a)}function T(n,a){n.value=null==a?"":a}class C{constructor(n=null){this.a=n,this.e=this.n=null}m(n,a,t=null){this.e||(this.e=k(a.nodeName),this.t=a,this.h(n)),this.i(t)}h(n){this.e.innerHTML=n,this.n=Array.from(this.e.childNodes)}i(n){for(let a=0;a<this.n.length;a+=1)i(this.t,this.n[a],n)}p(n){this.d(),this.h(n),this.i(this.a)}d(){this.n.forEach(u)}}let O;function x(n){O=n}function $(n){(function(){if(!O)throw new Error("Function called outside component initialization");return O})().$$.on_mount.push(n)}const P=[],L=[],D=[],M=[],I=Promise.resolve();let A=!1;function R(n){D.push(n)}let j=!1;const H=new Set;function N(){if(!j){j=!0;do{for(let n=0;n<P.length;n+=1){const a=P[n];x(a),_(a.$$)}for(P.length=0;L.length;)L.pop()();for(let n=0;n<D.length;n+=1){const a=D[n];H.has(a)||(H.add(a),a())}D.length=0}while(P.length);for(;M.length;)M.pop()();A=!1,j=!1,H.clear()}}function _(n){if(null!==n.fragment){n.update(),e(n.before_update);const a=n.dirty;n.dirty=[-1],n.fragment&&n.fragment.p(n.ctx,a),n.after_update.forEach(R)}}const B=new Set;function W(n,a){n&&n.i&&(B.delete(n),n.i(a))}function G(n,a,t,s){if(n&&n.o){if(B.has(n))return;B.add(n),(void 0).c.push(()=>{B.delete(n),s&&(t&&n.d(1),s())}),n.o(a)}}function F(n){n&&n.c()}function J(n,a){n&&n.l(a)}function q(n,a,s){const{fragment:c,on_mount:p,on_destroy:r,after_update:l}=n.$$;c&&c.m(a,s),R(()=>{const a=p.map(t).filter(o);r?r.push(...a):e(a),n.$$.on_mount=[]}),l.forEach(R)}function U(n,a){const t=n.$$;null!==t.fragment&&(e(t.on_destroy),t.fragment&&t.fragment.d(a),t.on_destroy=t.fragment=null,t.ctx=[])}function Y(n,a){-1===n.$$.dirty[0]&&(P.push(n),A||(A=!0,I.then(N)),n.$$.dirty.fill(0)),n.$$.dirty[a/31|0]|=1<<a%31}function z(a,t,o,c,p,r,l=[-1]){const i=O;x(a);const h=t.props||{},k=a.$$={fragment:null,ctx:null,props:r,update:n,not_equal:p,bound:s(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(i?i.$$.context:[]),callbacks:s(),dirty:l};let f=!1;if(k.ctx=o?o(a,h,(n,t,...s)=>{const e=s.length?s[0]:t;return k.ctx&&p(k.ctx[n],k.ctx[n]=e)&&(k.bound[n]&&k.bound[n](e),f&&Y(a,n)),t}):[],k.update(),f=!0,e(k.before_update),k.fragment=!!c&&c(k.ctx),t.target){if(t.hydrate){const n=E(t.target);k.fragment&&k.fragment.l(n),n.forEach(u)}else k.fragment&&k.fragment.c();t.intro&&W(a.$$.fragment),q(a,t.target,t.anchor),N()}x(i)}class V{$destroy(){U(this,1),this.$destroy=n}$on(n,a){const t=this.$$.callbacks[n]||(this.$$.callbacks[n]=[]);return t.push(a),()=>{const n=t.indexOf(a);-1!==n&&t.splice(n,1)}}$set(){}}function Z(a){let t,s,e,o,c,p,r,h,v,S,T,C,O,x,$,P,L,D,M,I,A,R,j,H,N,_,B,W,G,F,J,q,U,Y,z;return{c(){t=k("header"),s=k("nav"),e=k("ul"),o=k("li"),c=k("a"),p=d("Tan Li Hau"),r=m(),h=k("li"),v=k("a"),S=d("About"),T=m(),C=k("li"),O=k("a"),x=d("Writings"),$=m(),P=k("li"),L=k("a"),D=d("Talks"),M=m(),I=k("li"),A=k("a"),R=d("Notes"),j=m(),H=k("li"),N=k("a"),_=d("Newsletter"),B=m(),W=k("li"),G=k("a"),F=f("svg"),J=f("path"),q=m(),U=k("a"),Y=f("svg"),z=f("path"),this.h()},l(n){t=w(n,"HEADER",{class:!0});var a=E(t);s=w(a,"NAV",{});var l=E(s);e=w(l,"UL",{class:!0});var i=E(e);o=w(i,"LI",{class:!0});var k=E(o);c=w(k,"A",{href:!0,class:!0});var f=E(c);p=y(f,"Tan Li Hau"),f.forEach(u),k.forEach(u),r=b(i),h=w(i,"LI",{class:!0});var d=E(h);v=w(d,"A",{href:!0,class:!0});var m=E(v);S=y(m,"About"),m.forEach(u),d.forEach(u),T=b(i),C=w(i,"LI",{class:!0});var g=E(C);O=w(g,"A",{href:!0,class:!0});var V=E(O);x=y(V,"Writings"),V.forEach(u),g.forEach(u),$=b(i),P=w(i,"LI",{class:!0});var Z=E(P);L=w(Z,"A",{href:!0,class:!0});var K=E(L);D=y(K,"Talks"),K.forEach(u),Z.forEach(u),M=b(i),I=w(i,"LI",{class:!0});var Q=E(I);A=w(Q,"A",{href:!0,class:!0});var X=E(A);R=y(X,"Notes"),X.forEach(u),Q.forEach(u),j=b(i),H=w(i,"LI",{class:!0});var nn=E(H);N=w(nn,"A",{href:!0,class:!0});var an=E(N);_=y(an,"Newsletter"),an.forEach(u),nn.forEach(u),B=b(i),W=w(i,"LI",{class:!0});var tn=E(W);G=w(tn,"A",{"aria-label":!0,href:!0,class:!0});var sn=E(G);F=w(sn,"svg",{viewBox:!0,width:!0,height:!0,class:!0},1);var en=E(F);J=w(en,"path",{d:!0},1),E(J).forEach(u),en.forEach(u),sn.forEach(u),q=b(tn),U=w(tn,"A",{"aria-label":!0,href:!0,class:!0});var on=E(U);Y=w(on,"svg",{viewBox:!0,width:!0,height:!0,class:!0},1);var cn=E(Y);z=w(cn,"path",{d:!0},1),E(z).forEach(u),cn.forEach(u),on.forEach(u),tn.forEach(u),i.forEach(u),l.forEach(u),a.forEach(u),this.h()},h(){g(c,"href","/"),g(c,"class","svelte-f3e4uo"),g(o,"class","svelte-f3e4uo"),g(v,"href","/about"),g(v,"class","svelte-f3e4uo"),g(h,"class","svelte-f3e4uo"),g(O,"href","/blogs"),g(O,"class","svelte-f3e4uo"),g(C,"class","svelte-f3e4uo"),g(L,"href","/talks"),g(L,"class","svelte-f3e4uo"),g(P,"class","svelte-f3e4uo"),g(A,"href","/notes"),g(A,"class","svelte-f3e4uo"),g(I,"class","svelte-f3e4uo"),g(N,"href","/newsletter"),g(N,"class","svelte-f3e4uo"),g(H,"class","svelte-f3e4uo"),g(J,"d","M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66\n    10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5\n    4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"),g(F,"viewBox","0 0 24 24"),g(F,"width","1em"),g(F,"height","1em"),g(F,"class","svelte-f3e4uo"),g(G,"aria-label","Twitter account"),g(G,"href","https://twitter.com/lihautan"),g(G,"class","svelte-f3e4uo"),g(z,"d","M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0\n    0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07\n    5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65\n    5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42\n    3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"),g(Y,"viewBox","0 0 24 24"),g(Y,"width","1em"),g(Y,"height","1em"),g(Y,"class","svelte-f3e4uo"),g(U,"aria-label","Github account"),g(U,"href","https://github.com/tanhauhau"),g(U,"class","svelte-f3e4uo"),g(W,"class","social svelte-f3e4uo"),g(e,"class","svelte-f3e4uo"),g(t,"class","svelte-f3e4uo")},m(n,a){i(n,t,a),l(t,s),l(s,e),l(e,o),l(o,c),l(c,p),l(e,r),l(e,h),l(h,v),l(v,S),l(e,T),l(e,C),l(C,O),l(O,x),l(e,$),l(e,P),l(P,L),l(L,D),l(e,M),l(e,I),l(I,A),l(A,R),l(e,j),l(e,H),l(H,N),l(N,_),l(e,B),l(e,W),l(W,G),l(G,F),l(F,J),l(W,q),l(W,U),l(U,Y),l(Y,z)},p:n,i:n,o:n,d(n){n&&u(t)}}}class K extends V{constructor(n){super(),z(this,n,null,Z,c,{})}}function Q(a){let t,s,e,o,c,p,r,h,f,v,S,C,O,x,$,P,L,D,M,I;return{c(){t=k("div"),s=k("h1"),e=d("Subscribe to my newsletter"),o=m(),c=k("h2"),p=d("Get the latest blog posts and project updates delivered right to your inbox"),r=m(),h=k("form"),f=k("div"),v=k("input"),S=m(),C=k("input"),x=m(),$=k("input"),P=m(),L=k("p"),D=d("Powered by Buttondown."),this.h()},l(n){t=w(n,"DIV",{class:!0});var a=E(t);s=w(a,"H1",{});var l=E(s);e=y(l,"Subscribe to my newsletter"),l.forEach(u),o=b(a),c=w(a,"H2",{class:!0});var i=E(c);p=y(i,"Get the latest blog posts and project updates delivered right to your inbox"),i.forEach(u),r=b(a),h=w(a,"FORM",{action:!0,method:!0,target:!0,onsubmit:!0,class:!0});var k=E(h);f=w(k,"DIV",{class:!0});var d=E(f);v=w(d,"INPUT",{type:!0,name:!0,id:!0,"aria-label":!0,placeholder:!0,class:!0}),S=b(d),C=w(d,"INPUT",{type:!0,value:!0,disabled:!0,class:!0}),d.forEach(u),x=b(k),$=w(k,"INPUT",{type:!0,value:!0,name:!0,class:!0}),P=b(k),L=w(k,"P",{class:!0});var m=E(L);D=y(m,"Powered by Buttondown."),m.forEach(u),k.forEach(u),a.forEach(u),this.h()},h(){g(c,"class","svelte-1k1s1co"),g(v,"type","email"),g(v,"name","email"),g(v,"id","bd-email"),g(v,"aria-label","email address"),g(v,"placeholder","youremail@example.com"),g(v,"class","svelte-1k1s1co"),g(C,"type","submit"),C.value="Subscribe",C.disabled=O=!a[0],g(C,"class","svelte-1k1s1co"),g(f,"class","form-item svelte-1k1s1co"),g($,"type","hidden"),$.value="1",g($,"name","embed"),g($,"class","svelte-1k1s1co"),g(L,"class","svelte-1k1s1co"),g(h,"action","https://buttondown.email/api/emails/embed-subscribe/lihautan"),g(h,"method","post"),g(h,"target","popupwindow"),g(h,"onsubmit","window.open('https://buttondown.email/lihautan', 'popupwindow')"),g(h,"class","embeddable-buttondown-form"),g(t,"class","form svelte-1k1s1co")},m(n,u){var k,d,m,g;i(n,t,u),l(t,s),l(s,e),l(t,o),l(t,c),l(c,p),l(t,r),l(t,h),l(h,f),l(f,v),T(v,a[0]),l(f,S),l(f,C),l(h,x),l(h,$),l(h,P),l(h,L),l(L,D),M||(k=v,d="input",m=a[1],k.addEventListener(d,m,g),I=()=>k.removeEventListener(d,m,g),M=!0)},p(n,[a]){1&a&&v.value!==n[0]&&T(v,n[0]),1&a&&O!==(O=!n[0])&&(C.disabled=O)},i:n,o:n,d(n){n&&u(t),M=!1,I()}}}function X(n,a,t){let s;return[s,function(){s=this.value,t(0,s)}]}class nn extends V{constructor(n){super(),z(this,n,X,Q,c,{})}}function an(n){return $(()=>(setTimeout(()=>{if(window.innerWidth>1080){const n=document.createElement("script");n.async=!0,n.type="text/javascript",n.src="//cdn.carbonads.com/carbon.js?serve=CE7ITK3E&placement=lihautancom",n.id="_carbonads_js",document.body.appendChild(n)}},5e3),()=>{try{const n=document.getElementById("carbonads");n.parentNode.removeChild(n)}catch(n){}})),[]}class tn extends V{constructor(n){super(),z(this,n,an,null,c,{})}}function sn(n,a,t){const s=n.slice();return s[6]=a[t],s}function en(n,a,t){const s=n.slice();return s[6]=a[t],s}function on(n){let a,t;return{c(){a=k("meta"),this.h()},l(n){a=w(n,"META",{name:!0,content:!0}),this.h()},h(){g(a,"name","keywords"),g(a,"content",t=n[6])},m(n,t){i(n,a,t)},p(n,s){4&s&&t!==(t=n[6])&&g(a,"content",t)},d(n){n&&u(a)}}}function cn(n){let a,t,s=n[6]+"";return{c(){a=k("span"),t=d(s),this.h()},l(n){a=w(n,"SPAN",{class:!0});var e=E(a);t=y(e,s),e.forEach(u),this.h()},h(){g(a,"class","svelte-9tqnza")},m(n,s){i(n,a,s),l(a,t)},p(n,a){4&a&&s!==(s=n[6]+"")&&S(t,s)},d(n){n&&u(a)}}}function pn(n){let a,t,s,e,o,c,f,T,O,x,$,P,L,D,M,I,A,R,j,H,N,_,B,Y,z,V,Z,Q,X,an,pn,rn,ln,un,hn,kn,fn=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"Article",author:n[3],copyrightHolder:n[3],copyrightYear:"2020",creator:n[3],publisher:n[3],description:n[1],headline:n[0],name:n[0],inLanguage:"en"})}<\/script>`,dn=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"BreadcrumbList",description:"Breadcrumbs list",name:"Breadcrumbs",itemListElement:[{"@type":"ListItem",item:{"@id":"https://lihautan.com",name:"Homepage"},position:1},{"@type":"ListItem",item:{"@id":"https%3A%2F%2Flihautan.com%2Fdeep-dive-into-svelte",name:n[0]},position:2}]})}<\/script>`;document.title=a=n[0]+" | Tan Li Hau";let mn=n[2],vn=[];for(let a=0;a<mn.length;a+=1)vn[a]=on(en(n,mn,a));B=new K({});let gn=n[2],En=[];for(let a=0;a<gn.length;a+=1)En[a]=cn(sn(n,gn,a));const wn=n[5].default,yn=function(n,a,t,s){if(n){const e=p(n,a,t,s);return n[0](e)}}(wn,n,n[4],null);return ln=new nn({}),hn=new tn({}),{c(){t=k("meta"),s=k("meta"),e=k("meta"),o=k("meta"),c=k("meta"),f=k("meta"),T=k("meta"),O=k("meta"),x=k("meta"),$=k("meta"),P=k("meta");for(let n=0;n<vn.length;n+=1)vn[n].c();L=k("meta"),D=k("meta"),I=v(),R=v(),j=m(),H=k("a"),N=d("Skip to content"),_=m(),F(B.$$.fragment),Y=m(),z=k("main"),V=k("h1"),Z=d(n[0]),Q=m();for(let n=0;n<En.length;n+=1)En[n].c();X=m(),an=k("article"),yn&&yn.c(),pn=m(),rn=k("footer"),F(ln.$$.fragment),un=m(),F(hn.$$.fragment),this.h()},l(a){const p=function(n,a=document.body){return Array.from(a.querySelectorAll(n))}('[data-svelte="svelte-n0q11s"]',document.head);t=w(p,"META",{name:!0,content:!0}),s=w(p,"META",{name:!0,content:!0}),e=w(p,"META",{name:!0,content:!0}),o=w(p,"META",{name:!0,content:!0}),c=w(p,"META",{name:!0,content:!0}),f=w(p,"META",{name:!0,content:!0}),T=w(p,"META",{name:!0,content:!0}),O=w(p,"META",{name:!0,content:!0}),x=w(p,"META",{name:!0,content:!0}),$=w(p,"META",{name:!0,content:!0}),P=w(p,"META",{name:!0,content:!0});for(let n=0;n<vn.length;n+=1)vn[n].l(p);L=w(p,"META",{itemprop:!0,content:!0}),D=w(p,"META",{itemprop:!0,content:!0}),I=v(),R=v(),p.forEach(u),j=b(a),H=w(a,"A",{href:!0,class:!0});var r=E(H);N=y(r,"Skip to content"),r.forEach(u),_=b(a),J(B.$$.fragment,a),Y=b(a),z=w(a,"MAIN",{id:!0,class:!0});var l=E(z);V=w(l,"H1",{});var i=E(V);Z=y(i,n[0]),i.forEach(u),Q=b(l);for(let n=0;n<En.length;n+=1)En[n].l(l);X=b(l),an=w(l,"ARTICLE",{});var h=E(an);yn&&yn.l(h),h.forEach(u),l.forEach(u),pn=b(a),rn=w(a,"FOOTER",{class:!0});var k=E(rn);J(ln.$$.fragment,k),un=b(k),J(hn.$$.fragment,k),k.forEach(u),this.h()},h(){g(t,"name","description"),g(t,"content",n[1]),g(s,"name","image"),g(s,"content",null),g(e,"name","og:image"),g(e,"content",null),g(o,"name","og:title"),g(o,"content",n[0]),g(c,"name","og:description"),g(c,"content",n[1]),g(f,"name","og:type"),g(f,"content","website"),g(T,"name","twitter:card"),g(T,"content","summary_large_image"),g(O,"name","twitter:creator"),g(O,"content","@lihautan"),g(x,"name","twitter:title"),g(x,"content",n[0]),g($,"name","twitter:description"),g($,"content",n[1]),g(P,"name","twitter:image"),g(P,"content",null),g(L,"itemprop","url"),g(L,"content","https%3A%2F%2Flihautan.com%2Fdeep-dive-into-svelte"),g(D,"itemprop","image"),g(D,"content",null),M=new C(I),A=new C(R),g(H,"href","#content"),g(H,"class","skip svelte-9tqnza"),g(z,"id","content"),g(z,"class","blog svelte-9tqnza"),g(rn,"class","svelte-9tqnza")},m(n,a){l(document.head,t),l(document.head,s),l(document.head,e),l(document.head,o),l(document.head,c),l(document.head,f),l(document.head,T),l(document.head,O),l(document.head,x),l(document.head,$),l(document.head,P);for(let n=0;n<vn.length;n+=1)vn[n].m(document.head,null);l(document.head,L),l(document.head,D),M.m(fn,document.head),l(document.head,I),A.m(dn,document.head),l(document.head,R),i(n,j,a),i(n,H,a),l(H,N),i(n,_,a),q(B,n,a),i(n,Y,a),i(n,z,a),l(z,V),l(V,Z),l(z,Q);for(let n=0;n<En.length;n+=1)En[n].m(z,null);l(z,X),l(z,an),yn&&yn.m(an,null),i(n,pn,a),i(n,rn,a),q(ln,rn,null),l(rn,un),q(hn,rn,null),kn=!0},p(n,[s]){if((!kn||1&s)&&a!==(a=n[0]+" | Tan Li Hau")&&(document.title=a),(!kn||2&s)&&g(t,"content",n[1]),(!kn||1&s)&&g(o,"content",n[0]),(!kn||2&s)&&g(c,"content",n[1]),(!kn||1&s)&&g(x,"content",n[0]),(!kn||2&s)&&g($,"content",n[1]),4&s){let a;for(mn=n[2],a=0;a<mn.length;a+=1){const t=en(n,mn,a);vn[a]?vn[a].p(t,s):(vn[a]=on(t),vn[a].c(),vn[a].m(L.parentNode,L))}for(;a<vn.length;a+=1)vn[a].d(1);vn.length=mn.length}if((!kn||3&s)&&fn!==(fn=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"Article",author:n[3],copyrightHolder:n[3],copyrightYear:"2020",creator:n[3],publisher:n[3],description:n[1],headline:n[0],name:n[0],inLanguage:"en"})}<\/script>`)&&M.p(fn),(!kn||1&s)&&dn!==(dn=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"BreadcrumbList",description:"Breadcrumbs list",name:"Breadcrumbs",itemListElement:[{"@type":"ListItem",item:{"@id":"https://lihautan.com",name:"Homepage"},position:1},{"@type":"ListItem",item:{"@id":"https%3A%2F%2Flihautan.com%2Fdeep-dive-into-svelte",name:n[0]},position:2}]})}<\/script>`)&&A.p(dn),(!kn||1&s)&&S(Z,n[0]),4&s){let a;for(gn=n[2],a=0;a<gn.length;a+=1){const t=sn(n,gn,a);En[a]?En[a].p(t,s):(En[a]=cn(t),En[a].c(),En[a].m(z,X))}for(;a<En.length;a+=1)En[a].d(1);En.length=gn.length}yn&&yn.p&&16&s&&r(yn,wn,n,n[4],s,null,null)},i(n){kn||(W(B.$$.fragment,n),W(yn,n),W(ln.$$.fragment,n),W(hn.$$.fragment,n),kn=!0)},o(n){G(B.$$.fragment,n),G(yn,n),G(ln.$$.fragment,n),G(hn.$$.fragment,n),kn=!1},d(n){u(t),u(s),u(e),u(o),u(c),u(f),u(T),u(O),u(x),u($),u(P),h(vn,n),u(L),u(D),u(I),n&&M.d(),u(R),n&&A.d(),n&&u(j),n&&u(H),n&&u(_),U(B,n),n&&u(Y),n&&u(z),h(En,n),yn&&yn.d(n),n&&u(pn),n&&u(rn),U(ln),U(hn)}}}function rn(n,a,t){let{title:s=""}=a,{description:e=""}=a,{tags:o=[]}=a;const c={"@type":"Person",name:"Tan Li Hau"};let{$$slots:p={},$$scope:r}=a;return n.$set=n=>{"title"in n&&t(0,s=n.title),"description"in n&&t(1,e=n.description),"tags"in n&&t(2,o=n.tags),"$$scope"in n&&t(4,r=n.$$scope)},[s,e,o,c,r,p]}class ln extends V{constructor(n){super(),z(this,n,rn,pn,c,{title:0,description:1,tags:2})}}function un(a){let t,s,e,o,c,p,r,h,f,v,S,T,C,O,x,$,P,L,D,M,I,A,R,j,H,N,_,B,W,G,F,J,q,U,Y,z,V,Z,K,Q,X,nn,an,tn,sn,en,on,cn,pn,rn,ln,un,hn,kn,fn,dn,mn,vn,gn,En,wn,yn,bn,Sn,Tn,Cn,On,xn,$n,Pn,Ln,Dn,Mn,In,An,Rn,jn,Hn,Nn,_n,Bn,Wn,Gn,Fn,Jn,qn,Un,Yn,zn,Vn,Zn,Kn,Qn,Xn,na,aa,ta,sa,ea,oa,ca,pa,ra,la,ia,ua,ha,ka,fa,da,ma,va,ga,Ea,wa,ya,ba,Sa,Ta,Ca,Oa,xa,$a,Pa,La,Da,Ma,Ia,Aa,Ra,ja,Ha,Na,_a,Ba,Wa,Ga,Fa,Ja,qa,Ua,Ya,za,Va,Za,Ka,Qa,Xa,nt,at,tt,st,et,ot,ct,pt,rt,lt,it,ut,ht,kt,ft,dt,mt,vt,gt,Et,wt,yt,bt,St,Tt,Ct,Ot,xt,$t,Pt,Lt,Dt,Mt,It,At,Rt,jt,Ht,Nt,_t,Bt,Wt,Gt,Ft,Jt,qt,Ut,Yt,zt,Vt,Zt,Kt,Qt,Xt,ns,as,ts,ss,es,os,cs,ps,rs,ls,is,us,hs,ks,fs,ds,ms,vs,gs,Es,ws,ys,bs,Ss,Ts,Cs,Os,xs,$s,Ps,Ls,Ds,Ms,Is,As,Rs,js,Hs,Ns,_s,Bs,Ws,Gs,Fs,Js,qs,Us,Ys,zs,Vs,Zs,Ks,Qs,Xs,ne,ae,te,se,ee,oe,ce,pe,re,le,ie,ue,he,ke,fe,de,me,ve,ge,Ee,we,ye,be,Se,Te,Ce,Oe,xe,$e,Pe,Le,De,Me,Ie,Ae,Re,je,He,Ne,_e,Be,We,Ge,Fe,Je,qe,Ue,Ye,ze,Ve,Ze,Ke,Qe,Xe,no,ao,to,so,eo,oo,co,po,ro,lo,io,uo,ho,ko,fo,mo,vo,go,Eo,wo,yo,bo,So,To,Co,Oo,xo,$o,Po,Lo,Do,Mo,Io,Ao,Ro,jo,Ho,No,_o,Bo,Wo,Go,Fo,Jo,qo,Uo,Yo,zo,Vo,Zo,Ko,Qo,Xo,nc,ac,tc,sc,ec,oc,cc,pc,rc,lc,ic,uc,hc,kc,fc,dc,mc,vc,gc,Ec,wc,yc,bc,Sc,Tc,Cc,Oc,xc,$c,Pc,Lc,Dc,Mc,Ic,Ac,Rc,jc,Hc,Nc,_c,Bc,Wc,Gc,Fc,Jc,qc,Uc,Yc,zc,Vc,Zc,Kc,Qc,Xc,np,ap,tp,sp,ep,op,cp,pp,rp,lp,ip,up,hp,kp,fp,dp,mp,vp,gp,Ep,wp,yp,bp,Sp,Tp,Cp,Op,xp,$p,Pp,Lp,Dp,Mp,Ip,Ap,Rp,jp,Hp,Np,_p,Bp,Wp,Gp,Fp,Jp,qp,Up,Yp,zp,Vp,Zp,Kp,Qp,Xp,nr,ar,tr,sr,er,or,cr,pr,rr,lr,ir,ur,hr,kr,fr,dr,mr,vr,gr,Er,wr,yr,br,Sr,Tr,Cr,Or,xr,$r,Pr,Lr,Dr,Mr,Ir,Ar,Rr,jr,Hr,Nr,_r,Br,Wr,Gr,Fr,Jr,qr,Ur,Yr,zr,Vr,Zr,Kr,Qr,Xr,nl,al,tl,sl,el,ol,cl,pl,rl,ll,il,ul,hl,kl,fl,dl,ml,vl,gl,El,wl,yl,bl,Sl,Tl,Cl,Ol,xl,$l,Pl,Ll,Dl,Ml,Il,Al,Rl,jl,Hl,Nl,_l,Bl,Wl,Gl,Fl,Jl,ql,Ul,Yl,zl,Vl,Zl,Kl,Ql,Xl,ni,ai,ti,si,ei,oi,ci,pi,ri,li,ii,ui,hi,ki,fi,di,mi,vi,gi,Ei,wi,yi,bi,Si,Ti,Ci,Oi,xi,$i,Pi,Li,Di,Mi,Ii,Ai,Ri,ji,Hi,Ni,_i,Bi,Wi,Gi,Fi,Ji,qi,Ui,Yi,zi,Vi,Zi,Ki,Qi,Xi,nu,au,tu,su,eu,ou,cu,pu,ru,lu,iu,uu,hu,ku,fu,du,mu,vu,gu,Eu,wu,yu,bu,Su,Tu,Cu,Ou,xu,$u,Pu,Lu,Du,Mu,Iu,Au,Ru,ju,Hu,Nu,_u,Bu,Wu,Gu,Fu,Ju,qu,Uu,Yu,zu,Vu,Zu,Ku,Qu,Xu,nh,ah,th,sh,eh,oh,ch,ph,rh,lh,ih,uh,hh,kh,fh,dh,mh,vh,gh,Eh,wh,yh,bh,Sh,Th,Ch,Oh,xh,$h,Ph,Lh,Dh,Mh,Ih,Ah,Rh,jh,Hh,Nh,_h,Bh,Wh,Gh,Fh,Jh,qh,Uh,Yh,zh,Vh,Zh,Kh,Qh,Xh,nk,ak,tk,sk;return{c(){t=k("section"),s=k("ul"),e=k("li"),o=k("a"),c=d("What is Svelte?"),p=k("ul"),r=k("li"),h=k("a"),f=d("Writing vanilla JavaScript"),v=k("li"),S=k("a"),T=d("Conceptually, how does compiled Svelte component work?"),C=k("li"),O=k("a"),x=d("How the compiled Svelte component works"),$=k("ul"),P=k("li"),L=k("a"),D=d("Pieces them together"),M=k("li"),I=k("a"),A=d("The Svelte compiler"),R=m(),j=k("section"),H=k("h1"),N=k("a"),_=d("[DRAFT] What is Svelte?"),B=m(),W=k("p"),G=d("-- this is a work in progress draft, you can read "),F=k("a"),J=d("Compile Svelte in your Head"),q=d(" which is a more friendly version --"),U=m(),Y=k("p"),z=k("a"),V=d("Svelte"),Z=d(" is a compiler for web applications. Svelte provides a framework for you to write your web apps declaratively, and it will compile them into efficient JavaScript."),K=m(),Q=k("p"),X=d("In this article, I will be sharing how Svelte works."),nn=m(),an=k("p"),tn=d("If you are:"),sn=m(),en=k("ul"),on=k("li"),cn=k("p"),pn=k("strong"),rn=d("First time hearing Svelte?"),ln=m(),un=k("p"),hn=d("Please go and watch "),kn=k("a"),fn=d("Rich Harris"),dn=d(" inspiring talk on "),mn=k("a"),vn=d('"Rethinking reactivity"'),gn=d(" where he announces Svelte."),En=m(),wn=k("li"),yn=k("p"),bn=k("strong"),Sn=d("Interested learning how to write Svelte application?"),Tn=m(),Cn=k("p"),On=d("Please follow along "),xn=k("a"),$n=d("Svelte's interactive tutorial"),Pn=d(", I find it very helpful and it get me started in no time!"),Ln=m(),Dn=k("p"),Mn=d("Because, I will be going deep level by level, guiding you through the source code sometimes, explaining how Svelte works."),In=m(),An=k("ul"),Rn=k("li"),jn=d("look at code written in vanilla vs using framework"),Hn=k("ul"),Nn=k("li"),_n=d("compile time vs build time spectrum, svelte and react opposite side of the spectrum"),Bn=m(),Wn=k("li"),Gn=d("a picture of how a svelte component works"),Fn=k("ul"),Jn=k("li"),qn=m(),Un=k("section"),Yn=k("h2"),zn=k("a"),Vn=d("Writing vanilla JavaScript"),Zn=m(),Kn=k("p"),Qn=d("Before we get started, lets' do an exercise."),Xn=m(),na=k("p"),aa=d("Let's write a counter app like below, without using any framework:"),ta=m(),sa=k("div"),ea=k("button"),oa=d("-"),ca=m(),pa=k("span"),ra=d("0"),la=m(),ia=k("button"),ua=d("+"),ha=m(),ka=k("script"),fa=d("let count = 0;\n    const span = document.querySelector('#ex1-count');\n    document.querySelector('#ex1-decrement').onclick = () => span.textContent = --count;\n    document.querySelector('#ex1-increment').onclick = () => span.textContent = ++count;"),da=m(),ma=k("p"),va=d("There are generally 2 approaches to this:"),ga=m(),Ea=k("p"),wa=k("strong"),ya=d("1. HTML + JS"),ba=m(),Sa=k("p"),Ta=d("You build your app layout in HTML:"),Ca=m(),Oa=k("pre"),xa=m(),$a=k("p"),Pa=d("then in JS, you use id selector to query out the dynamic part of your HTML and attach event listeners to respond to user inputs:"),La=m(),Da=k("pre"),Ma=m(),Ia=k("p"),Aa=k("strong"),Ra=d("2. JS only"),ja=m(),Ha=k("p"),Na=d("If you want to have more than 1 counter, the former approach may require you to "),_a=k("em"),Ba=d("copy + paste"),Wa=d(" your HTML "),Ga=k("em"),Fa=d("n"),Ja=d(" times for "),qa=k("em"),Ua=d("n"),Ya=d(" number of counters."),za=m(),Va=k("p"),Za=d("The alternative would be to build the HTML elements programatically:"),Ka=m(),Qa=k("pre"),Xa=m(),nt=k("p"),at=d("This is the least amount of code to be written for a counter app."),tt=m(),st=k("p"),et=k("em"),ot=d("(One may argue that you can abstract out "),ct=k("code"),pt=d("document.createElement"),rt=d(" or "),lt=k("code"),it=d("parent.appendChild"),ut=d(" to a function to make the code smaller, but that's besides the point.)"),ht=m(),kt=k("p"),ft=d("This is the least amount of code to be written "),dt=k("strong"),mt=d("and be executed by the browser"),vt=d(" for a counter app."),gt=m(),Et=k("p"),wt=d("So why does this matter? Well, before we proceed to explain how this got to do with Svelte, let's first talk about React."),yt=m(),bt=k("p"),St=k("em"),Tt=d("I chose to talk about React "),Ct=k("strong"),Ot=d("just because I am a React developer"),xt=d(", I use React at my work and at this very blog site. I am most familiar with React than any other JS frameworks out there"),$t=m(),Pt=k("p"),Lt=d("In React, you can argubly write a much concise and declarative code:"),Dt=m(),Mt=k("pre"),It=m(),At=k("p"),Rt=d("That's because React has hidden all the "),jt=k("code"),Ht=d("document.createElement"),Nt=d(", "),_t=k("code"),Bt=d("parent.appendChild"),Wt=d(", ... under "),Gt=k("a"),Ft=k("code"),Jt=d("react-dom"),qt=d(" renderer."),Ut=m(),Yt=k("p"),zt=d("Everytime you click on a counter button, the function "),Vt=k("code"),Zt=d("Counter"),Kt=d(" is called to get the new "),Qt=k("a"),Xt=d("Fiber tree"),ns=d(" with the new state value, and it is compared with the current Fiber tree. After the diffing between the 2 Fiber tree, React collects the necessary DOM operations, in this case is to update "),as=k("code"),ts=d("span"),ss=d("'s "),es=k("code"),os=d("textContent"),cs=d("."),ps=m(),rs=k("p"),ls=d("If you feel this is overly complicated, wait, there is more."),is=m(),us=k("p"),hs=d("When the "),ks=k("code"),fs=d("react-dom"),ds=m(),ms=k("a"),vs=d("receives the DOM operations"),gs=d(", it receives "),Es=k("code"),ws=d("['span', { 'children': '1' }]"),ys=d(", the element and the update payload, and "),bs=k("code"),Ss=d("react-dom"),Ts=d(" has to figure out that "),Cs=k("code"),Os=d("children"),xs=d(" meant "),$s=k("a"),Ps=d("setting the "),Ls=k("code"),Ds=d("textContent"),Ms=d("."),Is=m(),As=k("p"),Rs=d("As you can see, there's a lot of code "),js=k("strong"),Hs=d("executed"),Ns=d(" under the hood, which you may think is overkill for this contrived example. But with a much larger/complex application, you will soon appreciate the flexibilty React provides. to achieve that, react has to make sure it has code to capture all the different scenarios, without knowing what will be written by us, the developer."),_s=m(),Bs=k("p"),Ws=d("Now, here is how Svelte is different. "),Gs=k("strong"),Fs=d("Svelte is a compiler"),Js=d(". Svelte knows what we, the developer, has written, and generate only code that is needed for our application."),qs=m(),Us=k("p"),Ys=d("Here's what Svelte generated for our Counter app ("),zs=k("a"),Vs=d("repl"),Zs=d("):"),Ks=m(),Qs=k("pre"),Xs=m(),ne=k("p"),ae=k("strong"),te=d("Disclaimer:"),se=m(),ee=k("em"),oe=d("There are parts of code deliberately removed to make the code more concise and readable, which should not affect the point I am trying to make here. Feel free to read the original code in the "),ce=k("a"),pe=d("repl"),re=d("."),le=m(),ie=k("p"),ue=d("You see Svelte's generated code is much like the one we've written in plain JavaScript just now. It generates the "),he=k("code"),ke=d(".textContent"),fe=d(" directly, because during compilation, Svelte knows exactly what you are trying to do. Therefore it can try to handle all the different scenarios, where React tries to handle in runtime, in build time."),de=m(),me=k("p"),ve=d("Now you know the fundamental differences between Svelte and React, let's take a look how a Svelte component works."),ge=m(),Ee=k("section"),we=k("h2"),ye=k("a"),be=d("Conceptually, how does compiled Svelte component work?"),Se=m(),Te=k("p"),Ce=d("In this section, we are going to write Svelte component incrementally, and see how each changes ended up in the compiled Svelte component."),Oe=m(),xe=k("p"),$e=d("Let's start with a simple button and a text:"),Pe=m(),Le=k("pre"),De=m(),Me=k("p"),Ie=d("When Svelte sees this, these HTML elements will translate into JavaScript statement to create the elements:"),Ae=m(),Re=k("pre"),je=m(),He=k("p"),Ne=d("If you inspect the Svelte compiled output, you would notice that these instruction lies in a function call "),_e=k("code"),Be=d("create_fragment"),We=d(". "),Ge=k("code"),Fe=d("create_fragment"),Je=d(" is the function where Svelte keeps the DOM instructions for the component."),qe=m(),Ue=k("p"),Ye=d("Next, lets add some event listener to the button:"),ze=m(),Ve=k("pre"),Ze=m(),Ke=k("section"),Qe=k("h2"),Xe=k("a"),no=d("How the compiled Svelte component works"),ao=m(),to=k("p"),so=d("To differentiate between the component code you write, and the component code generated by Svelte, I will use "),eo=k("code"),oo=d(".svelte"),co=d(" component to refer the code you would write in a "),po=k("code"),ro=d(".svelte"),lo=d(" file, and Svelte component to refer the "),io=k("code"),uo=d(".js"),ho=d(" code, generated by Svelte from your "),ko=k("code"),fo=d(".svelte"),mo=d(" component, that will be executed in your application."),vo=m(),go=k("p"),Eo=d("The best way to understand how Svelte component works is to use the "),wo=k("a"),yo=d("Svelte's REPL"),bo=d(". Try writing a component, and see how Svelte compiles the component into plain JavaScript."),So=m(),To=k("p"),Co=d("Svelte compiles the "),Oo=k("code"),xo=d(".svelte"),$o=d(" file into a "),Po=k("code"),Lo=d(".js"),Do=d(" file, which the "),Mo=k("code"),Io=d("export default"),Ao=d(" the compiled Svelte component."),Ro=m(),jo=k("p"),Ho=d("The compiled Svelte component contains 3 main sections:"),No=m(),_o=k("ul"),Bo=k("li"),Wo=k("code"),Go=d("create_fragment"),Fo=m(),Jo=k("li"),qo=k("code"),Uo=d("instance"),Yo=m(),zo=k("li"),Vo=d("the Component itself"),Zo=m(),Ko=k("pre"),Qo=m(),Xo=k("p"),nc=d("Let's explain what each section of the code is for, from the bottom up."),ac=m(),tc=k("p"),sc=k("strong"),ec=d("3. The component itself"),oc=m(),cc=k("p"),pc=d("Each compiled component, by default, is a subclass of "),rc=k("code"),lc=d("SvelteComponent"),ic=d("."),uc=m(),hc=k("p"),kc=d("To create the component onto the DOM, you can create an instance of the component:"),fc=m(),dc=k("pre"),mc=m(),vc=k("p"),gc=d("In the constructor of "),Ec=k("code"),wc=d("App"),yc=d(", as you can see, calls the "),bc=k("code"),Sc=d("init"),Tc=d(" function, which takes in both "),Cc=k("code"),Oc=d("instance"),xc=d(" and "),$c=k("code"),Pc=d("create_fragment"),Lc=d(" function."),Dc=m(),Mc=k("p"),Ic=d("The "),Ac=k("code"),Rc=d("init"),jc=d(" function, as the name suggests, will set things up, which lead us to the "),Hc=k("code"),Nc=d("instance"),_c=d(" function."),Bc=m(),Wc=k("p"),Gc=k("strong"),Fc=d("2. "),Jc=k("code"),qc=d("instance"),Uc=m(),Yc=k("p"),zc=d("The "),Vc=k("code"),Zc=d("instance"),Kc=d(" function is where all the business logic of your "),Qc=k("code"),Xc=d(".svelte"),np=d(" component lies."),ap=m(),tp=k("p"),sp=d("That's why, if you take a closer look, the "),ep=k("code"),op=d("instance"),cp=d(" function contains most, if not all, the code you write in the "),pp=k("code"),rp=d("<script>"),lp=d(" tag in the "),ip=k("code"),up=d(".svelte"),hp=d(" component."),kp=m(),fp=k("hr"),dp=m(),mp=k("p"),vp=d("Code that you write in the "),gp=k("code"),Ep=d("<script>"),wp=d(" tag that will not be in the "),yp=k("code"),bp=d("instance"),Sp=d(" function are:"),Tp=m(),Cp=k("ul"),Op=k("li"),xp=k("strong"),$p=k("code"),Pp=d("import"),Lp=d(" statement"),Dp=k("ul"),Mp=k("li"),Ip=d("These will be moved to the beginning of the compiled file."),Ap=m(),Rp=k("li"),jp=k("strong"),Hp=k("code"),Np=d("export"),_p=d(" statement"),Bp=k("ul"),Wp=k("li"),Gp=d('These are exported properties or methods of the Svelte component. It will be present in the former section, "the component itself" section.'),Fp=m(),Jp=k("li"),qp=k("strong"),Up=d("constants"),Yp=k("ul"),zp=k("li"),Vp=d("Since the value of a constant will not change throughout the lifetime of your application, so there's no point redeclaring a new constant for every instance of your Svelte component."),Zp=m(),Kp=k("li"),Qp=d("Therefore it is moved out from the "),Xp=k("code"),nr=d("instance"),ar=d(" function."),tr=m(),sr=k("li"),er=k("a"),or=d("Check out the repl"),cr=d("."),pr=m(),rr=k("li"),lr=k("strong"),ir=d("pure functions"),ur=k("ul"),hr=k("li"),kr=d("The same logic goes with pure functions. If the function does not rely on any variables within the scope other than it's own arguments, the function will be moved out from the "),fr=k("code"),dr=d("instance"),mr=d(" function."),vr=m(),gr=k("li"),Er=k("a"),wr=d("Check out this repl"),yr=d("."),br=m(),Sr=k("hr"),Tr=m(),Cr=k("p"),Or=d("The "),xr=k("code"),$r=d("instance"),Pr=d(" function contains all of your business logic, and returns an object. The object contains all the variables and functions you've declared and used in the HTML code. The object is referred as "),Lr=k("code"),Dr=d("ctx"),Mr=d(" in Svelte, and that brings us to the "),Ir=k("code"),Ar=d("create_fragment"),Rr=d(" function."),jr=m(),Hr=k("p"),Nr=k("strong"),_r=d("1. "),Br=k("code"),Wr=d("create_fragment"),Gr=m(),Fr=k("p"),Jr=d("The "),qr=k("code"),Ur=d("create_fragment"),Yr=d(" function deals with the HTML code you've written in a "),zr=k("code"),Vr=d(".svelte"),Zr=d(" component. The "),Kr=k("code"),Qr=d("create_fragment"),Xr=d(" function takes in the "),nl=k("code"),al=d("ctx"),tl=d(" object, and returns an object that instructs the Svelte component how to render into the DOM, that looks like this:"),sl=m(),el=k("pre"),ol=m(),cl=k("p"),pl=d("Let's take a closer look to what each function does:"),rl=m(),ll=k("p"),il=k("strong"),ul=d("- c "),hl=k("em"),kl=d("(create)"),fl=m(),dl=k("p"),ml=d("This function creates all the DOM nodes needed."),vl=m(),gl=k("p"),El=k("strong"),wl=d("- l "),yl=k("em"),bl=d("(claim)"),Sl=m(),Tl=k("p"),Cl=d("On the other hand, if you use a server-side rendering, and you want to hydrate the rendered DOM with the component, the "),Ol=k("code"),xl=d("claim"),$l=d(" function will be called instead of "),Pl=k("code"),Ll=d("create"),Dl=d(". This will try to claim and assign reference to the DOM node."),Ml=m(),Il=k("p"),Al=k("strong"),Rl=d("- m "),jl=k("em"),Hl=d("(mount)"),Nl=m(),_l=k("p"),Bl=d("With the references to the DOM nodes, the "),Wl=k("code"),Gl=d("mount"),Fl=d(" function will "),Jl=k("code"),ql=d("insert"),Ul=d(" or "),Yl=k("code"),zl=d("append"),Vl=d(" DOM nodes to the target accordingly."),Zl=m(),Kl=k("p"),Ql=k("strong"),Xl=d("- p "),ni=k("em"),ai=d("(update)"),ti=m(),si=k("p"),ei=d("If there's a change, say after a button click, the "),oi=k("code"),ci=d("update"),pi=d(" function will be called with the changed mask and the new "),ri=k("code"),li=d("ctx"),ii=d(" object."),ui=m(),hi=k("p"),ki=k("strong"),fi=d("- r "),di=k("em"),mi=d("(measure)"),vi=k("br"),gi=m(),Ei=k("strong"),wi=d("- f "),yi=k("em"),bi=d("(fix)"),Si=k("br"),Ti=m(),Ci=k("strong"),Oi=d("- a "),xi=k("em"),$i=d("(animate)"),Pi=k("br"),Li=m(),Di=k("strong"),Mi=d("- i "),Ii=k("em"),Ai=d("(intro)"),Ri=k("br"),ji=m(),Hi=k("strong"),Ni=d("- o "),_i=k("em"),Bi=d("(outro)"),Wi=m(),Gi=k("p"),Fi=d("These are for animations, measuring and fixing the element before animation, "),Ji=k("code"),qi=d("intro"),Ui=d("s and "),Yi=k("code"),zi=d("outro"),Vi=d("s."),Zi=m(),Ki=k("p"),Qi=k("strong"),Xi=d("- d "),nu=k("em"),au=d("(destroy)"),tu=m(),su=k("p"),eu=d("Last but not least, the "),ou=k("code"),cu=d("destroy"),pu=d(" function is called when the Svelte component unmounts from the target."),ru=m(),lu=k("section"),iu=k("h3"),uu=k("a"),hu=d("Pieces them together"),ku=m(),fu=k("p"),du=d("With every pieces in mind, let's summarise what we've learned so far:"),mu=m(),vu=k("p"),gu=d("You create the component into DOM by create a new instance of the Svelte component:"),Eu=m(),wu=k("pre"),yu=m(),bu=k("p"),Su=d("Which in the constructor of "),Tu=k("code"),Cu=d("App"),Ou=d(", it calls the "),xu=k("code"),$u=d("init"),Pu=d(" function:"),Lu=m(),Du=k("pre"),Mu=m(),Iu=k("p"),Au=d("Within the "),Ru=k("code"),ju=d("init"),Hu=d(" function, the "),Nu=k("code"),_u=d("instance"),Bu=d(" function is called:"),Wu=m(),Gu=k("pre"),Fu=m(),Ju=k("p"),qu=d("Which returns the "),Uu=k("code"),Yu=d("ctx"),zu=d(", and it is passed into the "),Vu=k("code"),Zu=d("create_fragment"),Ku=d(" function:"),Qu=m(),Xu=k("pre"),nh=m(),ah=k("p"),th=d("Which returns instructions on how to create DOM nodes and mount the nodes into DOM:"),sh=m(),eh=k("pre"),oh=m(),ch=k("p"),ph=d("But hey, when does the "),rh=k("code"),lh=d("fragment.update()"),ih=d(" get called when something has changed?"),uh=m(),hh=k("p"),kh=d("That my friend, is the secret 3rd argument of the "),fh=k("code"),dh=d("instance"),mh=d(" function, "),vh=k("strong"),gh=k("code"),Eh=d("$$invalidate"),wh=d("."),yh=m(),bh=k("p"),Sh=d("Whenever you reassign a value to your variable, Svelte will add an extra statement of "),Th=k("code"),Ch=d("$$invalidate(...)"),Oh=d(" statement after your re-assignment."),xh=m(),$h=k("p"),Ph=k("code"),Lh=d("$$invalidate"),Dh=d(" takes 2 arguments, the name of the variable, and the new value of the variable:"),Mh=m(),Ih=k("pre"),Ah=m(),Rh=k("p"),jh=k("em"),Hh=d("Of course, if you have consecutive "),Nh=k("code"),_h=d("$$invalidate"),Bh=d(" calls, Svelte will batch all the "),Wh=k("code"),Gh=d("$$invalidate"),Fh=d(" changes, and call "),Jh=k("code"),qh=d("fragment.update"),Uh=d(" only once with all the changes."),Yh=m(),zh=k("p"),Vh=d("Now that you have a clearer picture on how Svelte works, let's go one level deeper, and take a look how the Svelte compiler works."),Zh=m(),Kh=k("section"),Qh=k("h2"),Xh=k("a"),nk=d("The Svelte compiler"),ak=m(),tk=k("p"),sk=d("-- WIP --"),this.h()},l(n){t=w(n,"SECTION",{});var a=E(t);s=w(a,"UL",{class:!0,id:!0,role:!0,"aria-label":!0}),E(s).forEach(u),e=w(a,"LI",{});var l=E(e);o=w(l,"A",{href:!0});var i=E(o);c=y(i,"What is Svelte?"),i.forEach(u),l.forEach(u),p=w(a,"UL",{});var k=E(p);r=w(k,"LI",{});var d=E(r);h=w(d,"A",{href:!0});var m=E(h);f=y(m,"Writing vanilla JavaScript"),m.forEach(u),d.forEach(u),v=w(k,"LI",{});var g=E(v);S=w(g,"A",{href:!0});var ek=E(S);T=y(ek,"Conceptually, how does compiled Svelte component work?"),ek.forEach(u),g.forEach(u),C=w(k,"LI",{});var ok=E(C);O=w(ok,"A",{href:!0});var ck=E(O);x=y(ck,"How the compiled Svelte component works"),ck.forEach(u),ok.forEach(u),$=w(k,"UL",{});var pk=E($);P=w(pk,"LI",{});var rk=E(P);L=w(rk,"A",{href:!0});var lk=E(L);D=y(lk,"Pieces them together"),lk.forEach(u),rk.forEach(u),pk.forEach(u),M=w(k,"LI",{});var ik=E(M);I=w(ik,"A",{href:!0});var uk=E(I);A=y(uk,"The Svelte compiler"),uk.forEach(u),ik.forEach(u),k.forEach(u),a.forEach(u),R=b(n),j=w(n,"SECTION",{});var hk=E(j);H=w(hk,"H1",{});var kk=E(H);N=w(kk,"A",{href:!0,id:!0});var fk=E(N);_=y(fk,"[DRAFT] What is Svelte?"),fk.forEach(u),kk.forEach(u),B=b(hk),W=w(hk,"P",{});var dk=E(W);G=y(dk,"-- this is a work in progress draft, you can read "),F=w(dk,"A",{href:!0});var mk=E(F);J=y(mk,"Compile Svelte in your Head"),mk.forEach(u),q=y(dk," which is a more friendly version --"),dk.forEach(u),U=b(hk),Y=w(hk,"P",{});var vk=E(Y);z=w(vk,"A",{href:!0,rel:!0});var gk=E(z);V=y(gk,"Svelte"),gk.forEach(u),Z=y(vk," is a compiler for web applications. Svelte provides a framework for you to write your web apps declaratively, and it will compile them into efficient JavaScript."),vk.forEach(u),K=b(hk),Q=w(hk,"P",{});var Ek=E(Q);X=y(Ek,"In this article, I will be sharing how Svelte works."),Ek.forEach(u),nn=b(hk),an=w(hk,"P",{});var wk=E(an);tn=y(wk,"If you are:"),wk.forEach(u),sn=b(hk),en=w(hk,"UL",{});var yk=E(en);on=w(yk,"LI",{});var bk=E(on);cn=w(bk,"P",{});var Sk=E(cn);pn=w(Sk,"STRONG",{});var Tk=E(pn);rn=y(Tk,"First time hearing Svelte?"),Tk.forEach(u),Sk.forEach(u),ln=b(bk),un=w(bk,"P",{});var Ck=E(un);hn=y(Ck,"Please go and watch "),kn=w(Ck,"A",{href:!0,rel:!0});var Ok=E(kn);fn=y(Ok,"Rich Harris"),Ok.forEach(u),dn=y(Ck," inspiring talk on "),mn=w(Ck,"A",{href:!0,rel:!0});var xk=E(mn);vn=y(xk,'"Rethinking reactivity"'),xk.forEach(u),gn=y(Ck," where he announces Svelte."),Ck.forEach(u),bk.forEach(u),En=b(yk),wn=w(yk,"LI",{});var $k=E(wn);yn=w($k,"P",{});var Pk=E(yn);bn=w(Pk,"STRONG",{});var Lk=E(bn);Sn=y(Lk,"Interested learning how to write Svelte application?"),Lk.forEach(u),Pk.forEach(u),Tn=b($k),Cn=w($k,"P",{});var Dk=E(Cn);On=y(Dk,"Please follow along "),xn=w(Dk,"A",{href:!0,rel:!0});var Mk=E(xn);$n=y(Mk,"Svelte's interactive tutorial"),Mk.forEach(u),Pn=y(Dk,", I find it very helpful and it get me started in no time!"),Dk.forEach(u),$k.forEach(u),yk.forEach(u),Ln=b(hk),Dn=w(hk,"P",{});var Ik=E(Dn);Mn=y(Ik,"Because, I will be going deep level by level, guiding you through the source code sometimes, explaining how Svelte works."),Ik.forEach(u),In=b(hk),An=w(hk,"UL",{});var Ak=E(An);Rn=w(Ak,"LI",{});var Rk=E(Rn);jn=y(Rk,"look at code written in vanilla vs using framework"),Hn=w(Rk,"UL",{});var jk=E(Hn);Nn=w(jk,"LI",{});var Hk=E(Nn);_n=y(Hk,"compile time vs build time spectrum, svelte and react opposite side of the spectrum"),Hk.forEach(u),jk.forEach(u),Rk.forEach(u),Bn=b(Ak),Wn=w(Ak,"LI",{});var Nk=E(Wn);Gn=y(Nk,"a picture of how a svelte component works"),Fn=w(Nk,"UL",{});var _k=E(Fn);Jn=w(_k,"LI",{}),E(Jn).forEach(u),_k.forEach(u),Nk.forEach(u),Ak.forEach(u),hk.forEach(u),qn=b(n),Un=w(n,"SECTION",{});var Bk=E(Un);Yn=w(Bk,"H2",{});var Wk=E(Yn);zn=w(Wk,"A",{href:!0,id:!0});var Gk=E(zn);Vn=y(Gk,"Writing vanilla JavaScript"),Gk.forEach(u),Wk.forEach(u),Zn=b(Bk),Kn=w(Bk,"P",{});var Fk=E(Kn);Qn=y(Fk,"Before we get started, lets' do an exercise."),Fk.forEach(u),Xn=b(Bk),na=w(Bk,"P",{});var Jk=E(na);aa=y(Jk,"Let's write a counter app like below, without using any framework:"),Jk.forEach(u),ta=b(Bk),sa=w(Bk,"DIV",{style:!0});var qk=E(sa);ea=w(qk,"BUTTON",{id:!0});var Uk=E(ea);oa=y(Uk,"-"),Uk.forEach(u),ca=b(qk),pa=w(qk,"SPAN",{id:!0});var Yk=E(pa);ra=y(Yk,"0"),Yk.forEach(u),la=b(qk),ia=w(qk,"BUTTON",{id:!0});var zk=E(ia);ua=y(zk,"+"),zk.forEach(u),ha=b(qk),ka=w(qk,"SCRIPT",{});var Vk=E(ka);fa=y(Vk,"let count = 0;\n    const span = document.querySelector('#ex1-count');\n    document.querySelector('#ex1-decrement').onclick = () => span.textContent = --count;\n    document.querySelector('#ex1-increment').onclick = () => span.textContent = ++count;"),Vk.forEach(u),qk.forEach(u),da=b(Bk),ma=w(Bk,"P",{});var Zk=E(ma);va=y(Zk,"There are generally 2 approaches to this:"),Zk.forEach(u),ga=b(Bk),Ea=w(Bk,"P",{});var Kk=E(Ea);wa=w(Kk,"STRONG",{});var Qk=E(wa);ya=y(Qk,"1. HTML + JS"),Qk.forEach(u),Kk.forEach(u),ba=b(Bk),Sa=w(Bk,"P",{});var Xk=E(Sa);Ta=y(Xk,"You build your app layout in HTML:"),Xk.forEach(u),Ca=b(Bk),Oa=w(Bk,"PRE",{class:!0}),E(Oa).forEach(u),xa=b(Bk),$a=w(Bk,"P",{});var nf=E($a);Pa=y(nf,"then in JS, you use id selector to query out the dynamic part of your HTML and attach event listeners to respond to user inputs:"),nf.forEach(u),La=b(Bk),Da=w(Bk,"PRE",{class:!0}),E(Da).forEach(u),Ma=b(Bk),Ia=w(Bk,"P",{});var af=E(Ia);Aa=w(af,"STRONG",{});var tf=E(Aa);Ra=y(tf,"2. JS only"),tf.forEach(u),af.forEach(u),ja=b(Bk),Ha=w(Bk,"P",{});var sf=E(Ha);Na=y(sf,"If you want to have more than 1 counter, the former approach may require you to "),_a=w(sf,"EM",{});var ef=E(_a);Ba=y(ef,"copy + paste"),ef.forEach(u),Wa=y(sf," your HTML "),Ga=w(sf,"EM",{});var of=E(Ga);Fa=y(of,"n"),of.forEach(u),Ja=y(sf," times for "),qa=w(sf,"EM",{});var cf=E(qa);Ua=y(cf,"n"),cf.forEach(u),Ya=y(sf," number of counters."),sf.forEach(u),za=b(Bk),Va=w(Bk,"P",{});var pf=E(Va);Za=y(pf,"The alternative would be to build the HTML elements programatically:"),pf.forEach(u),Ka=b(Bk),Qa=w(Bk,"PRE",{class:!0}),E(Qa).forEach(u),Xa=b(Bk),nt=w(Bk,"P",{});var rf=E(nt);at=y(rf,"This is the least amount of code to be written for a counter app."),rf.forEach(u),tt=b(Bk),st=w(Bk,"P",{});var lf=E(st);et=w(lf,"EM",{});var uf=E(et);ot=y(uf,"(One may argue that you can abstract out "),ct=w(uf,"CODE",{});var hf=E(ct);pt=y(hf,"document.createElement"),hf.forEach(u),rt=y(uf," or "),lt=w(uf,"CODE",{});var kf=E(lt);it=y(kf,"parent.appendChild"),kf.forEach(u),ut=y(uf," to a function to make the code smaller, but that's besides the point.)"),uf.forEach(u),lf.forEach(u),ht=b(Bk),kt=w(Bk,"P",{});var ff=E(kt);ft=y(ff,"This is the least amount of code to be written "),dt=w(ff,"STRONG",{});var df=E(dt);mt=y(df,"and be executed by the browser"),df.forEach(u),vt=y(ff," for a counter app."),ff.forEach(u),gt=b(Bk),Et=w(Bk,"P",{});var mf=E(Et);wt=y(mf,"So why does this matter? Well, before we proceed to explain how this got to do with Svelte, let's first talk about React."),mf.forEach(u),yt=b(Bk),bt=w(Bk,"P",{});var vf=E(bt);St=w(vf,"EM",{});var gf=E(St);Tt=y(gf,"I chose to talk about React "),Ct=w(gf,"STRONG",{});var Ef=E(Ct);Ot=y(Ef,"just because I am a React developer"),Ef.forEach(u),xt=y(gf,", I use React at my work and at this very blog site. I am most familiar with React than any other JS frameworks out there"),gf.forEach(u),vf.forEach(u),$t=b(Bk),Pt=w(Bk,"P",{});var wf=E(Pt);Lt=y(wf,"In React, you can argubly write a much concise and declarative code:"),wf.forEach(u),Dt=b(Bk),Mt=w(Bk,"PRE",{class:!0}),E(Mt).forEach(u),It=b(Bk),At=w(Bk,"P",{});var yf=E(At);Rt=y(yf,"That's because React has hidden all the "),jt=w(yf,"CODE",{});var bf=E(jt);Ht=y(bf,"document.createElement"),bf.forEach(u),Nt=y(yf,", "),_t=w(yf,"CODE",{});var Sf=E(_t);Bt=y(Sf,"parent.appendChild"),Sf.forEach(u),Wt=y(yf,", ... under "),Gt=w(yf,"A",{href:!0,rel:!0});var Tf=E(Gt);Ft=w(Tf,"CODE",{});var Cf=E(Ft);Jt=y(Cf,"react-dom"),Cf.forEach(u),qt=y(Tf," renderer."),Tf.forEach(u),yf.forEach(u),Ut=b(Bk),Yt=w(Bk,"P",{});var Of=E(Yt);zt=y(Of,"Everytime you click on a counter button, the function "),Vt=w(Of,"CODE",{});var xf=E(Vt);Zt=y(xf,"Counter"),xf.forEach(u),Kt=y(Of," is called to get the new "),Qt=w(Of,"A",{href:!0,rel:!0});var $f=E(Qt);Xt=y($f,"Fiber tree"),$f.forEach(u),ns=y(Of," with the new state value, and it is compared with the current Fiber tree. After the diffing between the 2 Fiber tree, React collects the necessary DOM operations, in this case is to update "),as=w(Of,"CODE",{});var Pf=E(as);ts=y(Pf,"span"),Pf.forEach(u),ss=y(Of,"'s "),es=w(Of,"CODE",{});var Lf=E(es);os=y(Lf,"textContent"),Lf.forEach(u),cs=y(Of,"."),Of.forEach(u),ps=b(Bk),rs=w(Bk,"P",{});var Df=E(rs);ls=y(Df,"If you feel this is overly complicated, wait, there is more."),Df.forEach(u),is=b(Bk),us=w(Bk,"P",{});var Mf=E(us);hs=y(Mf,"When the "),ks=w(Mf,"CODE",{});var If=E(ks);fs=y(If,"react-dom"),If.forEach(u),ds=b(Mf),ms=w(Mf,"A",{href:!0,rel:!0});var Af=E(ms);vs=y(Af,"receives the DOM operations"),Af.forEach(u),gs=y(Mf,", it receives "),Es=w(Mf,"CODE",{});var Rf=E(Es);ws=y(Rf,"['span', { 'children': '1' }]"),Rf.forEach(u),ys=y(Mf,", the element and the update payload, and "),bs=w(Mf,"CODE",{});var jf=E(bs);Ss=y(jf,"react-dom"),jf.forEach(u),Ts=y(Mf," has to figure out that "),Cs=w(Mf,"CODE",{});var Hf=E(Cs);Os=y(Hf,"children"),Hf.forEach(u),xs=y(Mf," meant "),$s=w(Mf,"A",{href:!0,rel:!0});var Nf=E($s);Ps=y(Nf,"setting the "),Ls=w(Nf,"CODE",{});var _f=E(Ls);Ds=y(_f,"textContent"),_f.forEach(u),Nf.forEach(u),Ms=y(Mf,"."),Mf.forEach(u),Is=b(Bk),As=w(Bk,"P",{});var Bf=E(As);Rs=y(Bf,"As you can see, there's a lot of code "),js=w(Bf,"STRONG",{});var Wf=E(js);Hs=y(Wf,"executed"),Wf.forEach(u),Ns=y(Bf," under the hood, which you may think is overkill for this contrived example. But with a much larger/complex application, you will soon appreciate the flexibilty React provides. to achieve that, react has to make sure it has code to capture all the different scenarios, without knowing what will be written by us, the developer."),Bf.forEach(u),_s=b(Bk),Bs=w(Bk,"P",{});var Gf=E(Bs);Ws=y(Gf,"Now, here is how Svelte is different. "),Gs=w(Gf,"STRONG",{});var Ff=E(Gs);Fs=y(Ff,"Svelte is a compiler"),Ff.forEach(u),Js=y(Gf,". Svelte knows what we, the developer, has written, and generate only code that is needed for our application."),Gf.forEach(u),qs=b(Bk),Us=w(Bk,"P",{});var Jf=E(Us);Ys=y(Jf,"Here's what Svelte generated for our Counter app ("),zs=w(Jf,"A",{href:!0,rel:!0});var qf=E(zs);Vs=y(qf,"repl"),qf.forEach(u),Zs=y(Jf,"):"),Jf.forEach(u),Ks=b(Bk),Qs=w(Bk,"PRE",{class:!0}),E(Qs).forEach(u),Xs=b(Bk),ne=w(Bk,"P",{});var Uf=E(ne);ae=w(Uf,"STRONG",{});var Yf=E(ae);te=y(Yf,"Disclaimer:"),Yf.forEach(u),se=b(Uf),ee=w(Uf,"EM",{});var zf=E(ee);oe=y(zf,"There are parts of code deliberately removed to make the code more concise and readable, which should not affect the point I am trying to make here. Feel free to read the original code in the "),ce=w(zf,"A",{href:!0,rel:!0});var Vf=E(ce);pe=y(Vf,"repl"),Vf.forEach(u),re=y(zf,"."),zf.forEach(u),Uf.forEach(u),le=b(Bk),ie=w(Bk,"P",{});var Zf=E(ie);ue=y(Zf,"You see Svelte's generated code is much like the one we've written in plain JavaScript just now. It generates the "),he=w(Zf,"CODE",{});var Kf=E(he);ke=y(Kf,".textContent"),Kf.forEach(u),fe=y(Zf," directly, because during compilation, Svelte knows exactly what you are trying to do. Therefore it can try to handle all the different scenarios, where React tries to handle in runtime, in build time."),Zf.forEach(u),de=b(Bk),me=w(Bk,"P",{});var Qf=E(me);ve=y(Qf,"Now you know the fundamental differences between Svelte and React, let's take a look how a Svelte component works."),Qf.forEach(u),Bk.forEach(u),ge=b(n),Ee=w(n,"SECTION",{});var Xf=E(Ee);we=w(Xf,"H2",{});var nd=E(we);ye=w(nd,"A",{href:!0,id:!0});var ad=E(ye);be=y(ad,"Conceptually, how does compiled Svelte component work?"),ad.forEach(u),nd.forEach(u),Se=b(Xf),Te=w(Xf,"P",{});var td=E(Te);Ce=y(td,"In this section, we are going to write Svelte component incrementally, and see how each changes ended up in the compiled Svelte component."),td.forEach(u),Oe=b(Xf),xe=w(Xf,"P",{});var sd=E(xe);$e=y(sd,"Let's start with a simple button and a text:"),sd.forEach(u),Pe=b(Xf),Le=w(Xf,"PRE",{class:!0}),E(Le).forEach(u),De=b(Xf),Me=w(Xf,"P",{});var ed=E(Me);Ie=y(ed,"When Svelte sees this, these HTML elements will translate into JavaScript statement to create the elements:"),ed.forEach(u),Ae=b(Xf),Re=w(Xf,"PRE",{class:!0}),E(Re).forEach(u),je=b(Xf),He=w(Xf,"P",{});var od=E(He);Ne=y(od,"If you inspect the Svelte compiled output, you would notice that these instruction lies in a function call "),_e=w(od,"CODE",{});var cd=E(_e);Be=y(cd,"create_fragment"),cd.forEach(u),We=y(od,". "),Ge=w(od,"CODE",{});var pd=E(Ge);Fe=y(pd,"create_fragment"),pd.forEach(u),Je=y(od," is the function where Svelte keeps the DOM instructions for the component."),od.forEach(u),qe=b(Xf),Ue=w(Xf,"P",{});var rd=E(Ue);Ye=y(rd,"Next, lets add some event listener to the button:"),rd.forEach(u),ze=b(Xf),Ve=w(Xf,"PRE",{class:!0}),E(Ve).forEach(u),Xf.forEach(u),Ze=b(n),Ke=w(n,"SECTION",{});var ld=E(Ke);Qe=w(ld,"H2",{});var id=E(Qe);Xe=w(id,"A",{href:!0,id:!0});var ud=E(Xe);no=y(ud,"How the compiled Svelte component works"),ud.forEach(u),id.forEach(u),ao=b(ld),to=w(ld,"P",{});var hd=E(to);so=y(hd,"To differentiate between the component code you write, and the component code generated by Svelte, I will use "),eo=w(hd,"CODE",{});var kd=E(eo);oo=y(kd,".svelte"),kd.forEach(u),co=y(hd," component to refer the code you would write in a "),po=w(hd,"CODE",{});var fd=E(po);ro=y(fd,".svelte"),fd.forEach(u),lo=y(hd," file, and Svelte component to refer the "),io=w(hd,"CODE",{});var dd=E(io);uo=y(dd,".js"),dd.forEach(u),ho=y(hd," code, generated by Svelte from your "),ko=w(hd,"CODE",{});var md=E(ko);fo=y(md,".svelte"),md.forEach(u),mo=y(hd," component, that will be executed in your application."),hd.forEach(u),vo=b(ld),go=w(ld,"P",{});var vd=E(go);Eo=y(vd,"The best way to understand how Svelte component works is to use the "),wo=w(vd,"A",{href:!0,rel:!0});var gd=E(wo);yo=y(gd,"Svelte's REPL"),gd.forEach(u),bo=y(vd,". Try writing a component, and see how Svelte compiles the component into plain JavaScript."),vd.forEach(u),So=b(ld),To=w(ld,"P",{});var Ed=E(To);Co=y(Ed,"Svelte compiles the "),Oo=w(Ed,"CODE",{});var wd=E(Oo);xo=y(wd,".svelte"),wd.forEach(u),$o=y(Ed," file into a "),Po=w(Ed,"CODE",{});var yd=E(Po);Lo=y(yd,".js"),yd.forEach(u),Do=y(Ed," file, which the "),Mo=w(Ed,"CODE",{});var bd=E(Mo);Io=y(bd,"export default"),bd.forEach(u),Ao=y(Ed," the compiled Svelte component."),Ed.forEach(u),Ro=b(ld),jo=w(ld,"P",{});var Sd=E(jo);Ho=y(Sd,"The compiled Svelte component contains 3 main sections:"),Sd.forEach(u),No=b(ld),_o=w(ld,"UL",{});var Td=E(_o);Bo=w(Td,"LI",{});var Cd=E(Bo);Wo=w(Cd,"CODE",{});var Od=E(Wo);Go=y(Od,"create_fragment"),Od.forEach(u),Cd.forEach(u),Fo=b(Td),Jo=w(Td,"LI",{});var xd=E(Jo);qo=w(xd,"CODE",{});var $d=E(qo);Uo=y($d,"instance"),$d.forEach(u),xd.forEach(u),Yo=b(Td),zo=w(Td,"LI",{});var Pd=E(zo);Vo=y(Pd,"the Component itself"),Pd.forEach(u),Td.forEach(u),Zo=b(ld),Ko=w(ld,"PRE",{class:!0}),E(Ko).forEach(u),Qo=b(ld),Xo=w(ld,"P",{});var Ld=E(Xo);nc=y(Ld,"Let's explain what each section of the code is for, from the bottom up."),Ld.forEach(u),ac=b(ld),tc=w(ld,"P",{});var Dd=E(tc);sc=w(Dd,"STRONG",{});var Md=E(sc);ec=y(Md,"3. The component itself"),Md.forEach(u),Dd.forEach(u),oc=b(ld),cc=w(ld,"P",{});var Id=E(cc);pc=y(Id,"Each compiled component, by default, is a subclass of "),rc=w(Id,"CODE",{});var Ad=E(rc);lc=y(Ad,"SvelteComponent"),Ad.forEach(u),ic=y(Id,"."),Id.forEach(u),uc=b(ld),hc=w(ld,"P",{});var Rd=E(hc);kc=y(Rd,"To create the component onto the DOM, you can create an instance of the component:"),Rd.forEach(u),fc=b(ld),dc=w(ld,"PRE",{class:!0}),E(dc).forEach(u),mc=b(ld),vc=w(ld,"P",{});var jd=E(vc);gc=y(jd,"In the constructor of "),Ec=w(jd,"CODE",{});var Hd=E(Ec);wc=y(Hd,"App"),Hd.forEach(u),yc=y(jd,", as you can see, calls the "),bc=w(jd,"CODE",{});var Nd=E(bc);Sc=y(Nd,"init"),Nd.forEach(u),Tc=y(jd," function, which takes in both "),Cc=w(jd,"CODE",{});var _d=E(Cc);Oc=y(_d,"instance"),_d.forEach(u),xc=y(jd," and "),$c=w(jd,"CODE",{});var Bd=E($c);Pc=y(Bd,"create_fragment"),Bd.forEach(u),Lc=y(jd," function."),jd.forEach(u),Dc=b(ld),Mc=w(ld,"P",{});var Wd=E(Mc);Ic=y(Wd,"The "),Ac=w(Wd,"CODE",{});var Gd=E(Ac);Rc=y(Gd,"init"),Gd.forEach(u),jc=y(Wd," function, as the name suggests, will set things up, which lead us to the "),Hc=w(Wd,"CODE",{});var Fd=E(Hc);Nc=y(Fd,"instance"),Fd.forEach(u),_c=y(Wd," function."),Wd.forEach(u),Bc=b(ld),Wc=w(ld,"P",{});var Jd=E(Wc);Gc=w(Jd,"STRONG",{});var qd=E(Gc);Fc=y(qd,"2. "),Jc=w(qd,"CODE",{});var Ud=E(Jc);qc=y(Ud,"instance"),Ud.forEach(u),qd.forEach(u),Jd.forEach(u),Uc=b(ld),Yc=w(ld,"P",{});var Yd=E(Yc);zc=y(Yd,"The "),Vc=w(Yd,"CODE",{});var zd=E(Vc);Zc=y(zd,"instance"),zd.forEach(u),Kc=y(Yd," function is where all the business logic of your "),Qc=w(Yd,"CODE",{});var Vd=E(Qc);Xc=y(Vd,".svelte"),Vd.forEach(u),np=y(Yd," component lies."),Yd.forEach(u),ap=b(ld),tp=w(ld,"P",{});var Zd=E(tp);sp=y(Zd,"That's why, if you take a closer look, the "),ep=w(Zd,"CODE",{});var Kd=E(ep);op=y(Kd,"instance"),Kd.forEach(u),cp=y(Zd," function contains most, if not all, the code you write in the "),pp=w(Zd,"CODE",{});var Qd=E(pp);rp=y(Qd,"<script>"),Qd.forEach(u),lp=y(Zd," tag in the "),ip=w(Zd,"CODE",{});var Xd=E(ip);up=y(Xd,".svelte"),Xd.forEach(u),hp=y(Zd," component."),Zd.forEach(u),kp=b(ld),fp=w(ld,"HR",{}),dp=b(ld),mp=w(ld,"P",{});var nm=E(mp);vp=y(nm,"Code that you write in the "),gp=w(nm,"CODE",{});var am=E(gp);Ep=y(am,"<script>"),am.forEach(u),wp=y(nm," tag that will not be in the "),yp=w(nm,"CODE",{});var tm=E(yp);bp=y(tm,"instance"),tm.forEach(u),Sp=y(nm," function are:"),nm.forEach(u),Tp=b(ld),Cp=w(ld,"UL",{});var sm=E(Cp);Op=w(sm,"LI",{});var em=E(Op);xp=w(em,"STRONG",{});var om=E(xp);$p=w(om,"CODE",{});var cm=E($p);Pp=y(cm,"import"),cm.forEach(u),Lp=y(om," statement"),om.forEach(u),Dp=w(em,"UL",{});var pm=E(Dp);Mp=w(pm,"LI",{});var rm=E(Mp);Ip=y(rm,"These will be moved to the beginning of the compiled file."),rm.forEach(u),pm.forEach(u),em.forEach(u),Ap=b(sm),Rp=w(sm,"LI",{});var lm=E(Rp);jp=w(lm,"STRONG",{});var im=E(jp);Hp=w(im,"CODE",{});var um=E(Hp);Np=y(um,"export"),um.forEach(u),_p=y(im," statement"),im.forEach(u),Bp=w(lm,"UL",{});var hm=E(Bp);Wp=w(hm,"LI",{});var km=E(Wp);Gp=y(km,'These are exported properties or methods of the Svelte component. It will be present in the former section, "the component itself" section.'),km.forEach(u),hm.forEach(u),lm.forEach(u),Fp=b(sm),Jp=w(sm,"LI",{});var fm=E(Jp);qp=w(fm,"STRONG",{});var dm=E(qp);Up=y(dm,"constants"),dm.forEach(u),Yp=w(fm,"UL",{});var mm=E(Yp);zp=w(mm,"LI",{});var vm=E(zp);Vp=y(vm,"Since the value of a constant will not change throughout the lifetime of your application, so there's no point redeclaring a new constant for every instance of your Svelte component."),vm.forEach(u),Zp=b(mm),Kp=w(mm,"LI",{});var gm=E(Kp);Qp=y(gm,"Therefore it is moved out from the "),Xp=w(gm,"CODE",{});var Em=E(Xp);nr=y(Em,"instance"),Em.forEach(u),ar=y(gm," function."),gm.forEach(u),tr=b(mm),sr=w(mm,"LI",{});var wm=E(sr);er=w(wm,"A",{href:!0,rel:!0});var ym=E(er);or=y(ym,"Check out the repl"),ym.forEach(u),cr=y(wm,"."),wm.forEach(u),mm.forEach(u),fm.forEach(u),pr=b(sm),rr=w(sm,"LI",{});var bm=E(rr);lr=w(bm,"STRONG",{});var Sm=E(lr);ir=y(Sm,"pure functions"),Sm.forEach(u),ur=w(bm,"UL",{});var Tm=E(ur);hr=w(Tm,"LI",{});var Cm=E(hr);kr=y(Cm,"The same logic goes with pure functions. If the function does not rely on any variables within the scope other than it's own arguments, the function will be moved out from the "),fr=w(Cm,"CODE",{});var Om=E(fr);dr=y(Om,"instance"),Om.forEach(u),mr=y(Cm," function."),Cm.forEach(u),vr=b(Tm),gr=w(Tm,"LI",{});var xm=E(gr);Er=w(xm,"A",{href:!0,rel:!0});var $m=E(Er);wr=y($m,"Check out this repl"),$m.forEach(u),yr=y(xm,"."),xm.forEach(u),Tm.forEach(u),bm.forEach(u),sm.forEach(u),br=b(ld),Sr=w(ld,"HR",{}),Tr=b(ld),Cr=w(ld,"P",{});var Pm=E(Cr);Or=y(Pm,"The "),xr=w(Pm,"CODE",{});var Lm=E(xr);$r=y(Lm,"instance"),Lm.forEach(u),Pr=y(Pm," function contains all of your business logic, and returns an object. The object contains all the variables and functions you've declared and used in the HTML code. The object is referred as "),Lr=w(Pm,"CODE",{});var Dm=E(Lr);Dr=y(Dm,"ctx"),Dm.forEach(u),Mr=y(Pm," in Svelte, and that brings us to the "),Ir=w(Pm,"CODE",{});var Mm=E(Ir);Ar=y(Mm,"create_fragment"),Mm.forEach(u),Rr=y(Pm," function."),Pm.forEach(u),jr=b(ld),Hr=w(ld,"P",{});var Im=E(Hr);Nr=w(Im,"STRONG",{});var Am=E(Nr);_r=y(Am,"1. "),Br=w(Am,"CODE",{});var Rm=E(Br);Wr=y(Rm,"create_fragment"),Rm.forEach(u),Am.forEach(u),Im.forEach(u),Gr=b(ld),Fr=w(ld,"P",{});var jm=E(Fr);Jr=y(jm,"The "),qr=w(jm,"CODE",{});var Hm=E(qr);Ur=y(Hm,"create_fragment"),Hm.forEach(u),Yr=y(jm," function deals with the HTML code you've written in a "),zr=w(jm,"CODE",{});var Nm=E(zr);Vr=y(Nm,".svelte"),Nm.forEach(u),Zr=y(jm," component. The "),Kr=w(jm,"CODE",{});var _m=E(Kr);Qr=y(_m,"create_fragment"),_m.forEach(u),Xr=y(jm," function takes in the "),nl=w(jm,"CODE",{});var Bm=E(nl);al=y(Bm,"ctx"),Bm.forEach(u),tl=y(jm," object, and returns an object that instructs the Svelte component how to render into the DOM, that looks like this:"),jm.forEach(u),sl=b(ld),el=w(ld,"PRE",{class:!0}),E(el).forEach(u),ol=b(ld),cl=w(ld,"P",{});var Wm=E(cl);pl=y(Wm,"Let's take a closer look to what each function does:"),Wm.forEach(u),rl=b(ld),ll=w(ld,"P",{});var Gm=E(ll);il=w(Gm,"STRONG",{});var Fm=E(il);ul=y(Fm,"- c "),hl=w(Fm,"EM",{});var Jm=E(hl);kl=y(Jm,"(create)"),Jm.forEach(u),Fm.forEach(u),Gm.forEach(u),fl=b(ld),dl=w(ld,"P",{});var qm=E(dl);ml=y(qm,"This function creates all the DOM nodes needed."),qm.forEach(u),vl=b(ld),gl=w(ld,"P",{});var Um=E(gl);El=w(Um,"STRONG",{});var Ym=E(El);wl=y(Ym,"- l "),yl=w(Ym,"EM",{});var zm=E(yl);bl=y(zm,"(claim)"),zm.forEach(u),Ym.forEach(u),Um.forEach(u),Sl=b(ld),Tl=w(ld,"P",{});var Vm=E(Tl);Cl=y(Vm,"On the other hand, if you use a server-side rendering, and you want to hydrate the rendered DOM with the component, the "),Ol=w(Vm,"CODE",{});var Zm=E(Ol);xl=y(Zm,"claim"),Zm.forEach(u),$l=y(Vm," function will be called instead of "),Pl=w(Vm,"CODE",{});var Km=E(Pl);Ll=y(Km,"create"),Km.forEach(u),Dl=y(Vm,". This will try to claim and assign reference to the DOM node."),Vm.forEach(u),Ml=b(ld),Il=w(ld,"P",{});var Qm=E(Il);Al=w(Qm,"STRONG",{});var Xm=E(Al);Rl=y(Xm,"- m "),jl=w(Xm,"EM",{});var nv=E(jl);Hl=y(nv,"(mount)"),nv.forEach(u),Xm.forEach(u),Qm.forEach(u),Nl=b(ld),_l=w(ld,"P",{});var av=E(_l);Bl=y(av,"With the references to the DOM nodes, the "),Wl=w(av,"CODE",{});var tv=E(Wl);Gl=y(tv,"mount"),tv.forEach(u),Fl=y(av," function will "),Jl=w(av,"CODE",{});var sv=E(Jl);ql=y(sv,"insert"),sv.forEach(u),Ul=y(av," or "),Yl=w(av,"CODE",{});var ev=E(Yl);zl=y(ev,"append"),ev.forEach(u),Vl=y(av," DOM nodes to the target accordingly."),av.forEach(u),Zl=b(ld),Kl=w(ld,"P",{});var ov=E(Kl);Ql=w(ov,"STRONG",{});var cv=E(Ql);Xl=y(cv,"- p "),ni=w(cv,"EM",{});var pv=E(ni);ai=y(pv,"(update)"),pv.forEach(u),cv.forEach(u),ov.forEach(u),ti=b(ld),si=w(ld,"P",{});var rv=E(si);ei=y(rv,"If there's a change, say after a button click, the "),oi=w(rv,"CODE",{});var lv=E(oi);ci=y(lv,"update"),lv.forEach(u),pi=y(rv," function will be called with the changed mask and the new "),ri=w(rv,"CODE",{});var iv=E(ri);li=y(iv,"ctx"),iv.forEach(u),ii=y(rv," object."),rv.forEach(u),ui=b(ld),hi=w(ld,"P",{});var uv=E(hi);ki=w(uv,"STRONG",{});var hv=E(ki);fi=y(hv,"- r "),di=w(hv,"EM",{});var kv=E(di);mi=y(kv,"(measure)"),kv.forEach(u),hv.forEach(u),vi=w(uv,"BR",{}),gi=b(uv),Ei=w(uv,"STRONG",{});var fv=E(Ei);wi=y(fv,"- f "),yi=w(fv,"EM",{});var dv=E(yi);bi=y(dv,"(fix)"),dv.forEach(u),fv.forEach(u),Si=w(uv,"BR",{}),Ti=b(uv),Ci=w(uv,"STRONG",{});var mv=E(Ci);Oi=y(mv,"- a "),xi=w(mv,"EM",{});var vv=E(xi);$i=y(vv,"(animate)"),vv.forEach(u),mv.forEach(u),Pi=w(uv,"BR",{}),Li=b(uv),Di=w(uv,"STRONG",{});var gv=E(Di);Mi=y(gv,"- i "),Ii=w(gv,"EM",{});var Ev=E(Ii);Ai=y(Ev,"(intro)"),Ev.forEach(u),gv.forEach(u),Ri=w(uv,"BR",{}),ji=b(uv),Hi=w(uv,"STRONG",{});var wv=E(Hi);Ni=y(wv,"- o "),_i=w(wv,"EM",{});var yv=E(_i);Bi=y(yv,"(outro)"),yv.forEach(u),wv.forEach(u),uv.forEach(u),Wi=b(ld),Gi=w(ld,"P",{});var bv=E(Gi);Fi=y(bv,"These are for animations, measuring and fixing the element before animation, "),Ji=w(bv,"CODE",{});var Sv=E(Ji);qi=y(Sv,"intro"),Sv.forEach(u),Ui=y(bv,"s and "),Yi=w(bv,"CODE",{});var Tv=E(Yi);zi=y(Tv,"outro"),Tv.forEach(u),Vi=y(bv,"s."),bv.forEach(u),Zi=b(ld),Ki=w(ld,"P",{});var Cv=E(Ki);Qi=w(Cv,"STRONG",{});var Ov=E(Qi);Xi=y(Ov,"- d "),nu=w(Ov,"EM",{});var xv=E(nu);au=y(xv,"(destroy)"),xv.forEach(u),Ov.forEach(u),Cv.forEach(u),tu=b(ld),su=w(ld,"P",{});var $v=E(su);eu=y($v,"Last but not least, the "),ou=w($v,"CODE",{});var Pv=E(ou);cu=y(Pv,"destroy"),Pv.forEach(u),pu=y($v," function is called when the Svelte component unmounts from the target."),$v.forEach(u),ld.forEach(u),ru=b(n),lu=w(n,"SECTION",{});var Lv=E(lu);iu=w(Lv,"H3",{});var Dv=E(iu);uu=w(Dv,"A",{href:!0,id:!0});var Mv=E(uu);hu=y(Mv,"Pieces them together"),Mv.forEach(u),Dv.forEach(u),ku=b(Lv),fu=w(Lv,"P",{});var Iv=E(fu);du=y(Iv,"With every pieces in mind, let's summarise what we've learned so far:"),Iv.forEach(u),mu=b(Lv),vu=w(Lv,"P",{});var Av=E(vu);gu=y(Av,"You create the component into DOM by create a new instance of the Svelte component:"),Av.forEach(u),Eu=b(Lv),wu=w(Lv,"PRE",{class:!0}),E(wu).forEach(u),yu=b(Lv),bu=w(Lv,"P",{});var Rv=E(bu);Su=y(Rv,"Which in the constructor of "),Tu=w(Rv,"CODE",{});var jv=E(Tu);Cu=y(jv,"App"),jv.forEach(u),Ou=y(Rv,", it calls the "),xu=w(Rv,"CODE",{});var Hv=E(xu);$u=y(Hv,"init"),Hv.forEach(u),Pu=y(Rv," function:"),Rv.forEach(u),Lu=b(Lv),Du=w(Lv,"PRE",{class:!0}),E(Du).forEach(u),Mu=b(Lv),Iu=w(Lv,"P",{});var Nv=E(Iu);Au=y(Nv,"Within the "),Ru=w(Nv,"CODE",{});var _v=E(Ru);ju=y(_v,"init"),_v.forEach(u),Hu=y(Nv," function, the "),Nu=w(Nv,"CODE",{});var Bv=E(Nu);_u=y(Bv,"instance"),Bv.forEach(u),Bu=y(Nv," function is called:"),Nv.forEach(u),Wu=b(Lv),Gu=w(Lv,"PRE",{class:!0}),E(Gu).forEach(u),Fu=b(Lv),Ju=w(Lv,"P",{});var Wv=E(Ju);qu=y(Wv,"Which returns the "),Uu=w(Wv,"CODE",{});var Gv=E(Uu);Yu=y(Gv,"ctx"),Gv.forEach(u),zu=y(Wv,", and it is passed into the "),Vu=w(Wv,"CODE",{});var Fv=E(Vu);Zu=y(Fv,"create_fragment"),Fv.forEach(u),Ku=y(Wv," function:"),Wv.forEach(u),Qu=b(Lv),Xu=w(Lv,"PRE",{class:!0}),E(Xu).forEach(u),nh=b(Lv),ah=w(Lv,"P",{});var Jv=E(ah);th=y(Jv,"Which returns instructions on how to create DOM nodes and mount the nodes into DOM:"),Jv.forEach(u),sh=b(Lv),eh=w(Lv,"PRE",{class:!0}),E(eh).forEach(u),oh=b(Lv),ch=w(Lv,"P",{});var qv=E(ch);ph=y(qv,"But hey, when does the "),rh=w(qv,"CODE",{});var Uv=E(rh);lh=y(Uv,"fragment.update()"),Uv.forEach(u),ih=y(qv," get called when something has changed?"),qv.forEach(u),uh=b(Lv),hh=w(Lv,"P",{});var Yv=E(hh);kh=y(Yv,"That my friend, is the secret 3rd argument of the "),fh=w(Yv,"CODE",{});var zv=E(fh);dh=y(zv,"instance"),zv.forEach(u),mh=y(Yv," function, "),vh=w(Yv,"STRONG",{});var Vv=E(vh);gh=w(Vv,"CODE",{});var Zv=E(gh);Eh=y(Zv,"$$invalidate"),Zv.forEach(u),Vv.forEach(u),wh=y(Yv,"."),Yv.forEach(u),yh=b(Lv),bh=w(Lv,"P",{});var Kv=E(bh);Sh=y(Kv,"Whenever you reassign a value to your variable, Svelte will add an extra statement of "),Th=w(Kv,"CODE",{});var Qv=E(Th);Ch=y(Qv,"$$invalidate(...)"),Qv.forEach(u),Oh=y(Kv," statement after your re-assignment."),Kv.forEach(u),xh=b(Lv),$h=w(Lv,"P",{});var Xv=E($h);Ph=w(Xv,"CODE",{});var ng=E(Ph);Lh=y(ng,"$$invalidate"),ng.forEach(u),Dh=y(Xv," takes 2 arguments, the name of the variable, and the new value of the variable:"),Xv.forEach(u),Mh=b(Lv),Ih=w(Lv,"PRE",{class:!0}),E(Ih).forEach(u),Ah=b(Lv),Rh=w(Lv,"P",{});var ag=E(Rh);jh=w(ag,"EM",{});var tg=E(jh);Hh=y(tg,"Of course, if you have consecutive "),Nh=w(tg,"CODE",{});var sg=E(Nh);_h=y(sg,"$$invalidate"),sg.forEach(u),Bh=y(tg," calls, Svelte will batch all the "),Wh=w(tg,"CODE",{});var eg=E(Wh);Gh=y(eg,"$$invalidate"),eg.forEach(u),Fh=y(tg," changes, and call "),Jh=w(tg,"CODE",{});var og=E(Jh);qh=y(og,"fragment.update"),og.forEach(u),Uh=y(tg," only once with all the changes."),tg.forEach(u),ag.forEach(u),Yh=b(Lv),zh=w(Lv,"P",{});var cg=E(zh);Vh=y(cg,"Now that you have a clearer picture on how Svelte works, let's go one level deeper, and take a look how the Svelte compiler works."),cg.forEach(u),Lv.forEach(u),Zh=b(n),Kh=w(n,"SECTION",{});var pg=E(Kh);Qh=w(pg,"H2",{});var rg=E(Qh);Xh=w(rg,"A",{href:!0,id:!0});var lg=E(Xh);nk=y(lg,"The Svelte compiler"),lg.forEach(u),rg.forEach(u),ak=b(pg),tk=w(pg,"P",{});var ig=E(tk);sk=y(ig,"-- WIP --"),ig.forEach(u),pg.forEach(u),this.h()},h(){var n,a,t;g(s,"class","sitemap"),g(s,"id","sitemap"),g(s,"role","navigation"),g(s,"aria-label","Table of Contents"),g(o,"href","#what-is-svelte"),g(h,"href","#writing-vanilla-javascript"),g(S,"href","#conceptually-how-does-compiled-svelte-component-work"),g(O,"href","#how-the-compiled-svelte-component-works"),g(L,"href","#pieces-them-together"),g(I,"href","#the-svelte-compiler"),g(N,"href","#what-is-svelte"),g(N,"id","what-is-svelte"),g(F,"href","/compile-svelte-in-your-head-part-1"),g(z,"href","http://svelte.dev/"),g(z,"rel","nofollow"),g(kn,"href","https://twitter.com/Rich_Harris"),g(kn,"rel","nofollow"),g(mn,"href","https://svelte.dev/blog/svelte-3-rethinking-reactivity"),g(mn,"rel","nofollow"),g(xn,"href","https://svelte.dev/tutorial/basics"),g(xn,"rel","nofollow"),g(zn,"href","#writing-vanilla-javascript"),g(zn,"id","writing-vanilla-javascript"),g(ea,"id","ex1-decrement"),g(pa,"id","ex1-count"),g(ia,"id","ex1-increment"),n="text-align",a="center",sa.style.setProperty(n,a,t?"important":""),g(Oa,"class","language-html"),g(Da,"class","language-js"),g(Qa,"class","language-js"),g(Mt,"class","language-js"),g(Gt,"href","https://reactjs.org/docs/react-dom.html"),g(Gt,"rel","nofollow"),g(Qt,"href","https://github.com/acdlite/react-fiber-architecture"),g(Qt,"rel","nofollow"),g(ms,"href","https://github.com/facebook/react/blob/b8d079b41372290aa1846e3a780d85d05ab8ffc1/packages/react-dom/src/client/ReactDOMComponent.js#L372-L377"),g(ms,"rel","nofollow"),g($s,"href","https://github.com/facebook/react/blob/b8d079b41372290aa1846e3a780d85d05ab8ffc1/packages/react-dom/src/client/ReactDOMComponent.js#L386-L388"),g($s,"rel","nofollow"),g(zs,"href","https://svelte.dev/repl/2ed88da423f24cd980dad77e8a07e248?version=3.12.1"),g(zs,"rel","nofollow"),g(Qs,"class","language-js"),g(ce,"href","https://svelte.dev/repl/2ed88da423f24cd980dad77e8a07e248?version=3.12.1"),g(ce,"rel","nofollow"),g(ye,"href","#conceptually-how-does-compiled-svelte-component-work"),g(ye,"id","conceptually-how-does-compiled-svelte-component-work"),g(Le,"class","language-html"),g(Re,"class","language-js"),g(Ve,"class","language-html"),g(Xe,"href","#how-the-compiled-svelte-component-works"),g(Xe,"id","how-the-compiled-svelte-component-works"),g(wo,"href","https://svelte.dev/repl"),g(wo,"rel","nofollow"),g(Ko,"class","language-js"),g(dc,"class","language-js"),g(er,"href","https://svelte.dev/repl/hello-world"),g(er,"rel","nofollow"),g(Er,"href","https://svelte.dev/repl/d831c0e1387d4105b9bf4cbf6e321477?version=3.12.1"),g(Er,"rel","nofollow"),g(el,"class","language-js"),g(uu,"href","#pieces-them-together"),g(uu,"id","pieces-them-together"),g(wu,"class","language-js"),g(Du,"class","language-js"),g(Gu,"class","language-js"),g(Xu,"class","language-js"),g(eh,"class","language-js"),g(Ih,"class","language-js"),g(Xh,"href","#the-svelte-compiler"),g(Xh,"id","the-svelte-compiler")},m(n,a){i(n,t,a),l(t,s),l(t,e),l(e,o),l(o,c),l(t,p),l(p,r),l(r,h),l(h,f),l(p,v),l(v,S),l(S,T),l(p,C),l(C,O),l(O,x),l(p,$),l($,P),l(P,L),l(L,D),l(p,M),l(M,I),l(I,A),i(n,R,a),i(n,j,a),l(j,H),l(H,N),l(N,_),l(j,B),l(j,W),l(W,G),l(W,F),l(F,J),l(W,q),l(j,U),l(j,Y),l(Y,z),l(z,V),l(Y,Z),l(j,K),l(j,Q),l(Q,X),l(j,nn),l(j,an),l(an,tn),l(j,sn),l(j,en),l(en,on),l(on,cn),l(cn,pn),l(pn,rn),l(on,ln),l(on,un),l(un,hn),l(un,kn),l(kn,fn),l(un,dn),l(un,mn),l(mn,vn),l(un,gn),l(en,En),l(en,wn),l(wn,yn),l(yn,bn),l(bn,Sn),l(wn,Tn),l(wn,Cn),l(Cn,On),l(Cn,xn),l(xn,$n),l(Cn,Pn),l(j,Ln),l(j,Dn),l(Dn,Mn),l(j,In),l(j,An),l(An,Rn),l(Rn,jn),l(Rn,Hn),l(Hn,Nn),l(Nn,_n),l(An,Bn),l(An,Wn),l(Wn,Gn),l(Wn,Fn),l(Fn,Jn),i(n,qn,a),i(n,Un,a),l(Un,Yn),l(Yn,zn),l(zn,Vn),l(Un,Zn),l(Un,Kn),l(Kn,Qn),l(Un,Xn),l(Un,na),l(na,aa),l(Un,ta),l(Un,sa),l(sa,ea),l(ea,oa),l(sa,ca),l(sa,pa),l(pa,ra),l(sa,la),l(sa,ia),l(ia,ua),l(sa,ha),l(sa,ka),l(ka,fa),l(Un,da),l(Un,ma),l(ma,va),l(Un,ga),l(Un,Ea),l(Ea,wa),l(wa,ya),l(Un,ba),l(Un,Sa),l(Sa,Ta),l(Un,Ca),l(Un,Oa),Oa.innerHTML='<code class="language-html"><span class="token comment">&lt;!-- filename: index.html --\x3e</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>decrement<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>count<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>increment<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></code>',l(Un,xa),l(Un,$a),l($a,Pa),l(Un,La),l(Un,Da),Da.innerHTML='<code class="language-js"><span class="token comment">// filename: script.js</span>\n<span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> span <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">\'#count\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ndocument<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">\'#decrement\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n  <span class="token punctuation">(</span>span<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token operator">--</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>\ndocument<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">\'#increment\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span>\n  <span class="token punctuation">(</span>span<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token operator">++</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span></code>',l(Un,Ma),l(Un,Ia),l(Ia,Aa),l(Aa,Ra),l(Un,ja),l(Un,Ha),l(Ha,Na),l(Ha,_a),l(_a,Ba),l(Ha,Wa),l(Ha,Ga),l(Ga,Fa),l(Ha,Ja),l(Ha,qa),l(qa,Ua),l(Ha,Ya),l(Un,za),l(Un,Va),l(Va,Za),l(Un,Ka),l(Un,Qa),Qa.innerHTML='<code class="language-js"><span class="token comment">// filename: script.js</span>\n<span class="token keyword">function</span> <span class="token function">buildCounter</span><span class="token punctuation">(</span><span class="token parameter">parent</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">const</span> span <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">\'span\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> decrementBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> incrementBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\n  span<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\n  decrementBtn<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">\'-\'</span><span class="token punctuation">;</span>\n  decrementBtn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>span<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token operator">--</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  incrementBtn<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">\'+\'</span><span class="token punctuation">;</span>\n  incrementBtn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>span<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token operator">++</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  parent<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>decrementBtn<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  parent<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>span<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  parent<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>incrementBtn<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token comment">// you can call &#96;buildCounter&#96; however times you want</span>\n<span class="token comment">//  to get however many counters</span>\n<span class="token function">buildCounter</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span></code>',l(Un,Xa),l(Un,nt),l(nt,at),l(Un,tt),l(Un,st),l(st,et),l(et,ot),l(et,ct),l(ct,pt),l(et,rt),l(et,lt),l(lt,it),l(et,ut),l(Un,ht),l(Un,kt),l(kt,ft),l(kt,dt),l(dt,mt),l(kt,vt),l(Un,gt),l(Un,Et),l(Et,wt),l(Un,yt),l(Un,bt),l(bt,St),l(St,Tt),l(St,Ct),l(Ct,Ot),l(St,xt),l(Un,$t),l(Un,Pt),l(Pt,Lt),l(Un,Dt),l(Un,Mt),Mt.innerHTML='<code class="language-js"><span class="token comment">// filename: Counter.jsx</span>\n<span class="token keyword">function</span> <span class="token function">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setCount</span><span class="token punctuation">(</span><span class="token parameter">c</span> <span class="token operator">=></span> c <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n    <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">&#123;</span> count <span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>\n    <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setCount</span><span class="token punctuation">(</span><span class="token parameter">c</span> <span class="token operator">=></span> c <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token operator">+</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">&#125;</span></code>',l(Un,It),l(Un,At),l(At,Rt),l(At,jt),l(jt,Ht),l(At,Nt),l(At,_t),l(_t,Bt),l(At,Wt),l(At,Gt),l(Gt,Ft),l(Ft,Jt),l(Gt,qt),l(Un,Ut),l(Un,Yt),l(Yt,zt),l(Yt,Vt),l(Vt,Zt),l(Yt,Kt),l(Yt,Qt),l(Qt,Xt),l(Yt,ns),l(Yt,as),l(as,ts),l(Yt,ss),l(Yt,es),l(es,os),l(Yt,cs),l(Un,ps),l(Un,rs),l(rs,ls),l(Un,is),l(Un,us),l(us,hs),l(us,ks),l(ks,fs),l(us,ds),l(us,ms),l(ms,vs),l(us,gs),l(us,Es),l(Es,ws),l(us,ys),l(us,bs),l(bs,Ss),l(us,Ts),l(us,Cs),l(Cs,Os),l(us,xs),l(us,$s),l($s,Ps),l($s,Ls),l(Ls,Ds),l(us,Ms),l(Un,Is),l(Un,As),l(As,Rs),l(As,js),l(js,Hs),l(As,Ns),l(Un,_s),l(Un,Bs),l(Bs,Ws),l(Bs,Gs),l(Gs,Fs),l(Bs,Js),l(Un,qs),l(Un,Us),l(Us,Ys),l(Us,zs),l(zs,Vs),l(Us,Zs),l(Un,Ks),l(Un,Qs),Qs.innerHTML='<code class="language-js"><span class="token comment">// import &#123; element, ... &#125; from "svelte/internal"</span>\n<span class="token comment">// ...</span>\n<span class="token keyword">function</span> <span class="token function">create_fragment</span><span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">var</span> button0<span class="token punctuation">,</span> span<span class="token punctuation">,</span> t<span class="token punctuation">,</span> button1<span class="token punctuation">,</span> dispose<span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>\n    <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      button0 <span class="token operator">=</span> <span class="token function">element</span><span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      button0<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">\'-\'</span><span class="token punctuation">;</span>\n      span <span class="token operator">=</span> <span class="token function">element</span><span class="token punctuation">(</span><span class="token string">\'span\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      t <span class="token operator">=</span> <span class="token function">text</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      button1 <span class="token operator">=</span> <span class="token function">element</span><span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      button1<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">\'+\'</span><span class="token punctuation">;</span>\n      <span class="token function">listen</span><span class="token punctuation">(</span>button0<span class="token punctuation">,</span> <span class="token string">\'click\'</span><span class="token punctuation">,</span> ctx<span class="token punctuation">.</span>click_handler<span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token function">listen</span><span class="token punctuation">(</span>button1<span class="token punctuation">,</span> <span class="token string">\'click\'</span><span class="token punctuation">,</span> ctx<span class="token punctuation">.</span>click_handler_1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n    <span class="token function">m</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> anchor</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      <span class="token function">insert</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> button0<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token function">insert</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> span<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token function">append</span><span class="token punctuation">(</span>span<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token function">insert</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> button1<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n    <span class="token function">p</span><span class="token punctuation">(</span><span class="token parameter">changed<span class="token punctuation">,</span> ctx</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>changed<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n        <span class="token function">set_data</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> ctx<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token keyword">function</span> <span class="token function">instance</span><span class="token punctuation">(</span><span class="token parameter">$$self<span class="token punctuation">,</span> $$props<span class="token punctuation">,</span> $$invalidate</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">click_handler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">$$invalidate</span><span class="token punctuation">(</span><span class="token string">\'count\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>count <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">click_handler_1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">$$invalidate</span><span class="token punctuation">(</span><span class="token string">\'count\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>count <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> count<span class="token punctuation">,</span> click_handler<span class="token punctuation">,</span> click_handler_1 <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n<span class="token comment">// ...</span></code>',l(Un,Xs),l(Un,ne),l(ne,ae),l(ae,te),l(ne,se),l(ne,ee),l(ee,oe),l(ee,ce),l(ce,pe),l(ee,re),l(Un,le),l(Un,ie),l(ie,ue),l(ie,he),l(he,ke),l(ie,fe),l(Un,de),l(Un,me),l(me,ve),i(n,ge,a),i(n,Ee,a),l(Ee,we),l(we,ye),l(ye,be),l(Ee,Se),l(Ee,Te),l(Te,Ce),l(Ee,Oe),l(Ee,xe),l(xe,$e),l(Ee,Pe),l(Ee,Le),Le.innerHTML='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>Click Me<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Hello Svelte<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code>',l(Ee,De),l(Ee,Me),l(Me,Ie),l(Ee,Ae),l(Ee,Re),Re.innerHTML='<code class="language-js"><span class="token keyword">const</span> button <span class="token operator">=</span> <span class="token function">element</span><span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nbutton<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">\'Click Me\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token function">element</span><span class="token punctuation">(</span><span class="token string">\'p\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\np<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">\'Hello Svelte\'</span><span class="token punctuation">;</span>\n\n<span class="token comment">// element(\'p\') is short for &#96;document.createElement(\'p\');</span></code>',l(Ee,je),l(Ee,He),l(He,Ne),l(He,_e),l(_e,Be),l(He,We),l(He,Ge),l(Ge,Fe),l(He,Je),l(Ee,qe),l(Ee,Ue),l(Ue,Ye),l(Ee,ze),l(Ee,Ve),Ve.innerHTML='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">function</span> <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Greetings!\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">on:</span>click</span><span class="token attr-value"><span class="token punctuation">=</span>&#123;onClick&#125;</span><span class="token punctuation">></span></span>Click Me<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Hello Svelte<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code>',i(n,Ze,a),i(n,Ke,a),l(Ke,Qe),l(Qe,Xe),l(Xe,no),l(Ke,ao),l(Ke,to),l(to,so),l(to,eo),l(eo,oo),l(to,co),l(to,po),l(po,ro),l(to,lo),l(to,io),l(io,uo),l(to,ho),l(to,ko),l(ko,fo),l(to,mo),l(Ke,vo),l(Ke,go),l(go,Eo),l(go,wo),l(wo,yo),l(go,bo),l(Ke,So),l(Ke,To),l(To,Co),l(To,Oo),l(Oo,xo),l(To,$o),l(To,Po),l(Po,Lo),l(To,Do),l(To,Mo),l(Mo,Io),l(To,Ao),l(Ke,Ro),l(Ke,jo),l(jo,Ho),l(Ke,No),l(Ke,_o),l(_o,Bo),l(Bo,Wo),l(Wo,Go),l(_o,Fo),l(_o,Jo),l(Jo,qo),l(qo,Uo),l(_o,Yo),l(_o,zo),l(zo,Vo),l(Ke,Zo),l(Ke,Ko),Ko.innerHTML='<code class="language-js"><span class="token comment">// 1. create_fragment</span>\n<span class="token keyword">function</span> <span class="token function">create_fragment</span><span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>\n    <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">/*...*/</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n    <span class="token function">m</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">/*...*/</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n    <span class="token function">p</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">/*...*/</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n    <span class="token function">d</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">/*...*/</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token comment">// 2. instance</span>\n<span class="token keyword">function</span> <span class="token function">instance</span><span class="token punctuation">(</span><span class="token parameter">$$self<span class="token punctuation">,</span> $$props<span class="token punctuation">,</span> $$invalidate</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// ...</span>\n  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token comment">// 3. the Component itself</span>\n<span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">SvelteComponent</span> <span class="token punctuation">&#123;</span>\n\t<span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n\t\t<span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token function">init</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> options<span class="token punctuation">,</span> instance<span class="token punctuation">,</span> create_fragment<span class="token punctuation">,</span> safe_not_equal<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span></code>',l(Ke,Qo),l(Ke,Xo),l(Xo,nc),l(Ke,ac),l(Ke,tc),l(tc,sc),l(sc,ec),l(Ke,oc),l(Ke,cc),l(cc,pc),l(cc,rc),l(rc,lc),l(cc,ic),l(Ke,uc),l(Ke,hc),l(hc,kc),l(Ke,fc),l(Ke,dc),dc.innerHTML='<code class="language-js"><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">App</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> target<span class="token punctuation">:</span> document<span class="token punctuation">.</span>body <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>',l(Ke,mc),l(Ke,vc),l(vc,gc),l(vc,Ec),l(Ec,wc),l(vc,yc),l(vc,bc),l(bc,Sc),l(vc,Tc),l(vc,Cc),l(Cc,Oc),l(vc,xc),l(vc,$c),l($c,Pc),l(vc,Lc),l(Ke,Dc),l(Ke,Mc),l(Mc,Ic),l(Mc,Ac),l(Ac,Rc),l(Mc,jc),l(Mc,Hc),l(Hc,Nc),l(Mc,_c),l(Ke,Bc),l(Ke,Wc),l(Wc,Gc),l(Gc,Fc),l(Gc,Jc),l(Jc,qc),l(Ke,Uc),l(Ke,Yc),l(Yc,zc),l(Yc,Vc),l(Vc,Zc),l(Yc,Kc),l(Yc,Qc),l(Qc,Xc),l(Yc,np),l(Ke,ap),l(Ke,tp),l(tp,sp),l(tp,ep),l(ep,op),l(tp,cp),l(tp,pp),l(pp,rp),l(tp,lp),l(tp,ip),l(ip,up),l(tp,hp),l(Ke,kp),l(Ke,fp),l(Ke,dp),l(Ke,mp),l(mp,vp),l(mp,gp),l(gp,Ep),l(mp,wp),l(mp,yp),l(yp,bp),l(mp,Sp),l(Ke,Tp),l(Ke,Cp),l(Cp,Op),l(Op,xp),l(xp,$p),l($p,Pp),l(xp,Lp),l(Op,Dp),l(Dp,Mp),l(Mp,Ip),l(Cp,Ap),l(Cp,Rp),l(Rp,jp),l(jp,Hp),l(Hp,Np),l(jp,_p),l(Rp,Bp),l(Bp,Wp),l(Wp,Gp),l(Cp,Fp),l(Cp,Jp),l(Jp,qp),l(qp,Up),l(Jp,Yp),l(Yp,zp),l(zp,Vp),l(Yp,Zp),l(Yp,Kp),l(Kp,Qp),l(Kp,Xp),l(Xp,nr),l(Kp,ar),l(Yp,tr),l(Yp,sr),l(sr,er),l(er,or),l(sr,cr),l(Cp,pr),l(Cp,rr),l(rr,lr),l(lr,ir),l(rr,ur),l(ur,hr),l(hr,kr),l(hr,fr),l(fr,dr),l(hr,mr),l(ur,vr),l(ur,gr),l(gr,Er),l(Er,wr),l(gr,yr),l(Ke,br),l(Ke,Sr),l(Ke,Tr),l(Ke,Cr),l(Cr,Or),l(Cr,xr),l(xr,$r),l(Cr,Pr),l(Cr,Lr),l(Lr,Dr),l(Cr,Mr),l(Cr,Ir),l(Ir,Ar),l(Cr,Rr),l(Ke,jr),l(Ke,Hr),l(Hr,Nr),l(Nr,_r),l(Nr,Br),l(Br,Wr),l(Ke,Gr),l(Ke,Fr),l(Fr,Jr),l(Fr,qr),l(qr,Ur),l(Fr,Yr),l(Fr,zr),l(zr,Vr),l(Fr,Zr),l(Fr,Kr),l(Kr,Qr),l(Fr,Xr),l(Fr,nl),l(nl,al),l(Fr,tl),l(Ke,sl),l(Ke,el),el.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">create_fragment</span><span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">let</span> t<span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// create</span>\n    <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> \n     t <span class="token operator">=</span> <span class="token function">text</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>greeting<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n    <span class="token comment">// claim</span>\n    <span class="token function">l</span><span class="token punctuation">(</span><span class="token parameter">nodes</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> \n      t <span class="token operator">=</span> <span class="token function">claim_text</span><span class="token punctuation">(</span>nodes<span class="token punctuation">,</span> ctx<span class="token punctuation">.</span>greeting<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n    <span class="token comment">// hydrate</span>\n    h<span class="token punctuation">:</span> noop<span class="token punctuation">,</span>\n    <span class="token comment">// mount</span>\n    <span class="token function">m</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> anchor</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      <span class="token function">insert</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> t<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n    <span class="token comment">// update</span>\n    <span class="token function">p</span><span class="token punctuation">(</span><span class="token parameter">changed<span class="token punctuation">,</span> ctx</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> \n      <span class="token keyword">if</span> <span class="token punctuation">(</span>changed<span class="token punctuation">.</span>greeting<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n        <span class="token function">set_data</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> ctx<span class="token punctuation">.</span>greeting<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n    <span class="token comment">// measure</span>\n    r<span class="token punctuation">:</span> noop<span class="token punctuation">,</span>\n    <span class="token comment">// fix</span>\n    f<span class="token punctuation">:</span> noop<span class="token punctuation">,</span>\n    <span class="token comment">// animate</span>\n    a<span class="token punctuation">:</span> noop<span class="token punctuation">,</span>\n    <span class="token comment">// intro</span>\n    i<span class="token punctuation">:</span> noop<span class="token punctuation">,</span>\n    <span class="token comment">// outro</span>\n    o<span class="token punctuation">:</span> noop<span class="token punctuation">,</span>\n    <span class="token comment">// destroy</span>\n    <span class="token function">d</span><span class="token punctuation">(</span><span class="token parameter">detaching</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> \n      <span class="token keyword">if</span> <span class="token punctuation">(</span>detaching<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n        <span class="token function">detach</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span></code>',l(Ke,ol),l(Ke,cl),l(cl,pl),l(Ke,rl),l(Ke,ll),l(ll,il),l(il,ul),l(il,hl),l(hl,kl),l(Ke,fl),l(Ke,dl),l(dl,ml),l(Ke,vl),l(Ke,gl),l(gl,El),l(El,wl),l(El,yl),l(yl,bl),l(Ke,Sl),l(Ke,Tl),l(Tl,Cl),l(Tl,Ol),l(Ol,xl),l(Tl,$l),l(Tl,Pl),l(Pl,Ll),l(Tl,Dl),l(Ke,Ml),l(Ke,Il),l(Il,Al),l(Al,Rl),l(Al,jl),l(jl,Hl),l(Ke,Nl),l(Ke,_l),l(_l,Bl),l(_l,Wl),l(Wl,Gl),l(_l,Fl),l(_l,Jl),l(Jl,ql),l(_l,Ul),l(_l,Yl),l(Yl,zl),l(_l,Vl),l(Ke,Zl),l(Ke,Kl),l(Kl,Ql),l(Ql,Xl),l(Ql,ni),l(ni,ai),l(Ke,ti),l(Ke,si),l(si,ei),l(si,oi),l(oi,ci),l(si,pi),l(si,ri),l(ri,li),l(si,ii),l(Ke,ui),l(Ke,hi),l(hi,ki),l(ki,fi),l(ki,di),l(di,mi),l(hi,vi),l(hi,gi),l(hi,Ei),l(Ei,wi),l(Ei,yi),l(yi,bi),l(hi,Si),l(hi,Ti),l(hi,Ci),l(Ci,Oi),l(Ci,xi),l(xi,$i),l(hi,Pi),l(hi,Li),l(hi,Di),l(Di,Mi),l(Di,Ii),l(Ii,Ai),l(hi,Ri),l(hi,ji),l(hi,Hi),l(Hi,Ni),l(Hi,_i),l(_i,Bi),l(Ke,Wi),l(Ke,Gi),l(Gi,Fi),l(Gi,Ji),l(Ji,qi),l(Gi,Ui),l(Gi,Yi),l(Yi,zi),l(Gi,Vi),l(Ke,Zi),l(Ke,Ki),l(Ki,Qi),l(Qi,Xi),l(Qi,nu),l(nu,au),l(Ke,tu),l(Ke,su),l(su,eu),l(su,ou),l(ou,cu),l(su,pu),i(n,ru,a),i(n,lu,a),l(lu,iu),l(iu,uu),l(uu,hu),l(lu,ku),l(lu,fu),l(fu,du),l(lu,mu),l(lu,vu),l(vu,gu),l(lu,Eu),l(lu,wu),wu.innerHTML='<code class="language-js"><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">App</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> target<span class="token punctuation">:</span> document<span class="token punctuation">.</span>body <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>',l(lu,yu),l(lu,bu),l(bu,Su),l(bu,Tu),l(Tu,Cu),l(bu,Ou),l(bu,xu),l(xu,$u),l(bu,Pu),l(lu,Lu),l(lu,Du),Du.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token parameter">app<span class="token punctuation">,</span> options<span class="token punctuation">,</span> instance<span class="token punctuation">,</span> create_fragment</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span></code>',l(lu,Mu),l(lu,Iu),l(Iu,Au),l(Iu,Ru),l(Ru,ju),l(Iu,Hu),l(Iu,Nu),l(Nu,_u),l(Iu,Bu),l(lu,Wu),l(lu,Gu),Gu.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token parameter">app<span class="token punctuation">,</span> options<span class="token punctuation">,</span> instance<span class="token punctuation">,</span> create_fragment</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// highlight-next-line</span>\n  <span class="token keyword">const</span> ctx <span class="token operator">=</span> <span class="token function">instance</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> options<span class="token punctuation">.</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span></code>',l(lu,Fu),l(lu,Ju),l(Ju,qu),l(Ju,Uu),l(Uu,Yu),l(Ju,zu),l(Ju,Vu),l(Vu,Zu),l(Ju,Ku),l(lu,Qu),l(lu,Xu),Xu.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token parameter">app<span class="token punctuation">,</span> options<span class="token punctuation">,</span> instance<span class="token punctuation">,</span> create_fragment</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">const</span> ctx <span class="token operator">=</span> <span class="token function">instance</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> options<span class="token punctuation">.</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// highlight-next-line</span>\n  <span class="token keyword">const</span> fragment <span class="token operator">=</span> <span class="token function">create_fragment</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span></code>',l(lu,nh),l(lu,ah),l(ah,th),l(lu,sh),l(lu,eh),eh.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token parameter">app<span class="token punctuation">,</span> options<span class="token punctuation">,</span> instance<span class="token punctuation">,</span> create_fragment</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">const</span> ctx <span class="token operator">=</span> <span class="token function">instance</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> options<span class="token punctuation">.</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> fragment <span class="token operator">=</span> <span class="token function">create_fragment</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// highlight-start</span>\n  <span class="token comment">// create / claim the nodes</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>hydratable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    fragment<span class="token punctuation">.</span><span class="token function">claim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>\n    fragment<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n  <span class="token comment">// mount the nodes</span>\n  fragment<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// highlight-end</span>\n<span class="token punctuation">&#125;</span></code>',l(lu,oh),l(lu,ch),l(ch,ph),l(ch,rh),l(rh,lh),l(ch,ih),l(lu,uh),l(lu,hh),l(hh,kh),l(hh,fh),l(fh,dh),l(hh,mh),l(hh,vh),l(vh,gh),l(gh,Eh),l(hh,wh),l(lu,yh),l(lu,bh),l(bh,Sh),l(bh,Th),l(Th,Ch),l(bh,Oh),l(lu,xh),l(lu,$h),l($h,Ph),l(Ph,Lh),l($h,Dh),l(lu,Mh),l(lu,Ih),Ih.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token parameter">app<span class="token punctuation">,</span> options<span class="token punctuation">,</span> instance<span class="token punctuation">,</span> create_fragment</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// highlight-start</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">$$invalidate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n    ctx<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>\n    <span class="token comment">// update the nodes</span>\n    fragment<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> ctx <span class="token operator">=</span> <span class="token function">instance</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> options<span class="token punctuation">.</span>props<span class="token punctuation">,</span> $$invalidate<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// highlight-end</span>\n  <span class="token keyword">const</span> fragment <span class="token operator">=</span> <span class="token function">create_fragment</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// create / claim the nodes</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>hydratable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    fragment<span class="token punctuation">.</span><span class="token function">claim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>\n    fragment<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n  <span class="token comment">// mount the nodes</span>\n  fragment<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span></code>',l(lu,Ah),l(lu,Rh),l(Rh,jh),l(jh,Hh),l(jh,Nh),l(Nh,_h),l(jh,Bh),l(jh,Wh),l(Wh,Gh),l(jh,Fh),l(jh,Jh),l(Jh,qh),l(jh,Uh),l(lu,Yh),l(lu,zh),l(zh,Vh),i(n,Zh,a),i(n,Kh,a),l(Kh,Qh),l(Qh,Xh),l(Xh,nk),l(Kh,ak),l(Kh,tk),l(tk,sk)},p:n,d(n){n&&u(t),n&&u(R),n&&u(j),n&&u(qn),n&&u(Un),n&&u(ge),n&&u(Ee),n&&u(Ze),n&&u(Ke),n&&u(ru),n&&u(lu),n&&u(Zh),n&&u(Kh)}}}function hn(n){let t,s;const e=[kn];let o={$$slots:{default:[un]},$$scope:{ctx:n}};for(let n=0;n<e.length;n+=1)o=a(o,e[n]);return t=new ln({props:o}),{c(){F(t.$$.fragment)},l(n){J(t.$$.fragment,n)},m(n,a){q(t,n,a),s=!0},p(n,[a]){const s=0&a?function(n,a){const t={},s={},e={$$scope:1};let o=n.length;for(;o--;){const c=n[o],p=a[o];if(p){for(const n in c)n in p||(s[n]=1);for(const n in p)e[n]||(t[n]=p[n],e[n]=1);n[o]=p}else for(const n in c)e[n]=1}for(const n in s)n in t||(t[n]=void 0);return t}(e,[(o=kn,"object"==typeof o&&null!==o?o:{})]):{};var o;1&a&&(s.$$scope={dirty:a,ctx:n}),t.$set(s)},i(n){s||(W(t.$$.fragment,n),s=!0)},o(n){G(t.$$.fragment,n),s=!1},d(n){U(t,n)}}}const kn={title:"Deep dive into Svelte",description:"wip",date:"2019-11-09T08:00:00Z",lastUpdated:"2019-11-09T08:00:00Z",wip:!0,slug:"deep-dive-into-svelte",type:"blog"};class fn extends V{constructor(n){super(),z(this,n,null,hn,c,{})}}setTimeout(()=>{new fn({target:document.querySelector("#app"),hydrate:!0});if(document.querySelector(".twitter-tweet")){const n=document.createElement("script");n.async=!0,n.src="https://platform.twitter.com/widgets.js",n.charset="utf-8",document.body.appendChild(n)}},3e3);
