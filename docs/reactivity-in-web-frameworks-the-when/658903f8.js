function n(){}function a(n,a){for(const s in a)n[s]=a[s];return n}function s(n){return n()}function t(){return Object.create(null)}function e(n){n.forEach(s)}function o(n){return"function"==typeof n}function p(n,a){return n!=n?a==a:n!==a||n&&"object"==typeof n||"function"==typeof n}function c(n,s,t,e){return n[1]&&e?a(t.ctx.slice(),n[1](e(s))):t.ctx}function r(n,a,s,t,e,o,p){const r=function(n,a,s,t){if(n[2]&&t){const e=n[2](t(s));if(void 0===a.dirty)return e;if("object"==typeof e){const n=[],s=Math.max(a.dirty.length,e.length);for(let t=0;t<s;t+=1)n[t]=a.dirty[t]|e[t];return n}return a.dirty|e}return a.dirty}(a,t,e,o);if(r){const e=c(a,s,t,p);n.p(e,r)}}function i(n,a){n.appendChild(a)}function l(n,a,s){n.insertBefore(a,s||null)}function u(n){n.parentNode.removeChild(n)}function h(n,a){for(let s=0;s<n.length;s+=1)n[s]&&n[s].d(a)}function k(n){return document.createElement(n)}function d(n){return document.createElementNS("http://www.w3.org/2000/svg",n)}function f(n){return document.createTextNode(n)}function m(){return f(" ")}function g(){return f("")}function w(n,a,s){null==s?n.removeAttribute(a):n.getAttribute(a)!==s&&n.setAttribute(a,s)}function v(n){return Array.from(n.childNodes)}function y(n,a,s,t){for(let t=0;t<n.length;t+=1){const e=n[t];if(e.nodeName===a){let a=0;const o=[];for(;a<e.attributes.length;){const n=e.attributes[a++];s[n.name]||o.push(n.name)}for(let n=0;n<o.length;n++)e.removeAttribute(o[n]);return n.splice(t,1)[0]}}return t?d(a):k(a)}function b(n,a){for(let s=0;s<n.length;s+=1){const t=n[s];if(3===t.nodeType)return t.data=""+a,n.splice(s,1)[0]}return f(a)}function E(n){return b(n," ")}function T(n,a){a=""+a,n.wholeText!==a&&(n.data=a)}function S(n,a){n.value=null==a?"":a}class P{constructor(n=null){this.a=n,this.e=this.n=null}m(n,a,s=null){this.e||(this.e=k(a.nodeName),this.t=a,this.h(n)),this.i(s)}h(n){this.e.innerHTML=n,this.n=Array.from(this.e.childNodes)}i(n){for(let a=0;a<this.n.length;a+=1)l(this.t,this.n[a],n)}p(n){this.d(),this.h(n),this.i(this.a)}d(){this.n.forEach(u)}}let j;function A(n){j=n}function x(n){(function(){if(!j)throw new Error("Function called outside component initialization");return j})().$$.on_mount.push(n)}const I=[],O=[],C=[],L=[],$=Promise.resolve();let H=!1;function N(n){C.push(n)}let D=!1;const M=new Set;function W(){if(!D){D=!0;do{for(let n=0;n<I.length;n+=1){const a=I[n];A(a),R(a.$$)}for(I.length=0;O.length;)O.pop()();for(let n=0;n<C.length;n+=1){const a=C[n];M.has(a)||(M.add(a),a())}C.length=0}while(I.length);for(;L.length;)L.pop()();H=!1,D=!1,M.clear()}}function R(n){if(null!==n.fragment){n.update(),e(n.before_update);const a=n.dirty;n.dirty=[-1],n.fragment&&n.fragment.p(n.ctx,a),n.after_update.forEach(N)}}const U=new Set;function B(n,a){n&&n.i&&(U.delete(n),n.i(a))}function q(n,a,s,t){if(n&&n.o){if(U.has(n))return;U.add(n),(void 0).c.push(()=>{U.delete(n),t&&(s&&n.d(1),t())}),n.o(a)}}function _(n){n&&n.c()}function J(n,a){n&&n.l(a)}function F(n,a,t){const{fragment:p,on_mount:c,on_destroy:r,after_update:i}=n.$$;p&&p.m(a,t),N(()=>{const a=c.map(s).filter(o);r?r.push(...a):e(a),n.$$.on_mount=[]}),i.forEach(N)}function G(n,a){const s=n.$$;null!==s.fragment&&(e(s.on_destroy),s.fragment&&s.fragment.d(a),s.on_destroy=s.fragment=null,s.ctx=[])}function Y(n,a){-1===n.$$.dirty[0]&&(I.push(n),H||(H=!0,$.then(W)),n.$$.dirty.fill(0)),n.$$.dirty[a/31|0]|=1<<a%31}function V(a,s,o,p,c,r,i=[-1]){const l=j;A(a);const h=s.props||{},k=a.$$={fragment:null,ctx:null,props:r,update:n,not_equal:c,bound:t(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(l?l.$$.context:[]),callbacks:t(),dirty:i};let d=!1;if(k.ctx=o?o(a,h,(n,s,...t)=>{const e=t.length?t[0]:s;return k.ctx&&c(k.ctx[n],k.ctx[n]=e)&&(k.bound[n]&&k.bound[n](e),d&&Y(a,n)),s}):[],k.update(),d=!0,e(k.before_update),k.fragment=!!p&&p(k.ctx),s.target){if(s.hydrate){const n=v(s.target);k.fragment&&k.fragment.l(n),n.forEach(u)}else k.fragment&&k.fragment.c();s.intro&&B(a.$$.fragment),F(a,s.target,s.anchor),W()}A(l)}class K{$destroy(){G(this,1),this.$destroy=n}$on(n,a){const s=this.$$.callbacks[n]||(this.$$.callbacks[n]=[]);return s.push(a),()=>{const n=s.indexOf(a);-1!==n&&s.splice(n,1)}}$set(){}}function z(a){let s,t,e,o,p,c,r,h,g,T,S,P,j,A,x,I,O,C,L,$,H,N,D,M,W,R,U,B,q,_,J,F,G,Y,V;return{c(){s=k("header"),t=k("nav"),e=k("ul"),o=k("li"),p=k("a"),c=f("Tan Li Hau"),r=m(),h=k("li"),g=k("a"),T=f("About"),S=m(),P=k("li"),j=k("a"),A=f("Writings"),x=m(),I=k("li"),O=k("a"),C=f("Talks"),L=m(),$=k("li"),H=k("a"),N=f("Notes"),D=m(),M=k("li"),W=k("a"),R=f("Newsletter"),U=m(),B=k("li"),q=k("a"),_=d("svg"),J=d("path"),F=m(),G=k("a"),Y=d("svg"),V=d("path"),this.h()},l(n){s=y(n,"HEADER",{class:!0});var a=v(s);t=y(a,"NAV",{});var i=v(t);e=y(i,"UL",{class:!0});var l=v(e);o=y(l,"LI",{class:!0});var k=v(o);p=y(k,"A",{href:!0,class:!0});var d=v(p);c=b(d,"Tan Li Hau"),d.forEach(u),k.forEach(u),r=E(l),h=y(l,"LI",{class:!0});var f=v(h);g=y(f,"A",{href:!0,class:!0});var m=v(g);T=b(m,"About"),m.forEach(u),f.forEach(u),S=E(l),P=y(l,"LI",{class:!0});var w=v(P);j=y(w,"A",{href:!0,class:!0});var K=v(j);A=b(K,"Writings"),K.forEach(u),w.forEach(u),x=E(l),I=y(l,"LI",{class:!0});var z=v(I);O=y(z,"A",{href:!0,class:!0});var Q=v(O);C=b(Q,"Talks"),Q.forEach(u),z.forEach(u),L=E(l),$=y(l,"LI",{class:!0});var Z=v($);H=y(Z,"A",{href:!0,class:!0});var X=v(H);N=b(X,"Notes"),X.forEach(u),Z.forEach(u),D=E(l),M=y(l,"LI",{class:!0});var nn=v(M);W=y(nn,"A",{href:!0,class:!0});var an=v(W);R=b(an,"Newsletter"),an.forEach(u),nn.forEach(u),U=E(l),B=y(l,"LI",{class:!0});var sn=v(B);q=y(sn,"A",{"aria-label":!0,href:!0,class:!0});var tn=v(q);_=y(tn,"svg",{viewBox:!0,width:!0,height:!0,class:!0},1);var en=v(_);J=y(en,"path",{d:!0},1),v(J).forEach(u),en.forEach(u),tn.forEach(u),F=E(sn),G=y(sn,"A",{"aria-label":!0,href:!0,class:!0});var on=v(G);Y=y(on,"svg",{viewBox:!0,width:!0,height:!0,class:!0},1);var pn=v(Y);V=y(pn,"path",{d:!0},1),v(V).forEach(u),pn.forEach(u),on.forEach(u),sn.forEach(u),l.forEach(u),i.forEach(u),a.forEach(u),this.h()},h(){w(p,"href","/"),w(p,"class","svelte-f3e4uo"),w(o,"class","svelte-f3e4uo"),w(g,"href","/about"),w(g,"class","svelte-f3e4uo"),w(h,"class","svelte-f3e4uo"),w(j,"href","/blogs"),w(j,"class","svelte-f3e4uo"),w(P,"class","svelte-f3e4uo"),w(O,"href","/talks"),w(O,"class","svelte-f3e4uo"),w(I,"class","svelte-f3e4uo"),w(H,"href","/notes"),w(H,"class","svelte-f3e4uo"),w($,"class","svelte-f3e4uo"),w(W,"href","/newsletter"),w(W,"class","svelte-f3e4uo"),w(M,"class","svelte-f3e4uo"),w(J,"d","M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66\n    10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5\n    4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"),w(_,"viewBox","0 0 24 24"),w(_,"width","1em"),w(_,"height","1em"),w(_,"class","svelte-f3e4uo"),w(q,"aria-label","Twitter account"),w(q,"href","https://twitter.com/lihautan"),w(q,"class","svelte-f3e4uo"),w(V,"d","M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0\n    0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07\n    5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65\n    5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42\n    3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"),w(Y,"viewBox","0 0 24 24"),w(Y,"width","1em"),w(Y,"height","1em"),w(Y,"class","svelte-f3e4uo"),w(G,"aria-label","Github account"),w(G,"href","https://github.com/tanhauhau"),w(G,"class","svelte-f3e4uo"),w(B,"class","social svelte-f3e4uo"),w(e,"class","svelte-f3e4uo"),w(s,"class","svelte-f3e4uo")},m(n,a){l(n,s,a),i(s,t),i(t,e),i(e,o),i(o,p),i(p,c),i(e,r),i(e,h),i(h,g),i(g,T),i(e,S),i(e,P),i(P,j),i(j,A),i(e,x),i(e,I),i(I,O),i(O,C),i(e,L),i(e,$),i($,H),i(H,N),i(e,D),i(e,M),i(M,W),i(W,R),i(e,U),i(e,B),i(B,q),i(q,_),i(_,J),i(B,F),i(B,G),i(G,Y),i(Y,V)},p:n,i:n,o:n,d(n){n&&u(s)}}}class Q extends K{constructor(n){super(),V(this,n,null,z,p,{})}}function Z(a){let s,t,e,o,p,c,r,h,d,g,T,P,j,A,x,I,O,C,L,$;return{c(){s=k("div"),t=k("h1"),e=f("Subscribe to my newsletter"),o=m(),p=k("h2"),c=f("Get the latest blog posts and project updates delivered right to your inbox"),r=m(),h=k("form"),d=k("div"),g=k("input"),T=m(),P=k("input"),A=m(),x=k("input"),I=m(),O=k("p"),C=f("Powered by Buttondown."),this.h()},l(n){s=y(n,"DIV",{class:!0});var a=v(s);t=y(a,"H1",{});var i=v(t);e=b(i,"Subscribe to my newsletter"),i.forEach(u),o=E(a),p=y(a,"H2",{class:!0});var l=v(p);c=b(l,"Get the latest blog posts and project updates delivered right to your inbox"),l.forEach(u),r=E(a),h=y(a,"FORM",{action:!0,method:!0,target:!0,onsubmit:!0,class:!0});var k=v(h);d=y(k,"DIV",{class:!0});var f=v(d);g=y(f,"INPUT",{type:!0,name:!0,id:!0,"aria-label":!0,placeholder:!0,class:!0}),T=E(f),P=y(f,"INPUT",{type:!0,value:!0,disabled:!0,class:!0}),f.forEach(u),A=E(k),x=y(k,"INPUT",{type:!0,value:!0,name:!0,class:!0}),I=E(k),O=y(k,"P",{class:!0});var m=v(O);C=b(m,"Powered by Buttondown."),m.forEach(u),k.forEach(u),a.forEach(u),this.h()},h(){w(p,"class","svelte-1k1s1co"),w(g,"type","email"),w(g,"name","email"),w(g,"id","bd-email"),w(g,"aria-label","email address"),w(g,"placeholder","youremail@example.com"),w(g,"class","svelte-1k1s1co"),w(P,"type","submit"),P.value="Subscribe",P.disabled=j=!a[0],w(P,"class","svelte-1k1s1co"),w(d,"class","form-item svelte-1k1s1co"),w(x,"type","hidden"),x.value="1",w(x,"name","embed"),w(x,"class","svelte-1k1s1co"),w(O,"class","svelte-1k1s1co"),w(h,"action","https://buttondown.email/api/emails/embed-subscribe/lihautan"),w(h,"method","post"),w(h,"target","popupwindow"),w(h,"onsubmit","window.open('https://buttondown.email/lihautan', 'popupwindow')"),w(h,"class","embeddable-buttondown-form"),w(s,"class","form svelte-1k1s1co")},m(n,u){var k,f,m,w;l(n,s,u),i(s,t),i(t,e),i(s,o),i(s,p),i(p,c),i(s,r),i(s,h),i(h,d),i(d,g),S(g,a[0]),i(d,T),i(d,P),i(h,A),i(h,x),i(h,I),i(h,O),i(O,C),L||(k=g,f="input",m=a[1],k.addEventListener(f,m,w),$=()=>k.removeEventListener(f,m,w),L=!0)},p(n,[a]){1&a&&g.value!==n[0]&&S(g,n[0]),1&a&&j!==(j=!n[0])&&(P.disabled=j)},i:n,o:n,d(n){n&&u(s),L=!1,$()}}}function X(n,a,s){let t;return[t,function(){t=this.value,s(0,t)}]}class nn extends K{constructor(n){super(),V(this,n,X,Z,p,{})}}function an(n){return x(()=>(setTimeout(()=>{if(window.innerWidth>1080){const n=document.createElement("script");n.async=!0,n.type="text/javascript",n.src="//cdn.carbonads.com/carbon.js?serve=CE7ITK3E&placement=lihautancom",n.id="_carbonads_js",document.body.appendChild(n)}},5e3),()=>{try{const n=document.getElementById("carbonads");n.parentNode.removeChild(n)}catch(n){}})),[]}class sn extends K{constructor(n){super(),V(this,n,an,null,p,{})}}function tn(n,a,s){const t=n.slice();return t[6]=a[s],t}function en(n,a,s){const t=n.slice();return t[6]=a[s],t}function on(n){let a,s;return{c(){a=k("meta"),this.h()},l(n){a=y(n,"META",{name:!0,content:!0}),this.h()},h(){w(a,"name","keywords"),w(a,"content",s=n[6])},m(n,s){l(n,a,s)},p(n,t){4&t&&s!==(s=n[6])&&w(a,"content",s)},d(n){n&&u(a)}}}function pn(n){let a,s,t=n[6]+"";return{c(){a=k("span"),s=f(t),this.h()},l(n){a=y(n,"SPAN",{class:!0});var e=v(a);s=b(e,t),e.forEach(u),this.h()},h(){w(a,"class","svelte-9tqnza")},m(n,t){l(n,a,t),i(a,s)},p(n,a){4&a&&t!==(t=n[6]+"")&&T(s,t)},d(n){n&&u(a)}}}function cn(n){let a,s,t,e,o,p,d,S,j,A,x,I,O,C,L,$,H,N,D,M,W,R,U,Y,V,K,z,Z,X,an,cn,rn,ln,un,hn,kn,dn=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"Article",author:n[3],copyrightHolder:n[3],copyrightYear:"2020",creator:n[3],publisher:n[3],description:n[1],headline:n[0],name:n[0],inLanguage:"en"})}<\/script>`,fn=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"BreadcrumbList",description:"Breadcrumbs list",name:"Breadcrumbs",itemListElement:[{"@type":"ListItem",item:{"@id":"https://lihautan.com",name:"Homepage"},position:1},{"@type":"ListItem",item:{"@id":"https%3A%2F%2Flihautan.com%2Freactivity-in-web-frameworks-the-when",name:n[0]},position:2}]})}<\/script>`;document.title=a=n[0]+" | Tan Li Hau";let mn=n[2],gn=[];for(let a=0;a<mn.length;a+=1)gn[a]=on(en(n,mn,a));U=new Q({});let wn=n[2],vn=[];for(let a=0;a<wn.length;a+=1)vn[a]=pn(tn(n,wn,a));const yn=n[5].default,bn=function(n,a,s,t){if(n){const e=c(n,a,s,t);return n[0](e)}}(yn,n,n[4],null);return ln=new nn({}),hn=new sn({}),{c(){s=k("meta"),t=k("meta"),e=k("meta"),o=k("meta"),p=k("meta"),d=k("meta"),S=k("meta"),j=k("meta"),A=k("meta"),x=k("meta"),I=k("meta");for(let n=0;n<gn.length;n+=1)gn[n].c();O=k("meta"),C=k("meta"),$=g(),N=g(),D=m(),M=k("a"),W=f("Skip to content"),R=m(),_(U.$$.fragment),Y=m(),V=k("main"),K=k("h1"),z=f(n[0]),Z=m();for(let n=0;n<vn.length;n+=1)vn[n].c();X=m(),an=k("article"),bn&&bn.c(),cn=m(),rn=k("footer"),_(ln.$$.fragment),un=m(),_(hn.$$.fragment),this.h()},l(a){const c=function(n,a=document.body){return Array.from(a.querySelectorAll(n))}('[data-svelte="svelte-n0q11s"]',document.head);s=y(c,"META",{name:!0,content:!0}),t=y(c,"META",{name:!0,content:!0}),e=y(c,"META",{name:!0,content:!0}),o=y(c,"META",{name:!0,content:!0}),p=y(c,"META",{name:!0,content:!0}),d=y(c,"META",{name:!0,content:!0}),S=y(c,"META",{name:!0,content:!0}),j=y(c,"META",{name:!0,content:!0}),A=y(c,"META",{name:!0,content:!0}),x=y(c,"META",{name:!0,content:!0}),I=y(c,"META",{name:!0,content:!0});for(let n=0;n<gn.length;n+=1)gn[n].l(c);O=y(c,"META",{itemprop:!0,content:!0}),C=y(c,"META",{itemprop:!0,content:!0}),$=g(),N=g(),c.forEach(u),D=E(a),M=y(a,"A",{href:!0,class:!0});var r=v(M);W=b(r,"Skip to content"),r.forEach(u),R=E(a),J(U.$$.fragment,a),Y=E(a),V=y(a,"MAIN",{id:!0,class:!0});var i=v(V);K=y(i,"H1",{});var l=v(K);z=b(l,n[0]),l.forEach(u),Z=E(i);for(let n=0;n<vn.length;n+=1)vn[n].l(i);X=E(i),an=y(i,"ARTICLE",{});var h=v(an);bn&&bn.l(h),h.forEach(u),i.forEach(u),cn=E(a),rn=y(a,"FOOTER",{class:!0});var k=v(rn);J(ln.$$.fragment,k),un=E(k),J(hn.$$.fragment,k),k.forEach(u),this.h()},h(){w(s,"name","description"),w(s,"content",n[1]),w(t,"name","image"),w(t,"content",null),w(e,"name","og:image"),w(e,"content",null),w(o,"name","og:title"),w(o,"content",n[0]),w(p,"name","og:description"),w(p,"content",n[1]),w(d,"name","og:type"),w(d,"content","website"),w(S,"name","twitter:card"),w(S,"content","summary_large_image"),w(j,"name","twitter:creator"),w(j,"content","@lihautan"),w(A,"name","twitter:title"),w(A,"content",n[0]),w(x,"name","twitter:description"),w(x,"content",n[1]),w(I,"name","twitter:image"),w(I,"content",null),w(O,"itemprop","url"),w(O,"content","https%3A%2F%2Flihautan.com%2Freactivity-in-web-frameworks-the-when"),w(C,"itemprop","image"),w(C,"content",null),L=new P($),H=new P(N),w(M,"href","#content"),w(M,"class","skip svelte-9tqnza"),w(V,"id","content"),w(V,"class","blog svelte-9tqnza"),w(rn,"class","svelte-9tqnza")},m(n,a){i(document.head,s),i(document.head,t),i(document.head,e),i(document.head,o),i(document.head,p),i(document.head,d),i(document.head,S),i(document.head,j),i(document.head,A),i(document.head,x),i(document.head,I);for(let n=0;n<gn.length;n+=1)gn[n].m(document.head,null);i(document.head,O),i(document.head,C),L.m(dn,document.head),i(document.head,$),H.m(fn,document.head),i(document.head,N),l(n,D,a),l(n,M,a),i(M,W),l(n,R,a),F(U,n,a),l(n,Y,a),l(n,V,a),i(V,K),i(K,z),i(V,Z);for(let n=0;n<vn.length;n+=1)vn[n].m(V,null);i(V,X),i(V,an),bn&&bn.m(an,null),l(n,cn,a),l(n,rn,a),F(ln,rn,null),i(rn,un),F(hn,rn,null),kn=!0},p(n,[t]){if((!kn||1&t)&&a!==(a=n[0]+" | Tan Li Hau")&&(document.title=a),(!kn||2&t)&&w(s,"content",n[1]),(!kn||1&t)&&w(o,"content",n[0]),(!kn||2&t)&&w(p,"content",n[1]),(!kn||1&t)&&w(A,"content",n[0]),(!kn||2&t)&&w(x,"content",n[1]),4&t){let a;for(mn=n[2],a=0;a<mn.length;a+=1){const s=en(n,mn,a);gn[a]?gn[a].p(s,t):(gn[a]=on(s),gn[a].c(),gn[a].m(O.parentNode,O))}for(;a<gn.length;a+=1)gn[a].d(1);gn.length=mn.length}if((!kn||3&t)&&dn!==(dn=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"Article",author:n[3],copyrightHolder:n[3],copyrightYear:"2020",creator:n[3],publisher:n[3],description:n[1],headline:n[0],name:n[0],inLanguage:"en"})}<\/script>`)&&L.p(dn),(!kn||1&t)&&fn!==(fn=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"BreadcrumbList",description:"Breadcrumbs list",name:"Breadcrumbs",itemListElement:[{"@type":"ListItem",item:{"@id":"https://lihautan.com",name:"Homepage"},position:1},{"@type":"ListItem",item:{"@id":"https%3A%2F%2Flihautan.com%2Freactivity-in-web-frameworks-the-when",name:n[0]},position:2}]})}<\/script>`)&&H.p(fn),(!kn||1&t)&&T(z,n[0]),4&t){let a;for(wn=n[2],a=0;a<wn.length;a+=1){const s=tn(n,wn,a);vn[a]?vn[a].p(s,t):(vn[a]=pn(s),vn[a].c(),vn[a].m(V,X))}for(;a<vn.length;a+=1)vn[a].d(1);vn.length=wn.length}bn&&bn.p&&16&t&&r(bn,yn,n,n[4],t,null,null)},i(n){kn||(B(U.$$.fragment,n),B(bn,n),B(ln.$$.fragment,n),B(hn.$$.fragment,n),kn=!0)},o(n){q(U.$$.fragment,n),q(bn,n),q(ln.$$.fragment,n),q(hn.$$.fragment,n),kn=!1},d(n){u(s),u(t),u(e),u(o),u(p),u(d),u(S),u(j),u(A),u(x),u(I),h(gn,n),u(O),u(C),u($),n&&L.d(),u(N),n&&H.d(),n&&u(D),n&&u(M),n&&u(R),G(U,n),n&&u(Y),n&&u(V),h(vn,n),bn&&bn.d(n),n&&u(cn),n&&u(rn),G(ln),G(hn)}}}function rn(n,a,s){let{title:t=""}=a,{description:e=""}=a,{tags:o=[]}=a;const p={"@type":"Person",name:"Tan Li Hau"};let{$$slots:c={},$$scope:r}=a;return n.$set=n=>{"title"in n&&s(0,t=n.title),"description"in n&&s(1,e=n.description),"tags"in n&&s(2,o=n.tags),"$$scope"in n&&s(4,r=n.$$scope)},[t,e,o,p,r,c]}class ln extends K{constructor(n){super(),V(this,n,rn,cn,p,{title:0,description:1,tags:2})}}function un(a){let s,t,e,o,p,c,r,h,d,g,T,S,P,j,A,x,I,O,C,L,$,H,N,D,M,W,R,U,B,q,_,J,F,G,Y,V,K,z,Q,Z,X,nn,an,sn,tn,en,on,pn,cn,rn,ln,un,hn,kn,dn,fn,mn,gn,wn,vn,yn,bn,En,Tn,Sn,Pn,jn,An,xn,In,On,Cn,Ln,$n,Hn,Nn,Dn,Mn,Wn,Rn,Un,Bn,qn,_n,Jn,Fn,Gn,Yn,Vn,Kn,zn,Qn,Zn,Xn,na,aa,sa,ta,ea,oa,pa,ca,ra,ia,la,ua,ha,ka,da,fa,ma,ga,wa,va,ya,ba,Ea,Ta,Sa,Pa,ja,Aa,xa,Ia,Oa,Ca,La,$a,Ha,Na,Da,Ma,Wa,Ra,Ua,Ba,qa,_a,Ja,Fa,Ga,Ya,Va,Ka,za,Qa,Za,Xa,ns,as,ss,ts,es,os,ps,cs,rs,is,ls,us,hs,ks,ds,fs,ms,gs,ws,vs,ys,bs,Es,Ts,Ss,Ps,js,As,xs,Is,Os,Cs,Ls,$s,Hs,Ns,Ds,Ms,Ws,Rs,Us,Bs,qs,_s,Js,Fs,Gs,Ys,Vs,Ks,zs,Qs,Zs,Xs,nt,at,st,tt,et,ot,pt,ct,rt,it,lt,ut,ht,kt,dt,ft,mt,gt,wt,vt,yt,bt,Et,Tt,St,Pt,jt,At,xt,It,Ot,Ct,Lt,$t,Ht,Nt,Dt,Mt,Wt,Rt,Ut,Bt,qt,_t,Jt,Ft,Gt,Yt,Vt,Kt,zt,Qt,Zt,Xt,ne,ae,se,te,ee,oe,pe,ce,re,ie,le,ue,he,ke,de,fe,me,ge,we,ve,ye,be,Ee,Te,Se,Pe,je,Ae,xe,Ie,Oe,Ce,Le,$e,He,Ne,De,Me,We,Re,Ue,Be,qe,_e,Je,Fe,Ge,Ye,Ve,Ke,ze,Qe,Ze,Xe,no,ao,so,to,eo,oo,po,co,ro,io,lo,uo,ho,ko,fo,mo,go,wo,vo,yo,bo,Eo,To,So,Po,jo,Ao,xo,Io,Oo,Co,Lo,$o,Ho,No,Do,Mo,Wo,Ro,Uo,Bo,qo,_o,Jo,Fo,Go,Yo,Vo,Ko,zo,Qo,Zo,Xo,np,ap,sp,tp,ep,op,pp,cp,rp,ip,lp,up,hp,kp,dp,fp,mp,gp,wp,vp,yp,bp,Ep,Tp,Sp,Pp,jp,Ap,xp,Ip,Op,Cp,Lp,$p,Hp,Np,Dp,Mp,Wp,Rp,Up,Bp,qp,_p,Jp,Fp,Gp,Yp,Vp,Kp,zp,Qp,Zp,Xp,nc,ac,sc,tc,ec,oc,pc,cc,rc,ic,lc,uc,hc,kc,dc,fc,mc,gc,wc,vc,yc,bc,Ec,Tc,Sc,Pc,jc,Ac,xc,Ic,Oc,Cc,Lc,$c,Hc,Nc,Dc,Mc,Wc,Rc,Uc,Bc,qc,_c,Jc,Fc,Gc,Yc,Vc,Kc,zc,Qc,Zc,Xc,nr,ar,sr,tr,er,or,pr,cr,rr,ir,lr,ur,hr,kr,dr,fr,mr,gr,wr,vr,yr,br,Er,Tr,Sr,Pr,jr,Ar,xr,Ir,Or,Cr,Lr,$r,Hr,Nr,Dr,Mr,Wr,Rr,Ur,Br,qr,_r,Jr,Fr,Gr,Yr,Vr,Kr,zr,Qr,Zr,Xr,ni,ai,si,ti,ei,oi,pi,ci,ri,ii,li,ui,hi,ki,di,fi,mi,gi,wi,vi,yi,bi,Ei,Ti,Si,Pi,ji,Ai,xi,Ii,Oi,Ci,Li,$i,Hi,Ni,Di,Mi,Wi,Ri,Ui,Bi,qi,_i,Ji,Fi,Gi,Yi,Vi,Ki,zi,Qi,Zi,Xi,nl,al,sl,tl,el,ol,pl,cl,rl,il,ll,ul,hl,kl,dl,fl,ml,gl,wl,vl,yl,bl,El,Tl,Sl,Pl,jl,Al,xl,Il,Ol,Cl,Ll,$l,Hl,Nl,Dl,Ml,Wl,Rl,Ul,Bl,ql,_l,Jl,Fl,Gl,Yl,Vl,Kl,zl,Ql,Zl,Xl,nu,au,su,tu,eu;return{c(){s=k("section"),t=k("ul"),e=k("li"),o=k("a"),p=f("What is Reactivity?"),c=k("li"),r=k("a"),h=f("The WHEN and the WHAT"),d=k("ul"),g=k("li"),T=k("a"),S=f("the WHEN"),P=k("li"),j=k("a"),A=f("Mutation Tracking"),x=k("ul"),I=k("li"),O=k("a"),C=f("Prior Proxy"),L=k("li"),$=k("a"),H=f("With Proxy"),N=k("li"),D=k("a"),M=f("Just call  scheduleUpdate"),W=k("li"),R=k("a"),U=f("Static analysis"),B=k("li"),q=k("a"),_=f("Summary"),J=m(),F=k("section"),G=k("h1"),Y=k("a"),V=f("What is Reactivity?"),K=m(),z=k("p"),Q=f("Reactivity is the ability of a web framework to update your view whenever the application state has changed."),Z=m(),X=k("p"),nn=f("It is the core of any modern web framework."),an=m(),sn=k("p"),tn=f("To understand what reactivity is, let’s look at an example counter app."),en=m(),on=k("p"),pn=f("This is how you would write in plain JavaScript:"),cn=m(),rn=k("pre"),ln=m(),un=k("p"),hn=f("This is how you would do it in Vue:"),kn=m(),dn=k("pre"),fn=m(),mn=k("p"),gn=f("… and this in React:"),wn=m(),vn=k("pre"),yn=m(),bn=k("p"),En=f("Notice that with a web framework, your code focus more on "),Tn=k("em"),Sn=k("u"),Pn=f("updating the application state based on business requirements"),jn=f(" and "),An=k("em"),xn=k("u"),In=f("describing how our view looks like using templating language or JSX expression"),On=f(".\nThe framework will bridge the application state and the view, updating the view whenever the application state changes."),Cn=m(),Ln=k("p"),$n=f("No more pesky DOM manipulation statements ("),Hn=k("code"),Nn=f("span.innerText = counter"),Dn=f(") sprinkled alongside with state update statements ("),Mn=k("code"),Wn=f("counter ++;"),Rn=f("). No more elusive bugs of unsynchronized view and application state, when one forgets to update the view when updating the application state."),Un=m(),Bn=k("p"),qn=f("All these problems are now past tense when web frameworks now ship in reactivity by default, always making sure that the view is up to date of the application state changes."),_n=m(),Jn=k("p"),Fn=f("So the main idea we are going to discuss next is,"),Gn=m(),Yn=k("blockquote"),Vn=k("p"),Kn=f("How do web frameworks achieve reactivity?"),zn=m(),Qn=k("section"),Zn=k("h1"),Xn=k("a"),na=f("The WHEN and the WHAT"),aa=m(),sa=k("p"),ta=f("To achieve reactivity, the framework has to answer 2 questions"),ea=m(),oa=k("ul"),pa=k("li"),ca=f("When does the application state change?"),ra=m(),ia=k("li"),la=f("What has the application state changed?"),ua=m(),ha=k("p"),ka=k("strong"),da=f("The WHEN"),fa=f(" answers when the framework needs to start to do its job on updating the view. Knowing "),ma=k("strong"),ga=f("the WHAT"),wa=f(", allows the framework to optimise it's work, only update part of the view that has changed."),va=m(),ya=k("p"),ba=f("We are going to discuss different strategies to determine "),Ea=k("strong"),Ta=f("the WHEN"),Sa=f(" and "),Pa=k("strong"),ja=f("the WHAT"),Aa=f(", along with code snippets for each strategy. You could combine different strategies to determine "),xa=k("strong"),Ia=f("the WHEN"),Oa=f(" and "),Ca=k("strong"),La=f("the WHAT"),$a=f(", yet certain combinations may remind you of some of the popular web frameworks."),Ha=m(),Na=k("section"),Da=k("h2"),Ma=k("a"),Wa=f("the WHEN"),Ra=m(),Ua=k("p"),Ba=f("The WHEN notifies the framework that the application state has changed, so that the framework knows that it needs to do its job to update the view."),qa=m(),_a=k("p"),Ja=f("Different frameworks employ different strategies to detect when the application state has changed, but in essence, it usually boils down to calling a "),Fa=k("code"),Ga=f("scheduleUpdate()"),Ya=f(" in the framework.\n"),Va=k("code"),Ka=f("scheduleUpdate"),za=f(" is usually a debounced "),Qa=k("code"),Za=f("update"),Xa=f(" function of the framework. Because changes in the application state may cause derived state changes, or the framework user may change different parts of the application state consecutively. If the framework updates the view on every state change, it may change the view too frequent, which may be inefficient, or it may have an inconsistent view ("),ns=k("a"),as=f("may result in tearing"),ss=f(")."),ts=m(),es=k("p"),os=f("Imagine this contrived React example:"),ps=m(),cs=k("pre"),rs=m(),is=k("p"),ls=f("If the framework synchronously updates the todos in the view then updates the total todos count, it may have a split second where the todos and the count go out of sync. "),us=k("em"),hs=f("(Although it may seem impossible even in this contrived example, but you get the point. )"),ks=m(),ds=k("blockquote"),fs=k("p"),ms=f("By the way, you should not set "),gs=k("code"),ws=f("totalTodos"),vs=f(" this way, you should derived it from "),ys=k("code"),bs=f("todos.length"),Es=f(", see "),Ts=k("a"),Ss=f('"Don\'t Sync State. Derive it!" by Kent C. Dodds.'),Ps=m(),js=k("p"),As=f("So how do you know when the application state has changed?"),xs=m(),Is=k("section"),Os=k("h2"),Cs=k("a"),Ls=f("Mutation Tracking"),$s=m(),Hs=k("p"),Ns=f("So we want to know when the application state has changed? Let’s track it!"),Ds=m(),Ms=k("p"),Ws=f("First of all, why is it called mutation tracking? That’s because we can only track mutation."),Rs=m(),Us=k("p"),Bs=f("By the word mutation, it infers that our application state has to be an object, because you can’t mutate a primitive."),qs=m(),_s=k("p"),Js=f("Primitives like numbers, string, boolean, are passed by value into a function. So, if you reassign the primitive to another value, the reassignment will never be able to be observed within the function:"),Fs=m(),Gs=k("pre"),Ys=m(),Vs=k("p"),Ks=f("Object on the other hand, is passed by reference. So any changes to the same object can be observed from within:"),zs=m(),Qs=k("pre"),Zs=m(),Xs=k("p"),nt=f("This is also why most frameworks’ application state is accessed via "),at=k("code"),st=f("this"),tt=f(", because "),et=k("code"),ot=f("this"),pt=f(" is an object, changes to "),ct=k("code"),rt=f("this.appState"),it=f(" can be observed / tracked by the framework."),lt=m(),ut=k("p"),ht=f("Now we understand why is it called mutation tracking, let’s take a look at how mutation tracking is implemented."),kt=m(),dt=k("p"),ft=f("We are going to look at the two common types of object in JavaScript, the plain object and the array."),mt=m(),gt=k("p"),wt=k("em"),vt=f("(Though if you "),yt=k("code"),bt=f("typeof"),Et=f(" for both object or array, they are both "),Tt=k("code"),St=f('"object"'),Pt=f(")"),jt=f("."),At=m(),xt=k("p"),It=f("With the introduction of ES6 Proxy, the mutation tracking method has become much straightforward. But still, let’s take a look at how you can implement a mutation tracking with / without ES6 Proxy."),Ot=m(),Ct=k("section"),Lt=k("h3"),$t=k("a"),Ht=f("Prior Proxy"),Nt=m(),Dt=k("p"),Mt=f("To track mutation without proxy, we can define a custom getters and setters for all the property of the object. So whenever the framework user changes the value of a property, the custom setter will be called, and we will know that something has changed:"),Wt=m(),Rt=k("pre"),Ut=m(),Bt=k("p"),qt=f("Inspired by "),_t=k("a"),Jt=f("Vue.js 2.0’s observer"),Ft=f("."),Gt=m(),Yt=k("p"),Vt=f("However, you may notice that if we are defining getters and setters on the existing properties of the object, we may miss out changes via adding or deleting property from the object."),Kt=m(),zt=k("p"),Qt=f("This is something you can’t fix without a better JavaScript API, so a probable workaround for this caveat is to provide a helper function instead. For example, in Vue, you need to use the helper function "),Zt=k("a"),Xt=k("code"),ne=f("Vue.set(object, propertyName, value)"),ae=f(" instead of "),se=k("code"),te=f("object[propertyName] = value"),ee=f("."),oe=m(),pe=k("p"),ce=f("Tracking mutation of an array is similar to mutation tracking for an object. However, besides being able to change the array item through assignment, it is possible to mutate an array through its mutating method, eg: "),re=k("code"),ie=f("push"),le=f(", "),ue=k("code"),he=f("pop"),ke=f(", "),de=k("code"),fe=f("splice"),me=f(", "),ge=k("code"),we=f("unshift"),ve=f(", "),ye=k("code"),be=f("shift"),Ee=f(", "),Te=k("code"),Se=f("sort"),Pe=f(" and "),je=k("code"),Ae=f("reverse"),xe=f("."),Ie=m(),Oe=k("p"),Ce=f("To track changes made by these methods, you have to patch them:"),Le=m(),$e=k("pre"),He=m(),Ne=k("p"),De=f("Inspired by "),Me=k("a"),We=f("Vue.js 2.0’s array observer"),Re=f("."),Ue=m(),Be=k("blockquote"),qe=k("p"),_e=f("CodeSandbox for "),Je=k("a"),Fe=f("mutation tracking of object and array"),Ge=m(),Ye=k("p"),Ve=f("In summary, to track mutation on an object or array without Proxy, you need to define custom getters/setters for all properties, so that you can capture when the property is being set. Besides that, you need to patch all the mutating methods as well, because that will mutate your object without triggering the custom setter."),Ke=m(),ze=k("p"),Qe=f("Yet, there’s still edge cases that cannot be covered, such as adding new property or deleting property."),Ze=m(),Xe=k("p"),no=f("There’s where "),ao=k("a"),so=f("ES6 Proxy"),to=f(" comes to help."),eo=m(),oo=k("section"),po=k("h3"),co=k("a"),ro=f("With Proxy"),io=m(),lo=k("p"),uo=f("Proxy allow us to define custom behaviours on fundamental operations on the target object. This is great for mutation tracking, because Proxy allow us to intercept setting and deleting property, irrelevant to whether we uses index assignment, "),ho=k("code"),ko=f("obj[key] = value"),fo=f(" or mutating methods, "),mo=k("code"),go=f("obj.push(value)"),wo=f(":"),vo=m(),yo=k("pre"),bo=m(),Eo=k("p"),To=k("strong"),So=f("So how do we use mutation tracking?"),Po=m(),jo=k("p"),Ao=f("The good thing about mutation tracking is that, if you noticed in the example above, the framework user is unaware of the tracking and treats "),xo=k("code"),Io=f("appState"),Oo=f(" as a normal object:"),Co=m(),Lo=k("pre"),$o=m(),Ho=k("p"),No=f("We can set up the tracking during the initialisation of the component, either:"),Do=m(),Mo=k("ul"),Wo=k("li"),Ro=f("track a property of the component,"),Uo=m(),Bo=k("li"),qo=f("track the component instance itself,"),_o=m(),Jo=k("li"),Fo=f("or something in between the above"),Go=m(),Yo=k("pre"),Vo=m(),Ko=k("p"),zo=f("Once you’ve able to track application state changes, the next thing to do is to call "),Qo=k("code"),Zo=f("scheduleUpdate"),Xo=f(" instead of "),np=k("code"),ap=f("console.log"),sp=f("."),tp=m(),ep=k("p"),op=f("You may concern whether all these complexities is worth the effort. Or you may be worried that "),pp=k("a"),cp=f("Proxy is not supported to older browsers"),rp=f("."),ip=m(),lp=k("p"),up=f("Your concern is not entirely baseless. Not all frameworks use mutation tracking."),hp=m(),kp=k("section"),dp=k("h3"),fp=k("a"),mp=f("Just call "),gp=k("code"),wp=f("scheduleUpdate"),vp=m(),yp=k("p"),bp=f("Some frameworks design their API in the way such that it “tricks” the framework user to tell the framework that the application state has changed."),Ep=m(),Tp=k("p"),Sp=f("Instead of remembering to call "),Pp=k("code"),jp=f("scheduleUpdate"),Ap=f(" whenever you change the application state, the framework forces you to use their API to change application state:"),xp=m(),Ip=k("pre"),Op=m(),Cp=k("p"),Lp=f("This gives us a much simpler design and less edge case to handle:"),$p=m(),Hp=k("pre"),Np=m(),Dp=k("p"),Mp=f("Inspired by "),Wp=k("a"),Rp=f("React’s "),Up=k("code"),Bp=f("setState"),qp=f("."),_p=m(),Jp=k("p"),Fp=f("However, this may trip new developers into the framework:"),Gp=m(),Yp=k("pre"),Vp=m(),Kp=k("p"),zp=f("... and it maybe a bit clumsy when adding / removing items from an array:"),Qp=m(),Zp=k("pre"),Xp=m(),nc=k("p"),ac=f("A different approach that may have the best of both world is to insert "),sc=k("code"),tc=f("scheduleUpdate"),ec=f(" in scenarios that you think that changes may most likely happen:"),oc=m(),pc=k("ul"),cc=k("li"),rc=f("Event handlers"),ic=m(),lc=k("li"),uc=f("Timeout (eg: "),hc=k("code"),kc=f("setTimeout"),dc=f(", "),fc=k("code"),mc=f("setInterval"),gc=f(", ...)"),wc=m(),vc=k("li"),yc=f("API handling, promises handling"),bc=m(),Ec=k("li"),Tc=f("..."),Sc=m(),Pc=k("p"),jc=f("So, instead of enforcing framework users to use "),Ac=k("code"),xc=f("setAppState()"),Ic=f(", framework users should use the\ncustom timeouts, api handlers, ...:"),Oc=m(),Cc=k("pre"),Lc=m(),$c=k("p"),Hc=f("Inspired by "),Nc=k("a"),Dc=f("AngularJS’s \\$timeout"),Mc=m(),Wc=k("p"),Rc=f("Your framework user can now be free to change the application state the way he wants, as long as the changes are done within your custom handlers. Because at the end of the handler, you will call "),Uc=k("code"),Bc=f("scheduleUpdate()"),qc=f("."),_c=m(),Jc=k("p"),Fc=f("Similarly, this may trip new developers into the framework too! Try search "),Gc=k("a"),Yc=f('"AngularJS $timeout vs window.setTimeout"'),Vc=m(),Kc=k("p"),zc=f("You may think, what if there are no state changes in the handler function, wouldn’t calling an extra "),Qc=k("code"),Zc=f("scheduleUpdate()"),Xc=f(" be inefficient? Well so far, we haven’t discussed what’s happening in "),nr=k("code"),ar=f("scheduleUpdate()"),sr=f(", we can check "),tr=k("strong"),er=f("what has changed"),or=f(" (which will be covered in the next section)"),pr=k("strong"),cr=f(","),rr=f(" and if there’s nothing change, we can skip the subsequent steps."),ir=m(),lr=k("p"),ur=f("If you look at the strategies that we have tried so far, you may have noticed a common struggle:"),hr=m(),kr=k("ul"),dr=k("li"),fr=f("allow framework user to change the application state in any way he wants"),mr=m(),gr=k("li"),wr=f("achieve reactivity without much runtime complexity."),vr=m(),yr=k("p"),br=f("At this point, you got to agree that enforcing framework developers to call "),Er=k("code"),Tr=f("setAppState"),Sr=f(" whenever they want to change the application state, requires "),Pr=k("strong"),jr=f("less runtime complexity"),Ar=f(" from the framework, and it’s unlikely to have any corner cases or caveats that need to handle."),xr=m(),Ir=k("p"),Or=f("If the dilemma is between developer expressiveness versus runtime complexity, probably we could get the best of both worlds by shifting the complexity from runtime to build time?"),Cr=m(),Lr=k("section"),$r=k("h3"),Hr=k("a"),Nr=f("Static analysis"),Dr=m(),Mr=k("p"),Wr=f("If we have a compiler that allow framework users to write:"),Rr=m(),Ur=k("pre"),Br=m(),qr=k("p"),_r=f("and compiles it to:"),Jr=m(),Fr=k("pre"),Gr=m(),Yr=k("p"),Vr=f("Then, we would really have best of both worlds! 😎"),Kr=m(),zr=k("p"),Qr=f("Let’s look at different scenarios that the framework user would write, and see whether we know when to insert the "),Zr=k("code"),Xr=f("scheduleUpdate()"),ni=f(":"),ai=m(),si=k("pre"),ti=m(),ei=k("p"),oi=f("Allow me to summarise some complexities faced in the example above:"),pi=m(),ci=k("ul"),ri=k("li"),ii=f("It is easy to track direct changes to the application state, but it is extremely difficult to track changes made indirectly, eg: "),li=k("code"),ui=f("foo.one"),hi=f(", "),ki=k("code"),di=f("doSomethingMutable(this.appState)"),fi=f(" or "),mi=k("code"),gi=f("this.appState.obj.increment()"),wi=m(),vi=k("li"),yi=f("It is easy to track changes through assignment statements, but extremely difficult to track changes made through mutating methods, eg: "),bi=k("code"),Ei=f("this.appState.list.push('1')"),Ti=f(", I mean how do you know the method is mutating?"),Si=m(),Pi=k("p"),ji=f("So, for "),Ai=k("a"),xi=f("Svelte"),Ii=f(", one of the frameworks that use static analysis to achieve reactivity, it only ensures reactivity through assignment operators (eg: "),Oi=k("code"),Ci=f("="),Li=f(", "),$i=k("code"),Hi=f("+="),Ni=f(", …) and unary arithmetic operators (eg: "),Di=k("code"),Mi=f("++"),Wi=f(" and "),Ri=k("code"),Ui=f("--"),Bi=f(")."),qi=m(),_i=k("p"),Ji=f("I believe that there’s room yet to be explored in this space, especially at the "),Fi=k("a"),Gi=f("rise of TypeScript"),Yi=f(", we may be able to understand our application state better through static types."),Vi=m(),Ki=k("section"),zi=k("h2"),Qi=k("a"),Zi=f("Summary"),Xi=m(),nl=k("p"),al=f("We’ve gone through different strategies of knowing when the application state has changed:"),sl=m(),tl=k("ul"),el=k("li"),ol=f("mutation tracking"),pl=m(),cl=k("li"),rl=f("just call "),il=k("code"),ll=f("scheduleUpdate"),ul=m(),hl=k("li"),kl=f("static analysis"),dl=m(),fl=k("p"),ml=f("Different strategies manifests itself in terms of the API of the framework:"),gl=m(),wl=k("ul"),vl=k("li"),yl=k("p"),bl=f("Is the framework user going to change the application state with simple object manipulation? or have to use API like "),El=k("code"),Tl=f("setAppState()"),Sl=f("?"),Pl=m(),jl=k("li"),Al=k("p"),xl=f("Is there caveats that the framework user needs to be aware of?"),Il=m(),Ol=k("p"),Cl=f("For example:"),Ll=m(),$l=k("ul"),Hl=k("li"),Nl=f("Can only use assignment statement to achieve reactivity?"),Dl=m(),Ml=k("li"),Wl=f("Does framework user need to use a helper function for adding new reactive property to the application state?"),Rl=m(),Ul=k("p"),Bl=f("Knowing when an application state has changed, allow frameworks to know when to update our view. Yet, to optimise the updates, frameworks need to know what has changed in the application state."),ql=m(),_l=k("p"),Jl=f("Are we going to remove and recreate every DOM element in the view? Do we know that which part of the view is going to change based on what has changed in the application state?"),Fl=m(),Gl=k("p"),Yl=f("That is, if we know "),Vl=k("strong"),Kl=f("the WHAT"),zl=f("."),Ql=m(),Zl=k("hr"),Xl=m(),nu=k("p"),au=f("I’d like to thank "),su=k("a"),tu=f("Rich Harris"),eu=f(" for pointing out some inaccuracies in the previous version of this article and providing valuable feedbacks. All the remaining errors are mine.."),this.h()},l(n){s=y(n,"SECTION",{});var a=v(s);t=y(a,"UL",{class:!0,id:!0,role:!0,"aria-label":!0}),v(t).forEach(u),e=y(a,"LI",{});var i=v(e);o=y(i,"A",{href:!0});var l=v(o);p=b(l,"What is Reactivity?"),l.forEach(u),i.forEach(u),c=y(a,"LI",{});var k=v(c);r=y(k,"A",{href:!0});var f=v(r);h=b(f,"The WHEN and the WHAT"),f.forEach(u),k.forEach(u),d=y(a,"UL",{});var m=v(d);g=y(m,"LI",{});var w=v(g);T=y(w,"A",{href:!0});var ou=v(T);S=b(ou,"the WHEN"),ou.forEach(u),w.forEach(u),P=y(m,"LI",{});var pu=v(P);j=y(pu,"A",{href:!0});var cu=v(j);A=b(cu,"Mutation Tracking"),cu.forEach(u),pu.forEach(u),x=y(m,"UL",{});var ru=v(x);I=y(ru,"LI",{});var iu=v(I);O=y(iu,"A",{href:!0});var lu=v(O);C=b(lu,"Prior Proxy"),lu.forEach(u),iu.forEach(u),L=y(ru,"LI",{});var uu=v(L);$=y(uu,"A",{href:!0});var hu=v($);H=b(hu,"With Proxy"),hu.forEach(u),uu.forEach(u),N=y(ru,"LI",{});var ku=v(N);D=y(ku,"A",{href:!0});var du=v(D);M=b(du,"Just call  scheduleUpdate"),du.forEach(u),ku.forEach(u),W=y(ru,"LI",{});var fu=v(W);R=y(fu,"A",{href:!0});var mu=v(R);U=b(mu,"Static analysis"),mu.forEach(u),fu.forEach(u),ru.forEach(u),B=y(m,"LI",{});var gu=v(B);q=y(gu,"A",{href:!0});var wu=v(q);_=b(wu,"Summary"),wu.forEach(u),gu.forEach(u),m.forEach(u),a.forEach(u),J=E(n),F=y(n,"SECTION",{});var vu=v(F);G=y(vu,"H1",{});var yu=v(G);Y=y(yu,"A",{href:!0,id:!0});var bu=v(Y);V=b(bu,"What is Reactivity?"),bu.forEach(u),yu.forEach(u),K=E(vu),z=y(vu,"P",{});var Eu=v(z);Q=b(Eu,"Reactivity is the ability of a web framework to update your view whenever the application state has changed."),Eu.forEach(u),Z=E(vu),X=y(vu,"P",{});var Tu=v(X);nn=b(Tu,"It is the core of any modern web framework."),Tu.forEach(u),an=E(vu),sn=y(vu,"P",{});var Su=v(sn);tn=b(Su,"To understand what reactivity is, let’s look at an example counter app."),Su.forEach(u),en=E(vu),on=y(vu,"P",{});var Pu=v(on);pn=b(Pu,"This is how you would write in plain JavaScript:"),Pu.forEach(u),cn=E(vu),rn=y(vu,"PRE",{class:!0}),v(rn).forEach(u),ln=E(vu),un=y(vu,"P",{});var ju=v(un);hn=b(ju,"This is how you would do it in Vue:"),ju.forEach(u),kn=E(vu),dn=y(vu,"PRE",{class:!0}),v(dn).forEach(u),fn=E(vu),mn=y(vu,"P",{});var Au=v(mn);gn=b(Au,"… and this in React:"),Au.forEach(u),wn=E(vu),vn=y(vu,"PRE",{class:!0}),v(vn).forEach(u),yn=E(vu),bn=y(vu,"P",{});var xu=v(bn);En=b(xu,"Notice that with a web framework, your code focus more on "),Tn=y(xu,"EM",{});var Iu=v(Tn);Sn=y(Iu,"U",{});var Ou=v(Sn);Pn=b(Ou,"updating the application state based on business requirements"),Ou.forEach(u),Iu.forEach(u),jn=b(xu," and "),An=y(xu,"EM",{});var Cu=v(An);xn=y(Cu,"U",{});var Lu=v(xn);In=b(Lu,"describing how our view looks like using templating language or JSX expression"),Lu.forEach(u),Cu.forEach(u),On=b(xu,".\nThe framework will bridge the application state and the view, updating the view whenever the application state changes."),xu.forEach(u),Cn=E(vu),Ln=y(vu,"P",{});var $u=v(Ln);$n=b($u,"No more pesky DOM manipulation statements ("),Hn=y($u,"CODE",{});var Hu=v(Hn);Nn=b(Hu,"span.innerText = counter"),Hu.forEach(u),Dn=b($u,") sprinkled alongside with state update statements ("),Mn=y($u,"CODE",{});var Nu=v(Mn);Wn=b(Nu,"counter ++;"),Nu.forEach(u),Rn=b($u,"). No more elusive bugs of unsynchronized view and application state, when one forgets to update the view when updating the application state."),$u.forEach(u),Un=E(vu),Bn=y(vu,"P",{});var Du=v(Bn);qn=b(Du,"All these problems are now past tense when web frameworks now ship in reactivity by default, always making sure that the view is up to date of the application state changes."),Du.forEach(u),_n=E(vu),Jn=y(vu,"P",{});var Mu=v(Jn);Fn=b(Mu,"So the main idea we are going to discuss next is,"),Mu.forEach(u),Gn=E(vu),Yn=y(vu,"BLOCKQUOTE",{});var Wu=v(Yn);Vn=y(Wu,"P",{});var Ru=v(Vn);Kn=b(Ru,"How do web frameworks achieve reactivity?"),Ru.forEach(u),Wu.forEach(u),vu.forEach(u),zn=E(n),Qn=y(n,"SECTION",{});var Uu=v(Qn);Zn=y(Uu,"H1",{});var Bu=v(Zn);Xn=y(Bu,"A",{href:!0,id:!0});var qu=v(Xn);na=b(qu,"The WHEN and the WHAT"),qu.forEach(u),Bu.forEach(u),aa=E(Uu),sa=y(Uu,"P",{});var _u=v(sa);ta=b(_u,"To achieve reactivity, the framework has to answer 2 questions"),_u.forEach(u),ea=E(Uu),oa=y(Uu,"UL",{});var Ju=v(oa);pa=y(Ju,"LI",{});var Fu=v(pa);ca=b(Fu,"When does the application state change?"),Fu.forEach(u),ra=E(Ju),ia=y(Ju,"LI",{});var Gu=v(ia);la=b(Gu,"What has the application state changed?"),Gu.forEach(u),Ju.forEach(u),ua=E(Uu),ha=y(Uu,"P",{});var Yu=v(ha);ka=y(Yu,"STRONG",{});var Vu=v(ka);da=b(Vu,"The WHEN"),Vu.forEach(u),fa=b(Yu," answers when the framework needs to start to do its job on updating the view. Knowing "),ma=y(Yu,"STRONG",{});var Ku=v(ma);ga=b(Ku,"the WHAT"),Ku.forEach(u),wa=b(Yu,", allows the framework to optimise it's work, only update part of the view that has changed."),Yu.forEach(u),va=E(Uu),ya=y(Uu,"P",{});var zu=v(ya);ba=b(zu,"We are going to discuss different strategies to determine "),Ea=y(zu,"STRONG",{});var Qu=v(Ea);Ta=b(Qu,"the WHEN"),Qu.forEach(u),Sa=b(zu," and "),Pa=y(zu,"STRONG",{});var Zu=v(Pa);ja=b(Zu,"the WHAT"),Zu.forEach(u),Aa=b(zu,", along with code snippets for each strategy. You could combine different strategies to determine "),xa=y(zu,"STRONG",{});var Xu=v(xa);Ia=b(Xu,"the WHEN"),Xu.forEach(u),Oa=b(zu," and "),Ca=y(zu,"STRONG",{});var nh=v(Ca);La=b(nh,"the WHAT"),nh.forEach(u),$a=b(zu,", yet certain combinations may remind you of some of the popular web frameworks."),zu.forEach(u),Uu.forEach(u),Ha=E(n),Na=y(n,"SECTION",{});var ah=v(Na);Da=y(ah,"H2",{});var sh=v(Da);Ma=y(sh,"A",{href:!0,id:!0});var th=v(Ma);Wa=b(th,"the WHEN"),th.forEach(u),sh.forEach(u),Ra=E(ah),Ua=y(ah,"P",{});var eh=v(Ua);Ba=b(eh,"The WHEN notifies the framework that the application state has changed, so that the framework knows that it needs to do its job to update the view."),eh.forEach(u),qa=E(ah),_a=y(ah,"P",{});var oh=v(_a);Ja=b(oh,"Different frameworks employ different strategies to detect when the application state has changed, but in essence, it usually boils down to calling a "),Fa=y(oh,"CODE",{});var ph=v(Fa);Ga=b(ph,"scheduleUpdate()"),ph.forEach(u),Ya=b(oh," in the framework.\n"),Va=y(oh,"CODE",{});var ch=v(Va);Ka=b(ch,"scheduleUpdate"),ch.forEach(u),za=b(oh," is usually a debounced "),Qa=y(oh,"CODE",{});var rh=v(Qa);Za=b(rh,"update"),rh.forEach(u),Xa=b(oh," function of the framework. Because changes in the application state may cause derived state changes, or the framework user may change different parts of the application state consecutively. If the framework updates the view on every state change, it may change the view too frequent, which may be inefficient, or it may have an inconsistent view ("),ns=y(oh,"A",{href:!0,rel:!0});var ih=v(ns);as=b(ih,"may result in tearing"),ih.forEach(u),ss=b(oh,")."),oh.forEach(u),ts=E(ah),es=y(ah,"P",{});var lh=v(es);os=b(lh,"Imagine this contrived React example:"),lh.forEach(u),ps=E(ah),cs=y(ah,"PRE",{class:!0}),v(cs).forEach(u),rs=E(ah),is=y(ah,"P",{});var uh=v(is);ls=b(uh,"If the framework synchronously updates the todos in the view then updates the total todos count, it may have a split second where the todos and the count go out of sync. "),us=y(uh,"EM",{});var hh=v(us);hs=b(hh,"(Although it may seem impossible even in this contrived example, but you get the point. )"),hh.forEach(u),uh.forEach(u),ks=E(ah),ds=y(ah,"BLOCKQUOTE",{});var kh=v(ds);fs=y(kh,"P",{});var dh=v(fs);ms=b(dh,"By the way, you should not set "),gs=y(dh,"CODE",{});var fh=v(gs);ws=b(fh,"totalTodos"),fh.forEach(u),vs=b(dh," this way, you should derived it from "),ys=y(dh,"CODE",{});var mh=v(ys);bs=b(mh,"todos.length"),mh.forEach(u),Es=b(dh,", see "),Ts=y(dh,"A",{href:!0,rel:!0});var gh=v(Ts);Ss=b(gh,'"Don\'t Sync State. Derive it!" by Kent C. Dodds.'),gh.forEach(u),dh.forEach(u),kh.forEach(u),Ps=E(ah),js=y(ah,"P",{});var wh=v(js);As=b(wh,"So how do you know when the application state has changed?"),wh.forEach(u),ah.forEach(u),xs=E(n),Is=y(n,"SECTION",{});var vh=v(Is);Os=y(vh,"H2",{});var yh=v(Os);Cs=y(yh,"A",{href:!0,id:!0});var bh=v(Cs);Ls=b(bh,"Mutation Tracking"),bh.forEach(u),yh.forEach(u),$s=E(vh),Hs=y(vh,"P",{});var Eh=v(Hs);Ns=b(Eh,"So we want to know when the application state has changed? Let’s track it!"),Eh.forEach(u),Ds=E(vh),Ms=y(vh,"P",{});var Th=v(Ms);Ws=b(Th,"First of all, why is it called mutation tracking? That’s because we can only track mutation."),Th.forEach(u),Rs=E(vh),Us=y(vh,"P",{});var Sh=v(Us);Bs=b(Sh,"By the word mutation, it infers that our application state has to be an object, because you can’t mutate a primitive."),Sh.forEach(u),qs=E(vh),_s=y(vh,"P",{});var Ph=v(_s);Js=b(Ph,"Primitives like numbers, string, boolean, are passed by value into a function. So, if you reassign the primitive to another value, the reassignment will never be able to be observed within the function:"),Ph.forEach(u),Fs=E(vh),Gs=y(vh,"PRE",{class:!0}),v(Gs).forEach(u),Ys=E(vh),Vs=y(vh,"P",{});var jh=v(Vs);Ks=b(jh,"Object on the other hand, is passed by reference. So any changes to the same object can be observed from within:"),jh.forEach(u),zs=E(vh),Qs=y(vh,"PRE",{class:!0}),v(Qs).forEach(u),Zs=E(vh),Xs=y(vh,"P",{});var Ah=v(Xs);nt=b(Ah,"This is also why most frameworks’ application state is accessed via "),at=y(Ah,"CODE",{});var xh=v(at);st=b(xh,"this"),xh.forEach(u),tt=b(Ah,", because "),et=y(Ah,"CODE",{});var Ih=v(et);ot=b(Ih,"this"),Ih.forEach(u),pt=b(Ah," is an object, changes to "),ct=y(Ah,"CODE",{});var Oh=v(ct);rt=b(Oh,"this.appState"),Oh.forEach(u),it=b(Ah," can be observed / tracked by the framework."),Ah.forEach(u),lt=E(vh),ut=y(vh,"P",{});var Ch=v(ut);ht=b(Ch,"Now we understand why is it called mutation tracking, let’s take a look at how mutation tracking is implemented."),Ch.forEach(u),kt=E(vh),dt=y(vh,"P",{});var Lh=v(dt);ft=b(Lh,"We are going to look at the two common types of object in JavaScript, the plain object and the array."),Lh.forEach(u),mt=E(vh),gt=y(vh,"P",{});var $h=v(gt);wt=y($h,"EM",{});var Hh=v(wt);vt=b(Hh,"(Though if you "),yt=y(Hh,"CODE",{});var Nh=v(yt);bt=b(Nh,"typeof"),Nh.forEach(u),Et=b(Hh," for both object or array, they are both "),Tt=y(Hh,"CODE",{});var Dh=v(Tt);St=b(Dh,'"object"'),Dh.forEach(u),Pt=b(Hh,")"),Hh.forEach(u),jt=b($h,"."),$h.forEach(u),At=E(vh),xt=y(vh,"P",{});var Mh=v(xt);It=b(Mh,"With the introduction of ES6 Proxy, the mutation tracking method has become much straightforward. But still, let’s take a look at how you can implement a mutation tracking with / without ES6 Proxy."),Mh.forEach(u),vh.forEach(u),Ot=E(n),Ct=y(n,"SECTION",{});var Wh=v(Ct);Lt=y(Wh,"H3",{});var Rh=v(Lt);$t=y(Rh,"A",{href:!0,id:!0});var Uh=v($t);Ht=b(Uh,"Prior Proxy"),Uh.forEach(u),Rh.forEach(u),Nt=E(Wh),Dt=y(Wh,"P",{});var Bh=v(Dt);Mt=b(Bh,"To track mutation without proxy, we can define a custom getters and setters for all the property of the object. So whenever the framework user changes the value of a property, the custom setter will be called, and we will know that something has changed:"),Bh.forEach(u),Wt=E(Wh),Rt=y(Wh,"PRE",{class:!0}),v(Rt).forEach(u),Ut=E(Wh),Bt=y(Wh,"P",{});var qh=v(Bt);qt=b(qh,"Inspired by "),_t=y(qh,"A",{href:!0,rel:!0});var _h=v(_t);Jt=b(_h,"Vue.js 2.0’s observer"),_h.forEach(u),Ft=b(qh,"."),qh.forEach(u),Gt=E(Wh),Yt=y(Wh,"P",{});var Jh=v(Yt);Vt=b(Jh,"However, you may notice that if we are defining getters and setters on the existing properties of the object, we may miss out changes via adding or deleting property from the object."),Jh.forEach(u),Kt=E(Wh),zt=y(Wh,"P",{});var Fh=v(zt);Qt=b(Fh,"This is something you can’t fix without a better JavaScript API, so a probable workaround for this caveat is to provide a helper function instead. For example, in Vue, you need to use the helper function "),Zt=y(Fh,"A",{href:!0,rel:!0});var Gh=v(Zt);Xt=y(Gh,"CODE",{});var Yh=v(Xt);ne=b(Yh,"Vue.set(object, propertyName, value)"),Yh.forEach(u),Gh.forEach(u),ae=b(Fh," instead of "),se=y(Fh,"CODE",{});var Vh=v(se);te=b(Vh,"object[propertyName] = value"),Vh.forEach(u),ee=b(Fh,"."),Fh.forEach(u),oe=E(Wh),pe=y(Wh,"P",{});var Kh=v(pe);ce=b(Kh,"Tracking mutation of an array is similar to mutation tracking for an object. However, besides being able to change the array item through assignment, it is possible to mutate an array through its mutating method, eg: "),re=y(Kh,"CODE",{});var zh=v(re);ie=b(zh,"push"),zh.forEach(u),le=b(Kh,", "),ue=y(Kh,"CODE",{});var Qh=v(ue);he=b(Qh,"pop"),Qh.forEach(u),ke=b(Kh,", "),de=y(Kh,"CODE",{});var Zh=v(de);fe=b(Zh,"splice"),Zh.forEach(u),me=b(Kh,", "),ge=y(Kh,"CODE",{});var Xh=v(ge);we=b(Xh,"unshift"),Xh.forEach(u),ve=b(Kh,", "),ye=y(Kh,"CODE",{});var nk=v(ye);be=b(nk,"shift"),nk.forEach(u),Ee=b(Kh,", "),Te=y(Kh,"CODE",{});var ak=v(Te);Se=b(ak,"sort"),ak.forEach(u),Pe=b(Kh," and "),je=y(Kh,"CODE",{});var sk=v(je);Ae=b(sk,"reverse"),sk.forEach(u),xe=b(Kh,"."),Kh.forEach(u),Ie=E(Wh),Oe=y(Wh,"P",{});var tk=v(Oe);Ce=b(tk,"To track changes made by these methods, you have to patch them:"),tk.forEach(u),Le=E(Wh),$e=y(Wh,"PRE",{class:!0}),v($e).forEach(u),He=E(Wh),Ne=y(Wh,"P",{});var ek=v(Ne);De=b(ek,"Inspired by "),Me=y(ek,"A",{href:!0,rel:!0});var ok=v(Me);We=b(ok,"Vue.js 2.0’s array observer"),ok.forEach(u),Re=b(ek,"."),ek.forEach(u),Ue=E(Wh),Be=y(Wh,"BLOCKQUOTE",{});var pk=v(Be);qe=y(pk,"P",{});var ck=v(qe);_e=b(ck,"CodeSandbox for "),Je=y(ck,"A",{href:!0,rel:!0});var rk=v(Je);Fe=b(rk,"mutation tracking of object and array"),rk.forEach(u),ck.forEach(u),pk.forEach(u),Ge=E(Wh),Ye=y(Wh,"P",{});var ik=v(Ye);Ve=b(ik,"In summary, to track mutation on an object or array without Proxy, you need to define custom getters/setters for all properties, so that you can capture when the property is being set. Besides that, you need to patch all the mutating methods as well, because that will mutate your object without triggering the custom setter."),ik.forEach(u),Ke=E(Wh),ze=y(Wh,"P",{});var lk=v(ze);Qe=b(lk,"Yet, there’s still edge cases that cannot be covered, such as adding new property or deleting property."),lk.forEach(u),Ze=E(Wh),Xe=y(Wh,"P",{});var uk=v(Xe);no=b(uk,"There’s where "),ao=y(uk,"A",{href:!0,rel:!0});var hk=v(ao);so=b(hk,"ES6 Proxy"),hk.forEach(u),to=b(uk," comes to help."),uk.forEach(u),Wh.forEach(u),eo=E(n),oo=y(n,"SECTION",{});var kk=v(oo);po=y(kk,"H3",{});var dk=v(po);co=y(dk,"A",{href:!0,id:!0});var fk=v(co);ro=b(fk,"With Proxy"),fk.forEach(u),dk.forEach(u),io=E(kk),lo=y(kk,"P",{});var mk=v(lo);uo=b(mk,"Proxy allow us to define custom behaviours on fundamental operations on the target object. This is great for mutation tracking, because Proxy allow us to intercept setting and deleting property, irrelevant to whether we uses index assignment, "),ho=y(mk,"CODE",{});var gk=v(ho);ko=b(gk,"obj[key] = value"),gk.forEach(u),fo=b(mk," or mutating methods, "),mo=y(mk,"CODE",{});var wk=v(mo);go=b(wk,"obj.push(value)"),wk.forEach(u),wo=b(mk,":"),mk.forEach(u),vo=E(kk),yo=y(kk,"PRE",{class:!0}),v(yo).forEach(u),bo=E(kk),Eo=y(kk,"P",{});var vk=v(Eo);To=y(vk,"STRONG",{});var yk=v(To);So=b(yk,"So how do we use mutation tracking?"),yk.forEach(u),vk.forEach(u),Po=E(kk),jo=y(kk,"P",{});var bk=v(jo);Ao=b(bk,"The good thing about mutation tracking is that, if you noticed in the example above, the framework user is unaware of the tracking and treats "),xo=y(bk,"CODE",{});var Ek=v(xo);Io=b(Ek,"appState"),Ek.forEach(u),Oo=b(bk," as a normal object:"),bk.forEach(u),Co=E(kk),Lo=y(kk,"PRE",{class:!0}),v(Lo).forEach(u),$o=E(kk),Ho=y(kk,"P",{});var Tk=v(Ho);No=b(Tk,"We can set up the tracking during the initialisation of the component, either:"),Tk.forEach(u),Do=E(kk),Mo=y(kk,"UL",{});var Sk=v(Mo);Wo=y(Sk,"LI",{});var Pk=v(Wo);Ro=b(Pk,"track a property of the component,"),Pk.forEach(u),Uo=E(Sk),Bo=y(Sk,"LI",{});var jk=v(Bo);qo=b(jk,"track the component instance itself,"),jk.forEach(u),_o=E(Sk),Jo=y(Sk,"LI",{});var Ak=v(Jo);Fo=b(Ak,"or something in between the above"),Ak.forEach(u),Sk.forEach(u),Go=E(kk),Yo=y(kk,"PRE",{class:!0}),v(Yo).forEach(u),Vo=E(kk),Ko=y(kk,"P",{});var xk=v(Ko);zo=b(xk,"Once you’ve able to track application state changes, the next thing to do is to call "),Qo=y(xk,"CODE",{});var Ik=v(Qo);Zo=b(Ik,"scheduleUpdate"),Ik.forEach(u),Xo=b(xk," instead of "),np=y(xk,"CODE",{});var Ok=v(np);ap=b(Ok,"console.log"),Ok.forEach(u),sp=b(xk,"."),xk.forEach(u),tp=E(kk),ep=y(kk,"P",{});var Ck=v(ep);op=b(Ck,"You may concern whether all these complexities is worth the effort. Or you may be worried that "),pp=y(Ck,"A",{href:!0,rel:!0});var Lk=v(pp);cp=b(Lk,"Proxy is not supported to older browsers"),Lk.forEach(u),rp=b(Ck,"."),Ck.forEach(u),ip=E(kk),lp=y(kk,"P",{});var $k=v(lp);up=b($k,"Your concern is not entirely baseless. Not all frameworks use mutation tracking."),$k.forEach(u),kk.forEach(u),hp=E(n),kp=y(n,"SECTION",{});var Hk=v(kp);dp=y(Hk,"H3",{});var Nk=v(dp);fp=y(Nk,"A",{href:!0,id:!0});var Dk=v(fp);mp=b(Dk,"Just call "),gp=y(Dk,"CODE",{});var Mk=v(gp);wp=b(Mk,"scheduleUpdate"),Mk.forEach(u),Dk.forEach(u),Nk.forEach(u),vp=E(Hk),yp=y(Hk,"P",{});var Wk=v(yp);bp=b(Wk,"Some frameworks design their API in the way such that it “tricks” the framework user to tell the framework that the application state has changed."),Wk.forEach(u),Ep=E(Hk),Tp=y(Hk,"P",{});var Rk=v(Tp);Sp=b(Rk,"Instead of remembering to call "),Pp=y(Rk,"CODE",{});var Uk=v(Pp);jp=b(Uk,"scheduleUpdate"),Uk.forEach(u),Ap=b(Rk," whenever you change the application state, the framework forces you to use their API to change application state:"),Rk.forEach(u),xp=E(Hk),Ip=y(Hk,"PRE",{class:!0}),v(Ip).forEach(u),Op=E(Hk),Cp=y(Hk,"P",{});var Bk=v(Cp);Lp=b(Bk,"This gives us a much simpler design and less edge case to handle:"),Bk.forEach(u),$p=E(Hk),Hp=y(Hk,"PRE",{class:!0}),v(Hp).forEach(u),Np=E(Hk),Dp=y(Hk,"P",{});var qk=v(Dp);Mp=b(qk,"Inspired by "),Wp=y(qk,"A",{href:!0,rel:!0});var _k=v(Wp);Rp=b(_k,"React’s "),Up=y(_k,"CODE",{});var Jk=v(Up);Bp=b(Jk,"setState"),Jk.forEach(u),_k.forEach(u),qp=b(qk,"."),qk.forEach(u),_p=E(Hk),Jp=y(Hk,"P",{});var Fk=v(Jp);Fp=b(Fk,"However, this may trip new developers into the framework:"),Fk.forEach(u),Gp=E(Hk),Yp=y(Hk,"PRE",{class:!0}),v(Yp).forEach(u),Vp=E(Hk),Kp=y(Hk,"P",{});var Gk=v(Kp);zp=b(Gk,"... and it maybe a bit clumsy when adding / removing items from an array:"),Gk.forEach(u),Qp=E(Hk),Zp=y(Hk,"PRE",{class:!0}),v(Zp).forEach(u),Xp=E(Hk),nc=y(Hk,"P",{});var Yk=v(nc);ac=b(Yk,"A different approach that may have the best of both world is to insert "),sc=y(Yk,"CODE",{});var Vk=v(sc);tc=b(Vk,"scheduleUpdate"),Vk.forEach(u),ec=b(Yk," in scenarios that you think that changes may most likely happen:"),Yk.forEach(u),oc=E(Hk),pc=y(Hk,"UL",{});var Kk=v(pc);cc=y(Kk,"LI",{});var zk=v(cc);rc=b(zk,"Event handlers"),zk.forEach(u),ic=E(Kk),lc=y(Kk,"LI",{});var Qk=v(lc);uc=b(Qk,"Timeout (eg: "),hc=y(Qk,"CODE",{});var Zk=v(hc);kc=b(Zk,"setTimeout"),Zk.forEach(u),dc=b(Qk,", "),fc=y(Qk,"CODE",{});var Xk=v(fc);mc=b(Xk,"setInterval"),Xk.forEach(u),gc=b(Qk,", ...)"),Qk.forEach(u),wc=E(Kk),vc=y(Kk,"LI",{});var nd=v(vc);yc=b(nd,"API handling, promises handling"),nd.forEach(u),bc=E(Kk),Ec=y(Kk,"LI",{});var ad=v(Ec);Tc=b(ad,"..."),ad.forEach(u),Kk.forEach(u),Sc=E(Hk),Pc=y(Hk,"P",{});var sd=v(Pc);jc=b(sd,"So, instead of enforcing framework users to use "),Ac=y(sd,"CODE",{});var td=v(Ac);xc=b(td,"setAppState()"),td.forEach(u),Ic=b(sd,", framework users should use the\ncustom timeouts, api handlers, ...:"),sd.forEach(u),Oc=E(Hk),Cc=y(Hk,"PRE",{class:!0}),v(Cc).forEach(u),Lc=E(Hk),$c=y(Hk,"P",{});var ed=v($c);Hc=b(ed,"Inspired by "),Nc=y(ed,"A",{href:!0,rel:!0});var od=v(Nc);Dc=b(od,"AngularJS’s \\$timeout"),od.forEach(u),ed.forEach(u),Mc=E(Hk),Wc=y(Hk,"P",{});var pd=v(Wc);Rc=b(pd,"Your framework user can now be free to change the application state the way he wants, as long as the changes are done within your custom handlers. Because at the end of the handler, you will call "),Uc=y(pd,"CODE",{});var cd=v(Uc);Bc=b(cd,"scheduleUpdate()"),cd.forEach(u),qc=b(pd,"."),pd.forEach(u),_c=E(Hk),Jc=y(Hk,"P",{});var rd=v(Jc);Fc=b(rd,"Similarly, this may trip new developers into the framework too! Try search "),Gc=y(rd,"A",{href:!0,rel:!0});var id=v(Gc);Yc=b(id,'"AngularJS $timeout vs window.setTimeout"'),id.forEach(u),rd.forEach(u),Vc=E(Hk),Kc=y(Hk,"P",{});var ld=v(Kc);zc=b(ld,"You may think, what if there are no state changes in the handler function, wouldn’t calling an extra "),Qc=y(ld,"CODE",{});var ud=v(Qc);Zc=b(ud,"scheduleUpdate()"),ud.forEach(u),Xc=b(ld," be inefficient? Well so far, we haven’t discussed what’s happening in "),nr=y(ld,"CODE",{});var hd=v(nr);ar=b(hd,"scheduleUpdate()"),hd.forEach(u),sr=b(ld,", we can check "),tr=y(ld,"STRONG",{});var kd=v(tr);er=b(kd,"what has changed"),kd.forEach(u),or=b(ld," (which will be covered in the next section)"),pr=y(ld,"STRONG",{});var dd=v(pr);cr=b(dd,","),dd.forEach(u),rr=b(ld," and if there’s nothing change, we can skip the subsequent steps."),ld.forEach(u),ir=E(Hk),lr=y(Hk,"P",{});var fd=v(lr);ur=b(fd,"If you look at the strategies that we have tried so far, you may have noticed a common struggle:"),fd.forEach(u),hr=E(Hk),kr=y(Hk,"UL",{});var md=v(kr);dr=y(md,"LI",{});var gd=v(dr);fr=b(gd,"allow framework user to change the application state in any way he wants"),gd.forEach(u),mr=E(md),gr=y(md,"LI",{});var wd=v(gr);wr=b(wd,"achieve reactivity without much runtime complexity."),wd.forEach(u),md.forEach(u),vr=E(Hk),yr=y(Hk,"P",{});var vd=v(yr);br=b(vd,"At this point, you got to agree that enforcing framework developers to call "),Er=y(vd,"CODE",{});var yd=v(Er);Tr=b(yd,"setAppState"),yd.forEach(u),Sr=b(vd," whenever they want to change the application state, requires "),Pr=y(vd,"STRONG",{});var bd=v(Pr);jr=b(bd,"less runtime complexity"),bd.forEach(u),Ar=b(vd," from the framework, and it’s unlikely to have any corner cases or caveats that need to handle."),vd.forEach(u),xr=E(Hk),Ir=y(Hk,"P",{});var Ed=v(Ir);Or=b(Ed,"If the dilemma is between developer expressiveness versus runtime complexity, probably we could get the best of both worlds by shifting the complexity from runtime to build time?"),Ed.forEach(u),Hk.forEach(u),Cr=E(n),Lr=y(n,"SECTION",{});var Td=v(Lr);$r=y(Td,"H3",{});var Sd=v($r);Hr=y(Sd,"A",{href:!0,id:!0});var Pd=v(Hr);Nr=b(Pd,"Static analysis"),Pd.forEach(u),Sd.forEach(u),Dr=E(Td),Mr=y(Td,"P",{});var jd=v(Mr);Wr=b(jd,"If we have a compiler that allow framework users to write:"),jd.forEach(u),Rr=E(Td),Ur=y(Td,"PRE",{class:!0}),v(Ur).forEach(u),Br=E(Td),qr=y(Td,"P",{});var Ad=v(qr);_r=b(Ad,"and compiles it to:"),Ad.forEach(u),Jr=E(Td),Fr=y(Td,"PRE",{class:!0}),v(Fr).forEach(u),Gr=E(Td),Yr=y(Td,"P",{});var xd=v(Yr);Vr=b(xd,"Then, we would really have best of both worlds! 😎"),xd.forEach(u),Kr=E(Td),zr=y(Td,"P",{});var Id=v(zr);Qr=b(Id,"Let’s look at different scenarios that the framework user would write, and see whether we know when to insert the "),Zr=y(Id,"CODE",{});var Od=v(Zr);Xr=b(Od,"scheduleUpdate()"),Od.forEach(u),ni=b(Id,":"),Id.forEach(u),ai=E(Td),si=y(Td,"PRE",{class:!0}),v(si).forEach(u),ti=E(Td),ei=y(Td,"P",{});var Cd=v(ei);oi=b(Cd,"Allow me to summarise some complexities faced in the example above:"),Cd.forEach(u),pi=E(Td),ci=y(Td,"UL",{});var Ld=v(ci);ri=y(Ld,"LI",{});var $d=v(ri);ii=b($d,"It is easy to track direct changes to the application state, but it is extremely difficult to track changes made indirectly, eg: "),li=y($d,"CODE",{});var Hd=v(li);ui=b(Hd,"foo.one"),Hd.forEach(u),hi=b($d,", "),ki=y($d,"CODE",{});var Nd=v(ki);di=b(Nd,"doSomethingMutable(this.appState)"),Nd.forEach(u),fi=b($d," or "),mi=y($d,"CODE",{});var Dd=v(mi);gi=b(Dd,"this.appState.obj.increment()"),Dd.forEach(u),$d.forEach(u),wi=E(Ld),vi=y(Ld,"LI",{});var Md=v(vi);yi=b(Md,"It is easy to track changes through assignment statements, but extremely difficult to track changes made through mutating methods, eg: "),bi=y(Md,"CODE",{});var Wd=v(bi);Ei=b(Wd,"this.appState.list.push('1')"),Wd.forEach(u),Ti=b(Md,", I mean how do you know the method is mutating?"),Md.forEach(u),Ld.forEach(u),Si=E(Td),Pi=y(Td,"P",{});var Rd=v(Pi);ji=b(Rd,"So, for "),Ai=y(Rd,"A",{href:!0,rel:!0});var Ud=v(Ai);xi=b(Ud,"Svelte"),Ud.forEach(u),Ii=b(Rd,", one of the frameworks that use static analysis to achieve reactivity, it only ensures reactivity through assignment operators (eg: "),Oi=y(Rd,"CODE",{});var Bd=v(Oi);Ci=b(Bd,"="),Bd.forEach(u),Li=b(Rd,", "),$i=y(Rd,"CODE",{});var qd=v($i);Hi=b(qd,"+="),qd.forEach(u),Ni=b(Rd,", …) and unary arithmetic operators (eg: "),Di=y(Rd,"CODE",{});var _d=v(Di);Mi=b(_d,"++"),_d.forEach(u),Wi=b(Rd," and "),Ri=y(Rd,"CODE",{});var Jd=v(Ri);Ui=b(Jd,"--"),Jd.forEach(u),Bi=b(Rd,")."),Rd.forEach(u),qi=E(Td),_i=y(Td,"P",{});var Fd=v(_i);Ji=b(Fd,"I believe that there’s room yet to be explored in this space, especially at the "),Fi=y(Fd,"A",{href:!0,rel:!0});var Gd=v(Fi);Gi=b(Gd,"rise of TypeScript"),Gd.forEach(u),Yi=b(Fd,", we may be able to understand our application state better through static types."),Fd.forEach(u),Td.forEach(u),Vi=E(n),Ki=y(n,"SECTION",{});var Yd=v(Ki);zi=y(Yd,"H2",{});var Vd=v(zi);Qi=y(Vd,"A",{href:!0,id:!0});var Kd=v(Qi);Zi=b(Kd,"Summary"),Kd.forEach(u),Vd.forEach(u),Xi=E(Yd),nl=y(Yd,"P",{});var zd=v(nl);al=b(zd,"We’ve gone through different strategies of knowing when the application state has changed:"),zd.forEach(u),sl=E(Yd),tl=y(Yd,"UL",{});var Qd=v(tl);el=y(Qd,"LI",{});var Zd=v(el);ol=b(Zd,"mutation tracking"),Zd.forEach(u),pl=E(Qd),cl=y(Qd,"LI",{});var Xd=v(cl);rl=b(Xd,"just call "),il=y(Xd,"CODE",{});var nf=v(il);ll=b(nf,"scheduleUpdate"),nf.forEach(u),Xd.forEach(u),ul=E(Qd),hl=y(Qd,"LI",{});var af=v(hl);kl=b(af,"static analysis"),af.forEach(u),Qd.forEach(u),dl=E(Yd),fl=y(Yd,"P",{});var sf=v(fl);ml=b(sf,"Different strategies manifests itself in terms of the API of the framework:"),sf.forEach(u),gl=E(Yd),wl=y(Yd,"UL",{});var tf=v(wl);vl=y(tf,"LI",{});var ef=v(vl);yl=y(ef,"P",{});var of=v(yl);bl=b(of,"Is the framework user going to change the application state with simple object manipulation? or have to use API like "),El=y(of,"CODE",{});var pf=v(El);Tl=b(pf,"setAppState()"),pf.forEach(u),Sl=b(of,"?"),of.forEach(u),ef.forEach(u),Pl=E(tf),jl=y(tf,"LI",{});var cf=v(jl);Al=y(cf,"P",{});var rf=v(Al);xl=b(rf,"Is there caveats that the framework user needs to be aware of?"),rf.forEach(u),Il=E(cf),Ol=y(cf,"P",{});var lf=v(Ol);Cl=b(lf,"For example:"),lf.forEach(u),Ll=E(cf),$l=y(cf,"UL",{});var uf=v($l);Hl=y(uf,"LI",{});var hf=v(Hl);Nl=b(hf,"Can only use assignment statement to achieve reactivity?"),hf.forEach(u),Dl=E(uf),Ml=y(uf,"LI",{});var kf=v(Ml);Wl=b(kf,"Does framework user need to use a helper function for adding new reactive property to the application state?"),kf.forEach(u),uf.forEach(u),cf.forEach(u),tf.forEach(u),Rl=E(Yd),Ul=y(Yd,"P",{});var df=v(Ul);Bl=b(df,"Knowing when an application state has changed, allow frameworks to know when to update our view. Yet, to optimise the updates, frameworks need to know what has changed in the application state."),df.forEach(u),ql=E(Yd),_l=y(Yd,"P",{});var ff=v(_l);Jl=b(ff,"Are we going to remove and recreate every DOM element in the view? Do we know that which part of the view is going to change based on what has changed in the application state?"),ff.forEach(u),Fl=E(Yd),Gl=y(Yd,"P",{});var mf=v(Gl);Yl=b(mf,"That is, if we know "),Vl=y(mf,"STRONG",{});var gf=v(Vl);Kl=b(gf,"the WHAT"),gf.forEach(u),zl=b(mf,"."),mf.forEach(u),Ql=E(Yd),Zl=y(Yd,"HR",{}),Xl=E(Yd),nu=y(Yd,"P",{});var wf=v(nu);au=b(wf,"I’d like to thank "),su=y(wf,"A",{href:!0,rel:!0});var vf=v(su);tu=b(vf,"Rich Harris"),vf.forEach(u),eu=b(wf," for pointing out some inaccuracies in the previous version of this article and providing valuable feedbacks. All the remaining errors are mine.."),wf.forEach(u),Yd.forEach(u),this.h()},h(){w(t,"class","sitemap"),w(t,"id","sitemap"),w(t,"role","navigation"),w(t,"aria-label","Table of Contents"),w(o,"href","#what-is-reactivity"),w(r,"href","#the-when-and-the-what"),w(T,"href","#the-when"),w(j,"href","#mutation-tracking"),w(O,"href","#prior-proxy"),w($,"href","#with-proxy"),w(D,"href","#just-call-scheduleupdate"),w(R,"href","#static-analysis"),w(q,"href","#summary"),w(Y,"href","#what-is-reactivity"),w(Y,"id","what-is-reactivity"),w(rn,"class","language-js"),w(dn,"class","language-html"),w(vn,"class","language-js"),w(Xn,"href","#the-when-and-the-what"),w(Xn,"id","the-when-and-the-what"),w(Ma,"href","#the-when"),w(Ma,"id","the-when"),w(ns,"href","https://techterms.com/definition/screen_tearing"),w(ns,"rel","nofollow"),w(cs,"class","language-js"),w(Ts,"href","https://kentcdodds.com/blog/dont-sync-state-derive-it"),w(Ts,"rel","nofollow"),w(Cs,"href","#mutation-tracking"),w(Cs,"id","mutation-tracking"),w(Gs,"class","language-js"),w(Qs,"class","language-js"),w($t,"href","#prior-proxy"),w($t,"id","prior-proxy"),w(Rt,"class","language-js"),w(_t,"href","https://paper.dropbox.com/doc/Reactivity-in-Web-Frameworks--Aroey0wh9iZRE8dm9lC4Ulo0AQ-D6CkkTTpH1AqGvBlKcQ85"),w(_t,"rel","nofollow"),w(Zt,"href","https://vuejs.org/v2/guide/reactivity.html#Change-Detection-Caveats"),w(Zt,"rel","nofollow"),w($e,"class","language-js"),w(Me,"href","https://github.com/vuejs/vue/blob/22790b250cd5239a8379b4ec8cc3a9b570dac4bc/src/core/observer/array.js"),w(Me,"rel","nofollow"),w(Je,"href","https://codesandbox.io/s/mutation-tracking-getterssetters-44ono"),w(Je,"rel","nofollow"),w(ao,"href","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"),w(ao,"rel","nofollow"),w(co,"href","#with-proxy"),w(co,"id","with-proxy"),w(yo,"class","language-js"),w(Lo,"class","language-js"),w(Yo,"class","language-js"),w(pp,"href","https://caniuse.com/#feat=proxy"),w(pp,"rel","nofollow"),w(fp,"href","#just-call-scheduleupdate"),w(fp,"id","just-call-scheduleupdate"),w(Ip,"class","language-js"),w(Hp,"class","language-js"),w(Wp,"href","https://github.com/facebook/react/blob/0cf22a56a18790ef34c71bef14f64695c0498619/packages/react/src/ReactBaseClasses.js#L57"),w(Wp,"rel","nofollow"),w(Yp,"class","language-js"),w(Zp,"class","language-js"),w(Cc,"class","language-js"),w(Nc,"href","https://github.com/angular/angular.js/blob/master/src/ng/timeout.js#L13"),w(Nc,"rel","nofollow"),w(Gc,"href","https://www.google.com/search?q=angularjs%20$timeout%20vs%20window.setTimeout"),w(Gc,"rel","nofollow"),w(Hr,"href","#static-analysis"),w(Hr,"id","static-analysis"),w(Ur,"class","language-js"),w(Fr,"class","language-js"),w(si,"class","language-js"),w(Ai,"href","http://github.com/sveltejs/svelte"),w(Ai,"rel","nofollow"),w(Fi,"href","https://2019.stateofjs.com/javascript-flavors/typescript/"),w(Fi,"rel","nofollow"),w(Qi,"href","#summary"),w(Qi,"id","summary"),w(su,"href","https://twitter.com/Rich_Harris"),w(su,"rel","nofollow")},m(n,a){l(n,s,a),i(s,t),i(s,e),i(e,o),i(o,p),i(s,c),i(c,r),i(r,h),i(s,d),i(d,g),i(g,T),i(T,S),i(d,P),i(P,j),i(j,A),i(d,x),i(x,I),i(I,O),i(O,C),i(x,L),i(L,$),i($,H),i(x,N),i(N,D),i(D,M),i(x,W),i(W,R),i(R,U),i(d,B),i(B,q),i(q,_),l(n,J,a),l(n,F,a),i(F,G),i(G,Y),i(Y,V),i(F,K),i(F,z),i(z,Q),i(F,Z),i(F,X),i(X,nn),i(F,an),i(F,sn),i(sn,tn),i(F,en),i(F,on),i(on,pn),i(F,cn),i(F,rn),rn.innerHTML='<code class="language-js"><span class="token keyword">const</span> root <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">\'app\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nroot<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">\n  &lt;button>-&lt;/button>\n  &lt;span>0&lt;/span>\n  &lt;button>+&lt;/button>\n</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">[</span>decrementBtn<span class="token punctuation">,</span> incrementBtn<span class="token punctuation">]</span> <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">\'button\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> span <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">\'span\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\ndecrementBtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">\'click\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n  count<span class="token operator">--</span><span class="token punctuation">;</span>\n  span<span class="token punctuation">.</span>innerText <span class="token operator">=</span> count<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nincrementBtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">\'click\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n  count<span class="token operator">++</span><span class="token punctuation">;</span>\n  span<span class="token punctuation">.</span>innerText <span class="token operator">=</span> count<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>',i(F,ln),i(F,un),i(un,hn),i(F,kn),i(F,dn),dn.innerHTML='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>counter -= 1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>&#123;&#123; counter &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>counter += 1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>\n    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>\n        counter<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n      <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code>',i(F,fn),i(F,mn),i(mn,gn),i(F,wn),i(F,vn),vn.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>counter<span class="token punctuation">,</span> setCounter<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span><span class="token operator">></span>\n      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setCounter</span><span class="token punctuation">(</span><span class="token parameter">counter</span> <span class="token operator">=></span> counter <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token operator">-</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n      <span class="token operator">&lt;</span>span<span class="token operator">></span><span class="token punctuation">&#123;</span>counter<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>\n      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setCounter</span><span class="token punctuation">(</span><span class="token parameter">counter</span> <span class="token operator">=></span> counter <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token operator">+</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span></code>',i(F,yn),i(F,bn),i(bn,En),i(bn,Tn),i(Tn,Sn),i(Sn,Pn),i(bn,jn),i(bn,An),i(An,xn),i(xn,In),i(bn,On),i(F,Cn),i(F,Ln),i(Ln,$n),i(Ln,Hn),i(Hn,Nn),i(Ln,Dn),i(Ln,Mn),i(Mn,Wn),i(Ln,Rn),i(F,Un),i(F,Bn),i(Bn,qn),i(F,_n),i(F,Jn),i(Jn,Fn),i(F,Gn),i(F,Yn),i(Yn,Vn),i(Vn,Kn),l(n,zn,a),l(n,Qn,a),i(Qn,Zn),i(Zn,Xn),i(Xn,na),i(Qn,aa),i(Qn,sa),i(sa,ta),i(Qn,ea),i(Qn,oa),i(oa,pa),i(pa,ca),i(oa,ra),i(oa,ia),i(ia,la),i(Qn,ua),i(Qn,ha),i(ha,ka),i(ka,da),i(ha,fa),i(ha,ma),i(ma,ga),i(ha,wa),i(Qn,va),i(Qn,ya),i(ya,ba),i(ya,Ea),i(Ea,Ta),i(ya,Sa),i(ya,Pa),i(Pa,ja),i(ya,Aa),i(ya,xa),i(xa,Ia),i(ya,Oa),i(ya,Ca),i(Ca,La),i(ya,$a),l(n,Ha,a),l(n,Na,a),i(Na,Da),i(Da,Ma),i(Ma,Wa),i(Na,Ra),i(Na,Ua),i(Ua,Ba),i(Na,qa),i(Na,_a),i(_a,Ja),i(_a,Fa),i(Fa,Ga),i(_a,Ya),i(_a,Va),i(Va,Ka),i(_a,za),i(_a,Qa),i(Qa,Za),i(_a,Xa),i(_a,ns),i(ns,as),i(_a,ss),i(Na,ts),i(Na,es),i(es,os),i(Na,ps),i(Na,cs),cs.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">Todos</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>todos<span class="token punctuation">,</span> setTodos<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>totalTodos<span class="token punctuation">,</span> setTotalTodos<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> <span class="token function-variable function">onAddTodo</span> <span class="token operator">=</span> <span class="token parameter">todo</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n    <span class="token function">setTodos</span><span class="token punctuation">(</span><span class="token parameter">todos</span> <span class="token operator">=></span> <span class="token punctuation">[</span><span class="token operator">...</span>todos<span class="token punctuation">,</span> todo<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">setTotalTodos</span><span class="token punctuation">(</span><span class="token parameter">totalTodos</span> <span class="token operator">=></span> totalTodos <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">&#125;</span></code>',i(Na,rs),i(Na,is),i(is,ls),i(is,us),i(us,hs),i(Na,ks),i(Na,ds),i(ds,fs),i(fs,ms),i(fs,gs),i(gs,ws),i(fs,vs),i(fs,ys),i(ys,bs),i(fs,Es),i(fs,Ts),i(Ts,Ss),i(Na,Ps),i(Na,js),i(js,As),l(n,xs,a),l(n,Is,a),i(Is,Os),i(Os,Cs),i(Cs,Ls),i(Is,$s),i(Is,Hs),i(Hs,Ns),i(Is,Ds),i(Is,Ms),i(Ms,Ws),i(Is,Rs),i(Is,Us),i(Us,Bs),i(Is,qs),i(Is,_s),i(_s,Js),i(Is,Fs),i(Is,Gs),Gs.innerHTML='<code class="language-js"><span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token function">render</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// changes to the data will not be propagated into the render function</span>\ndata <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// data is a value</span>\n  <span class="token comment">// however it is changed in the outside world</span>\n  <span class="token comment">// got nothing to do with me</span>\n  <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// will always console out &#96;1&#96;</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span></code>',i(Is,Ys),i(Is,Vs),i(Vs,Ks),i(Is,zs),i(Is,Qs),Qs.innerHTML='<code class="language-js"><span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">&#123;</span> foo<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n<span class="token function">render</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// mutate data some time later</span>\n<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n  data<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// data is referenced to the same object</span>\n  <span class="token comment">// changes to data.foo can be observed here</span>\n  <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// initially &#96;1&#96;, after mutation, its &#96;2&#96;</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span></code>',i(Is,Zs),i(Is,Xs),i(Xs,nt),i(Xs,at),i(at,st),i(Xs,tt),i(Xs,et),i(et,ot),i(Xs,pt),i(Xs,ct),i(ct,rt),i(Xs,it),i(Is,lt),i(Is,ut),i(ut,ht),i(Is,kt),i(Is,dt),i(dt,ft),i(Is,mt),i(Is,gt),i(gt,wt),i(wt,vt),i(wt,yt),i(yt,bt),i(wt,Et),i(wt,Tt),i(Tt,St),i(wt,Pt),i(gt,jt),i(Is,At),i(Is,xt),i(xt,It),l(n,Ot,a),l(n,Ct,a),i(Ct,Lt),i(Lt,$t),i($t,Ht),i(Ct,Nt),i(Ct,Dt),i(Dt,Mt),i(Ct,Wt),i(Ct,Rt),Rt.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">getTrackableObject</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">\'isTracked\'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> obj<span class="token punctuation">;</span>\n  <span class="token keyword">const</span> tracked <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>tracked<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>\n      configurable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      enumerable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n        <span class="token keyword">return</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n      <span class="token keyword">set</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">\'object\'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n          value <span class="token operator">=</span> <span class="token function">getTrackableObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">&#125;</span>\n        obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">\'</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>key<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">\' has changed.</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n  <span class="token comment">// marked as \'tracked\'</span>\n  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>tracked<span class="token punctuation">,</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">\'isTracked\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>\n    configurable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    enumerable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n    value<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> tracked<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token comment">// track app state</span>\n<span class="token keyword">const</span> appState <span class="token operator">=</span> <span class="token function">getTrackableObject</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> foo<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nappState<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// log &#96;\'foo\' has changed.&#96;</span></code>',i(Ct,Ut),i(Ct,Bt),i(Bt,qt),i(Bt,_t),i(_t,Jt),i(Bt,Ft),i(Ct,Gt),i(Ct,Yt),i(Yt,Vt),i(Ct,Kt),i(Ct,zt),i(zt,Qt),i(zt,Zt),i(Zt,Xt),i(Xt,ne),i(zt,ae),i(zt,se),i(se,te),i(zt,ee),i(Ct,oe),i(Ct,pe),i(pe,ce),i(pe,re),i(re,ie),i(pe,le),i(pe,ue),i(ue,he),i(pe,ke),i(pe,de),i(de,fe),i(pe,me),i(pe,ge),i(ge,we),i(pe,ve),i(pe,ye),i(ye,be),i(pe,Ee),i(pe,Te),i(Te,Se),i(pe,Pe),i(pe,je),i(je,Ae),i(pe,xe),i(Ct,Ie),i(Ct,Oe),i(Oe,Ce),i(Ct,Le),i(Ct,$e),$e.innerHTML='<code class="language-js"><span class="token keyword">const</span> TrackableArrayProto <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> method <span class="token keyword">of</span> <span class="token punctuation">[</span>\n  <span class="token string">\'push\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'pop\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'splice\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'unshift\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'shift\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'sort\'</span><span class="token punctuation">,</span>\n  <span class="token string">\'reverse\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">const</span> original <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>method<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  TrackableArrayProto<span class="token punctuation">[</span>method<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">original</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">\'</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>method<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">\' was called</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>method <span class="token operator">===</span> <span class="token string">\'push\'</span> <span class="token operator">||</span> method <span class="token operator">===</span> <span class="token string">\'unshift\'</span> <span class="token operator">||</span> method <span class="token operator">===</span> <span class="token string">\'splice\'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      <span class="token comment">// TODO track newly added item too!</span>\n    <span class="token punctuation">&#125;</span>\n    <span class="token keyword">return</span> result<span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n<span class="token keyword">function</span> <span class="token function">getTrackableArray</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">const</span> trackedArray <span class="token operator">=</span> <span class="token function">getTrackableObject</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// set the prototype to the patched prototype</span>\n  trackedArray<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> TrackableArrayProto<span class="token punctuation">;</span>\n  <span class="token keyword">return</span> trackedArray<span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token comment">// track app state</span>\n<span class="token keyword">const</span> appState <span class="token operator">=</span> <span class="token function">getTrackableArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nappState<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// log &#96;\'push\' was called.&#96;</span>\nappState<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">\'foo\'</span><span class="token punctuation">;</span> <span class="token comment">// log &#96;\'0\' has changed.</span></code>',i(Ct,He),i(Ct,Ne),i(Ne,De),i(Ne,Me),i(Me,We),i(Ne,Re),i(Ct,Ue),i(Ct,Be),i(Be,qe),i(qe,_e),i(qe,Je),i(Je,Fe),i(Ct,Ge),i(Ct,Ye),i(Ye,Ve),i(Ct,Ke),i(Ct,ze),i(ze,Qe),i(Ct,Ze),i(Ct,Xe),i(Xe,no),i(Xe,ao),i(ao,so),i(Xe,to),l(n,eo,a),l(n,oo,a),i(oo,po),i(po,co),i(co,ro),i(oo,io),i(oo,lo),i(lo,uo),i(lo,ho),i(ho,ko),i(lo,fo),i(lo,mo),i(mo,go),i(lo,wo),i(oo,vo),i(oo,yo),yo.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">getTrackableObject</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">\'object\'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">getTrackableObject</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span>\n  <span class="token punctuation">&#125;</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>\n    <span class="token function-variable function">set</span><span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">\'</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>key<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">\' has changed</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">\'object\'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n        value <span class="token operator">=</span> <span class="token function">getTrackableObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span>\n      <span class="token keyword">return</span> <span class="token punctuation">(</span>target<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">deleteProperty</span><span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">\'</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>key<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">\' was deleted</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> <span class="token keyword">delete</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token keyword">const</span> appState <span class="token operator">=</span> <span class="token function">getTrackableObject</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> foo<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> bar<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nappState<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// log &#96;\'foo\' has changed.&#96;</span>\nappState<span class="token punctuation">.</span>bar<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// log &#96;\'2\' has changed.&#96;, &#96;\'length\' has changed&#96;</span>\nappState<span class="token punctuation">.</span>bar<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">\'foo\'</span><span class="token punctuation">;</span> <span class="token comment">// log &#96;\'0\' has changed.</span></code>',i(oo,bo),i(oo,Eo),i(Eo,To),i(To,So),i(oo,Po),i(oo,jo),i(jo,Ao),i(jo,xo),i(xo,Io),i(jo,Oo),i(oo,Co),i(oo,Lo),Lo.innerHTML='<code class="language-js">appState<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>\nappState<span class="token punctuation">.</span>bar<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nappState<span class="token punctuation">.</span>bar<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">\'foo\'</span><span class="token punctuation">;</span></code>',i(oo,$o),i(oo,Ho),i(Ho,No),i(oo,Do),i(oo,Mo),i(Mo,Wo),i(Wo,Ro),i(Mo,Uo),i(Mo,Bo),i(Bo,qo),i(Mo,_o),i(Mo,Jo),i(Jo,Fo),i(oo,Go),i(oo,Yo),Yo.innerHTML='<code class="language-js"><span class="token comment">// track a property of the component</span>\n<span class="token keyword">class</span> <span class="token class-name">Component</span> <span class="token punctuation">&#123;</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">initialState</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token function">getTrackableObject</span><span class="token punctuation">(</span>initialState<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span>\n<span class="token keyword">class</span> <span class="token class-name">UserComponent</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">&#123;</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> foo<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n  <span class="token function">someHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// Log &#96;\'foo\' has changed&#96;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>other<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// Does not track this</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token comment">// track the component instance itself</span>\n<span class="token keyword">class</span> <span class="token class-name">Component</span> <span class="token punctuation">&#123;</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">return</span> <span class="token function">getTrackableObject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">UserComponent</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">&#123;</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n  <span class="token function">someHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// Log &#96;\'foo\' has changed&#96;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(oo,Vo),i(oo,Ko),i(Ko,zo),i(Ko,Qo),i(Qo,Zo),i(Ko,Xo),i(Ko,np),i(np,ap),i(Ko,sp),i(oo,tp),i(oo,ep),i(ep,op),i(ep,pp),i(pp,cp),i(ep,rp),i(oo,ip),i(oo,lp),i(lp,up),l(n,hp,a),l(n,kp,a),i(kp,dp),i(dp,fp),i(fp,mp),i(fp,gp),i(gp,wp),i(kp,vp),i(kp,yp),i(yp,bp),i(kp,Ep),i(kp,Tp),i(Tp,Sp),i(Tp,Pp),i(Pp,jp),i(Tp,Ap),i(kp,xp),i(kp,Ip),Ip.innerHTML='<code class="language-js"><span class="token comment">// instead of</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>appState<span class="token punctuation">.</span>one <span class="token operator">=</span> <span class="token string">\'1\'</span><span class="token punctuation">;</span>\n<span class="token function">scheduleUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// you have to use the frameworks API</span>\n<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setAppState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> one<span class="token punctuation">:</span> <span class="token string">\'1\'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>',i(kp,Op),i(kp,Cp),i(Cp,Lp),i(kp,$p),i(kp,Hp),Hp.innerHTML='<code class="language-js"><span class="token keyword">class</span> <span class="token class-name">Component</span> <span class="token punctuation">&#123;</span>\n  <span class="token function">setAppState</span><span class="token punctuation">(</span><span class="token parameter">appState</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>appState <span class="token operator">=</span> appState<span class="token punctuation">;</span>\n    <span class="token function">scheduleUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(kp,Np),i(kp,Dp),i(Dp,Mp),i(Dp,Wp),i(Wp,Rp),i(Wp,Up),i(Up,Bp),i(Dp,qp),i(kp,_p),i(kp,Jp),i(Jp,Fp),i(kp,Gp),i(kp,Yp),Yp.innerHTML='<code class="language-js"><span class="token keyword">class</span> <span class="token class-name">MyComponent</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">&#123;</span>\n  <span class="token function">someHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// if setting the state directly, instead of calling &#96;setAppState&#96;</span>\n    <span class="token comment">// this will not schedule an update, and thus no reactivity</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>appState<span class="token punctuation">.</span>one <span class="token operator">=</span> <span class="token string">\'1\'</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(kp,Vp),i(kp,Kp),i(Kp,zp),i(kp,Qp),i(kp,Zp),Zp.innerHTML='<code class="language-js"><span class="token keyword">class</span> <span class="token class-name">MyComponent</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">&#123;</span>\n  <span class="token function">someHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// this will not schedule update</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>appState<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">\'one\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// you need to call setAppState after the .push()</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setAppState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> list<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>appState<span class="token punctuation">.</span>list <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// or instead, for a one-liner</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setAppState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> list<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>this<span class="token punctuation">.</span>appState<span class="token punctuation">.</span>list<span class="token punctuation">,</span> <span class="token string">\'one\'</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(kp,Xp),i(kp,nc),i(nc,ac),i(nc,sc),i(sc,tc),i(nc,ec),i(kp,oc),i(kp,pc),i(pc,cc),i(cc,rc),i(pc,ic),i(pc,lc),i(lc,uc),i(lc,hc),i(hc,kc),i(lc,dc),i(lc,fc),i(fc,mc),i(lc,gc),i(pc,wc),i(pc,vc),i(vc,yc),i(pc,bc),i(pc,Ec),i(Ec,Tc),i(kp,Sc),i(kp,Pc),i(Pc,jc),i(Pc,Ac),i(Ac,xc),i(Pc,Ic),i(kp,Oc),i(kp,Cc),Cc.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">timeout</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> delay</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">scheduleUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n<span class="token comment">// user code</span>\n<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> $timeout <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">\'my-custom-framework\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">class</span> <span class="token class-name">UserComponent</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">&#123;</span>\n  <span class="token function">someHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// will schedule update after the callback fires.</span>\n    <span class="token function">$timeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>appState<span class="token punctuation">.</span>one <span class="token operator">=</span> <span class="token string">\'1\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n      <span class="token comment">// this will not schedule update</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>appState<span class="token punctuation">.</span>two <span class="token operator">=</span> <span class="token string">\'2\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(kp,Lc),i(kp,$c),i($c,Hc),i($c,Nc),i(Nc,Dc),i(kp,Mc),i(kp,Wc),i(Wc,Rc),i(Wc,Uc),i(Uc,Bc),i(Wc,qc),i(kp,_c),i(kp,Jc),i(Jc,Fc),i(Jc,Gc),i(Gc,Yc),i(kp,Vc),i(kp,Kc),i(Kc,zc),i(Kc,Qc),i(Qc,Zc),i(Kc,Xc),i(Kc,nr),i(nr,ar),i(Kc,sr),i(Kc,tr),i(tr,er),i(Kc,or),i(Kc,pr),i(pr,cr),i(Kc,rr),i(kp,ir),i(kp,lr),i(lr,ur),i(kp,hr),i(kp,kr),i(kr,dr),i(dr,fr),i(kr,mr),i(kr,gr),i(gr,wr),i(kp,vr),i(kp,yr),i(yr,br),i(yr,Er),i(Er,Tr),i(yr,Sr),i(yr,Pr),i(Pr,jr),i(yr,Ar),i(kp,xr),i(kp,Ir),i(Ir,Or),l(n,Cr,a),l(n,Lr,a),i(Lr,$r),i($r,Hr),i(Hr,Nr),i(Lr,Dr),i(Lr,Mr),i(Mr,Wr),i(Lr,Rr),i(Lr,Ur),Ur.innerHTML='<code class="language-js"><span class="token keyword">class</span> <span class="token class-name">UserComponent</span> <span class="token punctuation">&#123;</span>\n  <span class="token function">someHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>appState<span class="token punctuation">.</span>one <span class="token operator">=</span> <span class="token string">\'1\'</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(Lr,Br),i(Lr,qr),i(qr,_r),i(Lr,Jr),i(Lr,Fr),Fr.innerHTML='<code class="language-js"><span class="token keyword">class</span> <span class="token class-name">UserComponent</span> <span class="token punctuation">&#123;</span>\n  <span class="token function">someHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>appState<span class="token punctuation">.</span>one <span class="token operator">=</span> <span class="token string">\'1\'</span><span class="token punctuation">;</span>\n    <span class="token function">scheduleUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &lt;-- insert this during compilation</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(Lr,Gr),i(Lr,Yr),i(Yr,Vr),i(Lr,Kr),i(Lr,zr),i(zr,Qr),i(zr,Zr),i(Zr,Xr),i(zr,ni),i(Lr,ai),i(Lr,si),si.innerHTML='<code class="language-js"><span class="token keyword">class</span> <span class="token class-name">UserComponent</span> <span class="token punctuation">&#123;</span>\n  <span class="token function">someHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>appState<span class="token punctuation">.</span>one <span class="token operator">=</span> <span class="token string">\'1\'</span><span class="token punctuation">;</span> <span class="token comment">// &lt;-- ✅changes to application state</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token string">\'bar\'</span><span class="token punctuation">;</span> <span class="token comment">// &lt;-- ⛔️ not changing application state</span>\n\n    <span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>appState<span class="token punctuation">;</span>\n    foo<span class="token punctuation">.</span>one <span class="token operator">=</span> <span class="token string">\'1\'</span><span class="token punctuation">;</span> <span class="token comment">// 🤷‍♂️do we know that this is changing application state?</span>\n\n    <span class="token function">doSomethingMutable</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>appState<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">function</span> <span class="token function">doSomethingMutable</span><span class="token punctuation">(</span><span class="token parameter">foo</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      foo<span class="token punctuation">.</span>one <span class="token operator">=</span> <span class="token string">\'1\'</span><span class="token punctuation">;</span> <span class="token comment">// 🤷‍♂️do we know that this is changing application state?</span>\n    <span class="token punctuation">&#125;</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span>appState<span class="token punctuation">.</span>obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>\n      data<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n      <span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 🤷‍♂️do we know that this is changing application state?</span>\n      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>appState<span class="token punctuation">.</span>obj<span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span>appState<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">\'1\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 🤷‍♂️is push mutable?</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>appState<span class="token punctuation">.</span>list <span class="token operator">=</span> <span class="token punctuation">&#123;</span>\n      <span class="token function">push</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'nothing change\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>appState<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">\'1\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 🤷‍♂️is this push mutable?</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(Lr,ti),i(Lr,ei),i(ei,oi),i(Lr,pi),i(Lr,ci),i(ci,ri),i(ri,ii),i(ri,li),i(li,ui),i(ri,hi),i(ri,ki),i(ki,di),i(ri,fi),i(ri,mi),i(mi,gi),i(ci,wi),i(ci,vi),i(vi,yi),i(vi,bi),i(bi,Ei),i(vi,Ti),i(Lr,Si),i(Lr,Pi),i(Pi,ji),i(Pi,Ai),i(Ai,xi),i(Pi,Ii),i(Pi,Oi),i(Oi,Ci),i(Pi,Li),i(Pi,$i),i($i,Hi),i(Pi,Ni),i(Pi,Di),i(Di,Mi),i(Pi,Wi),i(Pi,Ri),i(Ri,Ui),i(Pi,Bi),i(Lr,qi),i(Lr,_i),i(_i,Ji),i(_i,Fi),i(Fi,Gi),i(_i,Yi),l(n,Vi,a),l(n,Ki,a),i(Ki,zi),i(zi,Qi),i(Qi,Zi),i(Ki,Xi),i(Ki,nl),i(nl,al),i(Ki,sl),i(Ki,tl),i(tl,el),i(el,ol),i(tl,pl),i(tl,cl),i(cl,rl),i(cl,il),i(il,ll),i(tl,ul),i(tl,hl),i(hl,kl),i(Ki,dl),i(Ki,fl),i(fl,ml),i(Ki,gl),i(Ki,wl),i(wl,vl),i(vl,yl),i(yl,bl),i(yl,El),i(El,Tl),i(yl,Sl),i(wl,Pl),i(wl,jl),i(jl,Al),i(Al,xl),i(jl,Il),i(jl,Ol),i(Ol,Cl),i(jl,Ll),i(jl,$l),i($l,Hl),i(Hl,Nl),i($l,Dl),i($l,Ml),i(Ml,Wl),i(Ki,Rl),i(Ki,Ul),i(Ul,Bl),i(Ki,ql),i(Ki,_l),i(_l,Jl),i(Ki,Fl),i(Ki,Gl),i(Gl,Yl),i(Gl,Vl),i(Vl,Kl),i(Gl,zl),i(Ki,Ql),i(Ki,Zl),i(Ki,Xl),i(Ki,nu),i(nu,au),i(nu,su),i(su,tu),i(nu,eu)},p:n,d(n){n&&u(s),n&&u(J),n&&u(F),n&&u(zn),n&&u(Qn),n&&u(Ha),n&&u(Na),n&&u(xs),n&&u(Is),n&&u(Ot),n&&u(Ct),n&&u(eo),n&&u(oo),n&&u(hp),n&&u(kp),n&&u(Cr),n&&u(Lr),n&&u(Vi),n&&u(Ki)}}}function hn(n){let s,t;const e=[kn];let o={$$slots:{default:[un]},$$scope:{ctx:n}};for(let n=0;n<e.length;n+=1)o=a(o,e[n]);return s=new ln({props:o}),{c(){_(s.$$.fragment)},l(n){J(s.$$.fragment,n)},m(n,a){F(s,n,a),t=!0},p(n,[a]){const t=0&a?function(n,a){const s={},t={},e={$$scope:1};let o=n.length;for(;o--;){const p=n[o],c=a[o];if(c){for(const n in p)n in c||(t[n]=1);for(const n in c)e[n]||(s[n]=c[n],e[n]=1);n[o]=c}else for(const n in p)e[n]=1}for(const n in t)n in s||(s[n]=void 0);return s}(e,[(o=kn,"object"==typeof o&&null!==o?o:{})]):{};var o;1&a&&(t.$$scope={dirty:a,ctx:n}),s.$set(t)},i(n){t||(B(s.$$.fragment,n),t=!0)},o(n){q(s.$$.fragment,n),t=!1},d(n){G(s,n)}}}const kn={title:"Reactivity in Web Frameworks (Part 1)",date:"2020-01-05T08:00:00Z",lastUpdated:"2020-01-08T08:00:00Z",description:"Reactivity is the ability of a web framework to update your view whenever the application state has changed. How do web frameworks achieve reactivity?",slug:"reactivity-in-web-frameworks-the-when",type:"blog"};class dn extends K{constructor(n){super(),V(this,n,null,hn,p,{})}}setTimeout(()=>{new dn({target:document.querySelector("#app"),hydrate:!0});if(document.querySelector(".twitter-tweet")){const n=document.createElement("script");n.async=!0,n.src="https://platform.twitter.com/widgets.js",n.charset="utf-8",document.body.appendChild(n)}},3e3);
