function n(){}function a(n,a){for(const s in a)n[s]=a[s];return n}function s(n){return n()}function t(){return Object.create(null)}function e(n){n.forEach(s)}function o(n){return"function"==typeof n}function p(n,a){return n!=n?a==a:n!==a||n&&"object"==typeof n||"function"==typeof n}function c(n,s,t,e){return n[1]&&e?a(t.ctx.slice(),n[1](e(s))):t.ctx}function l(n,a,s,t,e,o,p){const l=function(n,a,s,t){if(n[2]&&t){const e=n[2](t(s));if(void 0===a.dirty)return e;if("object"==typeof e){const n=[],s=Math.max(a.dirty.length,e.length);for(let t=0;t<s;t+=1)n[t]=a.dirty[t]|e[t];return n}return a.dirty|e}return a.dirty}(a,t,e,o);if(l){const e=c(a,s,t,p);n.p(e,l)}}function i(n,a){n.appendChild(a)}function u(n,a,s){n.insertBefore(a,s||null)}function r(n){n.parentNode.removeChild(n)}function k(n,a){for(let s=0;s<n.length;s+=1)n[s]&&n[s].d(a)}function h(n){return document.createElement(n)}function d(n){return document.createElementNS("http://www.w3.org/2000/svg",n)}function f(n){return document.createTextNode(n)}function g(){return f(" ")}function m(){return f("")}function v(n,a,s){null==s?n.removeAttribute(a):n.getAttribute(a)!==s&&n.setAttribute(a,s)}function b(n){return Array.from(n.childNodes)}function E(n,a,s,t){for(let t=0;t<n.length;t+=1){const e=n[t];if(e.nodeName===a){let a=0;const o=[];for(;a<e.attributes.length;){const n=e.attributes[a++];s[n.name]||o.push(n.name)}for(let n=0;n<o.length;n++)e.removeAttribute(o[n]);return n.splice(t,1)[0]}}return t?d(a):h(a)}function w(n,a){for(let s=0;s<n.length;s+=1){const t=n[s];if(3===t.nodeType)return t.data=""+a,n.splice(s,1)[0]}return f(a)}function y(n){return w(n," ")}function I(n,a){a=""+a,n.wholeText!==a&&(n.data=a)}function x(n,a){n.value=null==a?"":a}class _{constructor(n=null){this.a=n,this.e=this.n=null}m(n,a,s=null){this.e||(this.e=h(a.nodeName),this.t=a,this.h(n)),this.i(s)}h(n){this.e.innerHTML=n,this.n=Array.from(this.e.childNodes)}i(n){for(let a=0;a<this.n.length;a+=1)u(this.t,this.n[a],n)}p(n){this.d(),this.h(n),this.i(this.a)}d(){this.n.forEach(r)}}let O;function S(n){O=n}function C(n){(function(){if(!O)throw new Error("Function called outside component initialization");return O})().$$.on_mount.push(n)}const j=[],P=[],A=[],T=[],$=Promise.resolve();let D=!1;function L(n){A.push(n)}let H=!1;const R=new Set;function M(){if(!H){H=!0;do{for(let n=0;n<j.length;n+=1){const a=j[n];S(a),N(a.$$)}for(j.length=0;P.length;)P.pop()();for(let n=0;n<A.length;n+=1){const a=A[n];R.has(a)||(R.add(a),a())}A.length=0}while(j.length);for(;T.length;)T.pop()();D=!1,H=!1,R.clear()}}function N(n){if(null!==n.fragment){n.update(),e(n.before_update);const a=n.dirty;n.dirty=[-1],n.fragment&&n.fragment.p(n.ctx,a),n.after_update.forEach(L)}}const W=new Set;function q(n,a){n&&n.i&&(W.delete(n),n.i(a))}function B(n,a,s,t){if(n&&n.o){if(W.has(n))return;W.add(n),(void 0).c.push(()=>{W.delete(n),t&&(s&&n.d(1),t())}),n.o(a)}}function F(n){n&&n.c()}function U(n,a){n&&n.l(a)}function G(n,a,t){const{fragment:p,on_mount:c,on_destroy:l,after_update:i}=n.$$;p&&p.m(a,t),L(()=>{const a=c.map(s).filter(o);l?l.push(...a):e(a),n.$$.on_mount=[]}),i.forEach(L)}function z(n,a){const s=n.$$;null!==s.fragment&&(e(s.on_destroy),s.fragment&&s.fragment.d(a),s.on_destroy=s.fragment=null,s.ctx=[])}function J(n,a){-1===n.$$.dirty[0]&&(j.push(n),D||(D=!0,$.then(M)),n.$$.dirty.fill(0)),n.$$.dirty[a/31|0]|=1<<a%31}function V(a,s,o,p,c,l,i=[-1]){const u=O;S(a);const k=s.props||{},h=a.$$={fragment:null,ctx:null,props:l,update:n,not_equal:c,bound:t(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(u?u.$$.context:[]),callbacks:t(),dirty:i};let d=!1;if(h.ctx=o?o(a,k,(n,s,...t)=>{const e=t.length?t[0]:s;return h.ctx&&c(h.ctx[n],h.ctx[n]=e)&&(h.bound[n]&&h.bound[n](e),d&&J(a,n)),s}):[],h.update(),d=!0,e(h.before_update),h.fragment=!!p&&p(h.ctx),s.target){if(s.hydrate){const n=b(s.target);h.fragment&&h.fragment.l(n),n.forEach(r)}else h.fragment&&h.fragment.c();s.intro&&q(a.$$.fragment),G(a,s.target,s.anchor),M()}S(u)}class Y{$destroy(){z(this,1),this.$destroy=n}$on(n,a){const s=this.$$.callbacks[n]||(this.$$.callbacks[n]=[]);return s.push(a),()=>{const n=s.indexOf(a);-1!==n&&s.splice(n,1)}}$set(){}}function Q(a){let s,t,e,o,p,c,l,k,m,I,x,_,O,S,C,j,P,A,T,$,D,L,H,R,M,N,W,q,B,F,U,G,z,J,V;return{c(){s=h("header"),t=h("nav"),e=h("ul"),o=h("li"),p=h("a"),c=f("Tan Li Hau"),l=g(),k=h("li"),m=h("a"),I=f("About"),x=g(),_=h("li"),O=h("a"),S=f("Writings"),C=g(),j=h("li"),P=h("a"),A=f("Talks"),T=g(),$=h("li"),D=h("a"),L=f("Notes"),H=g(),R=h("li"),M=h("a"),N=f("Newsletter"),W=g(),q=h("li"),B=h("a"),F=d("svg"),U=d("path"),G=g(),z=h("a"),J=d("svg"),V=d("path"),this.h()},l(n){s=E(n,"HEADER",{class:!0});var a=b(s);t=E(a,"NAV",{});var i=b(t);e=E(i,"UL",{class:!0});var u=b(e);o=E(u,"LI",{class:!0});var h=b(o);p=E(h,"A",{href:!0,class:!0});var d=b(p);c=w(d,"Tan Li Hau"),d.forEach(r),h.forEach(r),l=y(u),k=E(u,"LI",{class:!0});var f=b(k);m=E(f,"A",{href:!0,class:!0});var g=b(m);I=w(g,"About"),g.forEach(r),f.forEach(r),x=y(u),_=E(u,"LI",{class:!0});var v=b(_);O=E(v,"A",{href:!0,class:!0});var Y=b(O);S=w(Y,"Writings"),Y.forEach(r),v.forEach(r),C=y(u),j=E(u,"LI",{class:!0});var Q=b(j);P=E(Q,"A",{href:!0,class:!0});var K=b(P);A=w(K,"Talks"),K.forEach(r),Q.forEach(r),T=y(u),$=E(u,"LI",{class:!0});var Z=b($);D=E(Z,"A",{href:!0,class:!0});var X=b(D);L=w(X,"Notes"),X.forEach(r),Z.forEach(r),H=y(u),R=E(u,"LI",{class:!0});var nn=b(R);M=E(nn,"A",{href:!0,class:!0});var an=b(M);N=w(an,"Newsletter"),an.forEach(r),nn.forEach(r),W=y(u),q=E(u,"LI",{class:!0});var sn=b(q);B=E(sn,"A",{"aria-label":!0,href:!0,class:!0});var tn=b(B);F=E(tn,"svg",{viewBox:!0,width:!0,height:!0,class:!0},1);var en=b(F);U=E(en,"path",{d:!0},1),b(U).forEach(r),en.forEach(r),tn.forEach(r),G=y(sn),z=E(sn,"A",{"aria-label":!0,href:!0,class:!0});var on=b(z);J=E(on,"svg",{viewBox:!0,width:!0,height:!0,class:!0},1);var pn=b(J);V=E(pn,"path",{d:!0},1),b(V).forEach(r),pn.forEach(r),on.forEach(r),sn.forEach(r),u.forEach(r),i.forEach(r),a.forEach(r),this.h()},h(){v(p,"href","/"),v(p,"class","svelte-f3e4uo"),v(o,"class","svelte-f3e4uo"),v(m,"href","/about"),v(m,"class","svelte-f3e4uo"),v(k,"class","svelte-f3e4uo"),v(O,"href","/blogs"),v(O,"class","svelte-f3e4uo"),v(_,"class","svelte-f3e4uo"),v(P,"href","/talks"),v(P,"class","svelte-f3e4uo"),v(j,"class","svelte-f3e4uo"),v(D,"href","/notes"),v(D,"class","svelte-f3e4uo"),v($,"class","svelte-f3e4uo"),v(M,"href","/newsletter"),v(M,"class","svelte-f3e4uo"),v(R,"class","svelte-f3e4uo"),v(U,"d","M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66\n    10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5\n    4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"),v(F,"viewBox","0 0 24 24"),v(F,"width","1em"),v(F,"height","1em"),v(F,"class","svelte-f3e4uo"),v(B,"aria-label","Twitter account"),v(B,"href","https://twitter.com/lihautan"),v(B,"class","svelte-f3e4uo"),v(V,"d","M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0\n    0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07\n    5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65\n    5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42\n    3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"),v(J,"viewBox","0 0 24 24"),v(J,"width","1em"),v(J,"height","1em"),v(J,"class","svelte-f3e4uo"),v(z,"aria-label","Github account"),v(z,"href","https://github.com/tanhauhau"),v(z,"class","svelte-f3e4uo"),v(q,"class","social svelte-f3e4uo"),v(e,"class","svelte-f3e4uo"),v(s,"class","svelte-f3e4uo")},m(n,a){u(n,s,a),i(s,t),i(t,e),i(e,o),i(o,p),i(p,c),i(e,l),i(e,k),i(k,m),i(m,I),i(e,x),i(e,_),i(_,O),i(O,S),i(e,C),i(e,j),i(j,P),i(P,A),i(e,T),i(e,$),i($,D),i(D,L),i(e,H),i(e,R),i(R,M),i(M,N),i(e,W),i(e,q),i(q,B),i(B,F),i(F,U),i(q,G),i(q,z),i(z,J),i(J,V)},p:n,i:n,o:n,d(n){n&&r(s)}}}class K extends Y{constructor(n){super(),V(this,n,null,Q,p,{})}}function Z(a){let s,t,e,o,p,c,l,k,d,m,I,_,O,S,C,j,P,A,T,$;return{c(){s=h("div"),t=h("h1"),e=f("Subscribe to my newsletter"),o=g(),p=h("h2"),c=f("Get the latest blog posts and project updates delivered right to your inbox"),l=g(),k=h("form"),d=h("div"),m=h("input"),I=g(),_=h("input"),S=g(),C=h("input"),j=g(),P=h("p"),A=f("Powered by Buttondown."),this.h()},l(n){s=E(n,"DIV",{class:!0});var a=b(s);t=E(a,"H1",{});var i=b(t);e=w(i,"Subscribe to my newsletter"),i.forEach(r),o=y(a),p=E(a,"H2",{class:!0});var u=b(p);c=w(u,"Get the latest blog posts and project updates delivered right to your inbox"),u.forEach(r),l=y(a),k=E(a,"FORM",{action:!0,method:!0,target:!0,onsubmit:!0,class:!0});var h=b(k);d=E(h,"DIV",{class:!0});var f=b(d);m=E(f,"INPUT",{type:!0,name:!0,id:!0,"aria-label":!0,placeholder:!0,class:!0}),I=y(f),_=E(f,"INPUT",{type:!0,value:!0,disabled:!0,class:!0}),f.forEach(r),S=y(h),C=E(h,"INPUT",{type:!0,value:!0,name:!0,class:!0}),j=y(h),P=E(h,"P",{class:!0});var g=b(P);A=w(g,"Powered by Buttondown."),g.forEach(r),h.forEach(r),a.forEach(r),this.h()},h(){v(p,"class","svelte-1k1s1co"),v(m,"type","email"),v(m,"name","email"),v(m,"id","bd-email"),v(m,"aria-label","email address"),v(m,"placeholder","youremail@example.com"),v(m,"class","svelte-1k1s1co"),v(_,"type","submit"),_.value="Subscribe",_.disabled=O=!a[0],v(_,"class","svelte-1k1s1co"),v(d,"class","form-item svelte-1k1s1co"),v(C,"type","hidden"),C.value="1",v(C,"name","embed"),v(C,"class","svelte-1k1s1co"),v(P,"class","svelte-1k1s1co"),v(k,"action","https://buttondown.email/api/emails/embed-subscribe/lihautan"),v(k,"method","post"),v(k,"target","popupwindow"),v(k,"onsubmit","window.open('https://buttondown.email/lihautan', 'popupwindow')"),v(k,"class","embeddable-buttondown-form"),v(s,"class","form svelte-1k1s1co")},m(n,r){var h,f,g,v;u(n,s,r),i(s,t),i(t,e),i(s,o),i(s,p),i(p,c),i(s,l),i(s,k),i(k,d),i(d,m),x(m,a[0]),i(d,I),i(d,_),i(k,S),i(k,C),i(k,j),i(k,P),i(P,A),T||(h=m,f="input",g=a[1],h.addEventListener(f,g,v),$=()=>h.removeEventListener(f,g,v),T=!0)},p(n,[a]){1&a&&m.value!==n[0]&&x(m,n[0]),1&a&&O!==(O=!n[0])&&(_.disabled=O)},i:n,o:n,d(n){n&&r(s),T=!1,$()}}}function X(n,a,s){let t;return[t,function(){t=this.value,s(0,t)}]}class nn extends Y{constructor(n){super(),V(this,n,X,Z,p,{})}}function an(n){return C(()=>(setTimeout(()=>{if(window.innerWidth>1080){const n=document.createElement("script");n.async=!0,n.type="text/javascript",n.src="//cdn.carbonads.com/carbon.js?serve=CE7ITK3E&placement=lihautancom",n.id="_carbonads_js",document.body.appendChild(n)}},5e3),()=>{try{const n=document.getElementById("carbonads");n.parentNode.removeChild(n)}catch(n){}})),[]}class sn extends Y{constructor(n){super(),V(this,n,an,null,p,{})}}var tn="https://lihautan.com/contributing-to-svelte-fixing-issue-4392/assets/hero-twitter-b9c07d38.jpg";function en(n,a,s){const t=n.slice();return t[6]=a[s],t}function on(n,a,s){const t=n.slice();return t[6]=a[s],t}function pn(n){let a,s;return{c(){a=h("meta"),this.h()},l(n){a=E(n,"META",{name:!0,content:!0}),this.h()},h(){v(a,"name","keywords"),v(a,"content",s=n[6])},m(n,s){u(n,a,s)},p(n,t){4&t&&s!==(s=n[6])&&v(a,"content",s)},d(n){n&&r(a)}}}function cn(n){let a,s,t=n[6]+"";return{c(){a=h("span"),s=f(t),this.h()},l(n){a=E(n,"SPAN",{class:!0});var e=b(a);s=w(e,t),e.forEach(r),this.h()},h(){v(a,"class","svelte-9tqnza")},m(n,t){u(n,a,t),i(a,s)},p(n,a){4&a&&t!==(t=n[6]+"")&&I(s,t)},d(n){n&&r(a)}}}function ln(n){let a,s,t,e,o,p,d,x,O,S,C,j,P,A,T,$,D,L,H,R,M,N,W,J,V,Y,Q,Z,X,an,ln,un,rn,kn,hn,dn,fn=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"Article",author:n[3],copyrightHolder:n[3],copyrightYear:"2020",creator:n[3],publisher:n[3],description:n[1],headline:n[0],name:n[0],inLanguage:"en"})}<\/script>`,gn=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"BreadcrumbList",description:"Breadcrumbs list",name:"Breadcrumbs",itemListElement:[{"@type":"ListItem",item:{"@id":"https://lihautan.com",name:"Homepage"},position:1},{"@type":"ListItem",item:{"@id":"https%3A%2F%2Flihautan.com%2Fcontributing-to-svelte-fixing-issue-4392",name:n[0]},position:2}]})}<\/script>`;document.title=a=n[0]+" | Tan Li Hau";let mn=n[2],vn=[];for(let a=0;a<mn.length;a+=1)vn[a]=pn(on(n,mn,a));W=new K({});let bn=n[2],En=[];for(let a=0;a<bn.length;a+=1)En[a]=cn(en(n,bn,a));const wn=n[5].default,yn=function(n,a,s,t){if(n){const e=c(n,a,s,t);return n[0](e)}}(wn,n,n[4],null);return rn=new nn({}),hn=new sn({}),{c(){s=h("meta"),t=h("meta"),e=h("meta"),o=h("meta"),p=h("meta"),d=h("meta"),x=h("meta"),O=h("meta"),S=h("meta"),C=h("meta"),j=h("meta");for(let n=0;n<vn.length;n+=1)vn[n].c();P=h("meta"),A=h("meta"),$=m(),L=m(),H=g(),R=h("a"),M=f("Skip to content"),N=g(),F(W.$$.fragment),J=g(),V=h("main"),Y=h("h1"),Q=f(n[0]),Z=g();for(let n=0;n<En.length;n+=1)En[n].c();X=g(),an=h("article"),yn&&yn.c(),ln=g(),un=h("footer"),F(rn.$$.fragment),kn=g(),F(hn.$$.fragment),this.h()},l(a){const c=function(n,a=document.body){return Array.from(a.querySelectorAll(n))}('[data-svelte="svelte-n0q11s"]',document.head);s=E(c,"META",{name:!0,content:!0}),t=E(c,"META",{name:!0,content:!0}),e=E(c,"META",{name:!0,content:!0}),o=E(c,"META",{name:!0,content:!0}),p=E(c,"META",{name:!0,content:!0}),d=E(c,"META",{name:!0,content:!0}),x=E(c,"META",{name:!0,content:!0}),O=E(c,"META",{name:!0,content:!0}),S=E(c,"META",{name:!0,content:!0}),C=E(c,"META",{name:!0,content:!0}),j=E(c,"META",{name:!0,content:!0});for(let n=0;n<vn.length;n+=1)vn[n].l(c);P=E(c,"META",{itemprop:!0,content:!0}),A=E(c,"META",{itemprop:!0,content:!0}),$=m(),L=m(),c.forEach(r),H=y(a),R=E(a,"A",{href:!0,class:!0});var l=b(R);M=w(l,"Skip to content"),l.forEach(r),N=y(a),U(W.$$.fragment,a),J=y(a),V=E(a,"MAIN",{id:!0,class:!0});var i=b(V);Y=E(i,"H1",{});var u=b(Y);Q=w(u,n[0]),u.forEach(r),Z=y(i);for(let n=0;n<En.length;n+=1)En[n].l(i);X=y(i),an=E(i,"ARTICLE",{});var k=b(an);yn&&yn.l(k),k.forEach(r),i.forEach(r),ln=y(a),un=E(a,"FOOTER",{class:!0});var h=b(un);U(rn.$$.fragment,h),kn=y(h),U(hn.$$.fragment,h),h.forEach(r),this.h()},h(){v(s,"name","description"),v(s,"content",n[1]),v(t,"name","image"),v(t,"content",tn),v(e,"name","og:image"),v(e,"content",tn),v(o,"name","og:title"),v(o,"content",n[0]),v(p,"name","og:description"),v(p,"content",n[1]),v(d,"name","og:type"),v(d,"content","website"),v(x,"name","twitter:card"),v(x,"content","summary_large_image"),v(O,"name","twitter:creator"),v(O,"content","@lihautan"),v(S,"name","twitter:title"),v(S,"content",n[0]),v(C,"name","twitter:description"),v(C,"content",n[1]),v(j,"name","twitter:image"),v(j,"content",tn),v(P,"itemprop","url"),v(P,"content","https%3A%2F%2Flihautan.com%2Fcontributing-to-svelte-fixing-issue-4392"),v(A,"itemprop","image"),v(A,"content",tn),T=new _($),D=new _(L),v(R,"href","#content"),v(R,"class","skip svelte-9tqnza"),v(V,"id","content"),v(V,"class","blog svelte-9tqnza"),v(un,"class","svelte-9tqnza")},m(n,a){i(document.head,s),i(document.head,t),i(document.head,e),i(document.head,o),i(document.head,p),i(document.head,d),i(document.head,x),i(document.head,O),i(document.head,S),i(document.head,C),i(document.head,j);for(let n=0;n<vn.length;n+=1)vn[n].m(document.head,null);i(document.head,P),i(document.head,A),T.m(fn,document.head),i(document.head,$),D.m(gn,document.head),i(document.head,L),u(n,H,a),u(n,R,a),i(R,M),u(n,N,a),G(W,n,a),u(n,J,a),u(n,V,a),i(V,Y),i(Y,Q),i(V,Z);for(let n=0;n<En.length;n+=1)En[n].m(V,null);i(V,X),i(V,an),yn&&yn.m(an,null),u(n,ln,a),u(n,un,a),G(rn,un,null),i(un,kn),G(hn,un,null),dn=!0},p(n,[t]){if((!dn||1&t)&&a!==(a=n[0]+" | Tan Li Hau")&&(document.title=a),(!dn||2&t)&&v(s,"content",n[1]),(!dn||1&t)&&v(o,"content",n[0]),(!dn||2&t)&&v(p,"content",n[1]),(!dn||1&t)&&v(S,"content",n[0]),(!dn||2&t)&&v(C,"content",n[1]),4&t){let a;for(mn=n[2],a=0;a<mn.length;a+=1){const s=on(n,mn,a);vn[a]?vn[a].p(s,t):(vn[a]=pn(s),vn[a].c(),vn[a].m(P.parentNode,P))}for(;a<vn.length;a+=1)vn[a].d(1);vn.length=mn.length}if((!dn||3&t)&&fn!==(fn=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"Article",author:n[3],copyrightHolder:n[3],copyrightYear:"2020",creator:n[3],publisher:n[3],description:n[1],headline:n[0],name:n[0],inLanguage:"en"})}<\/script>`)&&T.p(fn),(!dn||1&t)&&gn!==(gn=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"BreadcrumbList",description:"Breadcrumbs list",name:"Breadcrumbs",itemListElement:[{"@type":"ListItem",item:{"@id":"https://lihautan.com",name:"Homepage"},position:1},{"@type":"ListItem",item:{"@id":"https%3A%2F%2Flihautan.com%2Fcontributing-to-svelte-fixing-issue-4392",name:n[0]},position:2}]})}<\/script>`)&&D.p(gn),(!dn||1&t)&&I(Q,n[0]),4&t){let a;for(bn=n[2],a=0;a<bn.length;a+=1){const s=en(n,bn,a);En[a]?En[a].p(s,t):(En[a]=cn(s),En[a].c(),En[a].m(V,X))}for(;a<En.length;a+=1)En[a].d(1);En.length=bn.length}yn&&yn.p&&16&t&&l(yn,wn,n,n[4],t,null,null)},i(n){dn||(q(W.$$.fragment,n),q(yn,n),q(rn.$$.fragment,n),q(hn.$$.fragment,n),dn=!0)},o(n){B(W.$$.fragment,n),B(yn,n),B(rn.$$.fragment,n),B(hn.$$.fragment,n),dn=!1},d(n){r(s),r(t),r(e),r(o),r(p),r(d),r(x),r(O),r(S),r(C),r(j),k(vn,n),r(P),r(A),r($),n&&T.d(),r(L),n&&D.d(),n&&r(H),n&&r(R),n&&r(N),z(W,n),n&&r(J),n&&r(V),k(En,n),yn&&yn.d(n),n&&r(ln),n&&r(un),z(rn),z(hn)}}}function un(n,a,s){let{title:t=""}=a,{description:e=""}=a,{tags:o=[]}=a;const p={"@type":"Person",name:"Tan Li Hau"};let{$$slots:c={},$$scope:l}=a;return n.$set=n=>{"title"in n&&s(0,t=n.title),"description"in n&&s(1,e=n.description),"tags"in n&&s(2,o=n.tags),"$$scope"in n&&s(4,l=n.$$scope)},[t,e,o,p,l,c]}class rn extends Y{constructor(n){super(),V(this,n,un,ln,p,{title:0,description:1,tags:2})}}function kn(a){let s,t,e,o,p,c,l,k,d,m,I,x,_,O,S,C,j,P,A,T,$,D,L,H,R,M,N,W,q,B,F,U,G,z,J,V,Y,Q,K,Z,X,nn,an,sn,tn,en,on,pn,cn,ln,un,rn,kn,hn,dn,fn,gn,mn,vn,bn,En,wn,yn,In,xn,_n,On,Sn,Cn,jn,Pn,An,Tn,$n,Dn,Ln,Hn,Rn,Mn,Nn,Wn,qn,Bn,Fn,Un,Gn,zn,Jn,Vn,Yn,Qn,Kn,Zn,Xn,na,aa,sa,ta,ea,oa,pa,ca,la,ia,ua,ra,ka,ha,da,fa,ga,ma,va,ba,Ea,wa,ya,Ia,xa,_a,Oa,Sa,Ca,ja,Pa,Aa,Ta,$a,Da,La,Ha,Ra,Ma,Na,Wa,qa,Ba,Fa,Ua,Ga,za,Ja,Va,Ya,Qa,Ka,Za,Xa,ns,as,ss,ts,es,os,ps,cs,ls,is,us,rs,ks,hs,ds,fs,gs,ms,vs,bs,Es,ws,ys,Is,xs,_s,Os,Ss,Cs,js,Ps,As,Ts,$s,Ds,Ls,Hs,Rs,Ms,Ns,Ws,qs,Bs,Fs,Us,Gs,zs,Js,Vs,Ys,Qs,Ks,Zs,Xs,nt,at,st,tt,et,ot,pt,ct,lt,it,ut,rt,kt,ht,dt,ft,gt,mt,vt,bt,Et,wt,yt,It,xt,_t,Ot,St,Ct,jt,Pt,At,Tt,$t,Dt,Lt,Ht,Rt,Mt,Nt,Wt,qt,Bt,Ft,Ut,Gt,zt,Jt,Vt,Yt,Qt,Kt,Zt,Xt,ne,ae,se,te,ee,oe,pe,ce,le,ie,ue,re,ke,he,de,fe,ge,me,ve,be,Ee,we,ye,Ie,xe,_e,Oe,Se,Ce,je,Pe,Ae,Te,$e,De,Le,He,Re,Me,Ne,We,qe,Be,Fe,Ue,Ge,ze,Je,Ve,Ye,Qe,Ke,Ze,Xe,no,ao,so,to,eo,oo,po,co,lo,io,uo,ro,ko,ho,fo,go,mo,vo,bo,Eo,wo,yo,Io,xo,_o,Oo,So,Co,jo,Po,Ao,To,$o,Do,Lo,Ho,Ro,Mo,No,Wo,qo,Bo,Fo,Uo,Go,zo,Jo,Vo,Yo,Qo,Ko,Zo,Xo,np,ap,sp,tp,ep,op,pp,cp,lp,ip,up,rp,kp,hp,dp,fp,gp,mp,vp,bp,Ep,wp,yp,Ip,xp,_p,Op,Sp,Cp,jp,Pp,Ap,Tp,$p,Dp,Lp,Hp,Rp,Mp,Np,Wp,qp,Bp,Fp,Up,Gp,zp,Jp,Vp,Yp,Qp,Kp,Zp,Xp,nc,ac,sc,tc,ec,oc,pc,cc,lc,ic,uc,rc,kc,hc,dc,fc,gc,mc,vc,bc,Ec,wc,yc,Ic,xc,_c,Oc,Sc,Cc,jc,Pc,Ac,Tc,$c,Dc,Lc,Hc,Rc,Mc,Nc,Wc,qc,Bc,Fc,Uc,Gc,zc,Jc,Vc,Yc,Qc,Kc,Zc,Xc,nl,al,sl,tl,el,ol,pl,cl,ll,il,ul,rl,kl,hl,dl,fl,gl,ml,vl,bl,El,wl,yl,Il,xl,_l,Ol,Sl,Cl,jl,Pl,Al,Tl,$l,Dl,Ll,Hl,Rl,Ml,Nl,Wl,ql,Bl,Fl,Ul,Gl,zl,Jl,Vl,Yl,Ql,Kl,Zl,Xl,ni,ai,si,ti,ei,oi,pi,ci,li,ii,ui,ri,ki,hi,di,fi,gi,mi,vi,bi,Ei,wi,yi,Ii,xi,_i,Oi,Si,Ci,ji,Pi,Ai,Ti,$i,Di,Li,Hi,Ri,Mi,Ni,Wi,qi,Bi,Fi,Ui,Gi,zi,Ji,Vi,Yi,Qi,Ki,Zi,Xi,nu,au,su,tu,eu,ou,pu,cu,lu,iu,uu,ru,ku,hu,du,fu,gu,mu,vu,bu,Eu,wu,yu,Iu,xu,_u,Ou,Su,Cu,ju,Pu,Au,Tu,$u,Du,Lu,Hu,Ru,Mu,Nu,Wu,qu,Bu,Fu,Uu,Gu,zu,Ju,Vu,Yu,Qu,Ku,Zu,Xu,nr,ar,sr,tr,er,or,pr,cr,lr,ir,ur,rr,kr,hr,dr,fr,gr,mr,vr,br,Er,wr,yr,Ir,xr,_r,Or,Sr,Cr,jr,Pr,Ar,Tr,$r,Dr,Lr,Hr,Rr,Mr,Nr,Wr,qr,Br,Fr,Ur,Gr,zr,Jr,Vr,Yr,Qr,Kr,Zr,Xr,nk,ak,sk,tk,ek,ok,pk,ck,lk,ik,uk,rk,kk,hk,dk,fk,gk,mk,vk,bk,Ek,wk,yk,Ik,xk,_k,Ok,Sk,Ck,jk,Pk,Ak,Tk,$k,Dk,Lk,Hk,Rk,Mk,Nk,Wk,qk,Bk,Fk,Uk,Gk,zk,Jk,Vk,Yk,Qk,Kk,Zk,Xk,nh,ah,sh,th,eh,oh,ph,ch,lh,ih,uh,rh,kh,hh,dh,fh,gh,mh,vh,bh,Eh,wh,yh,Ih,xh,_h,Oh,Sh,Ch,jh,Ph,Ah,Th,$h,Dh,Lh,Hh,Rh,Mh,Nh,Wh,qh,Bh,Fh,Uh,Gh,zh,Jh,Vh,Yh,Qh,Kh,Zh,Xh,nd,ad,sd,td,ed,od,pd,cd,ld,id,ud,rd,kd,hd,dd,fd,gd,md,vd,bd,Ed,wd,yd,Id,xd,_d,Od,Sd,Cd,jd,Pd,Ad,Td;return{c(){s=h("section"),t=h("ul"),e=h("li"),o=h("a"),p=f("Background"),c=h("li"),l=h("a"),k=f("The story begins"),d=h("li"),m=h("a"),I=f("Verifying the bug"),x=h("li"),_=h("a"),O=f("Investigating the bug"),S=h("li"),C=h("a"),j=f("Fixing the bug"),P=h("li"),A=h("a"),T=f("Submitting the fix"),$=g(),D=h("section"),L=h("h2"),H=h("a"),R=f("Background"),M=g(),N=h("p"),W=f("As Svelte gains more attention, I find that more and more people are interested in contributing to Svelte."),q=g(),B=h("p"),F=f("Of course, contributing to Svelte, does not mean to contribute only in code, it could be:"),U=g(),G=h("ul"),z=h("li"),J=f("answering questions about Svelte, on social media, Stack Overflow, or "),V=h("a"),Y=f("Discord"),Q=g(),K=h("li"),Z=f("improving Svelte docs, or write tutorials and articles about Svelte"),X=g(),nn=h("li"),an=f("organising and speaking in meetups about Svelte"),sn=g(),tn=h("p"),en=f("For those who want to contribute in code, most people are unsure where to start. So I wrote "),on=h("a"),pn=f("The Svelte Compiler Handbook"),cn=f(" as an overview of the Svelte source code."),ln=g(),un=h("p"),rn=f("However, today, I want to try a different tone."),kn=g(),hn=h("p"),dn=f("I am going to tell you an anecdote on how I investigated and fixed a bug in Svelte."),fn=g(),gn=h("p"),mn=f("I documented down my train of thoughts as detailed as possible."),vn=g(),bn=h("p"),En=f("I hope this gives anyone who is reading, a glimpse on how to work on the Svelte source code."),wn=g(),yn=h("section"),In=h("h2"),xn=h("a"),_n=f("The story begins"),On=g(),Sn=h("p"),Cn=f("I was combing through "),jn=h("a"),Pn=f("bugs on GitHub"),An=f(", and found this rather interesting bug:"),Tn=g(),$n=h("hr"),Dn=g(),Ln=h("p"),Hn=h("strong"),Rn=f("Select multiple value does not get set with spread props "),Mn=h("a"),Nn=f("#4392"),Wn=g(),qn=h("p"),Bn=f("Adding any type of spread, even an empty object "),Fn=h("code"),Un=f("{...{}}"),Gn=f(", causes the value not to be set:"),zn=g(),Jn=h("pre"),Vn=g(),Yn=h("p"),Qn=f("To reproduce: "),Kn=h("a"),Zn=f("REPL"),Xn=f("."),na=g(),aa=h("hr"),sa=g(),ta=h("section"),ea=h("h2"),oa=h("a"),pa=f("Verifying the bug"),ca=g(),la=h("p"),ia=f("I clicked into the REPL and tried to understand about the bug."),ua=g(),ra=h("p"),ka=f("I found that if the "),ha=h("code"),da=f("<select multiple>"),fa=f(" has spread attribute "),ga=h("code"),ma=f("{...any}"),va=f(", the "),ba=h("code"),Ea=f("value"),wa=f(" attribute will not be reactive. Changes in the value of "),ya=h("code"),Ia=f("value"),xa=f(" will not be reflected to the "),_a=h("code"),Oa=f("<select>"),Sa=f("."),Ca=g(),ja=h("p"),Pa=f("I noticed the REPL link uses the version "),Aa=h("code"),Ta=f("3.18.1"),$a=f(", it's not the latest version of Svelte. At the point of writing, Svelte is at "),Da=h("strong"),La=f("3.22.3"),Ha=f(". I tried removing the "),Ra=h("code"),Ma=f("?version=3.18.1"),Na=f(" from the query params to verify whether the bug has fixed, and realised that the bug is still there. (Great! Something interesting to investigate into.)"),Wa=g(),qa=h("p"),Ba=f("To understand the current status of the issue, I read through the comments. According to "),Fa=h("a"),Ua=f("Conduitry"),Ga=f(", the issue is related to "),za=h("strong"),Ja=f("Radio/checkbox input with bind:group and spread props makes variable undefined"),Va=g(),Ya=h("a"),Qa=f("#3680"),Ka=f(" and can be fixed together. However, the issue "),Za=h("a"),Xa=f("#3680"),ns=f(" was fixed and closed, yet this issue is still open."),as=g(),ss=h("p"),ts=f("Nevertheless, I read through "),es=h("a"),os=f("the PR"),ps=f(" for the closed issue "),cs=h("a"),ls=f("#3680"),is=f(", roughly understand how it was fixed and hopefully it can give me some inspirations on this issue."),us=g(),rs=h("section"),ks=h("h2"),hs=h("a"),ds=f("Investigating the bug"),fs=g(),gs=h("p"),ms=f("Once I verified that the behavior described in the issue is unexpected and reproducible in the latest version of Svelte, I copied the REPL code into my local machine to investigate."),vs=g(),bs=h("p"),Es=f("I have a "),ws=h("code"),ys=f("test-svelte"),Is=f(" folder ready in my local machine, where I created using "),xs=h("a"),_s=f("Svelte Template"),Os=f(". I have "),Ss=h("code"),Cs=f("npm link"),js=f("ed my local Svelte clone to the "),Ps=h("code"),As=f("test-svelte"),Ts=f(" folder, so I can rebuild "),$s=h("code"),Ds=f("test-svelte"),Ls=f(" anytime with the latest changes done to my Svelte clone."),Hs=g(),Rs=h("pre"),Ms=g(),Ns=h("p"),Ws=f("I have "),qs=h("code"),Bs=f("yarn dev"),Fs=f(" running in the Svelte folder, so any changes I make gets compiled immediately."),Us=g(),Gs=h("p"),zs=f("I prefer to "),Js=h("strong"),Vs=f("build"),Ys=g(),Qs=h("code"),Ks=f("test-svelte"),Zs=f(" and serve it with "),Xs=h("a"),nt=f("http-server"),at=f(" rather than start a dev server "),st=h("code"),tt=f("test-svelte"),et=f(" in watch mode. That allows me to"),ot=g(),pt=h("ul"),ct=h("li"),lt=f("Run the "),it=h("code"),ut=f("http-server"),rt=f(" in the background while tweaking the Svelte code or the "),kt=h("code"),ht=f("test-svelte"),dt=f(" app."),ft=g(),gt=h("li"),mt=f("Not having to restart the dev server whenever I've made changes to the Svelte code"),vt=g(),bt=h("li"),Et=f("Able to inspect and modify "),wt=h("code"),yt=f("bundle.js"),It=f(" without worrying that accidentaly save in the "),xt=h("code"),_t=f("test-svelte"),Ot=f(" app will overwrite the "),St=h("code"),Ct=f("bundle.js"),jt=g(),Pt=h("p"),At=f("Looking at the different "),Tt=h("code"),$t=f("bundle.js"),Dt=f(" generated from with "),Lt=h("code"),Ht=f("{...spread}"),Rt=f(" attributes and without spread attributes"),Mt=g(),Nt=h("pre"),Wt=g(),qt=h("p"),Bt=f("I found the following diffs in the bundled output:"),Ft=g(),Ut=h("pre"),Gt=g(),zt=h("p"),Jt=f("Well, I know I havn't cover how spread attribute works in any of my "),Vt=h("a"),Yt=f('"Compile Svelte in your Head"'),Qt=f(" articles, but the general idea is that, Svelte builds an array of attributes, and then apply it to the element / Component."),Kt=g(),Zt=h("p"),Xt=f("For example, if we write the following in Svlete"),ne=g(),ae=h("pre"),se=g(),te=h("p"),ee=f("It gets compiled to something like this:"),oe=g(),pe=h("pre"),ce=g(),le=h("p"),ie=f("So, this roughly explains the additional code added into the "),ue=h("code"),re=f("bundle.js"),ke=f(" for handling spread attributes."),he=g(),de=h("p"),fe=f("However the code that is removed, is something I am not familiar with."),ge=g(),me=h("pre"),ve=g(),be=h("p"),Ee=f("It seems like we are trying to set "),we=h("code"),ye=f("option.selected"),Ie=f(" after we mount the "),xe=h("code"),_e=f("<select>"),Oe=f(" element. Not sure how important is that to us."),Se=g(),Ce=h("p"),je=f("To verify that the bug is because that the above code snippet is missing when having a spread attribute, I tried adding the code snippet into the "),Pe=h("code"),Ae=f("bundle.js"),Te=f(" manually, and refresh the page."),$e=g(),De=h("pre"),Le=g(),He=h("p"),Re=f("Instead of "),Me=h("code"),Ne=f("~select_value_value.indexOf(...)"),We=f(", I changed it to "),qe=h("code"),Be=f("~ctx[0].indexOf(...)"),Fe=f(", as "),Ue=h("code"),Ge=f("select_value_value"),ze=f(" wasn't created when using spread attribute."),Je=g(),Ve=h("p"),Ye=f("...and it works!"),Qe=g(),Ke=h("p"),Ze=h("picture"),Xe=h("source"),no=h("source"),ao=h("img"),so=g(),to=h("p"),eo=f("So, now we know that the bug is caused by missing setting "),oo=h("code"),po=f("option.selected"),co=f(" on mount, now its time to figure out what the code snippet is not generated when there's a spread attribute."),lo=g(),io=h("p"),uo=f("To quickly find out why something is not generated, I tried to look for where it is generated, figuring out probably whether certain condition was not set correctly to cause the Svelte compiler to omit out the code snippet."),ro=g(),ko=h("p"),ho=f("To find the right place to start looking is an art. Usually I try to global search a small snippet of code that is "),fo=h("strong"),go=f("most likely static"),mo=f(", something that has no variable name, for example:"),vo=g(),bo=h("ul"),Eo=h("li"),wo=h("code"),yo=f(".indexOf(option.__value)"),Io=g(),xo=h("li"),_o=h("code"),Oo=f(".options.length;"),So=g(),Co=h("li"),jo=h("code"),Po=f(".selected = ~"),Ao=g(),To=h("p"),$o=f("The only search result I got when searching for "),Do=h("code"),Lo=f(".indexOf(option.__value)"),Ho=f(" is in "),Ro=h("a"),Mo=f("src/runtime/internal/dom.ts"),No=g(),Wo=h("pre"),qo=g(),Bo=h("p"),Fo=f("Anything within "),Uo=h("code"),Go=f("src/runtime/"),zo=f(" are helper functions that are referenced from the output code, to reduce the output code size. Hmm... probably we should reuse the "),Jo=h("code"),Vo=f("select_options"),Yo=f(" helper function:"),Qo=g(),Ko=h("pre"),Zo=g(),Xo=h("p"),np=f("Anyway, "),ap=h("code"),sp=f("src/runtime/internal/dom.ts"),tp=f(" is not where I am looking for, so I tried searching "),ep=h("code"),op=f(".options.length"),pp=g(),cp=h("pre"),lp=g(),ip=h("p"),up=f("Yes, this is most likely where it is."),rp=g(),kp=h("p"),hp=f("Firstly, let me update the "),dp=h("code"),fp=f("updater"),gp=f(" to use the "),mp=h("code"),vp=f("src/runtime/"),bp=g(),Ep=h("code"),wp=f("select_options"),yp=f(" helper instead:"),Ip=g(),xp=h("pre"),_p=g(),Op=h("p"),Sp=f("The "),Cp=h("code"),jp=f("b`...`"),Pp=f(", is called a "),Ap=h("a"),Tp=f("tagged template"),$p=f(", where the "),Dp=h("code"),Lp=f("b"),Hp=f(" is a function that takes in the template literal and return something. In this case, the "),Rp=h("code"),Mp=f("b"),Np=f(" function returns an "),Wp=h("a"),qp=f("Abstract Syntaxt Tree (AST)"),Bp=f("."),Fp=g(),Up=h("p"),Gp=f("The "),zp=h("code"),Jp=f("b"),Vp=f(" function comes from "),Yp=h("a"),Qp=f("code-red"),Kp=f(", a utility to generate a JavaScript AST node. Beside "),Zp=h("code"),Xp=f("b"),nc=f(", "),ac=h("code"),sc=f("code-red"),tc=f(" provides a few helper functions:"),ec=g(),oc=h("ul"),pc=h("li"),cc=h("code"),lc=f("b"),ic=f(" returns a block node"),uc=g(),rc=h("li"),kc=h("code"),hc=f("x"),dc=f(" returns an expression node"),fc=g(),gc=h("li"),mc=h("code"),vc=f("p"),bc=f(" returns a object property node"),Ec=g(),wc=h("p"),yc=f("These helper functions are useful in generating code in Svelte compiler, particularly because the placeholder itself can takes in another AST node:"),Ic=g(),xc=h("pre"),_c=g(),Oc=h("p"),Sc=h("code"),Cc=f("@"),jc=f(" in front of "),Pc=h("code"),Ac=f("@select_option"),Tc=f(" is a convention in Svelte, where it will "),$c=h("a"),Dc=f("get replaced"),Lc=f(" to refer to helpr functions in "),Hc=h("code"),Rc=f("src/runtime/"),Mc=f(" before writing the generated AST out:"),Nc=g(),Wc=h("pre"),qc=g(),Bc=h("p"),Fc=f("Coming back to figure out why this piece of code is not executed when there's a spread attribute,"),Uc=g(),Gc=h("pre"),zc=g(),Jc=h("p"),Vc=f("I tried adding "),Yc=h("code"),Qc=f("console.log"),Kc=f(" before the if statement, to figure out the value for "),Zc=h("code"),Xc=f("is_legacy_input_type"),nl=f(" and "),al=h("code"),sl=f("is_select_value_attribute"),tl=f(":"),el=g(),ol=h("pre"),pl=g(),cl=h("p"),ll=f("To my surpise, there was no log. "),il=h("code"),ul=f("AttributeWrapper#render"),rl=f(" wasn't executed."),kl=g(),hl=h("p"),dl=f("I tried removing the spread attribute, and verified from the log that the "),fl=h("code"),gl=f("AttributeWrapper#render"),ml=f(" method was indeed executed when there's no spread attribute."),vl=g(),bl=h("p"),El=f("To figure out the caller of the "),wl=h("code"),yl=f("AttributeWrapper#render"),Il=f(" method, I added "),xl=h("code"),_l=f("console.trace"),Ol=f(" at the top of the method:"),Sl=g(),Cl=h("pre"),jl=g(),Pl=h("pre"),Al=g(),Tl=h("p"),$l=f("This brought me to "),Dl=h("a"),Ll=f("src/compiler/compile/render_dom/wrappers/Element/index.ts"),Hl=g(),Rl=h("pre"),Ml=g(),Nl=h("p"),Wl=f("If there's a spread attribute, it will call the "),ql=h("code"),Bl=f("this.node.attributes.some(attr => attr.is_spread)"),Fl=f(" method instead of calling "),Ul=h("code"),Gl=f("attribute.render(block)"),zl=f(", so that's probably why "),Jl=h("code"),Vl=f("AttributeWrapper#render"),Yl=f(" wasn't called."),Ql=g(),Kl=h("p"),Zl=f("I looked into the method "),Xl=h("code"),ni=f("add_spread_attributes"),ai=f(", found out it contain only the code about handling spread attributes as I explained earlier. It didn't have any code related to "),si=h("code"),ti=f("select_options"),ei=f(", so I figured that, maybe "),oi=h("code"),pi=f("<select multiple>"),ci=f(" with spread attribute is an edge case that wasn't handled currently at all."),li=g(),ii=h("p"),ui=f("So, I tried to add a special check for this case at the bottom of the "),ri=h("code"),ki=f("add_spread_attributes"),hi=f(" method:"),di=g(),fi=h("pre"),gi=g(),mi=h("p"),vi=f("As mentioned in the "),bi=h("a"),Ei=f("The Svelte Compiler Handbook"),wi=f(", a "),yi=h("code"),Ii=f("block"),xi=f(" is where it keeps the code to generate the "),_i=h("a"),Oi=h("code"),Si=f("create_fragment"),Ci=f(" function. The return object of the "),ji=h("code"),Pi=f("create_fragment"),Ai=f(" function contains various method as mentioned in "),Ti=h("a"),$i=f("Compile Svelte in your Head"),Di=f(", such as "),Li=h("code"),Hi=f("c()"),Ri=f(", "),Mi=h("code"),Ni=f("m()"),Wi=f(" and "),qi=h("code"),Bi=f("d()"),Fi=f(". To add code into different method, you can push them into the array in "),Ui=h("code"),Gi=f("block.chunks"),zi=f(", for example:"),Ji=g(),Vi=h("pre"),Yi=g(),Qi=h("p"),Ki=f("I tried adding "),Zi=h("code"),Xi=f("@select_options(...)"),nu=f(" into the "),au=h("code"),su=f("m()"),tu=f(" method and yup, the "),eu=h("code"),ou=f("<select>"),pu=f(" element is pre-selected correctly!"),cu=g(),lu=h("section"),iu=h("h2"),uu=h("a"),ru=f("Fixing the bug"),ku=g(),hu=h("p"),du=f("To ensure the bug is fixed, I need to come up with a test."),fu=g(),gu=h("p"),mu=f("Usually I come up with test cases that try to entail various scenario I can imagine."),vu=g(),bu=h("p"),Eu=f("In this example, we've manually tested the case where the "),wu=h("code"),yu=f("<select multiple {value} {...{}}>"),Iu=f(", the value is set correctly during initialisation. but have we check the case where:"),xu=g(),_u=h("ul"),Ou=h("li"),Su=f("we update the value of "),Cu=h("code"),ju=f("value"),Pu=f(", will the "),Au=h("code"),Tu=f("<select>"),$u=f(" get updated accordingly?"),Du=g(),Lu=h("li"),Hu=f("if the value is overriden by the spreaded attribute, eg "),Ru=h("code"),Mu=f("<select mutliple {value} { ...{value: []} }>"),Nu=f("?"),Wu=g(),qu=h("p"),Bu=f("Ideally, the test cases come up should be failed before the fix, and passed after the fix."),Fu=g(),Uu=h("p"),Gu=f("So here's the test case I came up:"),zu=g(),Ju=h("pre"),Vu=g(),Yu=h("p"),Qu=f("I can check and uncheck the checkbox to change the value of "),Ku=h("code"),Zu=f("value"),Xu=f(" to verify the the "),nr=h("code"),ar=f("value"),sr=f(" is reactive, and "),tr=h("code"),er=f("<select>"),or=f(" will get updated accordingly."),pr=g(),cr=h("p"),lr=f("Besides that, I exported "),ir=h("code"),ur=f("spread"),rr=f(", so that I can change the object to something object to contain "),kr=h("code"),hr=f("value"),dr=f(", eg: "),fr=h("code"),gr=f("{ value: [] }"),mr=f(", and see how "),vr=h("code"),br=f("<select>"),Er=f(" will update accordingly. Make sure that our fix not just work with "),wr=h("code"),yr=f("value"),Ir=f(" attribute, and also when the "),xr=h("code"),_r=f("value"),Or=f(" is spreaded into "),Sr=h("code"),Cr=f("<select>"),jr=f("."),Pr=g(),Ar=h("p"),Tr=f("You may think that we are familiar with our fix, we know what it will fix, what it will not fix, do we need think up and write all the edge cases?"),$r=g(),Dr=h("p"),Lr=f("Well, I think you should. Future you will thank the present you when he encounter a fail test, that just mean his change may have an unintentional regressional change. If you don't have the test case, the future you will never know what edge case he didn't accounted for."),Hr=g(),Rr=h("p"),Mr=f("Runtime test cases are added into "),Nr=h("code"),Wr=f("test/runtime/samples/"),qr=f(". Each folder represent 1 test case. Inside the folder, the component to be tested is named "),Br=h("code"),Fr=f("App.svelte"),Ur=f(", and the test case is written "),Gr=h("code"),zr=f("_config.js"),Jr=f("."),Vr=g(),Yr=h("p"),Qr=h("code"),Kr=f("_config.js"),Zr=f(" default exports a object:"),Xr=g(),nk=h("pre"),ak=g(),sk=h("p"),tk=f("An example of test case of unchecking the checkbox, and verify "),ek=h("code"),ok=f("<select>"),pk=f(" value get updated"),ck=g(),lk=h("pre"),ik=g(),uk=h("p"),rk=f("To run only this test, so that we can focus on ensuring the test case pass, we can set "),kk=h("code"),hk=f("solo: true"),dk=f(":"),fk=g(),gk=h("pre"),mk=g(),vk=h("p"),bk=h("strong"),Ek=f("Quick tip:"),wk=f(" running "),yk=h("code"),Ik=f("npm run test"),xk=f(" will build Svelte code first before executing the test. If you are like me, running "),_k=h("code"),Ok=f("npm run dev"),Sk=f(" on the background, Svelte code is build on every code change. So, "),Ck=h("code"),jk=f("npm run quicktest"),Pk=f(" would allow you to skip the "),Ak=h("code"),Tk=f("pretest"),$k=f(" build, and run the test suite immediately."),Dk=g(),Lk=h("p"),Hk=f("With the test, I realised that I didn't handle the case when the "),Rk=h("code"),Mk=f("value"),Nk=f(" is updated."),Wk=g(),qk=h("p"),Bk=f("So I guess what I needed to do is to add the same code in the "),Fk=h("code"),Uk=f("p()"),Gk=f(" (update) method too!"),zk=g(),Jk=h("pre"),Vk=g(),Yk=h("p"),Qk=f("Well, of course in this way, the "),Kk=h("code"),Zk=f("select_options"),Xk=f(" get executed unconditionally whenever any variable is updated."),nh=g(),ah=h("p"),sh=f("I need to make sure that the "),th=h("code"),eh=f("select_options(...)"),oh=f(" inside the "),ph=h("code"),ch=f("p()"),lh=f(" method get executed only when the value of "),ih=h("code"),uh=f("value"),rh=f(" changes, and also probably when "),kh=h("code"),hh=f("spread"),dh=f(" changes too, because it could potentially override the value of "),fh=h("code"),gh=f("value"),mh=f("."),vh=g(),bh=h("p"),Eh=f("If you've read "),wh=h("a"),yh=f("Compile Svelte in your Head - Bitmask in Svelte"),Ih=f(", you know that Svelte uses bitmask to check any variable changes."),xh=g(),_h=h("p"),Oh=f("How do I know what is the bitmask to use in this case, well I dont have to."),Sh=g(),Ch=h("p"),jh=f("I can use "),Ph=h("a"),Ah=h("code"),Th=f("renderer.dirty(dependencies)"),$h=f(" to help me with that:"),Dh=g(),Lh=h("pre"),Hh=g(),Rh=h("p"),Mh=f("Next, I need to figure out what are the dependencies to be included. In this particular case, the dependencies of all attributes have to be taken consideration, because it is hard to tell which one would be eventually applied due to the spread attribute."),Nh=g(),Wh=h("pre"),qh=g(),Bh=h("p"),Fh=f("After a few tweaks, finally I passed all my test cases, and its time to create a pull request!"),Uh=g(),Gh=h("section"),zh=h("h2"),Jh=h("a"),Vh=f("Submitting the fix"),Yh=g(),Qh=h("p"),Kh=f("Before pushing the fix to remote, it is important to make sure that all the lints and typescript definitions are correct. You can run "),Zh=h("code"),Xh=f("npm run lint --fixed"),nd=f(" for linting, and "),ad=h("code"),sd=f("npm run tsd"),td=f(" to generate typescript definition."),ed=g();od=h("p"),pd=f("If you are unsure on how to create a pull request, you can check out "),cd=h("a"),ld=f("How to make your first pull request on GitHub"),id=f("."),ud=g(),rd=h("p"),kd=f("I pushed my branch and created a "),hd=h("a"),dd=f("Pull Request to Svelte"),fd=f(", and now I am waiting for feedback and for it to get merged."),gd=g(),md=h("p"),vd=f("Svelte is not maintained by full-time maintainers, everyone has their full-time job, so please be patient and be nice."),bd=g(),Ed=h("hr"),wd=g(),yd=h("p"),Id=f("If you wish to learn more about Svelte, "),xd=h("a"),_d=f("follow me on Twitter"),Od=f("."),Sd=g(),Cd=h("p"),jd=f("If you have anything unclear about this article, find me on "),Pd=h("a"),Ad=f("Twitter"),Td=f(" too!"),this.h()},l(n){s=E(n,"SECTION",{});var a=b(s);t=E(a,"UL",{class:!0,id:!0,role:!0,"aria-label":!0});var i=b(t);e=E(i,"LI",{});var u=b(e);o=E(u,"A",{href:!0});var h=b(o);p=w(h,"Background"),h.forEach(r),u.forEach(r),c=E(i,"LI",{});var f=b(c);l=E(f,"A",{href:!0});var g=b(l);k=w(g,"The story begins"),g.forEach(r),f.forEach(r),d=E(i,"LI",{});var v=b(d);m=E(v,"A",{href:!0});var $d=b(m);I=w($d,"Verifying the bug"),$d.forEach(r),v.forEach(r),x=E(i,"LI",{});var Dd=b(x);_=E(Dd,"A",{href:!0});var Ld=b(_);O=w(Ld,"Investigating the bug"),Ld.forEach(r),Dd.forEach(r),S=E(i,"LI",{});var Hd=b(S);C=E(Hd,"A",{href:!0});var Rd=b(C);j=w(Rd,"Fixing the bug"),Rd.forEach(r),Hd.forEach(r),P=E(i,"LI",{});var Md=b(P);A=E(Md,"A",{href:!0});var Nd=b(A);T=w(Nd,"Submitting the fix"),Nd.forEach(r),Md.forEach(r),i.forEach(r),a.forEach(r),$=y(n),D=E(n,"SECTION",{});var Wd=b(D);L=E(Wd,"H2",{});var qd=b(L);H=E(qd,"A",{href:!0,id:!0});var Bd=b(H);R=w(Bd,"Background"),Bd.forEach(r),qd.forEach(r),M=y(Wd),N=E(Wd,"P",{});var Fd=b(N);W=w(Fd,"As Svelte gains more attention, I find that more and more people are interested in contributing to Svelte."),Fd.forEach(r),q=y(Wd),B=E(Wd,"P",{});var Ud=b(B);F=w(Ud,"Of course, contributing to Svelte, does not mean to contribute only in code, it could be:"),Ud.forEach(r),U=y(Wd),G=E(Wd,"UL",{});var Gd=b(G);z=E(Gd,"LI",{});var zd=b(z);J=w(zd,"answering questions about Svelte, on social media, Stack Overflow, or "),V=E(zd,"A",{href:!0,rel:!0});var Jd=b(V);Y=w(Jd,"Discord"),Jd.forEach(r),zd.forEach(r),Q=y(Gd),K=E(Gd,"LI",{});var Vd=b(K);Z=w(Vd,"improving Svelte docs, or write tutorials and articles about Svelte"),Vd.forEach(r),X=y(Gd),nn=E(Gd,"LI",{});var Yd=b(nn);an=w(Yd,"organising and speaking in meetups about Svelte"),Yd.forEach(r),Gd.forEach(r),sn=y(Wd),tn=E(Wd,"P",{});var Qd=b(tn);en=w(Qd,"For those who want to contribute in code, most people are unsure where to start. So I wrote "),on=E(Qd,"A",{href:!0});var Kd=b(on);pn=w(Kd,"The Svelte Compiler Handbook"),Kd.forEach(r),cn=w(Qd," as an overview of the Svelte source code."),Qd.forEach(r),ln=y(Wd),un=E(Wd,"P",{});var Zd=b(un);rn=w(Zd,"However, today, I want to try a different tone."),Zd.forEach(r),kn=y(Wd),hn=E(Wd,"P",{});var Xd=b(hn);dn=w(Xd,"I am going to tell you an anecdote on how I investigated and fixed a bug in Svelte."),Xd.forEach(r),fn=y(Wd),gn=E(Wd,"P",{});var nf=b(gn);mn=w(nf,"I documented down my train of thoughts as detailed as possible."),nf.forEach(r),vn=y(Wd),bn=E(Wd,"P",{});var af=b(bn);En=w(af,"I hope this gives anyone who is reading, a glimpse on how to work on the Svelte source code."),af.forEach(r),Wd.forEach(r),wn=y(n),yn=E(n,"SECTION",{});var sf=b(yn);In=E(sf,"H2",{});var tf=b(In);xn=E(tf,"A",{href:!0,id:!0});var ef=b(xn);_n=w(ef,"The story begins"),ef.forEach(r),tf.forEach(r),On=y(sf),Sn=E(sf,"P",{});var of=b(Sn);Cn=w(of,"I was combing through "),jn=E(of,"A",{href:!0,rel:!0});var pf=b(jn);Pn=w(pf,"bugs on GitHub"),pf.forEach(r),An=w(of,", and found this rather interesting bug:"),of.forEach(r),Tn=y(sf),$n=E(sf,"HR",{}),Dn=y(sf),Ln=E(sf,"P",{});var cf=b(Ln);Hn=E(cf,"STRONG",{});var lf=b(Hn);Rn=w(lf,"Select multiple value does not get set with spread props "),Mn=E(lf,"A",{href:!0,rel:!0});var uf=b(Mn);Nn=w(uf,"#4392"),uf.forEach(r),lf.forEach(r),cf.forEach(r),Wn=y(sf),qn=E(sf,"P",{});var rf=b(qn);Bn=w(rf,"Adding any type of spread, even an empty object "),Fn=E(rf,"CODE",{});var kf=b(Fn);Un=w(kf,"{...{}}"),kf.forEach(r),Gn=w(rf,", causes the value not to be set:"),rf.forEach(r),zn=y(sf),Jn=E(sf,"PRE",{class:!0}),b(Jn).forEach(r),Vn=y(sf),Yn=E(sf,"P",{});var hf=b(Yn);Qn=w(hf,"To reproduce: "),Kn=E(hf,"A",{href:!0,rel:!0});var df=b(Kn);Zn=w(df,"REPL"),df.forEach(r),Xn=w(hf,"."),hf.forEach(r),na=y(sf),aa=E(sf,"HR",{}),sf.forEach(r),sa=y(n),ta=E(n,"SECTION",{});var ff=b(ta);ea=E(ff,"H2",{});var gf=b(ea);oa=E(gf,"A",{href:!0,id:!0});var mf=b(oa);pa=w(mf,"Verifying the bug"),mf.forEach(r),gf.forEach(r),ca=y(ff),la=E(ff,"P",{});var vf=b(la);ia=w(vf,"I clicked into the REPL and tried to understand about the bug."),vf.forEach(r),ua=y(ff),ra=E(ff,"P",{});var bf=b(ra);ka=w(bf,"I found that if the "),ha=E(bf,"CODE",{});var Ef=b(ha);da=w(Ef,"<select multiple>"),Ef.forEach(r),fa=w(bf," has spread attribute "),ga=E(bf,"CODE",{});var wf=b(ga);ma=w(wf,"{...any}"),wf.forEach(r),va=w(bf,", the "),ba=E(bf,"CODE",{});var yf=b(ba);Ea=w(yf,"value"),yf.forEach(r),wa=w(bf," attribute will not be reactive. Changes in the value of "),ya=E(bf,"CODE",{});var If=b(ya);Ia=w(If,"value"),If.forEach(r),xa=w(bf," will not be reflected to the "),_a=E(bf,"CODE",{});var xf=b(_a);Oa=w(xf,"<select>"),xf.forEach(r),Sa=w(bf,"."),bf.forEach(r),Ca=y(ff),ja=E(ff,"P",{});var _f=b(ja);Pa=w(_f,"I noticed the REPL link uses the version "),Aa=E(_f,"CODE",{});var Of=b(Aa);Ta=w(Of,"3.18.1"),Of.forEach(r),$a=w(_f,", it's not the latest version of Svelte. At the point of writing, Svelte is at "),Da=E(_f,"STRONG",{});var Sf=b(Da);La=w(Sf,"3.22.3"),Sf.forEach(r),Ha=w(_f,". I tried removing the "),Ra=E(_f,"CODE",{});var Cf=b(Ra);Ma=w(Cf,"?version=3.18.1"),Cf.forEach(r),Na=w(_f," from the query params to verify whether the bug has fixed, and realised that the bug is still there. (Great! Something interesting to investigate into.)"),_f.forEach(r),Wa=y(ff),qa=E(ff,"P",{});var jf=b(qa);Ba=w(jf,"To understand the current status of the issue, I read through the comments. According to "),Fa=E(jf,"A",{href:!0,rel:!0});var Pf=b(Fa);Ua=w(Pf,"Conduitry"),Pf.forEach(r),Ga=w(jf,", the issue is related to "),za=E(jf,"STRONG",{});var Af=b(za);Ja=w(Af,"Radio/checkbox input with bind:group and spread props makes variable undefined"),Af.forEach(r),Va=y(jf),Ya=E(jf,"A",{href:!0,rel:!0});var Tf=b(Ya);Qa=w(Tf,"#3680"),Tf.forEach(r),Ka=w(jf," and can be fixed together. However, the issue "),Za=E(jf,"A",{href:!0,rel:!0});var $f=b(Za);Xa=w($f,"#3680"),$f.forEach(r),ns=w(jf," was fixed and closed, yet this issue is still open."),jf.forEach(r),as=y(ff),ss=E(ff,"P",{});var Df=b(ss);ts=w(Df,"Nevertheless, I read through "),es=E(Df,"A",{href:!0,rel:!0});var Lf=b(es);os=w(Lf,"the PR"),Lf.forEach(r),ps=w(Df," for the closed issue "),cs=E(Df,"A",{href:!0,rel:!0});var Hf=b(cs);ls=w(Hf,"#3680"),Hf.forEach(r),is=w(Df,", roughly understand how it was fixed and hopefully it can give me some inspirations on this issue."),Df.forEach(r),ff.forEach(r),us=y(n),rs=E(n,"SECTION",{});var Rf=b(rs);ks=E(Rf,"H2",{});var Mf=b(ks);hs=E(Mf,"A",{href:!0,id:!0});var Nf=b(hs);ds=w(Nf,"Investigating the bug"),Nf.forEach(r),Mf.forEach(r),fs=y(Rf),gs=E(Rf,"P",{});var Wf=b(gs);ms=w(Wf,"Once I verified that the behavior described in the issue is unexpected and reproducible in the latest version of Svelte, I copied the REPL code into my local machine to investigate."),Wf.forEach(r),vs=y(Rf),bs=E(Rf,"P",{});var qf=b(bs);Es=w(qf,"I have a "),ws=E(qf,"CODE",{});var Bf=b(ws);ys=w(Bf,"test-svelte"),Bf.forEach(r),Is=w(qf," folder ready in my local machine, where I created using "),xs=E(qf,"A",{href:!0,rel:!0});var Ff=b(xs);_s=w(Ff,"Svelte Template"),Ff.forEach(r),Os=w(qf,". I have "),Ss=E(qf,"CODE",{});var Uf=b(Ss);Cs=w(Uf,"npm link"),Uf.forEach(r),js=w(qf,"ed my local Svelte clone to the "),Ps=E(qf,"CODE",{});var Gf=b(Ps);As=w(Gf,"test-svelte"),Gf.forEach(r),Ts=w(qf," folder, so I can rebuild "),$s=E(qf,"CODE",{});var zf=b($s);Ds=w(zf,"test-svelte"),zf.forEach(r),Ls=w(qf," anytime with the latest changes done to my Svelte clone."),qf.forEach(r),Hs=y(Rf),Rs=E(Rf,"PRE",{class:!0}),b(Rs).forEach(r),Ms=y(Rf),Ns=E(Rf,"P",{});var Jf=b(Ns);Ws=w(Jf,"I have "),qs=E(Jf,"CODE",{});var Vf=b(qs);Bs=w(Vf,"yarn dev"),Vf.forEach(r),Fs=w(Jf," running in the Svelte folder, so any changes I make gets compiled immediately."),Jf.forEach(r),Us=y(Rf),Gs=E(Rf,"P",{});var Yf=b(Gs);zs=w(Yf,"I prefer to "),Js=E(Yf,"STRONG",{});var Qf=b(Js);Vs=w(Qf,"build"),Qf.forEach(r),Ys=y(Yf),Qs=E(Yf,"CODE",{});var Kf=b(Qs);Ks=w(Kf,"test-svelte"),Kf.forEach(r),Zs=w(Yf," and serve it with "),Xs=E(Yf,"A",{href:!0,rel:!0});var Zf=b(Xs);nt=w(Zf,"http-server"),Zf.forEach(r),at=w(Yf," rather than start a dev server "),st=E(Yf,"CODE",{});var Xf=b(st);tt=w(Xf,"test-svelte"),Xf.forEach(r),et=w(Yf," in watch mode. That allows me to"),Yf.forEach(r),ot=y(Rf),pt=E(Rf,"UL",{});var ng=b(pt);ct=E(ng,"LI",{});var ag=b(ct);lt=w(ag,"Run the "),it=E(ag,"CODE",{});var sg=b(it);ut=w(sg,"http-server"),sg.forEach(r),rt=w(ag," in the background while tweaking the Svelte code or the "),kt=E(ag,"CODE",{});var tg=b(kt);ht=w(tg,"test-svelte"),tg.forEach(r),dt=w(ag," app."),ag.forEach(r),ft=y(ng),gt=E(ng,"LI",{});var eg=b(gt);mt=w(eg,"Not having to restart the dev server whenever I've made changes to the Svelte code"),eg.forEach(r),vt=y(ng),bt=E(ng,"LI",{});var og=b(bt);Et=w(og,"Able to inspect and modify "),wt=E(og,"CODE",{});var pg=b(wt);yt=w(pg,"bundle.js"),pg.forEach(r),It=w(og," without worrying that accidentaly save in the "),xt=E(og,"CODE",{});var cg=b(xt);_t=w(cg,"test-svelte"),cg.forEach(r),Ot=w(og," app will overwrite the "),St=E(og,"CODE",{});var lg=b(St);Ct=w(lg,"bundle.js"),lg.forEach(r),og.forEach(r),ng.forEach(r),jt=y(Rf),Pt=E(Rf,"P",{});var ig=b(Pt);At=w(ig,"Looking at the different "),Tt=E(ig,"CODE",{});var ug=b(Tt);$t=w(ug,"bundle.js"),ug.forEach(r),Dt=w(ig," generated from with "),Lt=E(ig,"CODE",{});var rg=b(Lt);Ht=w(rg,"{...spread}"),rg.forEach(r),Rt=w(ig," attributes and without spread attributes"),ig.forEach(r),Mt=y(Rf),Nt=E(Rf,"PRE",{class:!0}),b(Nt).forEach(r),Wt=y(Rf),qt=E(Rf,"P",{});var kg=b(qt);Bt=w(kg,"I found the following diffs in the bundled output:"),kg.forEach(r),Ft=y(Rf),Ut=E(Rf,"PRE",{class:!0}),b(Ut).forEach(r),Gt=y(Rf),zt=E(Rf,"P",{});var hg=b(zt);Jt=w(hg,"Well, I know I havn't cover how spread attribute works in any of my "),Vt=E(hg,"A",{href:!0});var dg=b(Vt);Yt=w(dg,'"Compile Svelte in your Head"'),dg.forEach(r),Qt=w(hg," articles, but the general idea is that, Svelte builds an array of attributes, and then apply it to the element / Component."),hg.forEach(r),Kt=y(Rf),Zt=E(Rf,"P",{});var fg=b(Zt);Xt=w(fg,"For example, if we write the following in Svlete"),fg.forEach(r),ne=y(Rf),ae=E(Rf,"PRE",{class:!0}),b(ae).forEach(r),se=y(Rf),te=E(Rf,"P",{});var gg=b(te);ee=w(gg,"It gets compiled to something like this:"),gg.forEach(r),oe=y(Rf),pe=E(Rf,"PRE",{class:!0}),b(pe).forEach(r),ce=y(Rf),le=E(Rf,"P",{});var mg=b(le);ie=w(mg,"So, this roughly explains the additional code added into the "),ue=E(mg,"CODE",{});var vg=b(ue);re=w(vg,"bundle.js"),vg.forEach(r),ke=w(mg," for handling spread attributes."),mg.forEach(r),he=y(Rf),de=E(Rf,"P",{});var bg=b(de);fe=w(bg,"However the code that is removed, is something I am not familiar with."),bg.forEach(r),ge=y(Rf),me=E(Rf,"PRE",{class:!0}),b(me).forEach(r),ve=y(Rf),be=E(Rf,"P",{});var Eg=b(be);Ee=w(Eg,"It seems like we are trying to set "),we=E(Eg,"CODE",{});var wg=b(we);ye=w(wg,"option.selected"),wg.forEach(r),Ie=w(Eg," after we mount the "),xe=E(Eg,"CODE",{});var yg=b(xe);_e=w(yg,"<select>"),yg.forEach(r),Oe=w(Eg," element. Not sure how important is that to us."),Eg.forEach(r),Se=y(Rf),Ce=E(Rf,"P",{});var Ig=b(Ce);je=w(Ig,"To verify that the bug is because that the above code snippet is missing when having a spread attribute, I tried adding the code snippet into the "),Pe=E(Ig,"CODE",{});var xg=b(Pe);Ae=w(xg,"bundle.js"),xg.forEach(r),Te=w(Ig," manually, and refresh the page."),Ig.forEach(r),$e=y(Rf),De=E(Rf,"PRE",{class:!0}),b(De).forEach(r),Le=y(Rf),He=E(Rf,"P",{});var _g=b(He);Re=w(_g,"Instead of "),Me=E(_g,"CODE",{});var Og=b(Me);Ne=w(Og,"~select_value_value.indexOf(...)"),Og.forEach(r),We=w(_g,", I changed it to "),qe=E(_g,"CODE",{});var Sg=b(qe);Be=w(Sg,"~ctx[0].indexOf(...)"),Sg.forEach(r),Fe=w(_g,", as "),Ue=E(_g,"CODE",{});var Cg=b(Ue);Ge=w(Cg,"select_value_value"),Cg.forEach(r),ze=w(_g," wasn't created when using spread attribute."),_g.forEach(r),Je=y(Rf),Ve=E(Rf,"P",{});var jg=b(Ve);Ye=w(jg,"...and it works!"),jg.forEach(r),Qe=y(Rf),Ke=E(Rf,"P",{});var Pg=b(Ke);Ze=E(Pg,"PICTURE",{});var Ag=b(Ze);Xe=E(Ag,"SOURCE",{type:!0,srcset:!0}),no=E(Ag,"SOURCE",{type:!0,srcset:!0}),ao=E(Ag,"IMG",{title:!0,alt:!0,"data-src":!0,loading:!0}),Ag.forEach(r),Pg.forEach(r),so=y(Rf),to=E(Rf,"P",{});var Tg=b(to);eo=w(Tg,"So, now we know that the bug is caused by missing setting "),oo=E(Tg,"CODE",{});var $g=b(oo);po=w($g,"option.selected"),$g.forEach(r),co=w(Tg," on mount, now its time to figure out what the code snippet is not generated when there's a spread attribute."),Tg.forEach(r),lo=y(Rf),io=E(Rf,"P",{});var Dg=b(io);uo=w(Dg,"To quickly find out why something is not generated, I tried to look for where it is generated, figuring out probably whether certain condition was not set correctly to cause the Svelte compiler to omit out the code snippet."),Dg.forEach(r),ro=y(Rf),ko=E(Rf,"P",{});var Lg=b(ko);ho=w(Lg,"To find the right place to start looking is an art. Usually I try to global search a small snippet of code that is "),fo=E(Lg,"STRONG",{});var Hg=b(fo);go=w(Hg,"most likely static"),Hg.forEach(r),mo=w(Lg,", something that has no variable name, for example:"),Lg.forEach(r),vo=y(Rf),bo=E(Rf,"UL",{});var Rg=b(bo);Eo=E(Rg,"LI",{});var Mg=b(Eo);wo=E(Mg,"CODE",{});var Ng=b(wo);yo=w(Ng,".indexOf(option.__value)"),Ng.forEach(r),Mg.forEach(r),Io=y(Rg),xo=E(Rg,"LI",{});var Wg=b(xo);_o=E(Wg,"CODE",{});var qg=b(_o);Oo=w(qg,".options.length;"),qg.forEach(r),Wg.forEach(r),So=y(Rg),Co=E(Rg,"LI",{});var Bg=b(Co);jo=E(Bg,"CODE",{});var Fg=b(jo);Po=w(Fg,".selected = ~"),Fg.forEach(r),Bg.forEach(r),Rg.forEach(r),Ao=y(Rf),To=E(Rf,"P",{});var Ug=b(To);$o=w(Ug,"The only search result I got when searching for "),Do=E(Ug,"CODE",{});var Gg=b(Do);Lo=w(Gg,".indexOf(option.__value)"),Gg.forEach(r),Ho=w(Ug," is in "),Ro=E(Ug,"A",{href:!0,rel:!0});var zg=b(Ro);Mo=w(zg,"src/runtime/internal/dom.ts"),zg.forEach(r),Ug.forEach(r),No=y(Rf),Wo=E(Rf,"PRE",{class:!0}),b(Wo).forEach(r),qo=y(Rf),Bo=E(Rf,"P",{});var Jg=b(Bo);Fo=w(Jg,"Anything within "),Uo=E(Jg,"CODE",{});var Vg=b(Uo);Go=w(Vg,"src/runtime/"),Vg.forEach(r),zo=w(Jg," are helper functions that are referenced from the output code, to reduce the output code size. Hmm... probably we should reuse the "),Jo=E(Jg,"CODE",{});var Yg=b(Jo);Vo=w(Yg,"select_options"),Yg.forEach(r),Yo=w(Jg," helper function:"),Jg.forEach(r),Qo=y(Rf),Ko=E(Rf,"PRE",{class:!0}),b(Ko).forEach(r),Zo=y(Rf),Xo=E(Rf,"P",{});var Qg=b(Xo);np=w(Qg,"Anyway, "),ap=E(Qg,"CODE",{});var Kg=b(ap);sp=w(Kg,"src/runtime/internal/dom.ts"),Kg.forEach(r),tp=w(Qg," is not where I am looking for, so I tried searching "),ep=E(Qg,"CODE",{});var Zg=b(ep);op=w(Zg,".options.length"),Zg.forEach(r),Qg.forEach(r),pp=y(Rf),cp=E(Rf,"PRE",{class:!0}),b(cp).forEach(r),lp=y(Rf),ip=E(Rf,"P",{});var Xg=b(ip);up=w(Xg,"Yes, this is most likely where it is."),Xg.forEach(r),rp=y(Rf),kp=E(Rf,"P",{});var nm=b(kp);hp=w(nm,"Firstly, let me update the "),dp=E(nm,"CODE",{});var am=b(dp);fp=w(am,"updater"),am.forEach(r),gp=w(nm," to use the "),mp=E(nm,"CODE",{});var sm=b(mp);vp=w(sm,"src/runtime/"),sm.forEach(r),bp=y(nm),Ep=E(nm,"CODE",{});var tm=b(Ep);wp=w(tm,"select_options"),tm.forEach(r),yp=w(nm," helper instead:"),nm.forEach(r),Ip=y(Rf),xp=E(Rf,"PRE",{class:!0}),b(xp).forEach(r),_p=y(Rf),Op=E(Rf,"P",{});var em=b(Op);Sp=w(em,"The "),Cp=E(em,"CODE",{});var om=b(Cp);jp=w(om,"b`...`"),om.forEach(r),Pp=w(em,", is called a "),Ap=E(em,"A",{href:!0,rel:!0});var pm=b(Ap);Tp=w(pm,"tagged template"),pm.forEach(r),$p=w(em,", where the "),Dp=E(em,"CODE",{});var cm=b(Dp);Lp=w(cm,"b"),cm.forEach(r),Hp=w(em," is a function that takes in the template literal and return something. In this case, the "),Rp=E(em,"CODE",{});var lm=b(Rp);Mp=w(lm,"b"),lm.forEach(r),Np=w(em," function returns an "),Wp=E(em,"A",{href:!0,rel:!0});var im=b(Wp);qp=w(im,"Abstract Syntaxt Tree (AST)"),im.forEach(r),Bp=w(em,"."),em.forEach(r),Fp=y(Rf),Up=E(Rf,"P",{});var um=b(Up);Gp=w(um,"The "),zp=E(um,"CODE",{});var rm=b(zp);Jp=w(rm,"b"),rm.forEach(r),Vp=w(um," function comes from "),Yp=E(um,"A",{href:!0,rel:!0});var km=b(Yp);Qp=w(km,"code-red"),km.forEach(r),Kp=w(um,", a utility to generate a JavaScript AST node. Beside "),Zp=E(um,"CODE",{});var hm=b(Zp);Xp=w(hm,"b"),hm.forEach(r),nc=w(um,", "),ac=E(um,"CODE",{});var dm=b(ac);sc=w(dm,"code-red"),dm.forEach(r),tc=w(um," provides a few helper functions:"),um.forEach(r),ec=y(Rf),oc=E(Rf,"UL",{});var fm=b(oc);pc=E(fm,"LI",{});var gm=b(pc);cc=E(gm,"CODE",{});var mm=b(cc);lc=w(mm,"b"),mm.forEach(r),ic=w(gm," returns a block node"),gm.forEach(r),uc=y(fm),rc=E(fm,"LI",{});var vm=b(rc);kc=E(vm,"CODE",{});var bm=b(kc);hc=w(bm,"x"),bm.forEach(r),dc=w(vm," returns an expression node"),vm.forEach(r),fc=y(fm),gc=E(fm,"LI",{});var Em=b(gc);mc=E(Em,"CODE",{});var wm=b(mc);vc=w(wm,"p"),wm.forEach(r),bc=w(Em," returns a object property node"),Em.forEach(r),fm.forEach(r),Ec=y(Rf),wc=E(Rf,"P",{});var ym=b(wc);yc=w(ym,"These helper functions are useful in generating code in Svelte compiler, particularly because the placeholder itself can takes in another AST node:"),ym.forEach(r),Ic=y(Rf),xc=E(Rf,"PRE",{class:!0}),b(xc).forEach(r),_c=y(Rf),Oc=E(Rf,"P",{});var Im=b(Oc);Sc=E(Im,"CODE",{});var xm=b(Sc);Cc=w(xm,"@"),xm.forEach(r),jc=w(Im," in front of "),Pc=E(Im,"CODE",{});var _m=b(Pc);Ac=w(_m,"@select_option"),_m.forEach(r),Tc=w(Im," is a convention in Svelte, where it will "),$c=E(Im,"A",{href:!0,rel:!0});var Om=b($c);Dc=w(Om,"get replaced"),Om.forEach(r),Lc=w(Im," to refer to helpr functions in "),Hc=E(Im,"CODE",{});var Sm=b(Hc);Rc=w(Sm,"src/runtime/"),Sm.forEach(r),Mc=w(Im," before writing the generated AST out:"),Im.forEach(r),Nc=y(Rf),Wc=E(Rf,"PRE",{class:!0}),b(Wc).forEach(r),qc=y(Rf),Bc=E(Rf,"P",{});var Cm=b(Bc);Fc=w(Cm,"Coming back to figure out why this piece of code is not executed when there's a spread attribute,"),Cm.forEach(r),Uc=y(Rf),Gc=E(Rf,"PRE",{class:!0}),b(Gc).forEach(r),zc=y(Rf),Jc=E(Rf,"P",{});var jm=b(Jc);Vc=w(jm,"I tried adding "),Yc=E(jm,"CODE",{});var Pm=b(Yc);Qc=w(Pm,"console.log"),Pm.forEach(r),Kc=w(jm," before the if statement, to figure out the value for "),Zc=E(jm,"CODE",{});var Am=b(Zc);Xc=w(Am,"is_legacy_input_type"),Am.forEach(r),nl=w(jm," and "),al=E(jm,"CODE",{});var Tm=b(al);sl=w(Tm,"is_select_value_attribute"),Tm.forEach(r),tl=w(jm,":"),jm.forEach(r),el=y(Rf),ol=E(Rf,"PRE",{class:!0}),b(ol).forEach(r),pl=y(Rf),cl=E(Rf,"P",{});var $m=b(cl);ll=w($m,"To my surpise, there was no log. "),il=E($m,"CODE",{});var Dm=b(il);ul=w(Dm,"AttributeWrapper#render"),Dm.forEach(r),rl=w($m," wasn't executed."),$m.forEach(r),kl=y(Rf),hl=E(Rf,"P",{});var Lm=b(hl);dl=w(Lm,"I tried removing the spread attribute, and verified from the log that the "),fl=E(Lm,"CODE",{});var Hm=b(fl);gl=w(Hm,"AttributeWrapper#render"),Hm.forEach(r),ml=w(Lm," method was indeed executed when there's no spread attribute."),Lm.forEach(r),vl=y(Rf),bl=E(Rf,"P",{});var Rm=b(bl);El=w(Rm,"To figure out the caller of the "),wl=E(Rm,"CODE",{});var Mm=b(wl);yl=w(Mm,"AttributeWrapper#render"),Mm.forEach(r),Il=w(Rm," method, I added "),xl=E(Rm,"CODE",{});var Nm=b(xl);_l=w(Nm,"console.trace"),Nm.forEach(r),Ol=w(Rm," at the top of the method:"),Rm.forEach(r),Sl=y(Rf),Cl=E(Rf,"PRE",{class:!0}),b(Cl).forEach(r),jl=y(Rf),Pl=E(Rf,"PRE",{class:!0}),b(Pl).forEach(r),Al=y(Rf),Tl=E(Rf,"P",{});var Wm=b(Tl);$l=w(Wm,"This brought me to "),Dl=E(Wm,"A",{href:!0,rel:!0});var qm=b(Dl);Ll=w(qm,"src/compiler/compile/render_dom/wrappers/Element/index.ts"),qm.forEach(r),Wm.forEach(r),Hl=y(Rf),Rl=E(Rf,"PRE",{class:!0}),b(Rl).forEach(r),Ml=y(Rf),Nl=E(Rf,"P",{});var Bm=b(Nl);Wl=w(Bm,"If there's a spread attribute, it will call the "),ql=E(Bm,"CODE",{});var Fm=b(ql);Bl=w(Fm,"this.node.attributes.some(attr => attr.is_spread)"),Fm.forEach(r),Fl=w(Bm," method instead of calling "),Ul=E(Bm,"CODE",{});var Um=b(Ul);Gl=w(Um,"attribute.render(block)"),Um.forEach(r),zl=w(Bm,", so that's probably why "),Jl=E(Bm,"CODE",{});var Gm=b(Jl);Vl=w(Gm,"AttributeWrapper#render"),Gm.forEach(r),Yl=w(Bm," wasn't called."),Bm.forEach(r),Ql=y(Rf),Kl=E(Rf,"P",{});var zm=b(Kl);Zl=w(zm,"I looked into the method "),Xl=E(zm,"CODE",{});var Jm=b(Xl);ni=w(Jm,"add_spread_attributes"),Jm.forEach(r),ai=w(zm,", found out it contain only the code about handling spread attributes as I explained earlier. It didn't have any code related to "),si=E(zm,"CODE",{});var Vm=b(si);ti=w(Vm,"select_options"),Vm.forEach(r),ei=w(zm,", so I figured that, maybe "),oi=E(zm,"CODE",{});var Ym=b(oi);pi=w(Ym,"<select multiple>"),Ym.forEach(r),ci=w(zm," with spread attribute is an edge case that wasn't handled currently at all."),zm.forEach(r),li=y(Rf),ii=E(Rf,"P",{});var Qm=b(ii);ui=w(Qm,"So, I tried to add a special check for this case at the bottom of the "),ri=E(Qm,"CODE",{});var Km=b(ri);ki=w(Km,"add_spread_attributes"),Km.forEach(r),hi=w(Qm," method:"),Qm.forEach(r),di=y(Rf),fi=E(Rf,"PRE",{class:!0}),b(fi).forEach(r),gi=y(Rf),mi=E(Rf,"P",{});var Zm=b(mi);vi=w(Zm,"As mentioned in the "),bi=E(Zm,"A",{href:!0});var Xm=b(bi);Ei=w(Xm,"The Svelte Compiler Handbook"),Xm.forEach(r),wi=w(Zm,", a "),yi=E(Zm,"CODE",{});var nv=b(yi);Ii=w(nv,"block"),nv.forEach(r),xi=w(Zm," is where it keeps the code to generate the "),_i=E(Zm,"A",{href:!0});var av=b(_i);Oi=E(av,"CODE",{});var sv=b(Oi);Si=w(sv,"create_fragment"),sv.forEach(r),av.forEach(r),Ci=w(Zm," function. The return object of the "),ji=E(Zm,"CODE",{});var tv=b(ji);Pi=w(tv,"create_fragment"),tv.forEach(r),Ai=w(Zm," function contains various method as mentioned in "),Ti=E(Zm,"A",{href:!0});var ev=b(Ti);$i=w(ev,"Compile Svelte in your Head"),ev.forEach(r),Di=w(Zm,", such as "),Li=E(Zm,"CODE",{});var ov=b(Li);Hi=w(ov,"c()"),ov.forEach(r),Ri=w(Zm,", "),Mi=E(Zm,"CODE",{});var pv=b(Mi);Ni=w(pv,"m()"),pv.forEach(r),Wi=w(Zm," and "),qi=E(Zm,"CODE",{});var cv=b(qi);Bi=w(cv,"d()"),cv.forEach(r),Fi=w(Zm,". To add code into different method, you can push them into the array in "),Ui=E(Zm,"CODE",{});var lv=b(Ui);Gi=w(lv,"block.chunks"),lv.forEach(r),zi=w(Zm,", for example:"),Zm.forEach(r),Ji=y(Rf),Vi=E(Rf,"PRE",{class:!0}),b(Vi).forEach(r),Yi=y(Rf),Qi=E(Rf,"P",{});var iv=b(Qi);Ki=w(iv,"I tried adding "),Zi=E(iv,"CODE",{});var uv=b(Zi);Xi=w(uv,"@select_options(...)"),uv.forEach(r),nu=w(iv," into the "),au=E(iv,"CODE",{});var rv=b(au);su=w(rv,"m()"),rv.forEach(r),tu=w(iv," method and yup, the "),eu=E(iv,"CODE",{});var kv=b(eu);ou=w(kv,"<select>"),kv.forEach(r),pu=w(iv," element is pre-selected correctly!"),iv.forEach(r),Rf.forEach(r),cu=y(n),lu=E(n,"SECTION",{});var hv=b(lu);iu=E(hv,"H2",{});var dv=b(iu);uu=E(dv,"A",{href:!0,id:!0});var fv=b(uu);ru=w(fv,"Fixing the bug"),fv.forEach(r),dv.forEach(r),ku=y(hv),hu=E(hv,"P",{});var gv=b(hu);du=w(gv,"To ensure the bug is fixed, I need to come up with a test."),gv.forEach(r),fu=y(hv),gu=E(hv,"P",{});var mv=b(gu);mu=w(mv,"Usually I come up with test cases that try to entail various scenario I can imagine."),mv.forEach(r),vu=y(hv),bu=E(hv,"P",{});var vv=b(bu);Eu=w(vv,"In this example, we've manually tested the case where the "),wu=E(vv,"CODE",{});var bv=b(wu);yu=w(bv,"<select multiple {value} {...{}}>"),bv.forEach(r),Iu=w(vv,", the value is set correctly during initialisation. but have we check the case where:"),vv.forEach(r),xu=y(hv),_u=E(hv,"UL",{});var Ev=b(_u);Ou=E(Ev,"LI",{});var wv=b(Ou);Su=w(wv,"we update the value of "),Cu=E(wv,"CODE",{});var yv=b(Cu);ju=w(yv,"value"),yv.forEach(r),Pu=w(wv,", will the "),Au=E(wv,"CODE",{});var Iv=b(Au);Tu=w(Iv,"<select>"),Iv.forEach(r),$u=w(wv," get updated accordingly?"),wv.forEach(r),Du=y(Ev),Lu=E(Ev,"LI",{});var xv=b(Lu);Hu=w(xv,"if the value is overriden by the spreaded attribute, eg "),Ru=E(xv,"CODE",{});var _v=b(Ru);Mu=w(_v,"<select mutliple {value} { ...{value: []} }>"),_v.forEach(r),Nu=w(xv,"?"),xv.forEach(r),Ev.forEach(r),Wu=y(hv),qu=E(hv,"P",{});var Ov=b(qu);Bu=w(Ov,"Ideally, the test cases come up should be failed before the fix, and passed after the fix."),Ov.forEach(r),Fu=y(hv),Uu=E(hv,"P",{});var Sv=b(Uu);Gu=w(Sv,"So here's the test case I came up:"),Sv.forEach(r),zu=y(hv),Ju=E(hv,"PRE",{class:!0}),b(Ju).forEach(r),Vu=y(hv),Yu=E(hv,"P",{});var Cv=b(Yu);Qu=w(Cv,"I can check and uncheck the checkbox to change the value of "),Ku=E(Cv,"CODE",{});var jv=b(Ku);Zu=w(jv,"value"),jv.forEach(r),Xu=w(Cv," to verify the the "),nr=E(Cv,"CODE",{});var Pv=b(nr);ar=w(Pv,"value"),Pv.forEach(r),sr=w(Cv," is reactive, and "),tr=E(Cv,"CODE",{});var Av=b(tr);er=w(Av,"<select>"),Av.forEach(r),or=w(Cv," will get updated accordingly."),Cv.forEach(r),pr=y(hv),cr=E(hv,"P",{});var Tv=b(cr);lr=w(Tv,"Besides that, I exported "),ir=E(Tv,"CODE",{});var $v=b(ir);ur=w($v,"spread"),$v.forEach(r),rr=w(Tv,", so that I can change the object to something object to contain "),kr=E(Tv,"CODE",{});var Dv=b(kr);hr=w(Dv,"value"),Dv.forEach(r),dr=w(Tv,", eg: "),fr=E(Tv,"CODE",{});var Lv=b(fr);gr=w(Lv,"{ value: [] }"),Lv.forEach(r),mr=w(Tv,", and see how "),vr=E(Tv,"CODE",{});var Hv=b(vr);br=w(Hv,"<select>"),Hv.forEach(r),Er=w(Tv," will update accordingly. Make sure that our fix not just work with "),wr=E(Tv,"CODE",{});var Rv=b(wr);yr=w(Rv,"value"),Rv.forEach(r),Ir=w(Tv," attribute, and also when the "),xr=E(Tv,"CODE",{});var Mv=b(xr);_r=w(Mv,"value"),Mv.forEach(r),Or=w(Tv," is spreaded into "),Sr=E(Tv,"CODE",{});var Nv=b(Sr);Cr=w(Nv,"<select>"),Nv.forEach(r),jr=w(Tv,"."),Tv.forEach(r),Pr=y(hv),Ar=E(hv,"P",{});var Wv=b(Ar);Tr=w(Wv,"You may think that we are familiar with our fix, we know what it will fix, what it will not fix, do we need think up and write all the edge cases?"),Wv.forEach(r),$r=y(hv),Dr=E(hv,"P",{});var qv=b(Dr);Lr=w(qv,"Well, I think you should. Future you will thank the present you when he encounter a fail test, that just mean his change may have an unintentional regressional change. If you don't have the test case, the future you will never know what edge case he didn't accounted for."),qv.forEach(r),Hr=y(hv),Rr=E(hv,"P",{});var Bv=b(Rr);Mr=w(Bv,"Runtime test cases are added into "),Nr=E(Bv,"CODE",{});var Fv=b(Nr);Wr=w(Fv,"test/runtime/samples/"),Fv.forEach(r),qr=w(Bv,". Each folder represent 1 test case. Inside the folder, the component to be tested is named "),Br=E(Bv,"CODE",{});var Uv=b(Br);Fr=w(Uv,"App.svelte"),Uv.forEach(r),Ur=w(Bv,", and the test case is written "),Gr=E(Bv,"CODE",{});var Gv=b(Gr);zr=w(Gv,"_config.js"),Gv.forEach(r),Jr=w(Bv,"."),Bv.forEach(r),Vr=y(hv),Yr=E(hv,"P",{});var zv=b(Yr);Qr=E(zv,"CODE",{});var Jv=b(Qr);Kr=w(Jv,"_config.js"),Jv.forEach(r),Zr=w(zv," default exports a object:"),zv.forEach(r),Xr=y(hv),nk=E(hv,"PRE",{class:!0}),b(nk).forEach(r),ak=y(hv),sk=E(hv,"P",{});var Vv=b(sk);tk=w(Vv,"An example of test case of unchecking the checkbox, and verify "),ek=E(Vv,"CODE",{});var Yv=b(ek);ok=w(Yv,"<select>"),Yv.forEach(r),pk=w(Vv," value get updated"),Vv.forEach(r),ck=y(hv),lk=E(hv,"PRE",{class:!0}),b(lk).forEach(r),ik=y(hv),uk=E(hv,"P",{});var Qv=b(uk);rk=w(Qv,"To run only this test, so that we can focus on ensuring the test case pass, we can set "),kk=E(Qv,"CODE",{});var Kv=b(kk);hk=w(Kv,"solo: true"),Kv.forEach(r),dk=w(Qv,":"),Qv.forEach(r),fk=y(hv),gk=E(hv,"PRE",{class:!0}),b(gk).forEach(r),mk=y(hv),vk=E(hv,"P",{});var Zv=b(vk);bk=E(Zv,"STRONG",{});var Xv=b(bk);Ek=w(Xv,"Quick tip:"),Xv.forEach(r),wk=w(Zv," running "),yk=E(Zv,"CODE",{});var nb=b(yk);Ik=w(nb,"npm run test"),nb.forEach(r),xk=w(Zv," will build Svelte code first before executing the test. If you are like me, running "),_k=E(Zv,"CODE",{});var ab=b(_k);Ok=w(ab,"npm run dev"),ab.forEach(r),Sk=w(Zv," on the background, Svelte code is build on every code change. So, "),Ck=E(Zv,"CODE",{});var sb=b(Ck);jk=w(sb,"npm run quicktest"),sb.forEach(r),Pk=w(Zv," would allow you to skip the "),Ak=E(Zv,"CODE",{});var tb=b(Ak);Tk=w(tb,"pretest"),tb.forEach(r),$k=w(Zv," build, and run the test suite immediately."),Zv.forEach(r),Dk=y(hv),Lk=E(hv,"P",{});var eb=b(Lk);Hk=w(eb,"With the test, I realised that I didn't handle the case when the "),Rk=E(eb,"CODE",{});var ob=b(Rk);Mk=w(ob,"value"),ob.forEach(r),Nk=w(eb," is updated."),eb.forEach(r),Wk=y(hv),qk=E(hv,"P",{});var pb=b(qk);Bk=w(pb,"So I guess what I needed to do is to add the same code in the "),Fk=E(pb,"CODE",{});var cb=b(Fk);Uk=w(cb,"p()"),cb.forEach(r),Gk=w(pb," (update) method too!"),pb.forEach(r),zk=y(hv),Jk=E(hv,"PRE",{class:!0}),b(Jk).forEach(r),Vk=y(hv),Yk=E(hv,"P",{});var lb=b(Yk);Qk=w(lb,"Well, of course in this way, the "),Kk=E(lb,"CODE",{});var ib=b(Kk);Zk=w(ib,"select_options"),ib.forEach(r),Xk=w(lb," get executed unconditionally whenever any variable is updated."),lb.forEach(r),nh=y(hv),ah=E(hv,"P",{});var ub=b(ah);sh=w(ub,"I need to make sure that the "),th=E(ub,"CODE",{});var rb=b(th);eh=w(rb,"select_options(...)"),rb.forEach(r),oh=w(ub," inside the "),ph=E(ub,"CODE",{});var kb=b(ph);ch=w(kb,"p()"),kb.forEach(r),lh=w(ub," method get executed only when the value of "),ih=E(ub,"CODE",{});var hb=b(ih);uh=w(hb,"value"),hb.forEach(r),rh=w(ub," changes, and also probably when "),kh=E(ub,"CODE",{});var db=b(kh);hh=w(db,"spread"),db.forEach(r),dh=w(ub," changes too, because it could potentially override the value of "),fh=E(ub,"CODE",{});var fb=b(fh);gh=w(fb,"value"),fb.forEach(r),mh=w(ub,"."),ub.forEach(r),vh=y(hv),bh=E(hv,"P",{});var gb=b(bh);Eh=w(gb,"If you've read "),wh=E(gb,"A",{href:!0});var mb=b(wh);yh=w(mb,"Compile Svelte in your Head - Bitmask in Svelte"),mb.forEach(r),Ih=w(gb,", you know that Svelte uses bitmask to check any variable changes."),gb.forEach(r),xh=y(hv),_h=E(hv,"P",{});var vb=b(_h);Oh=w(vb,"How do I know what is the bitmask to use in this case, well I dont have to."),vb.forEach(r),Sh=y(hv),Ch=E(hv,"P",{});var bb=b(Ch);jh=w(bb,"I can use "),Ph=E(bb,"A",{href:!0,rel:!0});var Eb=b(Ph);Ah=E(Eb,"CODE",{});var wb=b(Ah);Th=w(wb,"renderer.dirty(dependencies)"),wb.forEach(r),Eb.forEach(r),$h=w(bb," to help me with that:"),bb.forEach(r),Dh=y(hv),Lh=E(hv,"PRE",{class:!0}),b(Lh).forEach(r),Hh=y(hv),Rh=E(hv,"P",{});var yb=b(Rh);Mh=w(yb,"Next, I need to figure out what are the dependencies to be included. In this particular case, the dependencies of all attributes have to be taken consideration, because it is hard to tell which one would be eventually applied due to the spread attribute."),yb.forEach(r),Nh=y(hv),Wh=E(hv,"PRE",{class:!0}),b(Wh).forEach(r),qh=y(hv),Bh=E(hv,"P",{});var Ib=b(Bh);Fh=w(Ib,"After a few tweaks, finally I passed all my test cases, and its time to create a pull request!"),Ib.forEach(r),hv.forEach(r),Uh=y(n),Gh=E(n,"SECTION",{});var xb=b(Gh);zh=E(xb,"H2",{});var _b=b(zh);Jh=E(_b,"A",{href:!0,id:!0});var Ob=b(Jh);Vh=w(Ob,"Submitting the fix"),Ob.forEach(r),_b.forEach(r),Yh=y(xb),Qh=E(xb,"P",{});var Sb=b(Qh);Kh=w(Sb,"Before pushing the fix to remote, it is important to make sure that all the lints and typescript definitions are correct. You can run "),Zh=E(Sb,"CODE",{});var Cb=b(Zh);Xh=w(Cb,"npm run lint --fixed"),Cb.forEach(r),nd=w(Sb," for linting, and "),ad=E(Sb,"CODE",{});var jb=b(ad);sd=w(jb,"npm run tsd"),jb.forEach(r),td=w(Sb," to generate typescript definition."),Sb.forEach(r),ed=y(xb),od=E(xb,"P",{});var Pb=b(od);pd=w(Pb,"If you are unsure on how to create a pull request, you can check out "),cd=E(Pb,"A",{href:!0,rel:!0});var Ab=b(cd);ld=w(Ab,"How to make your first pull request on GitHub"),Ab.forEach(r),id=w(Pb,"."),Pb.forEach(r),ud=y(xb),rd=E(xb,"P",{});var Tb=b(rd);kd=w(Tb,"I pushed my branch and created a "),hd=E(Tb,"A",{href:!0,rel:!0});var $b=b(hd);dd=w($b,"Pull Request to Svelte"),$b.forEach(r),fd=w(Tb,", and now I am waiting for feedback and for it to get merged."),Tb.forEach(r),gd=y(xb),md=E(xb,"P",{});var Db=b(md);vd=w(Db,"Svelte is not maintained by full-time maintainers, everyone has their full-time job, so please be patient and be nice."),Db.forEach(r),bd=y(xb),Ed=E(xb,"HR",{}),wd=y(xb),yd=E(xb,"P",{});var Lb=b(yd);Id=w(Lb,"If you wish to learn more about Svelte, "),xd=E(Lb,"A",{href:!0,rel:!0});var Hb=b(xd);_d=w(Hb,"follow me on Twitter"),Hb.forEach(r),Od=w(Lb,"."),Lb.forEach(r),Sd=y(xb),Cd=E(xb,"P",{});var Rb=b(Cd);jd=w(Rb,"If you have anything unclear about this article, find me on "),Pd=E(Rb,"A",{href:!0,rel:!0});var Mb=b(Pd);Ad=w(Mb,"Twitter"),Mb.forEach(r),Td=w(Rb," too!"),Rb.forEach(r),xb.forEach(r),this.h()},h(){v(o,"href","#background"),v(l,"href","#the-story-begins"),v(m,"href","#verifying-the-bug"),v(_,"href","#investigating-the-bug"),v(C,"href","#fixing-the-bug"),v(A,"href","#submitting-the-fix"),v(t,"class","sitemap"),v(t,"id","sitemap"),v(t,"role","navigation"),v(t,"aria-label","Table of Contents"),v(H,"href","#background"),v(H,"id","background"),v(V,"href","https://svelte.dev/chat"),v(V,"rel","nofollow"),v(on,"href","/the-svelte-compiler-handbook/"),v(xn,"href","#the-story-begins"),v(xn,"id","the-story-begins"),v(jn,"href","https://github.com/sveltejs/svelte/issues?q=is%3Aopen+is%3Aissue+label%3Abug"),v(jn,"rel","nofollow"),v(Mn,"href","https://github.com/sveltejs/svelte/issues/4392"),v(Mn,"rel","nofollow"),v(Jn,"class","language-svelte"),v(Kn,"href","https://svelte.dev/repl/99bd5ebecc464e328972252e287ab716?version=3.18.1"),v(Kn,"rel","nofollow"),v(oa,"href","#verifying-the-bug"),v(oa,"id","verifying-the-bug"),v(Fa,"href","https://github.com/Conduitry"),v(Fa,"rel","nofollow"),v(Ya,"href","https://github.com/sveltejs/svelte/issues/3680"),v(Ya,"rel","nofollow"),v(Za,"href","https://github.com/sveltejs/svelte/issues/3680"),v(Za,"rel","nofollow"),v(es,"href","https://github.com/sveltejs/svelte/pull/4398"),v(es,"rel","nofollow"),v(cs,"href","https://github.com/sveltejs/svelte/issues/3680"),v(cs,"rel","nofollow"),v(hs,"href","#investigating-the-bug"),v(hs,"id","investigating-the-bug"),v(xs,"href","https://github.com/sveltejs/template"),v(xs,"rel","nofollow"),v(Rs,"class","language-null"),v(Xs,"href","https://www.npmjs.com/package/http-server"),v(Xs,"rel","nofollow"),v(Nt,"class","language-svelte"),v(Ut,"class","language-diff-js"),v(Vt,"href","/compile-svelte-in-your-head-part-1/"),v(ae,"class","language-svelte"),v(pe,"class","language-js"),v(me,"class","language-js"),v(De,"class","language-js"),v(Xe,"type","image/webp"),v(Xe,"srcset","aacfcdde0ef957c2.webp"),v(no,"type","image/jpeg"),v(no,"srcset","aacfcdde0ef957c2.png"),v(ao,"title","null"),v(ao,"alt","Fixed"),v(ao,"data-src","aacfcdde0ef957c2.png"),v(ao,"loading","lazy"),v(Ro,"href","https://github.com/sveltejs/svelte/blob/e34f2088434423914bbc91b84a450a7f7477252b/src/runtime/internal/dom.ts#L221-L226"),v(Ro,"rel","nofollow"),v(Wo,"class","language-js"),v(Ko,"class","language-js"),v(cp,"class","language-js"),v(xp,"class","language-js"),v(Ap,"href","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates"),v(Ap,"rel","nofollow"),v(Wp,"href","https://en.wikipedia.org/wiki/Abstract_syntax_tree"),v(Wp,"rel","nofollow"),v(Yp,"href","https://www.npmjs.com/package/code-red"),v(Yp,"rel","nofollow"),v(xc,"class","language-js"),v($c,"href","https://github.com/sveltejs/svelte/blob/e34f2088434423914bbc91b84a450a7f7477252b/src/compiler/compile/Component.ts#L245-L264"),v($c,"rel","nofollow"),v(Wc,"class","language-js"),v(Gc,"class","language-js"),v(ol,"class","language-js"),v(Cl,"class","language-js"),v(Pl,"class","language-md"),v(Dl,"href","https://github.com/sveltejs/svelte/blob/e34f2088434423914bbc91b84a450a7f7477252b/src/compiler/compile/render_dom/wrappers/Element/index.ts#L642-L659"),v(Dl,"rel","nofollow"),v(Rl,"class","language-js"),v(fi,"class","language-js"),v(bi,"href","/the-svelte-compiler-handbook/#dom-renderer"),v(_i,"href","/compile-svelte-in-your-head-part-1/#create_fragment"),v(Ti,"href","/compile-svelte-in-your-head-part-1/#create_fragment"),v(Vi,"class","language-js"),v(uu,"href","#fixing-the-bug"),v(uu,"id","fixing-the-bug"),v(Ju,"class","language-svelte"),v(nk,"class","language-js"),v(lk,"class","language-js"),v(gk,"class","language-js"),v(Jk,"class","language-js"),v(wh,"href","/compile-svelte-in-your-head-part-2/#bitmask-in-svelte"),v(Ph,"href","https://github.com/sveltejs/svelte/blob/e34f2088434423914bbc91b84a450a7f7477252b/src/compiler/compile/render_dom/Renderer.ts#L206"),v(Ph,"rel","nofollow"),v(Lh,"class","language-js"),v(Wh,"class","language-js"),v(Jh,"href","#submitting-the-fix"),v(Jh,"id","submitting-the-fix"),v(cd,"href","https://www.freecodecamp.org/news/how-to-make-your-first-pull-request-on-github-3/"),v(cd,"rel","nofollow"),v(hd,"href","https://github.com/sveltejs/svelte/pull/4894"),v(hd,"rel","nofollow"),v(xd,"href","https://twitter.com/lihautan"),v(xd,"rel","nofollow"),v(Pd,"href","https://twitter.com/lihautan"),v(Pd,"rel","nofollow")},m(n,a){u(n,s,a),i(s,t),i(t,e),i(e,o),i(o,p),i(t,c),i(c,l),i(l,k),i(t,d),i(d,m),i(m,I),i(t,x),i(x,_),i(_,O),i(t,S),i(S,C),i(C,j),i(t,P),i(P,A),i(A,T),u(n,$,a),u(n,D,a),i(D,L),i(L,H),i(H,R),i(D,M),i(D,N),i(N,W),i(D,q),i(D,B),i(B,F),i(D,U),i(D,G),i(G,z),i(z,J),i(z,V),i(V,Y),i(G,Q),i(G,K),i(K,Z),i(G,X),i(G,nn),i(nn,an),i(D,sn),i(D,tn),i(tn,en),i(tn,on),i(on,pn),i(tn,cn),i(D,ln),i(D,un),i(un,rn),i(D,kn),i(D,hn),i(hn,dn),i(D,fn),i(D,gn),i(gn,mn),i(D,vn),i(D,bn),i(bn,En),u(n,wn,a),u(n,yn,a),i(yn,In),i(In,xn),i(xn,_n),i(yn,On),i(yn,Sn),i(Sn,Cn),i(Sn,jn),i(jn,Pn),i(Sn,An),i(yn,Tn),i(yn,$n),i(yn,Dn),i(yn,Ln),i(Ln,Hn),i(Hn,Rn),i(Hn,Mn),i(Mn,Nn),i(yn,Wn),i(yn,qn),i(qn,Bn),i(qn,Fn),i(Fn,Un),i(qn,Gn),i(yn,zn),i(yn,Jn),Jn.innerHTML='<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'Hello\'</span><span class="token punctuation">,</span> <span class="token string">\'World\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">multiple</span> <span class="token language-javascript"><span class="token punctuation">&#123;</span>value<span class="token punctuation">&#125;</span></span> <span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">...</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>Hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>World<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></code>',i(yn,Vn),i(yn,Yn),i(Yn,Qn),i(Yn,Kn),i(Kn,Zn),i(Yn,Xn),i(yn,na),i(yn,aa),u(n,sa,a),u(n,ta,a),i(ta,ea),i(ea,oa),i(oa,pa),i(ta,ca),i(ta,la),i(la,ia),i(ta,ua),i(ta,ra),i(ra,ka),i(ra,ha),i(ha,da),i(ra,fa),i(ra,ga),i(ga,ma),i(ra,va),i(ra,ba),i(ba,Ea),i(ra,wa),i(ra,ya),i(ya,Ia),i(ra,xa),i(ra,_a),i(_a,Oa),i(ra,Sa),i(ta,Ca),i(ta,ja),i(ja,Pa),i(ja,Aa),i(Aa,Ta),i(ja,$a),i(ja,Da),i(Da,La),i(ja,Ha),i(ja,Ra),i(Ra,Ma),i(ja,Na),i(ta,Wa),i(ta,qa),i(qa,Ba),i(qa,Fa),i(Fa,Ua),i(qa,Ga),i(qa,za),i(za,Ja),i(qa,Va),i(qa,Ya),i(Ya,Qa),i(qa,Ka),i(qa,Za),i(Za,Xa),i(qa,ns),i(ta,as),i(ta,ss),i(ss,ts),i(ss,es),i(es,os),i(ss,ps),i(ss,cs),i(cs,ls),i(ss,is),u(n,us,a),u(n,rs,a),i(rs,ks),i(ks,hs),i(hs,ds),i(rs,fs),i(rs,gs),i(gs,ms),i(rs,vs),i(rs,bs),i(bs,Es),i(bs,ws),i(ws,ys),i(bs,Is),i(bs,xs),i(xs,_s),i(bs,Os),i(bs,Ss),i(Ss,Cs),i(bs,js),i(bs,Ps),i(Ps,As),i(bs,Ts),i(bs,$s),i($s,Ds),i(bs,Ls),i(rs,Hs),i(rs,Rs),Rs.innerHTML='\n<code class="language-">- /Projects\n  - svelte                &lt;-- cloned from https://github.com/sveltejs/svelte\n  - test-svelte           &lt;-- initialised with Svelte Template\n    - node_modules/svelte &lt;-- symlink to &#96;/Projects/svelte&#96;</code>',i(rs,Ms),i(rs,Ns),i(Ns,Ws),i(Ns,qs),i(qs,Bs),i(Ns,Fs),i(rs,Us),i(rs,Gs),i(Gs,zs),i(Gs,Js),i(Js,Vs),i(Gs,Ys),i(Gs,Qs),i(Qs,Ks),i(Gs,Zs),i(Gs,Xs),i(Xs,nt),i(Gs,at),i(Gs,st),i(st,tt),i(Gs,et),i(rs,ot),i(rs,pt),i(pt,ct),i(ct,lt),i(ct,it),i(it,ut),i(ct,rt),i(ct,kt),i(kt,ht),i(ct,dt),i(pt,ft),i(pt,gt),i(gt,mt),i(pt,vt),i(pt,bt),i(bt,Et),i(bt,wt),i(wt,yt),i(bt,It),i(bt,xt),i(xt,_t),i(bt,Ot),i(bt,St),i(St,Ct),i(rs,jt),i(rs,Pt),i(Pt,At),i(Pt,Tt),i(Tt,$t),i(Pt,Dt),i(Pt,Lt),i(Lt,Ht),i(Pt,Rt),i(rs,Mt),i(rs,Nt),Nt.innerHTML='<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'Hello\'</span><span class="token punctuation">,</span> <span class="token string">\'World\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token comment">&lt;!-- with spread --\x3e</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">multiple</span> <span class="token language-javascript"><span class="token punctuation">&#123;</span>value<span class="token punctuation">&#125;</span></span> <span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">...</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>Hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>World<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>\n\n<span class="token comment">&lt;!-- without spread --\x3e</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">multiple</span> <span class="token language-javascript"><span class="token punctuation">&#123;</span>value<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>Hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>World<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></code>',i(rs,Wt),i(rs,qt),i(qt,Bt),i(rs,Ft),i(rs,Ut),Ut.innerHTML='<code class="language-diff-js"><span class="token inserted-sign inserted language-js"><span class="token prefix inserted">+</span> <span class="token keyword">let</span> select_levels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> multiple<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> value<span class="token punctuation">:</span> <span class="token comment">/*value*/</span> ctx<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token prefix inserted">+</span>\t<span class="token keyword">let</span> select_data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n<span class="token prefix inserted">+</span>\t<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> select_levels<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n<span class="token prefix inserted">+</span>\t  select_data <span class="token operator">=</span> <span class="token function">assign</span><span class="token punctuation">(</span>select_data<span class="token punctuation">,</span> select_levels<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token prefix inserted">+</span>\t<span class="token punctuation">&#125;</span>\n</span><span class="token deleted-sign deleted language-js"><span class="token prefix deleted">-</span> <span class="token keyword">let</span> select_value_value<span class="token punctuation">;</span>\n</span>\n<span class="token unchanged language-js"><span class="token prefix unchanged"> </span> <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>\n<span class="token prefix unchanged"> </span>   <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n<span class="token prefix unchanged"> </span>     <span class="token comment">/* ... */</span>\n<span class="token prefix unchanged"> </span>     <span class="token function">set_attributes</span><span class="token punctuation">(</span>select<span class="token punctuation">,</span> select_data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token prefix unchanged"> </span>   <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n<span class="token prefix unchanged"> </span>   <span class="token function">m</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> anchor</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n<span class="token prefix unchanged"> </span>     <span class="token comment">/* ... */</span>\n</span><span class="token deleted-sign deleted language-js"><span class="token prefix deleted">-</span>     select_value_value <span class="token operator">=</span> <span class="token comment">/*value*/</span> ctx<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</span>\n<span class="token deleted-sign deleted language-js"><span class="token prefix deleted">-</span>     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> select<span class="token punctuation">.</span>options<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n<span class="token prefix deleted">-</span>       <span class="token keyword">var</span> option <span class="token operator">=</span> select<span class="token punctuation">.</span>options<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token prefix deleted">-</span>       option<span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token operator">~</span>select_value_value<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>option<span class="token punctuation">.</span>__value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token prefix deleted">-</span>     <span class="token punctuation">&#125;</span>\n</span><span class="token unchanged language-js"><span class="token prefix unchanged"> </span>   <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n</span><span class="token deleted-sign deleted language-js"><span class="token prefix deleted">-</span>   p<span class="token punctuation">:</span> noop<span class="token punctuation">,</span>\n</span><span class="token inserted-sign inserted language-js"><span class="token prefix inserted">+</span>    <span class="token function">p</span><span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> <span class="token punctuation">[</span>dirty<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n<span class="token prefix inserted">+</span>      <span class="token function">set_attributes</span><span class="token punctuation">(</span>select<span class="token punctuation">,</span> <span class="token function">get_spread_update</span><span class="token punctuation">(</span>select_levels<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> multiple<span class="token punctuation">:</span>   <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> dirty <span class="token operator">&amp;</span> <span class="token comment">/*value*/</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">&#123;</span> value<span class="token punctuation">:</span> <span class="token comment">/*value*/</span> ctx<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token prefix inserted">+</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n</span><span class="token unchanged language-js"><span class="token prefix unchanged"> </span>   <span class="token comment">/* ... */</span>\n<span class="token prefix unchanged"> </span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span></span></code>',i(rs,Gt),i(rs,zt),i(zt,Jt),i(zt,Vt),i(Vt,Yt),i(zt,Qt),i(rs,Kt),i(rs,Zt),i(Zt,Xt),i(rs,ne),i(rs,ae),ae.innerHTML='<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">foo</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">...</span>bar<span class="token punctuation">&#125;</span></span> <span class="token attr-name">baz</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>baz<span class="token punctuation">"</span></span> <span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">...</span>qux<span class="token punctuation">&#125;</span></span> <span class="token punctuation">/></span></span></code>',i(rs,se),i(rs,te),i(te,ee),i(rs,oe),i(rs,pe),pe.innerHTML='<code class="language-js"><span class="token keyword">const</span> levels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> foo<span class="token punctuation">:</span> <span class="token string">\'foo\'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> bar<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> baz<span class="token punctuation">:</span> <span class="token string">\'baz\'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> qux<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token comment">// build the attribute maps</span>\n<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> levels<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  data <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> levels<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token comment">// set attribute to element</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> attributeName <span class="token keyword">in</span> data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  div<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>attributeName<span class="token punctuation">,</span> data<span class="token punctuation">[</span>attributeName<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token comment">// if &#96;bar&#96; changed</span>\n<span class="token keyword">const</span> updates <span class="token operator">=</span> <span class="token function">get_spread_update</span><span class="token punctuation">(</span>levels<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token boolean">false</span><span class="token punctuation">,</span> bar<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// updates will return the updates needed to make, in this case, the diff in &#96;bar&#96;, eg: &#123; aa: \'1\' &#125;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> attributeName <span class="token keyword">in</span> updates<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  div<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>attributeName<span class="token punctuation">,</span> updates<span class="token punctuation">[</span>attributeName<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span></code>',i(rs,ce),i(rs,le),i(le,ie),i(le,ue),i(ue,re),i(le,ke),i(rs,he),i(rs,de),i(de,fe),i(rs,ge),i(rs,me),me.innerHTML='<code class="language-js"><span class="token comment">// in &#96;mount&#96; method</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> select<span class="token punctuation">.</span>options<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">var</span> option <span class="token operator">=</span> select<span class="token punctuation">.</span>options<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n  option<span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token operator">~</span>select_value_value<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>option<span class="token punctuation">.</span>__value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span></code>',i(rs,ve),i(rs,be),i(be,Ee),i(be,we),i(we,ye),i(be,Ie),i(be,xe),i(xe,_e),i(be,Oe),i(rs,Se),i(rs,Ce),i(Ce,je),i(Ce,Pe),i(Pe,Ae),i(Ce,Te),i(rs,$e),i(rs,De),De.innerHTML='<code class="language-js">  <span class="token comment">// ...</span>\n  <span class="token function">m</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> anchor</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token function">insert</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> select<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">append</span><span class="token punctuation">(</span>select<span class="token punctuation">,</span> option0<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">append</span><span class="token punctuation">(</span>select<span class="token punctuation">,</span> option1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// highlight-start</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> select<span class="token punctuation">.</span>options<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      <span class="token keyword">var</span> option <span class="token operator">=</span> select<span class="token punctuation">.</span>options<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n      option<span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token operator">~</span>ctx<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>option<span class="token punctuation">.</span>__value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span>\n    <span class="token comment">// highlight-end</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span></code>',i(rs,Le),i(rs,He),i(He,Re),i(He,Me),i(Me,Ne),i(He,We),i(He,qe),i(qe,Be),i(He,Fe),i(He,Ue),i(Ue,Ge),i(He,ze),i(rs,Je),i(rs,Ve),i(Ve,Ye),i(rs,Qe),i(rs,Ke),i(Ke,Ze),i(Ze,Xe),i(Ze,no),i(Ze,ao),i(rs,so),i(rs,to),i(to,eo),i(to,oo),i(oo,po),i(to,co),i(rs,lo),i(rs,io),i(io,uo),i(rs,ro),i(rs,ko),i(ko,ho),i(ko,fo),i(fo,go),i(ko,mo),i(rs,vo),i(rs,bo),i(bo,Eo),i(Eo,wo),i(wo,yo),i(bo,Io),i(bo,xo),i(xo,_o),i(_o,Oo),i(bo,So),i(bo,Co),i(Co,jo),i(jo,Po),i(rs,Ao),i(rs,To),i(To,$o),i(To,Do),i(Do,Lo),i(To,Ho),i(To,Ro),i(Ro,Mo),i(rs,No),i(rs,Wo),Wo.innerHTML='<code class="language-js"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">select_options</span><span class="token punctuation">(</span><span class="token parameter">select<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> select<span class="token punctuation">.</span>options<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">const</span> option <span class="token operator">=</span> select<span class="token punctuation">.</span>options<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    option<span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token operator">~</span>value<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>option<span class="token punctuation">.</span>__value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(rs,qo),i(rs,Bo),i(Bo,Fo),i(Bo,Uo),i(Uo,Go),i(Bo,zo),i(Bo,Jo),i(Jo,Vo),i(Bo,Yo),i(rs,Qo),i(rs,Ko),Ko.innerHTML='<code class="language-js">  <span class="token comment">// ...</span>\n  <span class="token function">m</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> anchor</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token function">insert</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> select<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">append</span><span class="token punctuation">(</span>select<span class="token punctuation">,</span> option0<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">append</span><span class="token punctuation">(</span>select<span class="token punctuation">,</span> option1<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// highlight-start</span>\n<span class="token operator">-</span>   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> select<span class="token punctuation">.</span>options<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n<span class="token operator">-</span>     <span class="token keyword">var</span> option <span class="token operator">=</span> select<span class="token punctuation">.</span>options<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token operator">-</span>     option<span class="token punctuation">.</span>selected <span class="token operator">=</span> <span class="token operator">~</span>ctx<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>option<span class="token punctuation">.</span>__value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">-</span>   <span class="token punctuation">&#125;</span>\n<span class="token operator">+</span>   <span class="token function">select_options</span><span class="token punctuation">(</span>select<span class="token punctuation">,</span> select_value_value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// highlight-end</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span></code>',i(rs,Zo),i(rs,Xo),i(Xo,np),i(Xo,ap),i(ap,sp),i(Xo,tp),i(Xo,ep),i(ep,op),i(rs,pp),i(rs,cp),cp.innerHTML='<code class="language-js"><span class="token comment">// filename: src/compiler/compile/render_dom/wrappers/Element/Attribute.ts</span>\n\nupdater <span class="token operator">=</span> b<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">\n  for (var </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>i<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> = 0; </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>i<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> &lt; </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>element<span class="token punctuation">.</span>var<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.options.length; </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>i<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> += 1) &#123;\n    var </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>option<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>element<span class="token punctuation">.</span>var<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.options[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>i<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">];\n\n    </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>if_statement<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">\n  &#125;\n</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">;</span>\nblock<span class="token punctuation">.</span>chunks<span class="token punctuation">.</span>mount<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>b<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">\n  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>last<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>value<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">;\n  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>updater<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">\n</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>',i(rs,lp),i(rs,ip),i(ip,up),i(rs,rp),i(rs,kp),i(kp,hp),i(kp,dp),i(dp,fp),i(kp,gp),i(kp,mp),i(mp,vp),i(kp,bp),i(kp,Ep),i(Ep,wp),i(kp,yp),i(rs,Ip),i(rs,xp),xp.innerHTML='<code class="language-js"><span class="token comment">// highlight-start</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>is_multiple_select<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  updater <span class="token operator">=</span> b<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">@select_options(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>element<span class="token punctuation">.</span>var<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>last<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">);</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>\n  updater <span class="token operator">=</span> b<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">@select_option(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>element<span class="token punctuation">.</span>var<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>last<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">);</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n<span class="token comment">// highlight-end</span>\n\nblock<span class="token punctuation">.</span>chunks<span class="token punctuation">.</span>mount<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>b<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">\n  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>last<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>value<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">;\n  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>updater<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">\n</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>',i(rs,_p),i(rs,Op),i(Op,Sp),i(Op,Cp),i(Cp,jp),i(Op,Pp),i(Op,Ap),i(Ap,Tp),i(Op,$p),i(Op,Dp),i(Dp,Lp),i(Op,Hp),i(Op,Rp),i(Rp,Mp),i(Op,Np),i(Op,Wp),i(Wp,qp),i(Op,Bp),i(rs,Fp),i(rs,Up),i(Up,Gp),i(Up,zp),i(zp,Jp),i(Up,Vp),i(Up,Yp),i(Yp,Qp),i(Up,Kp),i(Up,Zp),i(Zp,Xp),i(Up,nc),i(Up,ac),i(ac,sc),i(Up,tc),i(rs,ec),i(rs,oc),i(oc,pc),i(pc,cc),i(cc,lc),i(pc,ic),i(oc,uc),i(oc,rc),i(rc,kc),i(kc,hc),i(rc,dc),i(oc,fc),i(oc,gc),i(gc,mc),i(mc,vc),i(gc,bc),i(rs,Ec),i(rs,wc),i(wc,yc),i(rs,Ic),i(rs,xc),xc.innerHTML='<code class="language-js"><span class="token keyword">const</span> node <span class="token operator">=</span> <span class="token punctuation">&#123;</span> type<span class="token punctuation">:</span> <span class="token string">\'Identifier\'</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token string">\'foo\'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> code <span class="token operator">=</span> b<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">const </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>node<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> = 1;</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">;</span> <span class="token comment">// returns an AST node for &#96;const foo = 1;&#96;</span></code>',i(rs,_c),i(rs,Oc),i(Oc,Sc),i(Sc,Cc),i(Oc,jc),i(Oc,Pc),i(Pc,Ac),i(Oc,Tc),i(Oc,$c),i($c,Dc),i(Oc,Lc),i(Oc,Hc),i(Hc,Rc),i(Oc,Mc),i(rs,Nc),i(rs,Wc),Wc.innerHTML='<code class="language-js"><span class="token keyword">const</span> code <span class="token operator">=</span> b<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">@foo(bar)</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">;</span>\n<span class="token comment">// turns into</span>\n\n<span class="token comment">// import &#123; foo &#125; from \'svelte/internal\';</span>\n<span class="token comment">// foo(bar);</span></code>',i(rs,qc),i(rs,Bc),i(Bc,Fc),i(rs,Uc),i(rs,Gc),Gc.innerHTML='<code class="language-js"><span class="token comment">// highlight-next-line</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>is_legacy_input_type<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// ...</span>\n  <span class="token comment">// highlight-next-line</span>\n<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>is_select_value_attribute<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>is_multiple_select<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    updater <span class="token operator">=</span> b<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">@select_options(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>element<span class="token punctuation">.</span>var<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>last<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">);</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>\n    updater <span class="token operator">=</span> b<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">@select_option(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>element<span class="token punctuation">.</span>var<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>last<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">);</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n\n  block<span class="token punctuation">.</span>chunks<span class="token punctuation">.</span>mount<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>b<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">\n    </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>last<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>value<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">;\n    </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>updater<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">\n  </span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>is_src<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">&#125;</span></code>',i(rs,zc),i(rs,Jc),i(Jc,Vc),i(Jc,Yc),i(Yc,Qc),i(Jc,Kc),i(Jc,Zc),i(Zc,Xc),i(Jc,nl),i(Jc,al),i(al,sl),i(Jc,tl),i(rs,el),i(rs,ol),ol.innerHTML='<code class="language-js"><span class="token comment">// highlight-start</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>\n  <span class="token string">\'is_legacy_input_type:\'</span><span class="token punctuation">,</span>\n  is_legacy_input_type<span class="token punctuation">,</span>\n  <span class="token string">\'is_select_value_attribute:\'</span><span class="token punctuation">,</span>\n  is_select_value_attribute\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// highlight-end</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>is_legacy_input_type<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">&#125;</span></code>',i(rs,pl),i(rs,cl),i(cl,ll),i(cl,il),i(il,ul),i(cl,rl),i(rs,kl),i(rs,hl),i(hl,dl),i(hl,fl),i(fl,gl),i(hl,ml),i(rs,vl),i(rs,bl),i(bl,El),i(bl,wl),i(wl,yl),i(bl,Il),i(bl,xl),i(xl,_l),i(bl,Ol),i(rs,Sl),i(rs,Cl),Cl.innerHTML='<code class="language-js"><span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">block<span class="token punctuation">:</span> Block</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// highlight-next-line</span>\n  console<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">\'trace\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">&#125;</span></code>',i(rs,jl),i(rs,Pl),Pl.innerHTML='<code class="language-md">Trace: trace\n  <span class="token comment">&lt;!-- highlight-next-line --\x3e</span>\n  at AttributeWrapper.render (/Projects/svelte/compiler.js:8269:11)\n  at /Projects/svelte/compiler.js:10749:14\n  at Array.forEach (<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>anonymous</span><span class="token punctuation">></span></span>)\n  <span class="token comment">&lt;!-- highlight-next-line --\x3e</span>\n  at ElementWrapper.add_attributes (/Projects/svelte/compiler.js:10748:19)\n  at ElementWrapper.render (/Projects/svelte/compiler.js:10472:8)\n  at /Projects/svelte/compiler.js:10454:11\n  at Array.forEach (<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>anonymous</span><span class="token punctuation">></span></span>)\n  at ElementWrapper.render (/Projects/svelte/compiler.js:10453:24)\n  at FragmentWrapper.render (/Projects/svelte/compiler.js:13030:18)\n  at new Renderer (/Projects/svelte/compiler.js:13112:17)</code>',i(rs,Al),i(rs,Tl),i(Tl,$l),i(Tl,Dl),i(Dl,Ll),i(rs,Hl),i(rs,Rl),Rl.innerHTML='<code class="language-js"><span class="token function">add_attributes</span><span class="token punctuation">(</span><span class="token parameter">block<span class="token punctuation">:</span> Block</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// Get all the class dependencies first</span>\n  <span class="token keyword">this</span><span class="token punctuation">.</span>attributes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">attribute</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>attribute<span class="token punctuation">.</span>node<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">\'class\'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      <span class="token keyword">const</span> dependencies <span class="token operator">=</span> attribute<span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">get_dependencies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">this</span><span class="token punctuation">.</span>class_dependencies<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>dependencies<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span>attributes<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">attr</span> <span class="token operator">=></span> attr<span class="token punctuation">.</span>is_spread<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">add_spread_attributes</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n\n  <span class="token keyword">this</span><span class="token punctuation">.</span>attributes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">attribute</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// highlight-next-line</span>\n    attribute<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span></code>',i(rs,Ml),i(rs,Nl),i(Nl,Wl),i(Nl,ql),i(ql,Bl),i(Nl,Fl),i(Nl,Ul),i(Ul,Gl),i(Nl,zl),i(Nl,Jl),i(Jl,Vl),i(Nl,Yl),i(rs,Ql),i(rs,Kl),i(Kl,Zl),i(Kl,Xl),i(Xl,ni),i(Kl,ai),i(Kl,si),i(si,ti),i(Kl,ei),i(Kl,oi),i(oi,pi),i(Kl,ci),i(rs,li),i(rs,ii),i(ii,ui),i(ii,ri),i(ri,ki),i(ii,hi),i(rs,di),i(rs,fi),fi.innerHTML='<code class="language-js"><span class="token function">add_spread_attributes</span><span class="token punctuation">(</span><span class="token parameter">block<span class="token punctuation">:</span> Block</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// ...</span>\n  <span class="token comment">// highlight-start</span>\n  <span class="token comment">// for &#96;&lt;select>&#96; element only</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">\'select\'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    block<span class="token punctuation">.</span>chunks<span class="token punctuation">.</span>mount<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\n      b<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">@select_options(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>var<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.value);</span><span class="token template-punctuation string">&#96;</span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n  <span class="token comment">// highlight-end</span>\n<span class="token punctuation">&#125;</span></code>',i(rs,gi),i(rs,mi),i(mi,vi),i(mi,bi),i(bi,Ei),i(mi,wi),i(mi,yi),i(yi,Ii),i(mi,xi),i(mi,_i),i(_i,Oi),i(Oi,Si),i(mi,Ci),i(mi,ji),i(ji,Pi),i(mi,Ai),i(mi,Ti),i(Ti,$i),i(mi,Di),i(mi,Li),i(Li,Hi),i(mi,Ri),i(mi,Mi),i(Mi,Ni),i(mi,Wi),i(mi,qi),i(qi,Bi),i(mi,Fi),i(mi,Ui),i(Ui,Gi),i(mi,zi),i(rs,Ji),i(rs,Vi),Vi.innerHTML='<code class="language-js"><span class="token comment">// push &#96;const foo = 1&#96; to &#96;m()&#96;</span>\nblock<span class="token punctuation">.</span>chunks<span class="token punctuation">.</span>mount<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>b<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">const foo = 1</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// push &#96;const bar = 2&#96; to &#96;c()&#96;</span>\nblock<span class="token punctuation">.</span>chunks<span class="token punctuation">.</span>create<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>b<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">const bar = 2</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>',i(rs,Yi),i(rs,Qi),i(Qi,Ki),i(Qi,Zi),i(Zi,Xi),i(Qi,nu),i(Qi,au),i(au,su),i(Qi,tu),i(Qi,eu),i(eu,ou),i(Qi,pu),u(n,cu,a),u(n,lu,a),i(lu,iu),i(iu,uu),i(uu,ru),i(lu,ku),i(lu,hu),i(hu,du),i(lu,fu),i(lu,gu),i(gu,mu),i(lu,vu),i(lu,bu),i(bu,Eu),i(bu,wu),i(wu,yu),i(bu,Iu),i(lu,xu),i(lu,_u),i(_u,Ou),i(Ou,Su),i(Ou,Cu),i(Cu,ju),i(Ou,Pu),i(Ou,Au),i(Au,Tu),i(Ou,$u),i(_u,Du),i(_u,Lu),i(Lu,Hu),i(Lu,Ru),i(Ru,Mu),i(Lu,Nu),i(lu,Wu),i(lu,qu),i(qu,Bu),i(lu,Fu),i(lu,Uu),i(Uu,Gu),i(lu,zu),i(lu,Ju),Ju.innerHTML='<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'Hello\'</span><span class="token punctuation">,</span> <span class="token string">\'World\'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">export</span> <span class="token keyword">let</span> spread <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">multiple</span> <span class="token language-javascript"><span class="token punctuation">&#123;</span>value<span class="token punctuation">&#125;</span></span> <span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">...</span>spread<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>Hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>World<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Hello<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">bind:</span>group=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span>value<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>World<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">bind:</span>group=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span>value<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span></code>',i(lu,Vu),i(lu,Yu),i(Yu,Qu),i(Yu,Ku),i(Ku,Zu),i(Yu,Xu),i(Yu,nr),i(nr,ar),i(Yu,sr),i(Yu,tr),i(tr,er),i(Yu,or),i(lu,pr),i(lu,cr),i(cr,lr),i(cr,ir),i(ir,ur),i(cr,rr),i(cr,kr),i(kr,hr),i(cr,dr),i(cr,fr),i(fr,gr),i(cr,mr),i(cr,vr),i(vr,br),i(cr,Er),i(cr,wr),i(wr,yr),i(cr,Ir),i(cr,xr),i(xr,_r),i(cr,Or),i(cr,Sr),i(Sr,Cr),i(cr,jr),i(lu,Pr),i(lu,Ar),i(Ar,Tr),i(lu,$r),i(lu,Dr),i(Dr,Lr),i(lu,Hr),i(lu,Rr),i(Rr,Mr),i(Rr,Nr),i(Nr,Wr),i(Rr,qr),i(Rr,Br),i(Br,Fr),i(Rr,Ur),i(Rr,Gr),i(Gr,zr),i(Rr,Jr),i(lu,Vr),i(lu,Yr),i(Yr,Qr),i(Qr,Kr),i(Yr,Zr),i(lu,Xr),i(lu,nk),nk.innerHTML='<code class="language-js"><span class="token comment">// filename: _config.js</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// initial props to passed to the component</span>\n  props<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> <span class="token comment">/*...*/</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n  <span class="token comment">// initial rendered html</span>\n  html<span class="token punctuation">:</span> <span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">,</span>\n  <span class="token comment">// test case</span>\n  <span class="token keyword">async</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> assert<span class="token punctuation">,</span> target <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// you can test the behavior of the component here</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>',i(lu,ak),i(lu,sk),i(sk,tk),i(sk,ek),i(ek,ok),i(sk,pk),i(lu,ck),i(lu,lk),lk.innerHTML='<code class="language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>\n\t<span class="token comment">// ...</span>\n\t<span class="token keyword">async</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> assert<span class="token punctuation">,</span> target<span class="token punctuation">,</span> window <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// find the element</span>\n\t\t<span class="token keyword">const</span> <span class="token punctuation">[</span>input1<span class="token punctuation">,</span> input2<span class="token punctuation">]</span> <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">"input"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token keyword">const</span> select <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"select"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token keyword">const</span> <span class="token punctuation">[</span>option1<span class="token punctuation">,</span> option2<span class="token punctuation">]</span> <span class="token operator">=</span> select<span class="token punctuation">.</span>childNodes<span class="token punctuation">;</span>\n\n    <span class="token comment">// uncheck the checkbox</span>\n\t\t<span class="token keyword">const</span> event <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">window<span class="token punctuation">.</span>Event</span><span class="token punctuation">(</span><span class="token string">"change"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tinput1<span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n\t\t<span class="token keyword">await</span> input1<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// verify the component updated correctly</span>\n\t\t<span class="token keyword">const</span> selections <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>select<span class="token punctuation">.</span>selectedOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tassert<span class="token punctuation">.</span><span class="token function">equal</span><span class="token punctuation">(</span>selections<span class="token punctuation">.</span>length<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tassert<span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token operator">!</span>selections<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>option1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\tassert<span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span>selections<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>option2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>',i(lu,ik),i(lu,uk),i(uk,rk),i(uk,kk),i(kk,hk),i(uk,dk),i(lu,fk),i(lu,gk),gk.innerHTML='<code class="language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// highlight-next-line</span>\n  solo<span class="token punctuation">:</span> <span class="token boolean">true</span>\n<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>',i(lu,mk),i(lu,vk),i(vk,bk),i(bk,Ek),i(vk,wk),i(vk,yk),i(yk,Ik),i(vk,xk),i(vk,_k),i(_k,Ok),i(vk,Sk),i(vk,Ck),i(Ck,jk),i(vk,Pk),i(vk,Ak),i(Ak,Tk),i(vk,$k),i(lu,Dk),i(lu,Lk),i(Lk,Hk),i(Lk,Rk),i(Rk,Mk),i(Lk,Nk),i(lu,Wk),i(lu,qk),i(qk,Bk),i(qk,Fk),i(Fk,Uk),i(qk,Gk),i(lu,zk),i(lu,Jk),Jk.innerHTML='<code class="language-js"><span class="token function">add_spread_attributes</span><span class="token punctuation">(</span><span class="token parameter">block<span class="token punctuation">:</span> Block</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// ...</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">\'select\'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    block<span class="token punctuation">.</span>chunks<span class="token punctuation">.</span>mount<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\n      b<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">@select_options(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>var<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.value);</span><span class="token template-punctuation string">&#96;</span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// highlight-start</span>\n    block<span class="token punctuation">.</span>chunks<span class="token punctuation">.</span>update<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\n      b<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">@select_options(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>var<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.value);</span><span class="token template-punctuation string">&#96;</span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// highlight-end</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(lu,Vk),i(lu,Yk),i(Yk,Qk),i(Yk,Kk),i(Kk,Zk),i(Yk,Xk),i(lu,nh),i(lu,ah),i(ah,sh),i(ah,th),i(th,eh),i(ah,oh),i(ah,ph),i(ph,ch),i(ah,lh),i(ah,ih),i(ih,uh),i(ah,rh),i(ah,kh),i(kh,hh),i(ah,dh),i(ah,fh),i(fh,gh),i(ah,mh),i(lu,vh),i(lu,bh),i(bh,Eh),i(bh,wh),i(wh,yh),i(bh,Ih),i(lu,xh),i(lu,_h),i(_h,Oh),i(lu,Sh),i(lu,Ch),i(Ch,jh),i(Ch,Ph),i(Ph,Ah),i(Ah,Th);i(Ch,$h),i(lu,Dh),i(lu,Lh),Lh.innerHTML='<code class="language-js"><span class="token function">add_spread_attributes</span><span class="token punctuation">(</span><span class="token parameter">block<span class="token punctuation">:</span> Block</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// ...</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">\'select\'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">const</span> dependencies <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    block<span class="token punctuation">.</span>chunks<span class="token punctuation">.</span>mount<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\n      b<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">@select_options(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>var<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.value);</span><span class="token template-punctuation string">&#96;</span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// highlight-start</span>\n    block<span class="token punctuation">.</span>chunks<span class="token punctuation">.</span>update<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\n      <span class="token comment">// block.renderer.dirty(...) will give me &#96;dirty &amp; bitmask&#96;</span>\n      b<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">if (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>block<span class="token punctuation">.</span>renderer<span class="token punctuation">.</span><span class="token function">dirty</span><span class="token punctuation">(</span>dependencies<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">) @select_options(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>var<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.value);</span><span class="token template-punctuation string">&#96;</span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">// highlight-end</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(lu,Hh),i(lu,Rh),i(Rh,Mh),i(lu,Nh),i(lu,Wh),Wh.innerHTML='<code class="language-js"><span class="token function">add_spread_attributes</span><span class="token punctuation">(</span><span class="token parameter">block<span class="token punctuation">:</span> Block</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// ...</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">\'select\'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// highlight-start</span>\n    <span class="token keyword">const</span> dependencies <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> attr <span class="token keyword">of</span> <span class="token keyword">this</span><span class="token punctuation">.</span>attributes<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> dep <span class="token keyword">of</span> attr<span class="token punctuation">.</span>node<span class="token punctuation">.</span>dependencies<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n        dependencies<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span>\n    <span class="token punctuation">&#125;</span>\n    <span class="token comment">// highlight-end</span>\n    block<span class="token punctuation">.</span>chunks<span class="token punctuation">.</span>mount<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\n      b<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">@select_options(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>var<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.value);</span><span class="token template-punctuation string">&#96;</span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n    block<span class="token punctuation">.</span>chunks<span class="token punctuation">.</span>update<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\n      b<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">if (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>block<span class="token punctuation">.</span>renderer<span class="token punctuation">.</span><span class="token function">dirty</span><span class="token punctuation">(</span>dependencies<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">) @select_options(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">this</span><span class="token punctuation">.</span>var<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>data<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.value);</span><span class="token template-punctuation string">&#96;</span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(lu,qh),i(lu,Bh),i(Bh,Fh),u(n,Uh,a),u(n,Gh,a),i(Gh,zh),i(zh,Jh),i(Jh,Vh),i(Gh,Yh),i(Gh,Qh),i(Qh,Kh),i(Qh,Zh),i(Zh,Xh),i(Qh,nd),i(Qh,ad),i(ad,sd),i(Qh,td),i(Gh,ed),i(Gh,od),i(od,pd),i(od,cd),i(cd,ld),i(od,id),i(Gh,ud),i(Gh,rd),i(rd,kd),i(rd,hd),i(hd,dd),i(rd,fd),i(Gh,gd),i(Gh,md),i(md,vd),i(Gh,bd),i(Gh,Ed),i(Gh,wd),i(Gh,yd),i(yd,Id),i(yd,xd),i(xd,_d),i(yd,Od),i(Gh,Sd),i(Gh,Cd),i(Cd,jd),i(Cd,Pd),i(Pd,Ad),i(Cd,Td)},p:n,d(n){n&&r(s),n&&r($),n&&r(D),n&&r(wn),n&&r(yn),n&&r(sa),n&&r(ta),n&&r(us),n&&r(rs),n&&r(cu),n&&r(lu),n&&r(Uh),n&&r(Gh)}}}function hn(n){let s,t;const e=[dn];let o={$$slots:{default:[kn]},$$scope:{ctx:n}};for(let n=0;n<e.length;n+=1)o=a(o,e[n]);return s=new rn({props:o}),{c(){F(s.$$.fragment)},l(n){U(s.$$.fragment,n)},m(n,a){G(s,n,a),t=!0},p(n,[a]){const t=0&a?function(n,a){const s={},t={},e={$$scope:1};let o=n.length;for(;o--;){const p=n[o],c=a[o];if(c){for(const n in p)n in c||(t[n]=1);for(const n in c)e[n]||(s[n]=c[n],e[n]=1);n[o]=c}else for(const n in p)e[n]=1}for(const n in t)n in s||(s[n]=void 0);return s}(e,[(o=dn,"object"==typeof o&&null!==o?o:{})]):{};var o;1&a&&(t.$$scope={dirty:a,ctx:n}),s.$set(t)},i(n){t||(q(s.$$.fragment,n),t=!0)},o(n){B(s.$$.fragment,n),t=!1},d(n){z(s,n)}}}const dn={title:"Contributing to Svelte - Fixing issue #4392",date:"2020-05-23T08:00:00Z",tags:["Svelte","JavaScript","Open Source"],series:"Contributing to Svelte",description:"I am going to tell you an anecdote on how I investigated and fixed a bug in Svelte. I documented down my train of thoughts as detailed as possible. I hope this gives anyone who is reading, a glimpse on how to work on the Svelte source code.",slug:"contributing-to-svelte-fixing-issue-4392",type:"blog"};class fn extends Y{constructor(n){super(),V(this,n,null,hn,p,{})}}setTimeout(()=>{new fn({target:document.querySelector("#app"),hydrate:!0});if(document.querySelector(".twitter-tweet")){const n=document.createElement("script");n.async=!0,n.src="https://platform.twitter.com/widgets.js",n.charset="utf-8",document.body.appendChild(n)}},3e3);
