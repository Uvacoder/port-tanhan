function n(){}function a(n,a){for(const s in a)n[s]=a[s];return n}function s(n){return n()}function t(){return Object.create(null)}function e(n){n.forEach(s)}function o(n){return"function"==typeof n}function p(n,a){return n!=n?a==a:n!==a||n&&"object"==typeof n||"function"==typeof n}function r(n,s,t,e){return n[1]&&e?a(t.ctx.slice(),n[1](e(s))):t.ctx}function c(n,a,s,t,e,o,p){const c=function(n,a,s,t){if(n[2]&&t){const e=n[2](t(s));if(void 0===a.dirty)return e;if("object"==typeof e){const n=[],s=Math.max(a.dirty.length,e.length);for(let t=0;t<s;t+=1)n[t]=a.dirty[t]|e[t];return n}return a.dirty|e}return a.dirty}(a,t,e,o);if(c){const e=r(a,s,t,p);n.p(e,c)}}function i(n,a){n.appendChild(a)}function l(n,a,s){n.insertBefore(a,s||null)}function u(n){n.parentNode.removeChild(n)}function h(n,a){for(let s=0;s<n.length;s+=1)n[s]&&n[s].d(a)}function k(n){return document.createElement(n)}function f(n){return document.createElementNS("http://www.w3.org/2000/svg",n)}function d(n){return document.createTextNode(n)}function m(){return d(" ")}function g(){return d("")}function w(n,a,s){null==s?n.removeAttribute(a):n.getAttribute(a)!==s&&n.setAttribute(a,s)}function v(n){return Array.from(n.childNodes)}function E(n,a,s,t){for(let t=0;t<n.length;t+=1){const e=n[t];if(e.nodeName===a){let a=0;const o=[];for(;a<e.attributes.length;){const n=e.attributes[a++];s[n.name]||o.push(n.name)}for(let n=0;n<o.length;n++)e.removeAttribute(o[n]);return n.splice(t,1)[0]}}return t?f(a):k(a)}function y(n,a){for(let s=0;s<n.length;s+=1){const t=n[s];if(3===t.nodeType)return t.data=""+a,n.splice(s,1)[0]}return d(a)}function b(n){return y(n," ")}function x(n,a){a=""+a,n.wholeText!==a&&(n.data=a)}function j(n,a){n.value=null==a?"":a}function S(n,a,s,t){n.style.setProperty(a,s,t?"important":"")}class O{constructor(n=null){this.a=n,this.e=this.n=null}m(n,a,s=null){this.e||(this.e=k(a.nodeName),this.t=a,this.h(n)),this.i(s)}h(n){this.e.innerHTML=n,this.n=Array.from(this.e.childNodes)}i(n){for(let a=0;a<this.n.length;a+=1)l(this.t,this.n[a],n)}p(n){this.d(),this.h(n),this.i(this.a)}d(){this.n.forEach(u)}}let P;function A(n){P=n}function T(n){(function(){if(!P)throw new Error("Function called outside component initialization");return P})().$$.on_mount.push(n)}const L=[],I=[],C=[],N=[],$=Promise.resolve();let D=!1;function M(n){C.push(n)}let J=!1;const H=new Set;function q(){if(!J){J=!0;do{for(let n=0;n<L.length;n+=1){const a=L[n];A(a),U(a.$$)}for(L.length=0;I.length;)I.pop()();for(let n=0;n<C.length;n+=1){const a=C[n];H.has(a)||(H.add(a),a())}C.length=0}while(L.length);for(;N.length;)N.pop()();D=!1,J=!1,H.clear()}}function U(n){if(null!==n.fragment){n.update(),e(n.before_update);const a=n.dirty;n.dirty=[-1],n.fragment&&n.fragment.p(n.ctx,a),n.after_update.forEach(M)}}const R=new Set;function W(n,a){n&&n.i&&(R.delete(n),n.i(a))}function B(n,a,s,t){if(n&&n.o){if(R.has(n))return;R.add(n),(void 0).c.push(()=>{R.delete(n),t&&(s&&n.d(1),t())}),n.o(a)}}function _(n){n&&n.c()}function F(n,a){n&&n.l(a)}function G(n,a,t){const{fragment:p,on_mount:r,on_destroy:c,after_update:i}=n.$$;p&&p.m(a,t),M(()=>{const a=r.map(s).filter(o);c?c.push(...a):e(a),n.$$.on_mount=[]}),i.forEach(M)}function z(n,a){const s=n.$$;null!==s.fragment&&(e(s.on_destroy),s.fragment&&s.fragment.d(a),s.on_destroy=s.fragment=null,s.ctx=[])}function V(n,a){-1===n.$$.dirty[0]&&(L.push(n),D||(D=!0,$.then(q)),n.$$.dirty.fill(0)),n.$$.dirty[a/31|0]|=1<<a%31}function K(a,s,o,p,r,c,i=[-1]){const l=P;A(a);const h=s.props||{},k=a.$$={fragment:null,ctx:null,props:c,update:n,not_equal:r,bound:t(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(l?l.$$.context:[]),callbacks:t(),dirty:i};let f=!1;if(k.ctx=o?o(a,h,(n,s,...t)=>{const e=t.length?t[0]:s;return k.ctx&&r(k.ctx[n],k.ctx[n]=e)&&(k.bound[n]&&k.bound[n](e),f&&V(a,n)),s}):[],k.update(),f=!0,e(k.before_update),k.fragment=!!p&&p(k.ctx),s.target){if(s.hydrate){const n=v(s.target);k.fragment&&k.fragment.l(n),n.forEach(u)}else k.fragment&&k.fragment.c();s.intro&&W(a.$$.fragment),G(a,s.target,s.anchor),q()}A(l)}class Y{$destroy(){z(this,1),this.$destroy=n}$on(n,a){const s=this.$$.callbacks[n]||(this.$$.callbacks[n]=[]);return s.push(a),()=>{const n=s.indexOf(a);-1!==n&&s.splice(n,1)}}$set(){}}function X(a){let s,t,e,o,p,r,c,h,g,x,j,S,O,P,A,T,L,I,C,N,$,D,M,J,H,q,U,R,W,B,_,F,G,z,V;return{c(){s=k("header"),t=k("nav"),e=k("ul"),o=k("li"),p=k("a"),r=d("Tan Li Hau"),c=m(),h=k("li"),g=k("a"),x=d("About"),j=m(),S=k("li"),O=k("a"),P=d("Writings"),A=m(),T=k("li"),L=k("a"),I=d("Talks"),C=m(),N=k("li"),$=k("a"),D=d("Notes"),M=m(),J=k("li"),H=k("a"),q=d("Newsletter"),U=m(),R=k("li"),W=k("a"),B=f("svg"),_=f("path"),F=m(),G=k("a"),z=f("svg"),V=f("path"),this.h()},l(n){s=E(n,"HEADER",{class:!0});var a=v(s);t=E(a,"NAV",{});var i=v(t);e=E(i,"UL",{class:!0});var l=v(e);o=E(l,"LI",{class:!0});var k=v(o);p=E(k,"A",{href:!0,class:!0});var f=v(p);r=y(f,"Tan Li Hau"),f.forEach(u),k.forEach(u),c=b(l),h=E(l,"LI",{class:!0});var d=v(h);g=E(d,"A",{href:!0,class:!0});var m=v(g);x=y(m,"About"),m.forEach(u),d.forEach(u),j=b(l),S=E(l,"LI",{class:!0});var w=v(S);O=E(w,"A",{href:!0,class:!0});var K=v(O);P=y(K,"Writings"),K.forEach(u),w.forEach(u),A=b(l),T=E(l,"LI",{class:!0});var Y=v(T);L=E(Y,"A",{href:!0,class:!0});var X=v(L);I=y(X,"Talks"),X.forEach(u),Y.forEach(u),C=b(l),N=E(l,"LI",{class:!0});var Q=v(N);$=E(Q,"A",{href:!0,class:!0});var Z=v($);D=y(Z,"Notes"),Z.forEach(u),Q.forEach(u),M=b(l),J=E(l,"LI",{class:!0});var nn=v(J);H=E(nn,"A",{href:!0,class:!0});var an=v(H);q=y(an,"Newsletter"),an.forEach(u),nn.forEach(u),U=b(l),R=E(l,"LI",{class:!0});var sn=v(R);W=E(sn,"A",{"aria-label":!0,href:!0,class:!0});var tn=v(W);B=E(tn,"svg",{viewBox:!0,width:!0,height:!0,class:!0},1);var en=v(B);_=E(en,"path",{d:!0},1),v(_).forEach(u),en.forEach(u),tn.forEach(u),F=b(sn),G=E(sn,"A",{"aria-label":!0,href:!0,class:!0});var on=v(G);z=E(on,"svg",{viewBox:!0,width:!0,height:!0,class:!0},1);var pn=v(z);V=E(pn,"path",{d:!0},1),v(V).forEach(u),pn.forEach(u),on.forEach(u),sn.forEach(u),l.forEach(u),i.forEach(u),a.forEach(u),this.h()},h(){w(p,"href","/"),w(p,"class","svelte-f3e4uo"),w(o,"class","svelte-f3e4uo"),w(g,"href","/about"),w(g,"class","svelte-f3e4uo"),w(h,"class","svelte-f3e4uo"),w(O,"href","/blogs"),w(O,"class","svelte-f3e4uo"),w(S,"class","svelte-f3e4uo"),w(L,"href","/talks"),w(L,"class","svelte-f3e4uo"),w(T,"class","svelte-f3e4uo"),w($,"href","/notes"),w($,"class","svelte-f3e4uo"),w(N,"class","svelte-f3e4uo"),w(H,"href","/newsletter"),w(H,"class","svelte-f3e4uo"),w(J,"class","svelte-f3e4uo"),w(_,"d","M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66\n    10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5\n    4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"),w(B,"viewBox","0 0 24 24"),w(B,"width","1em"),w(B,"height","1em"),w(B,"class","svelte-f3e4uo"),w(W,"aria-label","Twitter account"),w(W,"href","https://twitter.com/lihautan"),w(W,"class","svelte-f3e4uo"),w(V,"d","M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0\n    0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07\n    5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65\n    5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42\n    3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"),w(z,"viewBox","0 0 24 24"),w(z,"width","1em"),w(z,"height","1em"),w(z,"class","svelte-f3e4uo"),w(G,"aria-label","Github account"),w(G,"href","https://github.com/tanhauhau"),w(G,"class","svelte-f3e4uo"),w(R,"class","social svelte-f3e4uo"),w(e,"class","svelte-f3e4uo"),w(s,"class","svelte-f3e4uo")},m(n,a){l(n,s,a),i(s,t),i(t,e),i(e,o),i(o,p),i(p,r),i(e,c),i(e,h),i(h,g),i(g,x),i(e,j),i(e,S),i(S,O),i(O,P),i(e,A),i(e,T),i(T,L),i(L,I),i(e,C),i(e,N),i(N,$),i($,D),i(e,M),i(e,J),i(J,H),i(H,q),i(e,U),i(e,R),i(R,W),i(W,B),i(B,_),i(R,F),i(R,G),i(G,z),i(z,V)},p:n,i:n,o:n,d(n){n&&u(s)}}}class Q extends Y{constructor(n){super(),K(this,n,null,X,p,{})}}function Z(a){let s,t,e,o,p,r,c,h,f,g,x,S,O,P,A,T,L,I,C,N;return{c(){s=k("div"),t=k("h1"),e=d("Subscribe to my newsletter"),o=m(),p=k("h2"),r=d("Get the latest blog posts and project updates delivered right to your inbox"),c=m(),h=k("form"),f=k("div"),g=k("input"),x=m(),S=k("input"),P=m(),A=k("input"),T=m(),L=k("p"),I=d("Powered by Buttondown."),this.h()},l(n){s=E(n,"DIV",{class:!0});var a=v(s);t=E(a,"H1",{});var i=v(t);e=y(i,"Subscribe to my newsletter"),i.forEach(u),o=b(a),p=E(a,"H2",{class:!0});var l=v(p);r=y(l,"Get the latest blog posts and project updates delivered right to your inbox"),l.forEach(u),c=b(a),h=E(a,"FORM",{action:!0,method:!0,target:!0,onsubmit:!0,class:!0});var k=v(h);f=E(k,"DIV",{class:!0});var d=v(f);g=E(d,"INPUT",{type:!0,name:!0,id:!0,"aria-label":!0,placeholder:!0,class:!0}),x=b(d),S=E(d,"INPUT",{type:!0,value:!0,disabled:!0,class:!0}),d.forEach(u),P=b(k),A=E(k,"INPUT",{type:!0,value:!0,name:!0,class:!0}),T=b(k),L=E(k,"P",{class:!0});var m=v(L);I=y(m,"Powered by Buttondown."),m.forEach(u),k.forEach(u),a.forEach(u),this.h()},h(){w(p,"class","svelte-1k1s1co"),w(g,"type","email"),w(g,"name","email"),w(g,"id","bd-email"),w(g,"aria-label","email address"),w(g,"placeholder","youremail@example.com"),w(g,"class","svelte-1k1s1co"),w(S,"type","submit"),S.value="Subscribe",S.disabled=O=!a[0],w(S,"class","svelte-1k1s1co"),w(f,"class","form-item svelte-1k1s1co"),w(A,"type","hidden"),A.value="1",w(A,"name","embed"),w(A,"class","svelte-1k1s1co"),w(L,"class","svelte-1k1s1co"),w(h,"action","https://buttondown.email/api/emails/embed-subscribe/lihautan"),w(h,"method","post"),w(h,"target","popupwindow"),w(h,"onsubmit","window.open('https://buttondown.email/lihautan', 'popupwindow')"),w(h,"class","embeddable-buttondown-form"),w(s,"class","form svelte-1k1s1co")},m(n,u){var k,d,m,w;l(n,s,u),i(s,t),i(t,e),i(s,o),i(s,p),i(p,r),i(s,c),i(s,h),i(h,f),i(f,g),j(g,a[0]),i(f,x),i(f,S),i(h,P),i(h,A),i(h,T),i(h,L),i(L,I),C||(k=g,d="input",m=a[1],k.addEventListener(d,m,w),N=()=>k.removeEventListener(d,m,w),C=!0)},p(n,[a]){1&a&&g.value!==n[0]&&j(g,n[0]),1&a&&O!==(O=!n[0])&&(S.disabled=O)},i:n,o:n,d(n){n&&u(s),C=!1,N()}}}function nn(n,a,s){let t;return[t,function(){t=this.value,s(0,t)}]}class an extends Y{constructor(n){super(),K(this,n,nn,Z,p,{})}}function sn(n){return T(()=>(setTimeout(()=>{if(window.innerWidth>1080){const n=document.createElement("script");n.async=!0,n.type="text/javascript",n.src="//cdn.carbonads.com/carbon.js?serve=CE7ITK3E&placement=lihautancom",n.id="_carbonads_js",document.body.appendChild(n)}},5e3),()=>{try{const n=document.getElementById("carbonads");n.parentNode.removeChild(n)}catch(n){}})),[]}class tn extends Y{constructor(n){super(),K(this,n,sn,null,p,{})}}var en="https://lihautan.com/json-parser-with-javascript/assets/hero-twitter-4080d421.jpg";function on(n,a,s){const t=n.slice();return t[6]=a[s],t}function pn(n,a,s){const t=n.slice();return t[6]=a[s],t}function rn(n){let a,s;return{c(){a=k("meta"),this.h()},l(n){a=E(n,"META",{name:!0,content:!0}),this.h()},h(){w(a,"name","keywords"),w(a,"content",s=n[6])},m(n,s){l(n,a,s)},p(n,t){4&t&&s!==(s=n[6])&&w(a,"content",s)},d(n){n&&u(a)}}}function cn(n){let a,s,t=n[6]+"";return{c(){a=k("span"),s=d(t),this.h()},l(n){a=E(n,"SPAN",{class:!0});var e=v(a);s=y(e,t),e.forEach(u),this.h()},h(){w(a,"class","svelte-9tqnza")},m(n,t){l(n,a,t),i(a,s)},p(n,a){4&a&&t!==(t=n[6]+"")&&x(s,t)},d(n){n&&u(a)}}}function ln(n){let a,s,t,e,o,p,f,j,S,P,A,T,L,I,C,N,$,D,M,J,H,q,U,R,V,K,Y,X,Z,nn,sn,ln,un,hn,kn,fn,dn=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"Article",author:n[3],copyrightHolder:n[3],copyrightYear:"2020",creator:n[3],publisher:n[3],description:n[1],headline:n[0],name:n[0],inLanguage:"en"})}<\/script>`,mn=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"BreadcrumbList",description:"Breadcrumbs list",name:"Breadcrumbs",itemListElement:[{"@type":"ListItem",item:{"@id":"https://lihautan.com",name:"Homepage"},position:1},{"@type":"ListItem",item:{"@id":"https%3A%2F%2Flihautan.com%2Fjson-parser-with-javascript",name:n[0]},position:2}]})}<\/script>`;document.title=a=n[0]+" | Tan Li Hau";let gn=n[2],wn=[];for(let a=0;a<gn.length;a+=1)wn[a]=rn(pn(n,gn,a));U=new Q({});let vn=n[2],En=[];for(let a=0;a<vn.length;a+=1)En[a]=cn(on(n,vn,a));const yn=n[5].default,bn=function(n,a,s,t){if(n){const e=r(n,a,s,t);return n[0](e)}}(yn,n,n[4],null);return un=new an({}),kn=new tn({}),{c(){s=k("meta"),t=k("meta"),e=k("meta"),o=k("meta"),p=k("meta"),f=k("meta"),j=k("meta"),S=k("meta"),P=k("meta"),A=k("meta"),T=k("meta");for(let n=0;n<wn.length;n+=1)wn[n].c();L=k("meta"),I=k("meta"),N=g(),D=g(),M=m(),J=k("a"),H=d("Skip to content"),q=m(),_(U.$$.fragment),R=m(),V=k("main"),K=k("h1"),Y=d(n[0]),X=m();for(let n=0;n<En.length;n+=1)En[n].c();Z=m(),nn=k("article"),bn&&bn.c(),sn=m(),ln=k("footer"),_(un.$$.fragment),hn=m(),_(kn.$$.fragment),this.h()},l(a){const r=function(n,a=document.body){return Array.from(a.querySelectorAll(n))}('[data-svelte="svelte-n0q11s"]',document.head);s=E(r,"META",{name:!0,content:!0}),t=E(r,"META",{name:!0,content:!0}),e=E(r,"META",{name:!0,content:!0}),o=E(r,"META",{name:!0,content:!0}),p=E(r,"META",{name:!0,content:!0}),f=E(r,"META",{name:!0,content:!0}),j=E(r,"META",{name:!0,content:!0}),S=E(r,"META",{name:!0,content:!0}),P=E(r,"META",{name:!0,content:!0}),A=E(r,"META",{name:!0,content:!0}),T=E(r,"META",{name:!0,content:!0});for(let n=0;n<wn.length;n+=1)wn[n].l(r);L=E(r,"META",{itemprop:!0,content:!0}),I=E(r,"META",{itemprop:!0,content:!0}),N=g(),D=g(),r.forEach(u),M=b(a),J=E(a,"A",{href:!0,class:!0});var c=v(J);H=y(c,"Skip to content"),c.forEach(u),q=b(a),F(U.$$.fragment,a),R=b(a),V=E(a,"MAIN",{id:!0,class:!0});var i=v(V);K=E(i,"H1",{});var l=v(K);Y=y(l,n[0]),l.forEach(u),X=b(i);for(let n=0;n<En.length;n+=1)En[n].l(i);Z=b(i),nn=E(i,"ARTICLE",{});var h=v(nn);bn&&bn.l(h),h.forEach(u),i.forEach(u),sn=b(a),ln=E(a,"FOOTER",{class:!0});var k=v(ln);F(un.$$.fragment,k),hn=b(k),F(kn.$$.fragment,k),k.forEach(u),this.h()},h(){w(s,"name","description"),w(s,"content",n[1]),w(t,"name","image"),w(t,"content",en),w(e,"name","og:image"),w(e,"content",en),w(o,"name","og:title"),w(o,"content",n[0]),w(p,"name","og:description"),w(p,"content",n[1]),w(f,"name","og:type"),w(f,"content","website"),w(j,"name","twitter:card"),w(j,"content","summary_large_image"),w(S,"name","twitter:creator"),w(S,"content","@lihautan"),w(P,"name","twitter:title"),w(P,"content",n[0]),w(A,"name","twitter:description"),w(A,"content",n[1]),w(T,"name","twitter:image"),w(T,"content",en),w(L,"itemprop","url"),w(L,"content","https%3A%2F%2Flihautan.com%2Fjson-parser-with-javascript"),w(I,"itemprop","image"),w(I,"content",en),C=new O(N),$=new O(D),w(J,"href","#content"),w(J,"class","skip svelte-9tqnza"),w(V,"id","content"),w(V,"class","blog svelte-9tqnza"),w(ln,"class","svelte-9tqnza")},m(n,a){i(document.head,s),i(document.head,t),i(document.head,e),i(document.head,o),i(document.head,p),i(document.head,f),i(document.head,j),i(document.head,S),i(document.head,P),i(document.head,A),i(document.head,T);for(let n=0;n<wn.length;n+=1)wn[n].m(document.head,null);i(document.head,L),i(document.head,I),C.m(dn,document.head),i(document.head,N),$.m(mn,document.head),i(document.head,D),l(n,M,a),l(n,J,a),i(J,H),l(n,q,a),G(U,n,a),l(n,R,a),l(n,V,a),i(V,K),i(K,Y),i(V,X);for(let n=0;n<En.length;n+=1)En[n].m(V,null);i(V,Z),i(V,nn),bn&&bn.m(nn,null),l(n,sn,a),l(n,ln,a),G(un,ln,null),i(ln,hn),G(kn,ln,null),fn=!0},p(n,[t]){if((!fn||1&t)&&a!==(a=n[0]+" | Tan Li Hau")&&(document.title=a),(!fn||2&t)&&w(s,"content",n[1]),(!fn||1&t)&&w(o,"content",n[0]),(!fn||2&t)&&w(p,"content",n[1]),(!fn||1&t)&&w(P,"content",n[0]),(!fn||2&t)&&w(A,"content",n[1]),4&t){let a;for(gn=n[2],a=0;a<gn.length;a+=1){const s=pn(n,gn,a);wn[a]?wn[a].p(s,t):(wn[a]=rn(s),wn[a].c(),wn[a].m(L.parentNode,L))}for(;a<wn.length;a+=1)wn[a].d(1);wn.length=gn.length}if((!fn||3&t)&&dn!==(dn=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"Article",author:n[3],copyrightHolder:n[3],copyrightYear:"2020",creator:n[3],publisher:n[3],description:n[1],headline:n[0],name:n[0],inLanguage:"en"})}<\/script>`)&&C.p(dn),(!fn||1&t)&&mn!==(mn=`<script type="application/ld+json">${JSON.stringify({"@context":"https://schema.org","@type":"BreadcrumbList",description:"Breadcrumbs list",name:"Breadcrumbs",itemListElement:[{"@type":"ListItem",item:{"@id":"https://lihautan.com",name:"Homepage"},position:1},{"@type":"ListItem",item:{"@id":"https%3A%2F%2Flihautan.com%2Fjson-parser-with-javascript",name:n[0]},position:2}]})}<\/script>`)&&$.p(mn),(!fn||1&t)&&x(Y,n[0]),4&t){let a;for(vn=n[2],a=0;a<vn.length;a+=1){const s=on(n,vn,a);En[a]?En[a].p(s,t):(En[a]=cn(s),En[a].c(),En[a].m(V,Z))}for(;a<En.length;a+=1)En[a].d(1);En.length=vn.length}bn&&bn.p&&16&t&&c(bn,yn,n,n[4],t,null,null)},i(n){fn||(W(U.$$.fragment,n),W(bn,n),W(un.$$.fragment,n),W(kn.$$.fragment,n),fn=!0)},o(n){B(U.$$.fragment,n),B(bn,n),B(un.$$.fragment,n),B(kn.$$.fragment,n),fn=!1},d(n){u(s),u(t),u(e),u(o),u(p),u(f),u(j),u(S),u(P),u(A),u(T),h(wn,n),u(L),u(I),u(N),n&&C.d(),u(D),n&&$.d(),n&&u(M),n&&u(J),n&&u(q),z(U,n),n&&u(R),n&&u(V),h(En,n),bn&&bn.d(n),n&&u(sn),n&&u(ln),z(un),z(kn)}}}function un(n,a,s){let{title:t=""}=a,{description:e=""}=a,{tags:o=[]}=a;const p={"@type":"Person",name:"Tan Li Hau"};let{$$slots:r={},$$scope:c}=a;return n.$set=n=>{"title"in n&&s(0,t=n.title),"description"in n&&s(1,e=n.description),"tags"in n&&s(2,o=n.tags),"$$scope"in n&&s(4,c=n.$$scope)},[t,e,o,p,c,r]}class hn extends Y{constructor(n){super(),K(this,n,un,ln,p,{title:0,description:1,tags:2})}}function kn(a){let s,t,e,o,p,r,c,h,f,g,x,j,O,P,A,T,L,I,C,N,$,D,M,J,H,q,U,R,W,B,_,F,G,z,V,K,Y,X,Q,Z,nn,an,sn,tn,en,on,pn,rn,cn,ln,un,hn,kn,fn,dn,mn,gn,wn,vn,En,yn,bn,xn,jn,Sn,On,Pn,An,Tn,Ln,In,Cn,Nn,$n,Dn,Mn,Jn,Hn,qn,Un,Rn,Wn,Bn,_n,Fn,Gn,zn,Vn,Kn,Yn,Xn,Qn,Zn,na,aa,sa,ta,ea,oa,pa,ra,ca,ia,la,ua,ha,ka,fa,da,ma,ga,wa,va,Ea,ya,ba,xa,ja,Sa,Oa,Pa,Aa,Ta,La,Ia,Ca,Na,$a,Da,Ma,Ja,Ha,qa,Ua,Ra,Wa,Ba,_a,Fa,Ga,za,Va,Ka,Ya,Xa,Qa,Za,ns,as,ss,ts,es,os,ps,rs,cs,is,ls,us,hs,ks,fs,ds,ms,gs,ws,vs,Es,ys,bs,xs,js,Ss,Os,Ps,As,Ts,Ls,Is,Cs,Ns,$s,Ds,Ms,Js,Hs,qs,Us,Rs,Ws,Bs,_s,Fs,Gs,zs,Vs,Ks,Ys,Xs,Qs,Zs,nt,at,st,tt,et,ot,pt,rt,ct,it,lt,ut,ht,kt,ft,dt,mt,gt,wt,vt,Et,yt,bt,xt,jt,St,Ot,Pt,At,Tt,Lt,It,Ct,Nt,$t,Dt,Mt,Jt,Ht,qt,Ut,Rt,Wt,Bt,_t,Ft,Gt,zt,Vt,Kt,Yt,Xt,Qt,Zt,ne,ae,se,te,ee,oe,pe,re,ce,ie,le,ue,he,ke,fe,de,me,ge,we,ve,Ee,ye,be,xe,je,Se,Oe,Pe,Ae,Te,Le,Ie,Ce,Ne,$e,De,Me,Je,He,qe,Ue,Re,We,Be,_e,Fe,Ge,ze,Ve,Ke,Ye,Xe,Qe,Ze,no,ao,so,to,eo,oo,po,ro,co,io,lo,uo,ho,ko,fo,mo,go,wo,vo,Eo,yo,bo,xo,jo,So,Oo,Po,Ao,To,Lo,Io,Co,No,$o,Do,Mo,Jo,Ho,qo,Uo,Ro,Wo,Bo,_o,Fo,Go,zo,Vo,Ko,Yo,Xo,Qo,Zo,np,ap,sp,tp,ep,op,pp,rp,cp,ip,lp,up,hp,kp,fp,dp,mp,gp,wp,vp,Ep,yp,bp,xp,jp,Sp,Op,Pp,Ap,Tp,Lp,Ip,Cp,Np,$p,Dp,Mp,Jp,Hp,qp,Up,Rp,Wp,Bp,_p,Fp,Gp,zp,Vp,Kp,Yp,Xp,Qp,Zp,nr,ar,sr,tr,er,or,pr,rr,cr,ir,lr,ur,hr,kr,fr,dr,mr,gr,wr,vr,Er,yr,br,xr,jr,Sr,Or,Pr,Ar,Tr,Lr,Ir,Cr,Nr,$r,Dr,Mr,Jr,Hr,qr,Ur,Rr,Wr,Br,_r,Fr,Gr,zr,Vr,Kr,Yr,Xr,Qr,Zr,nc,ac,sc,tc,ec,oc,pc,rc,cc,ic,lc,uc,hc,kc,fc,dc,mc,gc,wc,vc,Ec,yc,bc,xc,jc,Sc,Oc,Pc,Ac,Tc,Lc,Ic,Cc,Nc,$c,Dc,Mc,Jc,Hc,qc,Uc,Rc,Wc,Bc,_c,Fc,Gc,zc,Vc,Kc,Yc,Xc,Qc,Zc,ni,ai,si,ti,ei,oi,pi,ri,ci,ii,li,ui,hi,ki,fi,di,mi,gi,wi,vi,Ei,yi,bi,xi,ji,Si,Oi,Pi,Ai,Ti,Li,Ii,Ci,Ni,$i,Di,Mi,Ji,Hi,qi,Ui,Ri,Wi,Bi,_i,Fi,Gi,zi,Vi,Ki,Yi,Xi,Qi,Zi,nl,al,sl,tl,el,ol,pl,rl,cl,il,ll,ul,hl,kl,fl,dl,ml,gl,wl,vl,El,yl,bl;return{c(){s=k("section"),t=k("ul"),e=k("li"),o=k("a"),p=d("Understand the grammar"),r=k("li"),c=k("a"),h=d("Implementing the parser"),f=k("li"),g=k("a"),x=d("Handling the unexpected input"),j=k("ul"),O=k("li"),P=k("a"),A=d("Unexpected token"),T=k("li"),L=k("a"),I=d("Unexpected end of string"),C=k("li"),N=k("a"),$=d("Going the extra mile"),D=k("ul"),M=k("li"),J=k("a"),H=d("Error code and standard error message"),q=k("li"),U=k("a"),R=d("A better view of what went wrong"),W=k("li"),B=k("a"),_=d("Suggestions for error recovery"),F=k("li"),G=k("a"),z=d("Summary"),V=m(),K=k("p"),Y=d("The interview question of the week for this week on Cassidoo's weekly newsletter is,"),X=m(),Q=k("blockquote"),Z=k("p"),nn=d("Write a function that takes in a string of valid JSON and converts it to an object (or whatever your chosen language uses, dicts, maps, etc).\nExample input:"),an=m(),sn=k("pre"),tn=m(),en=k("p"),on=d("At one point, I was tempted to just to write:"),pn=m(),rn=k("pre"),cn=m(),ln=k("p"),un=d("But, I thought, I've written quite a few articles about AST:"),hn=m(),kn=k("ul"),fn=k("li"),dn=k("a"),mn=d("Creating custom JavaScript syntax with Babel"),gn=m(),wn=k("li"),vn=k("a"),En=d("Step-by-step guide for writing a custom babel transformation"),yn=m(),bn=k("li"),xn=k("a"),jn=d("Manipulating AST with JavaScript"),Sn=m(),On=k("p"),Pn=d("which covers the overview of the compiler pipeline, as well as how to manipulate AST, but I haven't covered much on how to implement a parser."),An=m(),Tn=k("p"),Ln=d("That's because, implementing a JavaScript compiler in an article is a task too daunting for me."),In=m(),Cn=k("p"),Nn=d("Well, fret not. JSON is also a language. It has its own grammar, which you can refer from "),$n=k("a"),Dn=d("the specifications"),Mn=d(". The knowledge and technique you need to write a JSON parser is transferrable to writing a JS parser."),Jn=m(),Hn=k("p"),qn=d("So, let's start writing a JSON parser!"),Un=m(),Rn=k("section"),Wn=k("h2"),Bn=k("a"),_n=d("Understand the grammar"),Fn=m(),Gn=k("p"),zn=d("If you look at "),Vn=k("a"),Kn=d("the specification page"),Yn=d(", there's 2 diagrams:"),Xn=m(),Qn=k("ul"),Zn=k("li"),na=k("a"),aa=d("The syntax diagram (or railroad diagram)"),sa=d(" on the left,"),ta=m(),ea=k("p"),oa=k("img"),ra=m(),ca=k("small"),ia=d("Image source: https://www.json.org/img/object.png"),la=m(),ua=k("ul"),ha=k("li"),ka=k("a"),fa=d("The McKeeman Form"),da=d(", a variant of "),ma=k("a"),ga=d("Backus-Naur Form (BNF)"),wa=d(", on the right"),va=m(),Ea=k("pre"),ya=m(),ba=k("p"),xa=d("Both diagrams are equivalent."),ja=m(),Sa=k("p"),Oa=d("One is visual and one is text based. The text based grammar syntax, Backus-Naur Form, is usually fed to another parser that parse this grammar and generate a parser for it. Speaking of parser-ception! 🤯"),Pa=m(),Aa=k("p"),Ta=d("In this article, we will focus on the railroad diagram, because it is visual and seemed to be more friendly to me."),La=m(),Ia=k("p"),Ca=d("Lets' look at the first railroad diagram:"),Na=m(),$a=k("p"),Da=k("img"),Ja=m(),Ha=k("small"),qa=d("Image source: https://www.json.org/img/object.png"),Ua=m(),Ra=k("p"),Wa=d("So this is the grammar for "),Ba=k("strong"),_a=d('"object"'),Fa=d(" in JSON."),Ga=m(),za=k("p"),Va=d("We start from the left, following the arrow, and then we end at the right."),Ka=m(),Ya=k("p"),Xa=d("The circles, eg "),Qa=k("code"),Za=d("{"),ns=d(", "),as=k("code"),ss=d(","),ts=d(", "),es=k("code"),os=d(":"),ps=d(", "),rs=k("code"),cs=d("}"),is=d(", are the characters, and the boxes eg: "),ls=k("code"),us=d("whitespace"),hs=d(", "),ks=k("code"),fs=d("string"),ds=d(", and "),ms=k("code"),gs=d("value"),ws=d(' is a placeholder for another grammar. So to parse the "whitespace", we will need to look at the grammar for '),vs=k("strong"),Es=d('"whitepsace"'),ys=d("."),bs=m(),xs=k("p"),js=d("So, starting from the left, for an object, the first character has to be an open curly bracket, "),Ss=k("code"),Os=d("{"),Ps=d(". and then we have 2 options from here:"),As=m(),Ts=k("ul"),Ls=k("li"),Is=k("code"),Cs=d("whitespace"),Ns=d(" → "),$s=k("code"),Ds=d("}"),Ms=d(" → end, or"),Js=m(),Hs=k("li"),qs=k("code"),Us=d("whitespace"),Rs=d(" → "),Ws=k("code"),Bs=d("string"),_s=d(" → "),Fs=k("code"),Gs=d("whitespace"),zs=d(" → "),Vs=k("code"),Ks=d(":"),Ys=d(" → "),Xs=k("code"),Qs=d("value"),Zs=d(" → "),nt=k("code"),at=d("}"),st=d(" → end"),tt=m(),et=k("p"),ot=d('Of course, when you reach "value", you can choose to go to:'),pt=m(),rt=k("ul"),ct=k("li"),it=d("→ "),lt=k("code"),ut=d("}"),ht=d(" → end, or"),kt=m(),ft=k("li"),dt=d("→ "),mt=k("code"),gt=d(","),wt=d(" → "),vt=k("code"),Et=d("whitespace"),yt=d(" → ... → value"),bt=m(),xt=k("p"),jt=d("and you can keep looping, until you decide to go to:"),St=m(),Ot=k("ul"),Pt=k("li"),At=d("→ "),Tt=k("code"),Lt=d("}"),It=d(" → end."),Ct=m(),Nt=k("p"),$t=d("So, I guess we are now acquainted with the railroad diagram, let's carry on to the next section."),Dt=m(),Mt=k("section"),Jt=k("h2"),Ht=k("a"),qt=d("Implementing the parser"),Ut=m(),Rt=k("p"),Wt=d("Let's start with the following structure:"),Bt=m(),_t=k("pre"),Ft=m(),Gt=k("p"),zt=d("We initialise "),Vt=k("code"),Kt=d("i"),Yt=d(" as the index for the current character, we will end as soon as "),Xt=k("code"),Qt=d("i"),Zt=d(" reaches the end of the "),ne=k("code"),ae=d("str"),se=d("."),te=m(),ee=k("p"),oe=d("Let's implement the grammar for the "),pe=k("strong"),re=d('"object":'),ce=m(),ie=k("pre"),le=m(),ue=k("p"),he=d("In the "),ke=k("code"),fe=d("parseObject"),de=d(', we will call parse of other grammars, like "string" and "whitespace", when we implement them, everything will work 🤞.'),me=m(),ge=k("p"),we=d("One thing that I forgot to add is the comma, "),ve=k("code"),Ee=d(","),ye=d(". The "),be=k("code"),xe=d(","),je=d(" only appears before we start the second loop of "),Se=k("code"),Oe=d("whitespace"),Pe=d(" → "),Ae=k("code"),Te=d("string"),Le=d(" → "),Ie=k("code"),Ce=d("whitespace"),Ne=d(" → "),$e=k("code"),De=d(":"),Me=d(" → ..."),Je=m(),He=k("p"),qe=d("Based on that, we add the following lines:"),Ue=m(),Re=k("pre"),We=m(),Be=k("p"),_e=d("Some naming convention:"),Fe=m(),Ge=k("ul"),ze=k("li"),Ve=d("We call "),Ke=k("code"),Ye=d("parseSomething"),Xe=d(", when we parse the code based on grammar and use the return value"),Qe=m(),Ze=k("li"),no=d("We call "),ao=k("code"),so=d("eatSomething"),to=d(", when we expect the character(s) to be there, but we are not using the character(s)"),eo=m(),oo=k("li"),po=d("We call "),ro=k("code"),co=d("skipSomething"),io=d(", when we are okay if the character(s) is not there."),lo=m(),uo=k("p"),ho=d("Let's implement the "),ko=k("code"),fo=d("eatComma"),mo=d(" and "),go=k("code"),wo=d("eatColon"),vo=d(":"),Eo=m(),yo=k("pre"),bo=m(),xo=k("p"),jo=d("So we have finished implemented the "),So=k("code"),Oo=d("parseObject"),Po=d(" grammar, but what is the return value from this parse function?"),Ao=m(),To=k("p"),Lo=d("Well, we need to return a JavaScript object:"),Io=m(),Co=k("pre"),No=m(),$o=k("p"),Do=d('Now that you\'ve seen me implementing the "object" grammar, it\'s time for you to try out the "array" grammar:'),Mo=m(),Jo=k("p"),Ho=k("img"),Uo=m(),Ro=k("small"),Wo=d("Image source: https://www.json.org/img/array.png"),Bo=m(),_o=k("pre"),Fo=m(),Go=k("p"),zo=d('Now, move on to a more interesting grammar, "value":'),Vo=m(),Ko=k("p"),Yo=k("img"),Qo=m(),Zo=k("small"),np=d("Image source: https://www.json.org/img/value.png"),ap=m(),sp=k("p"),tp=d('A value starts with "whitespace", then any of the following: "string", "number", "object", "array", "true", "false" or "null", and then end with a "whitespace":'),ep=m(),op=k("pre"),pp=m(),rp=k("p"),cp=d("The "),ip=k("code"),lp=d("??"),up=d(" is called the "),hp=k("a"),kp=d("nullish coalescing operator"),fp=d(", it is like the "),dp=k("code"),mp=d("||"),gp=d(" that we used to use for defaulting a value "),wp=k("code"),vp=d("foo || default"),Ep=d(", except that "),yp=k("code"),bp=d("||"),xp=d(" will return the "),jp=k("code"),Sp=d("default"),Op=d(" as long as "),Pp=k("code"),Ap=d("foo"),Tp=d(" is falsy, whereas the nullish coalescing operator will only return "),Lp=k("code"),Ip=d("default"),Cp=d(" when "),Np=k("code"),$p=d("foo"),Dp=d(" is either "),Mp=k("code"),Jp=d("null"),Hp=d(" or "),qp=k("code"),Up=d("undefined"),Rp=d("."),Wp=m(),Bp=k("p"),_p=d("The parseKeyword will check whether the current "),Fp=k("code"),Gp=d("str.slice(i)"),zp=d(" matches the keyword string, if so, it will return the keyword value:"),Vp=m(),Kp=k("pre"),Yp=m(),Xp=k("p"),Qp=d("That's it for "),Zp=k("code"),nr=d("parseValue"),ar=d("!"),sr=m(),tr=k("p"),er=d("We still have 3 more grammars to go, but I will save the length of this article, and implement them in the following CodeSandbox:"),or=m(),pr=k("iframe"),cr=m(),ir=k("p"),lr=d("After we have finished implementing all the grammars, now let's return the value of the json, which is return by the "),ur=k("code"),hr=d("parseValue"),kr=d(":"),fr=m(),dr=k("pre"),mr=m(),gr=k("p"),wr=d("That's it!"),vr=m(),Er=k("p"),yr=d("Well, not so fast my friend, we've just finished the happy path, what about unhappy path?"),br=m(),xr=k("section"),jr=k("h2"),Sr=k("a"),Or=d("Handling the unexpected input"),Pr=m(),Ar=k("p"),Tr=d("As a good developer, we need to handle the unhappy path gracefully as well. For a parser, that means shouting at the developer with appropriate error message."),Lr=m(),Ir=k("p"),Cr=d("Let's handle the 2 most common error cases:"),Nr=m(),$r=k("ul"),Dr=k("li"),Mr=d("Unexpected token"),Jr=m(),Hr=k("li"),qr=d("Unexpected end of string"),Ur=m(),Rr=k("section"),Wr=k("h3"),Br=k("a"),_r=d("Unexpected token"),Fr=m(),Gr=k("section"),zr=k("h3"),Vr=k("a"),Kr=d("Unexpected end of string"),Yr=m(),Xr=k("p"),Qr=d("In all the while loops, for example the while loop in "),Zr=k("code"),nc=d("parseObject"),ac=d(":"),sc=m(),tc=k("pre"),ec=m(),oc=k("p"),pc=d('We need to make sure that we don\'t access the character beyond the length of the string. This happens when the string ended unexpectedly, while we are still waiting for a closing character, "}" in this example:'),rc=m(),cc=k("pre"),ic=m(),lc=k("section"),uc=k("h2"),hc=k("a"),kc=d("Going the extra mile"),fc=m(),dc=k("p"),mc=d("Do you remember the time you were a junior developer, every time when you encounter Syntax error with cryptic messages, you are completely clueless of what went wrong?"),gc=m(),wc=k("p"),vc=d("Now you are more experienced, it is time to stop this virtuous cycle and stop yelling"),Ec=m(),yc=k("pre"),bc=m(),xc=k("p"),jc=d("and leave the user staring at the screen confounded."),Sc=m(),Oc=k("p"),Pc=d("There's a lot of better ways of handling error messages than yelling, here are some points you can consider adding to your parser:"),Ac=m(),Tc=k("section"),Lc=k("h3"),Ic=k("a"),Cc=d("Error code and standard error message"),Nc=m(),$c=k("p"),Dc=d("This is useful as a standard keyword for user to Google for help."),Mc=m(),Jc=k("pre"),Hc=m(),qc=k("section"),Uc=k("h3"),Rc=k("a"),Wc=d("A better view of what went wrong"),Bc=m(),_c=k("p"),Fc=d("Parser like Babel, will show you a code frame, a snippet of your code with underline, arrow or highlighting of what went wrong"),Gc=m(),zc=k("pre"),Vc=m(),Kc=k("p"),Yc=d("An example on how you can print out the code snippet:"),Xc=m(),Qc=k("pre"),Zc=m(),ni=k("section"),ai=k("h3"),si=k("a"),ti=d("Suggestions for error recovery"),ei=m(),oi=k("p"),pi=d("If possible, explain what went wrong and give suggestions on how to fix them"),ri=m(),ci=k("pre"),ii=m(),li=k("p"),ui=d("If possible, provide suggestions based on the context that the parser has collected so far"),hi=m(),ki=k("pre"),fi=m(),di=k("p"),mi=d("The suggestion that based on the context will feel more relatable and actionable."),gi=m(),wi=k("p"),vi=d("With all the suggestions in mind, check out the updated CodeSandbox with"),Ei=m(),yi=k("ul"),bi=k("li"),xi=d("Meaningful error message"),ji=m(),Si=k("li"),Oi=d("Code snippet with error pointing point of failure"),Pi=m(),Ai=k("li"),Ti=d("Provide suggestions for error recovery"),Li=m(),Ii=k("iframe"),Ni=m(),$i=k("p"),Di=d("Also, read the "),Mi=k("a"),Ji=d('"Compiler Errors for Humans"'),Hi=d(" by "),qi=k("a"),Ui=d("Evan Czaplicki"),Ri=d(" for how Elm improves the UX problems of the Elm compiler."),Wi=m(),Bi=k("section"),_i=k("h2"),Fi=k("a"),Gi=d("Summary"),zi=m(),Vi=k("p"),Ki=d("To implement a parser, you need to start with the grammar."),Yi=m(),Xi=k("p"),Qi=d("You can formalise the grammar with the railroad diagrams or the Backus-Naur Form. Designing the grammar is the hardest step."),Zi=m(),nl=k("p"),al=d("Once you've settled with the grammar, you can start implementing the parser based on it."),sl=m(),tl=k("p"),el=d("Error handling is important, what's more important is to have meaningful error messages, so that the user knows how to fix it."),ol=m(),pl=k("p"),rl=d("Now you know how a simple parser is implemented, it's time to set eyes on a more complex one:"),cl=m(),il=k("ul"),ll=k("li"),ul=k("a"),hl=d("Babel parser"),kl=m(),fl=k("li"),dl=k("a"),ml=d("Svelte parser"),gl=m(),wl=k("p"),vl=d("Lastly, do follow "),El=k("a"),yl=d("@cassidoo"),bl=d(", her weekly newsletter is awesome!"),this.h()},l(n){s=E(n,"SECTION",{});var a=v(s);t=E(a,"UL",{class:!0,id:!0,role:!0,"aria-label":!0});var i=v(t);e=E(i,"LI",{});var l=v(e);o=E(l,"A",{href:!0});var k=v(o);p=y(k,"Understand the grammar"),k.forEach(u),l.forEach(u),r=E(i,"LI",{});var d=v(r);c=E(d,"A",{href:!0});var m=v(c);h=y(m,"Implementing the parser"),m.forEach(u),d.forEach(u),f=E(i,"LI",{});var w=v(f);g=E(w,"A",{href:!0});var S=v(g);x=y(S,"Handling the unexpected input"),S.forEach(u),w.forEach(u),j=E(i,"UL",{});var pa=v(j);O=E(pa,"LI",{});var Ma=v(O);P=E(Ma,"A",{href:!0});var qo=v(P);A=y(qo,"Unexpected token"),qo.forEach(u),Ma.forEach(u),T=E(pa,"LI",{});var Xo=v(T);L=E(Xo,"A",{href:!0});var rr=v(L);I=y(rr,"Unexpected end of string"),rr.forEach(u),Xo.forEach(u),pa.forEach(u),C=E(i,"LI",{});var Ci=v(C);N=E(Ci,"A",{href:!0});var xl=v(N);$=y(xl,"Going the extra mile"),xl.forEach(u),Ci.forEach(u),D=E(i,"UL",{});var jl=v(D);M=E(jl,"LI",{});var Sl=v(M);J=E(Sl,"A",{href:!0});var Ol=v(J);H=y(Ol,"Error code and standard error message"),Ol.forEach(u),Sl.forEach(u),q=E(jl,"LI",{});var Pl=v(q);U=E(Pl,"A",{href:!0});var Al=v(U);R=y(Al,"A better view of what went wrong"),Al.forEach(u),Pl.forEach(u),W=E(jl,"LI",{});var Tl=v(W);B=E(Tl,"A",{href:!0});var Ll=v(B);_=y(Ll,"Suggestions for error recovery"),Ll.forEach(u),Tl.forEach(u),jl.forEach(u),F=E(i,"LI",{});var Il=v(F);G=E(Il,"A",{href:!0});var Cl=v(G);z=y(Cl,"Summary"),Cl.forEach(u),Il.forEach(u),i.forEach(u),a.forEach(u),V=b(n),K=E(n,"P",{});var Nl=v(K);Y=y(Nl,"The interview question of the week for this week on Cassidoo's weekly newsletter is,"),Nl.forEach(u),X=b(n),Q=E(n,"BLOCKQUOTE",{});var $l=v(Q);Z=E($l,"P",{});var Dl=v(Z);nn=y(Dl,"Write a function that takes in a string of valid JSON and converts it to an object (or whatever your chosen language uses, dicts, maps, etc).\nExample input:"),Dl.forEach(u),$l.forEach(u),an=b(n),sn=E(n,"PRE",{class:!0}),v(sn).forEach(u),tn=b(n),en=E(n,"P",{});var Ml=v(en);on=y(Ml,"At one point, I was tempted to just to write:"),Ml.forEach(u),pn=b(n),rn=E(n,"PRE",{class:!0}),v(rn).forEach(u),cn=b(n),ln=E(n,"P",{});var Jl=v(ln);un=y(Jl,"But, I thought, I've written quite a few articles about AST:"),Jl.forEach(u),hn=b(n),kn=E(n,"UL",{});var Hl=v(kn);fn=E(Hl,"LI",{});var ql=v(fn);dn=E(ql,"A",{href:!0});var Ul=v(dn);mn=y(Ul,"Creating custom JavaScript syntax with Babel"),Ul.forEach(u),ql.forEach(u),gn=b(Hl),wn=E(Hl,"LI",{});var Rl=v(wn);vn=E(Rl,"A",{href:!0});var Wl=v(vn);En=y(Wl,"Step-by-step guide for writing a custom babel transformation"),Wl.forEach(u),Rl.forEach(u),yn=b(Hl),bn=E(Hl,"LI",{});var Bl=v(bn);xn=E(Bl,"A",{href:!0});var _l=v(xn);jn=y(_l,"Manipulating AST with JavaScript"),_l.forEach(u),Bl.forEach(u),Hl.forEach(u),Sn=b(n),On=E(n,"P",{});var Fl=v(On);Pn=y(Fl,"which covers the overview of the compiler pipeline, as well as how to manipulate AST, but I haven't covered much on how to implement a parser."),Fl.forEach(u),An=b(n),Tn=E(n,"P",{});var Gl=v(Tn);Ln=y(Gl,"That's because, implementing a JavaScript compiler in an article is a task too daunting for me."),Gl.forEach(u),In=b(n),Cn=E(n,"P",{});var zl=v(Cn);Nn=y(zl,"Well, fret not. JSON is also a language. It has its own grammar, which you can refer from "),$n=E(zl,"A",{href:!0,rel:!0});var Vl=v($n);Dn=y(Vl,"the specifications"),Vl.forEach(u),Mn=y(zl,". The knowledge and technique you need to write a JSON parser is transferrable to writing a JS parser."),zl.forEach(u),Jn=b(n),Hn=E(n,"P",{});var Kl=v(Hn);qn=y(Kl,"So, let's start writing a JSON parser!"),Kl.forEach(u),Un=b(n),Rn=E(n,"SECTION",{});var Yl=v(Rn);Wn=E(Yl,"H2",{});var Xl=v(Wn);Bn=E(Xl,"A",{href:!0,id:!0});var Ql=v(Bn);_n=y(Ql,"Understand the grammar"),Ql.forEach(u),Xl.forEach(u),Fn=b(Yl),Gn=E(Yl,"P",{});var Zl=v(Gn);zn=y(Zl,"If you look at "),Vn=E(Zl,"A",{href:!0,rel:!0});var nu=v(Vn);Kn=y(nu,"the specification page"),nu.forEach(u),Yn=y(Zl,", there's 2 diagrams:"),Zl.forEach(u),Xn=b(Yl),Qn=E(Yl,"UL",{});var au=v(Qn);Zn=E(au,"LI",{});var su=v(Zn);na=E(su,"A",{href:!0,rel:!0});var tu=v(na);aa=y(tu,"The syntax diagram (or railroad diagram)"),tu.forEach(u),sa=y(su," on the left,"),su.forEach(u),au.forEach(u),ta=b(Yl),ea=E(Yl,"P",{});var eu=v(ea);oa=E(eu,"IMG",{src:!0,alt:!0}),eu.forEach(u),ra=b(Yl),ca=E(Yl,"SMALL",{});var ou=v(ca);ia=y(ou,"Image source: https://www.json.org/img/object.png"),ou.forEach(u),la=b(Yl),ua=E(Yl,"UL",{});var pu=v(ua);ha=E(pu,"LI",{});var ru=v(ha);ka=E(ru,"A",{href:!0,rel:!0});var cu=v(ka);fa=y(cu,"The McKeeman Form"),cu.forEach(u),da=y(ru,", a variant of "),ma=E(ru,"A",{href:!0,rel:!0});var iu=v(ma);ga=y(iu,"Backus-Naur Form (BNF)"),iu.forEach(u),wa=y(ru,", on the right"),ru.forEach(u),pu.forEach(u),va=b(Yl),Ea=E(Yl,"PRE",{class:!0}),v(Ea).forEach(u),ya=b(Yl),ba=E(Yl,"P",{});var lu=v(ba);xa=y(lu,"Both diagrams are equivalent."),lu.forEach(u),ja=b(Yl),Sa=E(Yl,"P",{});var uu=v(Sa);Oa=y(uu,"One is visual and one is text based. The text based grammar syntax, Backus-Naur Form, is usually fed to another parser that parse this grammar and generate a parser for it. Speaking of parser-ception! 🤯"),uu.forEach(u),Pa=b(Yl),Aa=E(Yl,"P",{});var hu=v(Aa);Ta=y(hu,"In this article, we will focus on the railroad diagram, because it is visual and seemed to be more friendly to me."),hu.forEach(u),La=b(Yl),Ia=E(Yl,"P",{});var ku=v(Ia);Ca=y(ku,"Lets' look at the first railroad diagram:"),ku.forEach(u),Na=b(Yl),$a=E(Yl,"P",{});var fu=v($a);Da=E(fu,"IMG",{src:!0,alt:!0}),fu.forEach(u),Ja=b(Yl),Ha=E(Yl,"SMALL",{});var du=v(Ha);qa=y(du,"Image source: https://www.json.org/img/object.png"),du.forEach(u),Ua=b(Yl),Ra=E(Yl,"P",{});var mu=v(Ra);Wa=y(mu,"So this is the grammar for "),Ba=E(mu,"STRONG",{});var gu=v(Ba);_a=y(gu,'"object"'),gu.forEach(u),Fa=y(mu," in JSON."),mu.forEach(u),Ga=b(Yl),za=E(Yl,"P",{});var wu=v(za);Va=y(wu,"We start from the left, following the arrow, and then we end at the right."),wu.forEach(u),Ka=b(Yl),Ya=E(Yl,"P",{});var vu=v(Ya);Xa=y(vu,"The circles, eg "),Qa=E(vu,"CODE",{});var Eu=v(Qa);Za=y(Eu,"{"),Eu.forEach(u),ns=y(vu,", "),as=E(vu,"CODE",{});var yu=v(as);ss=y(yu,","),yu.forEach(u),ts=y(vu,", "),es=E(vu,"CODE",{});var bu=v(es);os=y(bu,":"),bu.forEach(u),ps=y(vu,", "),rs=E(vu,"CODE",{});var xu=v(rs);cs=y(xu,"}"),xu.forEach(u),is=y(vu,", are the characters, and the boxes eg: "),ls=E(vu,"CODE",{});var ju=v(ls);us=y(ju,"whitespace"),ju.forEach(u),hs=y(vu,", "),ks=E(vu,"CODE",{});var Su=v(ks);fs=y(Su,"string"),Su.forEach(u),ds=y(vu,", and "),ms=E(vu,"CODE",{});var Ou=v(ms);gs=y(Ou,"value"),Ou.forEach(u),ws=y(vu,' is a placeholder for another grammar. So to parse the "whitespace", we will need to look at the grammar for '),vs=E(vu,"STRONG",{});var Pu=v(vs);Es=y(Pu,'"whitepsace"'),Pu.forEach(u),ys=y(vu,"."),vu.forEach(u),bs=b(Yl),xs=E(Yl,"P",{});var Au=v(xs);js=y(Au,"So, starting from the left, for an object, the first character has to be an open curly bracket, "),Ss=E(Au,"CODE",{});var Tu=v(Ss);Os=y(Tu,"{"),Tu.forEach(u),Ps=y(Au,". and then we have 2 options from here:"),Au.forEach(u),As=b(Yl),Ts=E(Yl,"UL",{});var Lu=v(Ts);Ls=E(Lu,"LI",{});var Iu=v(Ls);Is=E(Iu,"CODE",{});var Cu=v(Is);Cs=y(Cu,"whitespace"),Cu.forEach(u),Ns=y(Iu," → "),$s=E(Iu,"CODE",{});var Nu=v($s);Ds=y(Nu,"}"),Nu.forEach(u),Ms=y(Iu," → end, or"),Iu.forEach(u),Js=b(Lu),Hs=E(Lu,"LI",{});var $u=v(Hs);qs=E($u,"CODE",{});var Du=v(qs);Us=y(Du,"whitespace"),Du.forEach(u),Rs=y($u," → "),Ws=E($u,"CODE",{});var Mu=v(Ws);Bs=y(Mu,"string"),Mu.forEach(u),_s=y($u," → "),Fs=E($u,"CODE",{});var Ju=v(Fs);Gs=y(Ju,"whitespace"),Ju.forEach(u),zs=y($u," → "),Vs=E($u,"CODE",{});var Hu=v(Vs);Ks=y(Hu,":"),Hu.forEach(u),Ys=y($u," → "),Xs=E($u,"CODE",{});var qu=v(Xs);Qs=y(qu,"value"),qu.forEach(u),Zs=y($u," → "),nt=E($u,"CODE",{});var Uu=v(nt);at=y(Uu,"}"),Uu.forEach(u),st=y($u," → end"),$u.forEach(u),Lu.forEach(u),tt=b(Yl),et=E(Yl,"P",{});var Ru=v(et);ot=y(Ru,'Of course, when you reach "value", you can choose to go to:'),Ru.forEach(u),pt=b(Yl),rt=E(Yl,"UL",{});var Wu=v(rt);ct=E(Wu,"LI",{});var Bu=v(ct);it=y(Bu,"→ "),lt=E(Bu,"CODE",{});var _u=v(lt);ut=y(_u,"}"),_u.forEach(u),ht=y(Bu," → end, or"),Bu.forEach(u),kt=b(Wu),ft=E(Wu,"LI",{});var Fu=v(ft);dt=y(Fu,"→ "),mt=E(Fu,"CODE",{});var Gu=v(mt);gt=y(Gu,","),Gu.forEach(u),wt=y(Fu," → "),vt=E(Fu,"CODE",{});var zu=v(vt);Et=y(zu,"whitespace"),zu.forEach(u),yt=y(Fu," → ... → value"),Fu.forEach(u),Wu.forEach(u),bt=b(Yl),xt=E(Yl,"P",{});var Vu=v(xt);jt=y(Vu,"and you can keep looping, until you decide to go to:"),Vu.forEach(u),St=b(Yl),Ot=E(Yl,"UL",{});var Ku=v(Ot);Pt=E(Ku,"LI",{});var Yu=v(Pt);At=y(Yu,"→ "),Tt=E(Yu,"CODE",{});var Xu=v(Tt);Lt=y(Xu,"}"),Xu.forEach(u),It=y(Yu," → end."),Yu.forEach(u),Ku.forEach(u),Ct=b(Yl),Nt=E(Yl,"P",{});var Qu=v(Nt);$t=y(Qu,"So, I guess we are now acquainted with the railroad diagram, let's carry on to the next section."),Qu.forEach(u),Yl.forEach(u),Dt=b(n),Mt=E(n,"SECTION",{});var Zu=v(Mt);Jt=E(Zu,"H2",{});var nh=v(Jt);Ht=E(nh,"A",{href:!0,id:!0});var ah=v(Ht);qt=y(ah,"Implementing the parser"),ah.forEach(u),nh.forEach(u),Ut=b(Zu),Rt=E(Zu,"P",{});var sh=v(Rt);Wt=y(sh,"Let's start with the following structure:"),sh.forEach(u),Bt=b(Zu),_t=E(Zu,"PRE",{class:!0}),v(_t).forEach(u),Ft=b(Zu),Gt=E(Zu,"P",{});var th=v(Gt);zt=y(th,"We initialise "),Vt=E(th,"CODE",{});var eh=v(Vt);Kt=y(eh,"i"),eh.forEach(u),Yt=y(th," as the index for the current character, we will end as soon as "),Xt=E(th,"CODE",{});var oh=v(Xt);Qt=y(oh,"i"),oh.forEach(u),Zt=y(th," reaches the end of the "),ne=E(th,"CODE",{});var ph=v(ne);ae=y(ph,"str"),ph.forEach(u),se=y(th,"."),th.forEach(u),te=b(Zu),ee=E(Zu,"P",{});var rh=v(ee);oe=y(rh,"Let's implement the grammar for the "),pe=E(rh,"STRONG",{});var ch=v(pe);re=y(ch,'"object":'),ch.forEach(u),rh.forEach(u),ce=b(Zu),ie=E(Zu,"PRE",{class:!0}),v(ie).forEach(u),le=b(Zu),ue=E(Zu,"P",{});var ih=v(ue);he=y(ih,"In the "),ke=E(ih,"CODE",{});var lh=v(ke);fe=y(lh,"parseObject"),lh.forEach(u),de=y(ih,', we will call parse of other grammars, like "string" and "whitespace", when we implement them, everything will work 🤞.'),ih.forEach(u),me=b(Zu),ge=E(Zu,"P",{});var uh=v(ge);we=y(uh,"One thing that I forgot to add is the comma, "),ve=E(uh,"CODE",{});var hh=v(ve);Ee=y(hh,","),hh.forEach(u),ye=y(uh,". The "),be=E(uh,"CODE",{});var kh=v(be);xe=y(kh,","),kh.forEach(u),je=y(uh," only appears before we start the second loop of "),Se=E(uh,"CODE",{});var fh=v(Se);Oe=y(fh,"whitespace"),fh.forEach(u),Pe=y(uh," → "),Ae=E(uh,"CODE",{});var dh=v(Ae);Te=y(dh,"string"),dh.forEach(u),Le=y(uh," → "),Ie=E(uh,"CODE",{});var mh=v(Ie);Ce=y(mh,"whitespace"),mh.forEach(u),Ne=y(uh," → "),$e=E(uh,"CODE",{});var gh=v($e);De=y(gh,":"),gh.forEach(u),Me=y(uh," → ..."),uh.forEach(u),Je=b(Zu),He=E(Zu,"P",{});var wh=v(He);qe=y(wh,"Based on that, we add the following lines:"),wh.forEach(u),Ue=b(Zu),Re=E(Zu,"PRE",{class:!0}),v(Re).forEach(u),We=b(Zu),Be=E(Zu,"P",{});var vh=v(Be);_e=y(vh,"Some naming convention:"),vh.forEach(u),Fe=b(Zu),Ge=E(Zu,"UL",{});var Eh=v(Ge);ze=E(Eh,"LI",{});var yh=v(ze);Ve=y(yh,"We call "),Ke=E(yh,"CODE",{});var bh=v(Ke);Ye=y(bh,"parseSomething"),bh.forEach(u),Xe=y(yh,", when we parse the code based on grammar and use the return value"),yh.forEach(u),Qe=b(Eh),Ze=E(Eh,"LI",{});var xh=v(Ze);no=y(xh,"We call "),ao=E(xh,"CODE",{});var jh=v(ao);so=y(jh,"eatSomething"),jh.forEach(u),to=y(xh,", when we expect the character(s) to be there, but we are not using the character(s)"),xh.forEach(u),eo=b(Eh),oo=E(Eh,"LI",{});var Sh=v(oo);po=y(Sh,"We call "),ro=E(Sh,"CODE",{});var Oh=v(ro);co=y(Oh,"skipSomething"),Oh.forEach(u),io=y(Sh,", when we are okay if the character(s) is not there."),Sh.forEach(u),Eh.forEach(u),lo=b(Zu),uo=E(Zu,"P",{});var Ph=v(uo);ho=y(Ph,"Let's implement the "),ko=E(Ph,"CODE",{});var Ah=v(ko);fo=y(Ah,"eatComma"),Ah.forEach(u),mo=y(Ph," and "),go=E(Ph,"CODE",{});var Th=v(go);wo=y(Th,"eatColon"),Th.forEach(u),vo=y(Ph,":"),Ph.forEach(u),Eo=b(Zu),yo=E(Zu,"PRE",{class:!0}),v(yo).forEach(u),bo=b(Zu),xo=E(Zu,"P",{});var Lh=v(xo);jo=y(Lh,"So we have finished implemented the "),So=E(Lh,"CODE",{});var Ih=v(So);Oo=y(Ih,"parseObject"),Ih.forEach(u),Po=y(Lh," grammar, but what is the return value from this parse function?"),Lh.forEach(u),Ao=b(Zu),To=E(Zu,"P",{});var Ch=v(To);Lo=y(Ch,"Well, we need to return a JavaScript object:"),Ch.forEach(u),Io=b(Zu),Co=E(Zu,"PRE",{class:!0}),v(Co).forEach(u),No=b(Zu),$o=E(Zu,"P",{});var Nh=v($o);Do=y(Nh,'Now that you\'ve seen me implementing the "object" grammar, it\'s time for you to try out the "array" grammar:'),Nh.forEach(u),Mo=b(Zu),Jo=E(Zu,"P",{});var $h=v(Jo);Ho=E($h,"IMG",{src:!0,alt:!0}),$h.forEach(u),Uo=b(Zu),Ro=E(Zu,"SMALL",{});var Dh=v(Ro);Wo=y(Dh,"Image source: https://www.json.org/img/array.png"),Dh.forEach(u),Bo=b(Zu),_o=E(Zu,"PRE",{class:!0}),v(_o).forEach(u),Fo=b(Zu),Go=E(Zu,"P",{});var Mh=v(Go);zo=y(Mh,'Now, move on to a more interesting grammar, "value":'),Mh.forEach(u),Vo=b(Zu),Ko=E(Zu,"P",{});var Jh=v(Ko);Yo=E(Jh,"IMG",{src:!0,alt:!0}),Jh.forEach(u),Qo=b(Zu),Zo=E(Zu,"SMALL",{});var Hh=v(Zo);np=y(Hh,"Image source: https://www.json.org/img/value.png"),Hh.forEach(u),ap=b(Zu),sp=E(Zu,"P",{});var qh=v(sp);tp=y(qh,'A value starts with "whitespace", then any of the following: "string", "number", "object", "array", "true", "false" or "null", and then end with a "whitespace":'),qh.forEach(u),ep=b(Zu),op=E(Zu,"PRE",{class:!0}),v(op).forEach(u),pp=b(Zu),rp=E(Zu,"P",{});var Uh=v(rp);cp=y(Uh,"The "),ip=E(Uh,"CODE",{});var Rh=v(ip);lp=y(Rh,"??"),Rh.forEach(u),up=y(Uh," is called the "),hp=E(Uh,"A",{href:!0,rel:!0});var Wh=v(hp);kp=y(Wh,"nullish coalescing operator"),Wh.forEach(u),fp=y(Uh,", it is like the "),dp=E(Uh,"CODE",{});var Bh=v(dp);mp=y(Bh,"||"),Bh.forEach(u),gp=y(Uh," that we used to use for defaulting a value "),wp=E(Uh,"CODE",{});var _h=v(wp);vp=y(_h,"foo || default"),_h.forEach(u),Ep=y(Uh,", except that "),yp=E(Uh,"CODE",{});var Fh=v(yp);bp=y(Fh,"||"),Fh.forEach(u),xp=y(Uh," will return the "),jp=E(Uh,"CODE",{});var Gh=v(jp);Sp=y(Gh,"default"),Gh.forEach(u),Op=y(Uh," as long as "),Pp=E(Uh,"CODE",{});var zh=v(Pp);Ap=y(zh,"foo"),zh.forEach(u),Tp=y(Uh," is falsy, whereas the nullish coalescing operator will only return "),Lp=E(Uh,"CODE",{});var Vh=v(Lp);Ip=y(Vh,"default"),Vh.forEach(u),Cp=y(Uh," when "),Np=E(Uh,"CODE",{});var Kh=v(Np);$p=y(Kh,"foo"),Kh.forEach(u),Dp=y(Uh," is either "),Mp=E(Uh,"CODE",{});var Yh=v(Mp);Jp=y(Yh,"null"),Yh.forEach(u),Hp=y(Uh," or "),qp=E(Uh,"CODE",{});var Xh=v(qp);Up=y(Xh,"undefined"),Xh.forEach(u),Rp=y(Uh,"."),Uh.forEach(u),Wp=b(Zu),Bp=E(Zu,"P",{});var Qh=v(Bp);_p=y(Qh,"The parseKeyword will check whether the current "),Fp=E(Qh,"CODE",{});var Zh=v(Fp);Gp=y(Zh,"str.slice(i)"),Zh.forEach(u),zp=y(Qh," matches the keyword string, if so, it will return the keyword value:"),Qh.forEach(u),Vp=b(Zu),Kp=E(Zu,"PRE",{class:!0}),v(Kp).forEach(u),Yp=b(Zu),Xp=E(Zu,"P",{});var nk=v(Xp);Qp=y(nk,"That's it for "),Zp=E(nk,"CODE",{});var ak=v(Zp);nr=y(ak,"parseValue"),ak.forEach(u),ar=y(nk,"!"),nk.forEach(u),sr=b(Zu),tr=E(Zu,"P",{});var sk=v(tr);er=y(sk,"We still have 3 more grammars to go, but I will save the length of this article, and implement them in the following CodeSandbox:"),sk.forEach(u),or=b(Zu),pr=E(Zu,"IFRAME",{src:!0,style:!0,title:!0,allow:!0,sandbox:!0}),v(pr).forEach(u),cr=b(Zu),ir=E(Zu,"P",{});var tk=v(ir);lr=y(tk,"After we have finished implementing all the grammars, now let's return the value of the json, which is return by the "),ur=E(tk,"CODE",{});var ek=v(ur);hr=y(ek,"parseValue"),ek.forEach(u),kr=y(tk,":"),tk.forEach(u),fr=b(Zu),dr=E(Zu,"PRE",{class:!0}),v(dr).forEach(u),mr=b(Zu),gr=E(Zu,"P",{});var ok=v(gr);wr=y(ok,"That's it!"),ok.forEach(u),vr=b(Zu),Er=E(Zu,"P",{});var pk=v(Er);yr=y(pk,"Well, not so fast my friend, we've just finished the happy path, what about unhappy path?"),pk.forEach(u),Zu.forEach(u),br=b(n),xr=E(n,"SECTION",{});var rk=v(xr);jr=E(rk,"H2",{});var ck=v(jr);Sr=E(ck,"A",{href:!0,id:!0});var ik=v(Sr);Or=y(ik,"Handling the unexpected input"),ik.forEach(u),ck.forEach(u),Pr=b(rk),Ar=E(rk,"P",{});var lk=v(Ar);Tr=y(lk,"As a good developer, we need to handle the unhappy path gracefully as well. For a parser, that means shouting at the developer with appropriate error message."),lk.forEach(u),Lr=b(rk),Ir=E(rk,"P",{});var uk=v(Ir);Cr=y(uk,"Let's handle the 2 most common error cases:"),uk.forEach(u),Nr=b(rk),$r=E(rk,"UL",{});var hk=v($r);Dr=E(hk,"LI",{});var kk=v(Dr);Mr=y(kk,"Unexpected token"),kk.forEach(u),Jr=b(hk),Hr=E(hk,"LI",{});var fk=v(Hr);qr=y(fk,"Unexpected end of string"),fk.forEach(u),hk.forEach(u),rk.forEach(u),Ur=b(n),Rr=E(n,"SECTION",{});var dk=v(Rr);Wr=E(dk,"H3",{});var mk=v(Wr);Br=E(mk,"A",{href:!0,id:!0});var gk=v(Br);_r=y(gk,"Unexpected token"),gk.forEach(u),mk.forEach(u),dk.forEach(u),Fr=b(n),Gr=E(n,"SECTION",{});var wk=v(Gr);zr=E(wk,"H3",{});var vk=v(zr);Vr=E(vk,"A",{href:!0,id:!0});var Ek=v(Vr);Kr=y(Ek,"Unexpected end of string"),Ek.forEach(u),vk.forEach(u),Yr=b(wk),Xr=E(wk,"P",{});var yk=v(Xr);Qr=y(yk,"In all the while loops, for example the while loop in "),Zr=E(yk,"CODE",{});var bk=v(Zr);nc=y(bk,"parseObject"),bk.forEach(u),ac=y(yk,":"),yk.forEach(u),sc=b(wk),tc=E(wk,"PRE",{class:!0}),v(tc).forEach(u),ec=b(wk),oc=E(wk,"P",{});var xk=v(oc);pc=y(xk,'We need to make sure that we don\'t access the character beyond the length of the string. This happens when the string ended unexpectedly, while we are still waiting for a closing character, "}" in this example:'),xk.forEach(u),rc=b(wk),cc=E(wk,"PRE",{class:!0}),v(cc).forEach(u),wk.forEach(u),ic=b(n),lc=E(n,"SECTION",{});var jk=v(lc);uc=E(jk,"H2",{});var Sk=v(uc);hc=E(Sk,"A",{href:!0,id:!0});var Ok=v(hc);kc=y(Ok,"Going the extra mile"),Ok.forEach(u),Sk.forEach(u),fc=b(jk),dc=E(jk,"P",{});var Pk=v(dc);mc=y(Pk,"Do you remember the time you were a junior developer, every time when you encounter Syntax error with cryptic messages, you are completely clueless of what went wrong?"),Pk.forEach(u),gc=b(jk),wc=E(jk,"P",{});var Ak=v(wc);vc=y(Ak,"Now you are more experienced, it is time to stop this virtuous cycle and stop yelling"),Ak.forEach(u),Ec=b(jk),yc=E(jk,"PRE",{class:!0}),v(yc).forEach(u),bc=b(jk),xc=E(jk,"P",{});var Tk=v(xc);jc=y(Tk,"and leave the user staring at the screen confounded."),Tk.forEach(u),Sc=b(jk),Oc=E(jk,"P",{});var Lk=v(Oc);Pc=y(Lk,"There's a lot of better ways of handling error messages than yelling, here are some points you can consider adding to your parser:"),Lk.forEach(u),jk.forEach(u),Ac=b(n),Tc=E(n,"SECTION",{});var Ik=v(Tc);Lc=E(Ik,"H3",{});var Ck=v(Lc);Ic=E(Ck,"A",{href:!0,id:!0});var Nk=v(Ic);Cc=y(Nk,"Error code and standard error message"),Nk.forEach(u),Ck.forEach(u),Nc=b(Ik),$c=E(Ik,"P",{});var $k=v($c);Dc=y($k,"This is useful as a standard keyword for user to Google for help."),$k.forEach(u),Mc=b(Ik),Jc=E(Ik,"PRE",{class:!0}),v(Jc).forEach(u),Ik.forEach(u),Hc=b(n),qc=E(n,"SECTION",{});var Dk=v(qc);Uc=E(Dk,"H3",{});var Mk=v(Uc);Rc=E(Mk,"A",{href:!0,id:!0});var Jk=v(Rc);Wc=y(Jk,"A better view of what went wrong"),Jk.forEach(u),Mk.forEach(u),Bc=b(Dk),_c=E(Dk,"P",{});var Hk=v(_c);Fc=y(Hk,"Parser like Babel, will show you a code frame, a snippet of your code with underline, arrow or highlighting of what went wrong"),Hk.forEach(u),Gc=b(Dk),zc=E(Dk,"PRE",{class:!0}),v(zc).forEach(u),Vc=b(Dk),Kc=E(Dk,"P",{});var qk=v(Kc);Yc=y(qk,"An example on how you can print out the code snippet:"),qk.forEach(u),Xc=b(Dk),Qc=E(Dk,"PRE",{class:!0}),v(Qc).forEach(u),Dk.forEach(u),Zc=b(n),ni=E(n,"SECTION",{});var Uk=v(ni);ai=E(Uk,"H3",{});var Rk=v(ai);si=E(Rk,"A",{href:!0,id:!0});var Wk=v(si);ti=y(Wk,"Suggestions for error recovery"),Wk.forEach(u),Rk.forEach(u),ei=b(Uk),oi=E(Uk,"P",{});var Bk=v(oi);pi=y(Bk,"If possible, explain what went wrong and give suggestions on how to fix them"),Bk.forEach(u),ri=b(Uk),ci=E(Uk,"PRE",{class:!0}),v(ci).forEach(u),ii=b(Uk),li=E(Uk,"P",{});var _k=v(li);ui=y(_k,"If possible, provide suggestions based on the context that the parser has collected so far"),_k.forEach(u),hi=b(Uk),ki=E(Uk,"PRE",{class:!0}),v(ki).forEach(u),fi=b(Uk),di=E(Uk,"P",{});var Fk=v(di);mi=y(Fk,"The suggestion that based on the context will feel more relatable and actionable."),Fk.forEach(u),gi=b(Uk),wi=E(Uk,"P",{});var Gk=v(wi);vi=y(Gk,"With all the suggestions in mind, check out the updated CodeSandbox with"),Gk.forEach(u),Ei=b(Uk),yi=E(Uk,"UL",{});var zk=v(yi);bi=E(zk,"LI",{});var Vk=v(bi);xi=y(Vk,"Meaningful error message"),Vk.forEach(u),ji=b(zk),Si=E(zk,"LI",{});var Kk=v(Si);Oi=y(Kk,"Code snippet with error pointing point of failure"),Kk.forEach(u),Pi=b(zk),Ai=E(zk,"LI",{});var Yk=v(Ai);Ti=y(Yk,"Provide suggestions for error recovery"),Yk.forEach(u),zk.forEach(u),Li=b(Uk),Ii=E(Uk,"IFRAME",{src:!0,style:!0,title:!0,allow:!0,sandbox:!0}),v(Ii).forEach(u),Ni=b(Uk),$i=E(Uk,"P",{});var Xk=v($i);Di=y(Xk,"Also, read the "),Mi=E(Xk,"A",{href:!0,rel:!0});var Qk=v(Mi);Ji=y(Qk,'"Compiler Errors for Humans"'),Qk.forEach(u),Hi=y(Xk," by "),qi=E(Xk,"A",{href:!0,rel:!0});var Zk=v(qi);Ui=y(Zk,"Evan Czaplicki"),Zk.forEach(u),Ri=y(Xk," for how Elm improves the UX problems of the Elm compiler."),Xk.forEach(u),Uk.forEach(u),Wi=b(n),Bi=E(n,"SECTION",{});var nf=v(Bi);_i=E(nf,"H2",{});var af=v(_i);Fi=E(af,"A",{href:!0,id:!0});var sf=v(Fi);Gi=y(sf,"Summary"),sf.forEach(u),af.forEach(u),zi=b(nf),Vi=E(nf,"P",{});var tf=v(Vi);Ki=y(tf,"To implement a parser, you need to start with the grammar."),tf.forEach(u),Yi=b(nf),Xi=E(nf,"P",{});var ef=v(Xi);Qi=y(ef,"You can formalise the grammar with the railroad diagrams or the Backus-Naur Form. Designing the grammar is the hardest step."),ef.forEach(u),Zi=b(nf),nl=E(nf,"P",{});var of=v(nl);al=y(of,"Once you've settled with the grammar, you can start implementing the parser based on it."),of.forEach(u),sl=b(nf),tl=E(nf,"P",{});var pf=v(tl);el=y(pf,"Error handling is important, what's more important is to have meaningful error messages, so that the user knows how to fix it."),pf.forEach(u),ol=b(nf),pl=E(nf,"P",{});var rf=v(pl);rl=y(rf,"Now you know how a simple parser is implemented, it's time to set eyes on a more complex one:"),rf.forEach(u),cl=b(nf),il=E(nf,"UL",{});var cf=v(il);ll=E(cf,"LI",{});var lf=v(ll);ul=E(lf,"A",{href:!0,rel:!0});var uf=v(ul);hl=y(uf,"Babel parser"),uf.forEach(u),lf.forEach(u),kl=b(cf),fl=E(cf,"LI",{});var hf=v(fl);dl=E(hf,"A",{href:!0,rel:!0});var kf=v(dl);ml=y(kf,"Svelte parser"),kf.forEach(u),hf.forEach(u),cf.forEach(u),gl=b(nf),wl=E(nf,"P",{});var ff=v(wl);vl=y(ff,"Lastly, do follow "),El=E(ff,"A",{href:!0,rel:!0});var df=v(El);yl=y(df,"@cassidoo"),df.forEach(u),bl=y(ff,", her weekly newsletter is awesome!"),ff.forEach(u),nf.forEach(u),this.h()},h(){w(o,"href","#understand-the-grammar"),w(c,"href","#implementing-the-parser"),w(g,"href","#handling-the-unexpected-input"),w(P,"href","#unexpected-token"),w(L,"href","#unexpected-end-of-string"),w(N,"href","#going-the-extra-mile"),w(J,"href","#error-code-and-standard-error-message"),w(U,"href","#a-better-view-of-what-went-wrong"),w(B,"href","#suggestions-for-error-recovery"),w(G,"href","#summary"),w(t,"class","sitemap"),w(t,"id","sitemap"),w(t,"role","navigation"),w(t,"aria-label","Table of Contents"),w(sn,"class","language-null"),w(rn,"class","language-js"),w(dn,"href","/creating-custom-javascript-syntax-with-babel"),w(vn,"href","/step-by-step-guide-for-writing-a-babel-transformation"),w(xn,"href","/manipulating-ast-with-javascript"),w($n,"href","https://www.json.org/json-en.html"),w($n,"rel","nofollow"),w(Bn,"href","#understand-the-grammar"),w(Bn,"id","understand-the-grammar"),w(Vn,"href","https://www.json.org/json-en.html"),w(Vn,"rel","nofollow"),w(na,"href","https://en.wikipedia.org/wiki/Syntax_diagram"),w(na,"rel","nofollow"),oa.src!==(pa="https://www.json.org/img/object.png")&&w(oa,"src","https://www.json.org/img/object.png"),w(oa,"alt","https://www.json.org/img/object.png"),w(ka,"href","https://www.crockford.com/mckeeman.html"),w(ka,"rel","nofollow"),w(ma,"href","https://en.wikipedia.org/wiki/Backus%E2%80%93Naur_form"),w(ma,"rel","nofollow"),w(Ea,"class","language-null"),Da.src!==(Ma="https://www.json.org/img/object.png")&&w(Da,"src","https://www.json.org/img/object.png"),w(Da,"alt","https://www.json.org/img/object.png"),w(Ht,"href","#implementing-the-parser"),w(Ht,"id","implementing-the-parser"),w(_t,"class","language-js"),w(ie,"class","language-js"),w(Re,"class","language-js"),w(yo,"class","language-js"),w(Co,"class","language-js"),Ho.src!==(qo="https://www.json.org/img/array.png")&&w(Ho,"src","https://www.json.org/img/array.png"),w(Ho,"alt","https://www.json.org/img/array.png"),w(_o,"class","language-js"),Yo.src!==(Xo="https://www.json.org/img/value.png")&&w(Yo,"src","https://www.json.org/img/value.png"),w(Yo,"alt","https://www.json.org/img/value.png"),w(op,"class","language-js"),w(hp,"href","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator"),w(hp,"rel","nofollow"),w(Kp,"class","language-js"),pr.src!==(rr="https://codesandbox.io/embed/json-parser-k4c3w?expanddevtools=1&fontsize=14&hidenavigation=1&theme=dark&view=editor")&&w(pr,"src","https://codesandbox.io/embed/json-parser-k4c3w?expanddevtools=1&fontsize=14&hidenavigation=1&theme=dark&view=editor"),S(pr,"width","100%"),S(pr,"height","500px"),S(pr,"border","0"),S(pr,"border-radius","4px"),S(pr,"overflow","hidden"),w(pr,"title","JSON parser"),w(pr,"allow","geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb"),w(pr,"sandbox","allow-modals allow-forms allow-popups allow-scripts allow-same-origin"),w(dr,"class","language-js"),w(Sr,"href","#handling-the-unexpected-input"),w(Sr,"id","handling-the-unexpected-input"),w(Br,"href","#unexpected-token"),w(Br,"id","unexpected-token"),w(Vr,"href","#unexpected-end-of-string"),w(Vr,"id","unexpected-end-of-string"),w(tc,"class","language-js"),w(cc,"class","language-js"),w(hc,"href","#going-the-extra-mile"),w(hc,"id","going-the-extra-mile"),w(yc,"class","language-js"),w(Ic,"href","#error-code-and-standard-error-message"),w(Ic,"id","error-code-and-standard-error-message"),w(Jc,"class","language-js"),w(Rc,"href","#a-better-view-of-what-went-wrong"),w(Rc,"id","a-better-view-of-what-went-wrong"),w(zc,"class","language-js"),w(Qc,"class","language-js"),w(si,"href","#suggestions-for-error-recovery"),w(si,"id","suggestions-for-error-recovery"),w(ci,"class","language-js"),w(ki,"class","language-js"),Ii.src!==(Ci="https://codesandbox.io/embed/json-parser-hjwxk?expanddevtools=1&fontsize=14&hidenavigation=1&theme=dark&view=editor")&&w(Ii,"src","https://codesandbox.io/embed/json-parser-hjwxk?expanddevtools=1&fontsize=14&hidenavigation=1&theme=dark&view=editor"),S(Ii,"width","100%"),S(Ii,"height","500px"),S(Ii,"border","0"),S(Ii,"border-radius","4px"),S(Ii,"overflow","hidden"),w(Ii,"title","JSON parser (with error handling)"),w(Ii,"allow","geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media; usb"),w(Ii,"sandbox","allow-modals allow-forms allow-popups allow-scripts allow-same-origin"),w(Mi,"href","https://elm-lang.org/news/compiler-errors-for-humans"),w(Mi,"rel","nofollow"),w(qi,"href","https://twitter.com/czaplic"),w(qi,"rel","nofollow"),w(Fi,"href","#summary"),w(Fi,"id","summary"),w(ul,"href","https://github.com/babel/babel/tree/master/packages/babel-parser"),w(ul,"rel","nofollow"),w(dl,"href","https://github.com/sveltejs/svelte/tree/master/src/compiler/parse"),w(dl,"rel","nofollow"),w(El,"href","https://twitter.com/cassidoo"),w(El,"rel","nofollow")},m(n,a){l(n,s,a),i(s,t),i(t,e),i(e,o),i(o,p),i(t,r),i(r,c),i(c,h),i(t,f),i(f,g),i(g,x),i(t,j),i(j,O),i(O,P),i(P,A),i(j,T),i(T,L),i(L,I),i(t,C),i(C,N),i(N,$),i(t,D),i(D,M),i(M,J),i(J,H),i(D,q),i(q,U),i(U,R),i(D,W),i(W,B),i(B,_),i(t,F),i(F,G),i(G,z),l(n,V,a),l(n,K,a),i(K,Y),l(n,X,a),l(n,Q,a),i(Q,Z),i(Z,nn),l(n,an,a),l(n,sn,a),sn.innerHTML='\n<code class="language-">fakeParseJSON(&#39;&#123; &quot;data&quot;: &#123; &quot;fish&quot;: &quot;cake&quot;, &quot;array&quot;: [1,2,3], &quot;children&quot;: [ &#123; &quot;something&quot;: &quot;else&quot; &#125;, &#123; &quot;candy&quot;: &quot;cane&quot; &#125;, &#123; &quot;sponge&quot;: &quot;bob&quot; &#125; ] &#125; &#125; &#39;)</code>',l(n,tn,a),l(n,en,a),i(en,on),l(n,pn,a),l(n,rn,a),rn.innerHTML='<code class="language-js"><span class="token keyword">const</span> fakeParseJSON <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span>parse<span class="token punctuation">;</span></code>',l(n,cn,a),l(n,ln,a),i(ln,un),l(n,hn,a),l(n,kn,a),i(kn,fn),i(fn,dn),i(dn,mn),i(kn,gn),i(kn,wn),i(wn,vn),i(vn,En),i(kn,yn),i(kn,bn),i(bn,xn),i(xn,jn),l(n,Sn,a),l(n,On,a),i(On,Pn),l(n,An,a),l(n,Tn,a),i(Tn,Ln),l(n,In,a),l(n,Cn,a),i(Cn,Nn),i(Cn,$n),i($n,Dn),i(Cn,Mn),l(n,Jn,a),l(n,Hn,a),i(Hn,qn),l(n,Un,a),l(n,Rn,a),i(Rn,Wn),i(Wn,Bn),i(Bn,_n),i(Rn,Fn),i(Rn,Gn),i(Gn,zn),i(Gn,Vn),i(Vn,Kn),i(Gn,Yn),i(Rn,Xn),i(Rn,Qn),i(Qn,Zn),i(Zn,na),i(na,aa),i(Zn,sa),i(Rn,ta),i(Rn,ea),i(ea,oa),i(Rn,ra),i(Rn,ca),i(ca,ia),i(Rn,la),i(Rn,ua),i(ua,ha),i(ha,ka),i(ka,fa),i(ha,da),i(ha,ma),i(ma,ga),i(ha,wa),i(Rn,va),i(Rn,Ea),Ea.innerHTML='\n<code class="language-">json\n  element\n\nvalue\n  object\n  array\n  string\n  number\n  &quot;true&quot;\n  &quot;false&quot;\n  &quot;null&quot;\n\nobject\n  &#39;&#123;&#39; ws &#39;&#125;&#39;\n  &#39;&#123;&#39; members &#39;&#125;&#39;</code>',i(Rn,ya),i(Rn,ba),i(ba,xa),i(Rn,ja),i(Rn,Sa),i(Sa,Oa),i(Rn,Pa),i(Rn,Aa),i(Aa,Ta),i(Rn,La),i(Rn,Ia),i(Ia,Ca),i(Rn,Na),i(Rn,$a),i($a,Da),i(Rn,Ja),i(Rn,Ha),i(Ha,qa),i(Rn,Ua),i(Rn,Ra),i(Ra,Wa),i(Ra,Ba),i(Ba,_a),i(Ra,Fa),i(Rn,Ga),i(Rn,za),i(za,Va),i(Rn,Ka),i(Rn,Ya),i(Ya,Xa),i(Ya,Qa),i(Qa,Za),i(Ya,ns),i(Ya,as),i(as,ss),i(Ya,ts),i(Ya,es),i(es,os),i(Ya,ps),i(Ya,rs),i(rs,cs),i(Ya,is),i(Ya,ls),i(ls,us),i(Ya,hs),i(Ya,ks),i(ks,fs),i(Ya,ds),i(Ya,ms),i(ms,gs),i(Ya,ws),i(Ya,vs),i(vs,Es),i(Ya,ys),i(Rn,bs),i(Rn,xs),i(xs,js),i(xs,Ss),i(Ss,Os),i(xs,Ps),i(Rn,As),i(Rn,Ts),i(Ts,Ls),i(Ls,Is),i(Is,Cs),i(Ls,Ns),i(Ls,$s),i($s,Ds),i(Ls,Ms),i(Ts,Js),i(Ts,Hs),i(Hs,qs),i(qs,Us),i(Hs,Rs),i(Hs,Ws),i(Ws,Bs),i(Hs,_s),i(Hs,Fs),i(Fs,Gs),i(Hs,zs),i(Hs,Vs),i(Vs,Ks),i(Hs,Ys),i(Hs,Xs),i(Xs,Qs),i(Hs,Zs),i(Hs,nt),i(nt,at),i(Hs,st),i(Rn,tt),i(Rn,et),i(et,ot),i(Rn,pt),i(Rn,rt),i(rt,ct),i(ct,it),i(ct,lt),i(lt,ut),i(ct,ht),i(rt,kt),i(rt,ft),i(ft,dt),i(ft,mt),i(mt,gt),i(ft,wt),i(ft,vt),i(vt,Et),i(ft,yt),i(Rn,bt),i(Rn,xt),i(xt,jt),i(Rn,St),i(Rn,Ot),i(Ot,Pt),i(Pt,At),i(Pt,Tt),i(Tt,Lt),i(Pt,It),i(Rn,Ct),i(Rn,Nt),i(Nt,$t),l(n,Dt,a),l(n,Mt,a),i(Mt,Jt),i(Jt,Ht),i(Ht,qt),i(Mt,Ut),i(Mt,Rt),i(Rt,Wt),i(Mt,Bt),i(Mt,_t),_t.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">fakeParseJSON</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token comment">// TODO</span>\n<span class="token punctuation">&#125;</span></code>',i(Mt,Ft),i(Mt,Gt),i(Gt,zt),i(Gt,Vt),i(Vt,Kt),i(Gt,Yt),i(Gt,Xt),i(Xt,Qt),i(Gt,Zt),i(Gt,ne),i(ne,ae),i(Gt,se),i(Mt,te),i(Mt,ee),i(ee,oe),i(ee,pe),i(pe,re),i(Mt,ce),i(Mt,ie),ie.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">fakeParseJSON</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">function</span> <span class="token function">parseObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">\'&#123;\'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      i<span class="token operator">++</span><span class="token punctuation">;</span>\n      <span class="token function">skipWhitespace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token comment">// if it is not \'&#125;\',</span>\n      <span class="token comment">// we take the path of string -> whitespace -> \':\' -> value -> ...</span>\n      <span class="token keyword">while</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">\'&#125;\'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n        <span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token function">parseString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">skipWhitespace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">eatColon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token function">parseValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span>\n    <span class="token punctuation">&#125;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(Mt,le),i(Mt,ue),i(ue,he),i(ue,ke),i(ke,fe),i(ue,de),i(Mt,me),i(Mt,ge),i(ge,we),i(ge,ve),i(ve,Ee),i(ge,ye),i(ge,be),i(be,xe),i(ge,je),i(ge,Se),i(Se,Oe),i(ge,Pe),i(ge,Ae),i(Ae,Te),i(ge,Le),i(ge,Ie),i(Ie,Ce),i(ge,Ne),i(ge,$e),i($e,De),i(ge,Me),i(Mt,Je),i(Mt,He),i(He,qe),i(Mt,Ue),i(Mt,Re),Re.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">fakeParseJSON</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">function</span> <span class="token function">parseObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">\'&#123;\'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      i<span class="token operator">++</span><span class="token punctuation">;</span>\n      <span class="token function">skipWhitespace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token comment">// highlight-next-line</span>\n      <span class="token keyword">let</span> initial <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n      <span class="token comment">// if it is not \'&#125;\',</span>\n      <span class="token comment">// we take the path of string -> whitespace -> \':\' -> value -> ...</span>\n      <span class="token keyword">while</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">\'&#125;\'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n        <span class="token comment">// highlight-start</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>initial<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n          <span class="token function">eatComma</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token function">skipWhitespace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">&#125;</span>\n        <span class="token comment">// highlight-end</span>\n        <span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token function">parseString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">skipWhitespace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">eatColon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token function">parseValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// highlight-next-line</span>\n        initial <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span>\n      <span class="token comment">// move to the next character of \'&#125;\'</span>\n      i<span class="token operator">++</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(Mt,We),i(Mt,Be),i(Be,_e),i(Mt,Fe),i(Mt,Ge),i(Ge,ze),i(ze,Ve),i(ze,Ke),i(Ke,Ye),i(ze,Xe),i(Ge,Qe),i(Ge,Ze),i(Ze,no),i(Ze,ao),i(ao,so),i(Ze,to),i(Ge,eo),i(Ge,oo),i(oo,po),i(oo,ro),i(ro,co),i(oo,io),i(Mt,lo),i(Mt,uo),i(uo,ho),i(uo,ko),i(ko,fo),i(uo,mo),i(uo,go),i(go,wo),i(uo,vo),i(Mt,Eo),i(Mt,yo),yo.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">fakeParseJSON</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// ...</span>\n  <span class="token keyword">function</span> <span class="token function">eatComma</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">\',\'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">\'Expected ",".\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span>\n    i<span class="token operator">++</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n\n  <span class="token keyword">function</span> <span class="token function">eatColon</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">\':\'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">\'Expected ":".\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span>\n    i<span class="token operator">++</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(Mt,bo),i(Mt,xo),i(xo,jo),i(xo,So),i(So,Oo),i(xo,Po),i(Mt,Ao),i(Mt,To),i(To,Lo),i(Mt,Io),i(Mt,Co),Co.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">fakeParseJSON</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">function</span> <span class="token function">parseObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">\'&#123;\'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      i<span class="token operator">++</span><span class="token punctuation">;</span>\n      <span class="token function">skipWhitespace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token comment">// highlight-next-line</span>\n      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">let</span> initial <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n      <span class="token comment">// if it is not \'&#125;\',</span>\n      <span class="token comment">// we take the path of string -> whitespace -> \':\' -> value -> ...</span>\n      <span class="token keyword">while</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">\'&#125;\'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>initial<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n          <span class="token function">eatComma</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n          <span class="token function">skipWhitespace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">&#125;</span>\n        <span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token function">parseString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">skipWhitespace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">eatColon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token function">parseValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// highlight-next-line</span>\n        result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>\n        initial <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span>\n      <span class="token comment">// move to the next character of \'&#125;\'</span>\n      i<span class="token operator">++</span><span class="token punctuation">;</span>\n\n      <span class="token comment">// highlight-next-line</span>\n      <span class="token keyword">return</span> result<span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(Mt,No),i(Mt,$o),i($o,Do),i(Mt,Mo),i(Mt,Jo),i(Jo,Ho),i(Mt,Uo),i(Mt,Ro),i(Ro,Wo),i(Mt,Bo),i(Mt,_o),_o.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">fakeParseJSON</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// ...</span>\n  <span class="token keyword">function</span> <span class="token function">parseArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">\'[\'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      i<span class="token operator">++</span><span class="token punctuation">;</span>\n      <span class="token function">skipWhitespace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token keyword">let</span> initial <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n      <span class="token keyword">while</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">\']\'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>initial<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n          <span class="token function">eatComma</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">&#125;</span>\n        <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token function">parseValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        initial <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n      <span class="token punctuation">&#125;</span>\n      <span class="token comment">// move to the next character of \']\'</span>\n      i<span class="token operator">++</span><span class="token punctuation">;</span>\n      <span class="token keyword">return</span> result<span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(Mt,Fo),i(Mt,Go),i(Go,zo),i(Mt,Vo),i(Mt,Ko),i(Ko,Yo),i(Mt,Qo),i(Mt,Zo),i(Zo,np),i(Mt,ap),i(Mt,sp),i(sp,tp),i(Mt,ep),i(Mt,op),op.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">fakeParseJSON</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// ...</span>\n  <span class="token keyword">function</span> <span class="token function">parseValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token function">skipWhitespace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> value <span class="token operator">=</span>\n      <span class="token function">parseString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span><span class="token operator">?</span>\n      <span class="token function">parseNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span><span class="token operator">?</span>\n      <span class="token function">parseObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span><span class="token operator">?</span>\n      <span class="token function">parseArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span><span class="token operator">?</span>\n      <span class="token function">parseKeyword</span><span class="token punctuation">(</span><span class="token string">\'true\'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token operator">?</span><span class="token operator">?</span>\n      <span class="token function">parseKeyword</span><span class="token punctuation">(</span><span class="token string">\'false\'</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token operator">?</span><span class="token operator">?</span>\n      <span class="token function">parseKeyword</span><span class="token punctuation">(</span><span class="token string">\'null\'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">skipWhitespace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> value<span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(Mt,pp),i(Mt,rp),i(rp,cp),i(rp,ip),i(ip,lp),i(rp,up),i(rp,hp),i(hp,kp),i(rp,fp),i(rp,dp),i(dp,mp),i(rp,gp),i(rp,wp),i(wp,vp),i(rp,Ep),i(rp,yp),i(yp,bp),i(rp,xp),i(rp,jp),i(jp,Sp),i(rp,Op),i(rp,Pp),i(Pp,Ap),i(rp,Tp),i(rp,Lp),i(Lp,Ip),i(rp,Cp),i(rp,Np),i(Np,$p),i(rp,Dp),i(rp,Mp),i(Mp,Jp),i(rp,Hp),i(rp,qp),i(qp,Up),i(rp,Rp),i(Mt,Wp),i(Mt,Bp),i(Bp,_p),i(Bp,Fp),i(Fp,Gp),i(Bp,zp),i(Mt,Vp),i(Mt,Kp),Kp.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">fakeParseJSON</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// ...</span>\n  <span class="token keyword">function</span> <span class="token function">parseKeyword</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i <span class="token operator">+</span> name<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">===</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      i <span class="token operator">+=</span> name<span class="token punctuation">.</span>length<span class="token punctuation">;</span>\n      <span class="token keyword">return</span> value<span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',i(Mt,Yp),i(Mt,Xp),i(Xp,Qp),i(Xp,Zp),i(Zp,nr),i(Xp,ar),i(Mt,sr),i(Mt,tr),i(tr,er),i(Mt,or),i(Mt,pr),i(Mt,cr),i(Mt,ir),i(ir,lr),i(ir,ur),i(ur,hr),i(ir,kr),i(Mt,fr),i(Mt,dr),dr.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">fakeParseJSON</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token function">parseValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// ...</span>\n<span class="token punctuation">&#125;</span></code>',i(Mt,mr),i(Mt,gr),i(gr,wr),i(Mt,vr),i(Mt,Er),i(Er,yr),l(n,br,a),l(n,xr,a),i(xr,jr),i(jr,Sr),i(Sr,Or),i(xr,Pr),i(xr,Ar),i(Ar,Tr),i(xr,Lr),i(xr,Ir),i(Ir,Cr),i(xr,Nr),i(xr,$r),i($r,Dr),i(Dr,Mr),i($r,Jr),i($r,Hr),i(Hr,qr),l(n,Ur,a),l(n,Rr,a),i(Rr,Wr),i(Wr,Br),i(Br,_r),l(n,Fr,a),l(n,Gr,a),i(Gr,zr),i(zr,Vr),i(Vr,Kr),i(Gr,Yr),i(Gr,Xr),i(Xr,Qr),i(Xr,Zr),i(Zr,nc),i(Xr,ac),i(Gr,sc),i(Gr,tc),tc.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">fakeParseJSON</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// ...</span>\n  <span class="token keyword">function</span> <span class="token function">parseObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// ...</span>\n    <span class="token keyword">while</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">\'&#125;\'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></code>',i(Gr,ec),i(Gr,oc),i(oc,pc),i(Gr,rc),i(Gr,cc),cc.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">fakeParseJSON</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// ...</span>\n  <span class="token keyword">function</span> <span class="token function">parseObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// ...</span>\n    <span class="token comment">// highlight-next-line</span>\n    <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> str<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">\'&#125;\'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      <span class="token comment">// ...</span>\n    <span class="token punctuation">&#125;</span>\n    <span class="token comment">// highlight-next-line</span>\n    <span class="token function">checkUnexpectedEndOfInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// move to the next character of \'&#125;\'</span>\n    i<span class="token operator">++</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> result<span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',l(n,ic,a),l(n,lc,a),i(lc,uc),i(uc,hc),i(hc,kc),i(lc,fc),i(lc,dc),i(dc,mc),i(lc,gc),i(lc,wc),i(wc,vc),i(lc,Ec),i(lc,yc),yc.innerHTML='<code class="language-js">Unexpected token <span class="token string">"a"</span></code>',i(lc,bc),i(lc,xc),i(xc,jc),i(lc,Sc),i(lc,Oc),i(Oc,Pc),l(n,Ac,a),l(n,Tc,a),i(Tc,Lc),i(Lc,Ic),i(Ic,Cc),i(Tc,Nc),i(Tc,$c),i($c,Dc),i(Tc,Mc),i(Tc,Jc),Jc.innerHTML='<code class="language-js"><span class="token comment">// instead of</span>\nUnexpected token <span class="token string">"a"</span>\nUnexpected end <span class="token keyword">of</span> input\n\n<span class="token comment">// show</span>\n<span class="token constant">JSON_ERROR_001</span> Unexpected token <span class="token string">"a"</span>\n<span class="token constant">JSON_ERROR_002</span> Unexpected end <span class="token keyword">of</span> input</code>',l(n,Hc,a),l(n,qc,a),i(qc,Uc),i(Uc,Rc),i(Rc,Wc),i(qc,Bc),i(qc,_c),i(_c,Fc),i(qc,Gc),i(qc,zc),zc.innerHTML='<code class="language-js"><span class="token comment">// instead of</span>\nUnexpected token <span class="token string">"a"</span> at position <span class="token number">5</span>\n\n<span class="token comment">// show</span>\n<span class="token punctuation">&#123;</span> <span class="token string">"b"</span>a\n      <span class="token operator">^</span>\n<span class="token constant">JSON_ERROR_001</span> Unexpected token <span class="token string">"a"</span></code>',i(qc,Vc),i(qc,Kc),i(Kc,Yc),i(qc,Xc),i(qc,Qc),Qc.innerHTML='<code class="language-js"><span class="token keyword">function</span> <span class="token function">fakeParseJSON</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  <span class="token comment">// ...</span>\n  <span class="token keyword">function</span> <span class="token function">printCodeSnippet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n    <span class="token keyword">const</span> <span class="token keyword">from</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> trimmed <span class="token operator">=</span> <span class="token keyword">from</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> padding <span class="token operator">=</span> <span class="token punctuation">(</span>trimmed <span class="token operator">?</span> <span class="token number">3</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token keyword">from</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> snippet <span class="token operator">=</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">(</span>trimmed <span class="token operator">?</span> <span class="token string">\'...\'</span> <span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">)</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token keyword">from</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token string">\' \'</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span>padding<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">\'^\'</span><span class="token punctuation">,</span>\n      <span class="token string">\' \'</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span>padding<span class="token punctuation">)</span> <span class="token operator">+</span> message<span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">\'&#92;n\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>snippet<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',l(n,Zc,a),l(n,ni,a),i(ni,ai),i(ai,si),i(si,ti),i(ni,ei),i(ni,oi),i(oi,pi),i(ni,ri),i(ni,ci),ci.innerHTML='<code class="language-js"><span class="token comment">// instead of</span>\nUnexpected token <span class="token string">"a"</span> at position <span class="token number">5</span>\n\n<span class="token comment">// show</span>\n<span class="token punctuation">&#123;</span> <span class="token string">"b"</span>a\n      <span class="token operator">^</span>\n<span class="token constant">JSON_ERROR_001</span> Unexpected token <span class="token string">"a"</span><span class="token punctuation">.</span>\nExpecting a <span class="token string">":"</span> over here<span class="token punctuation">,</span> eg<span class="token punctuation">:</span>\n<span class="token punctuation">&#123;</span> <span class="token string">"b"</span><span class="token punctuation">:</span> <span class="token string">"bar"</span> <span class="token punctuation">&#125;</span>\n      <span class="token operator">^</span>\nYou can learn more about valid <span class="token constant">JSON</span> string <span class="token keyword">in</span> http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>goo<span class="token punctuation">.</span>gl<span class="token operator">/</span>xxxxx</code>',i(ni,ii),i(ni,li),i(li,ui),i(ni,hi),i(ni,ki),ki.innerHTML='<code class="language-js"><span class="token function">fakeParseJSON</span><span class="token punctuation">(</span><span class="token string">\'"Lorem ipsum\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// instead of</span>\nExpecting a <span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">"</span><span class="token template-punctuation string">&#96;</span></span> over here<span class="token punctuation">,</span> eg<span class="token punctuation">:</span>\n<span class="token string">"Foo Bar"</span>\n        <span class="token operator">^</span>\n\n<span class="token comment">// show</span>\nExpecting a <span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">"</span><span class="token template-punctuation string">&#96;</span></span> over here<span class="token punctuation">,</span> eg<span class="token punctuation">:</span>\n<span class="token string">"Lorem ipsum"</span>\n            <span class="token operator">^</span></code>',i(ni,fi),i(ni,di),i(di,mi),i(ni,gi),i(ni,wi),i(wi,vi),i(ni,Ei),i(ni,yi),i(yi,bi),i(bi,xi),i(yi,ji),i(yi,Si),i(Si,Oi),i(yi,Pi),i(yi,Ai),i(Ai,Ti),i(ni,Li),i(ni,Ii),i(ni,Ni),i(ni,$i),i($i,Di),i($i,Mi),i(Mi,Ji),i($i,Hi),i($i,qi),i(qi,Ui),i($i,Ri),l(n,Wi,a),l(n,Bi,a),i(Bi,_i),i(_i,Fi),i(Fi,Gi),i(Bi,zi),i(Bi,Vi),i(Vi,Ki),i(Bi,Yi),i(Bi,Xi),i(Xi,Qi),i(Bi,Zi),i(Bi,nl),i(nl,al),i(Bi,sl),i(Bi,tl),i(tl,el),i(Bi,ol),i(Bi,pl),i(pl,rl),i(Bi,cl),i(Bi,il),i(il,ll),i(ll,ul),i(ul,hl),i(il,kl),i(il,fl),i(fl,dl),i(dl,ml),i(Bi,gl),i(Bi,wl),i(wl,vl),i(wl,El),i(El,yl),i(wl,bl)},p:n,d(n){n&&u(s),n&&u(V),n&&u(K),n&&u(X),n&&u(Q),n&&u(an),n&&u(sn),n&&u(tn),n&&u(en),n&&u(pn),n&&u(rn),n&&u(cn),n&&u(ln),n&&u(hn),n&&u(kn),n&&u(Sn),n&&u(On),n&&u(An),n&&u(Tn),n&&u(In),n&&u(Cn),n&&u(Jn),n&&u(Hn),n&&u(Un),n&&u(Rn),n&&u(Dt),n&&u(Mt),n&&u(br),n&&u(xr),n&&u(Ur),n&&u(Rr),n&&u(Fr),n&&u(Gr),n&&u(ic),n&&u(lc),n&&u(Ac),n&&u(Tc),n&&u(Hc),n&&u(qc),n&&u(Zc),n&&u(ni),n&&u(Wi),n&&u(Bi)}}}function fn(n){let s,t;const e=[dn];let o={$$slots:{default:[kn]},$$scope:{ctx:n}};for(let n=0;n<e.length;n+=1)o=a(o,e[n]);return s=new hn({props:o}),{c(){_(s.$$.fragment)},l(n){F(s.$$.fragment,n)},m(n,a){G(s,n,a),t=!0},p(n,[a]){const t=0&a?function(n,a){const s={},t={},e={$$scope:1};let o=n.length;for(;o--;){const p=n[o],r=a[o];if(r){for(const n in p)n in r||(t[n]=1);for(const n in r)e[n]||(s[n]=r[n],e[n]=1);n[o]=r}else for(const n in p)e[n]=1}for(const n in t)n in s||(s[n]=void 0);return s}(e,[(o=dn,"object"==typeof o&&null!==o?o:{})]):{};var o;1&a&&(t.$$scope={dirty:a,ctx:n}),s.$set(t)},i(n){t||(W(s.$$.fragment,n),t=!0)},o(n){B(s.$$.fragment,n),t=!1},d(n){z(s,n)}}}const dn={title:"JSON Parser with JavaScript",date:"2019-12-12T08:00:00Z",description:"Step-by-step guide on implementing a JSON parser",tags:["JavaScript","AST"],series:"AST",slug:"json-parser-with-javascript",type:"blog"};class mn extends Y{constructor(n){super(),K(this,n,null,fn,p,{})}}setTimeout(()=>{new mn({target:document.querySelector("#app"),hydrate:!0});if(document.querySelector(".twitter-tweet")){const n=document.createElement("script");n.async=!0,n.src="https://platform.twitter.com/widgets.js",n.charset="utf-8",document.body.appendChild(n)}},3e3);
