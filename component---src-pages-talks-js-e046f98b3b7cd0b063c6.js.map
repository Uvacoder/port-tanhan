{"version":3,"sources":["webpack:///./src/pages/talks.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/components/DarkModeSwitch.js","webpack:///./src/components/layout.js"],"names":["TalkPage","render","data","this","props","siteTitle","site","siteMetadata","title","talks","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","map","talk","_talk$node","node","fields","frontmatter","key","slug","gatsby__WEBPACK_IMPORTED_MODULE_2__","style","boxShadow","to","role","aria-label","marginRight","target","rel","href","venueLink","venue","occasionLink","occasion","date","slides","fontStyle","lineHeight","marginBottom","color","description","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_lincoln__WEBPACK_IMPORTED_MODULE_1__","typography_theme_lincoln__WEBPACK_IMPORTED_MODULE_1___default","Lincoln","overrideThemeStyles","a.gatsby-resp-image-link","textDecoration","fontWeight","textShadow","backgroundImage","pre","overflow","blockquote","borderLeftColor","typography","Typography","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","DarkModeSwitch","_useDarkMode","useDarkMode","darkMode","setDarkMode","react_default","className","type","checked","onChange","event","self","ga","eventCategory","eventAction","eventLabel","DARK_MODE_REGEX","RegExp","getDarkModeFromCookie","cookie","document","split","filter","str","trim","match","replace","_useState","useState","useEffect","classList","body","add","remove","DARK_MODE_COOKIE","Layout","header","_this$props","fontFamily","marginTop","gatsby_browser_entry","marginLeft","maxWidth","padding"],"mappings":"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","file":"component---src-pages-talks-js-e046f98b3b7cd0b063c6.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nclass TalkPage extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const talks = data.allMarkdownRemark.edges;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"Talks\" />\n        <h1>Talks</h1>\n        {talks.map(talk => {\n          const { fields, frontmatter } = talk.node;\n          return (\n            <div key={fields.slug}>\n              <h3>\n                <Link style={{ boxShadow: `none` }} to={fields.slug}>\n                  {frontmatter.title}\n                </Link>\n              </h3>\n              <div>\n                <span role=\"img\" aria-label=\"venue\" style={{ marginRight: 4 }}>\n                  üìç\n                </span>\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={frontmatter.venueLink}\n                >\n                  {frontmatter.venue}\n                </a>\n              </div>\n              <div>\n                <span role=\"img\" aria-label=\"group\" style={{ marginRight: 4 }}>\n                  üë•\n                </span>\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={frontmatter.occasionLink}\n                >\n                  {frontmatter.occasion}\n                </a>\n              </div>\n              <div>\n                <span role=\"img\" aria-label=\"date\" style={{ marginRight: 4 }}>\n                  üóì\n                </span>\n                {frontmatter.date}\n              </div>\n              <div>\n                <span role=\"img\" aria-label=\"slide\" style={{ marginRight: 4 }}>\n                  üìù\n                </span>\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={frontmatter.slides}\n                >\n                  Slides\n                </a>\n              </div>\n              <div\n                style={{\n                  fontStyle: 'italic',\n                  lineHeight: '1.5em',\n                  marginBottom: '2rem',\n                  color: 'rgba(0,0,0,0.75)',\n                }}\n              >\n                {frontmatter.description}\n              </div>\n            </div>\n          );\n        })}\n      </Layout>\n    );\n  }\n}\n\nexport default TalkPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: {\n        frontmatter: { wip: { ne: true } }\n        fields: { type: { eq: \"talk\" } }\n      }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            occasion\n            occasionLink\n            venue\n            venueLink\n            description\n            slides\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\nimport Lincoln from 'typography-theme-lincoln';\nimport './theme-prisms-dracula.css'\n\nconst PRIMARY_COLOR = '#612e77';\n\nLincoln.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n    a: {\n      color: PRIMARY_COLOR,\n      textDecoration: 'underline',\n      fontWeight: 600,\n      textShadow: 'initial',\n      backgroundImage: 'initial',\n    },\n    pre: {\n      overflow: 'scroll',\n    },\n    blockquote: {\n      borderLeftColor: PRIMARY_COLOR,\n    }\n  };\n};\n\nconst typography = new Typography(Lincoln);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React, { useState, useEffect } from 'react';\nimport './theme-mode.css';\n\nconst DARK_MODE = 'mode--dark';\nexport default function() {\n  const [darkMode, setDarkMode] = useDarkMode();\n  const onClick = event => {\n    setDarkMode(event.target.checked);\n    /* eslint-disable no-restricted-globals */\n    self.ga &&\n      self.ga('send', 'event', {\n        eventCategory: 'ux',\n        eventAction: 'click',\n        eventLabel: 'dark mode',\n      });\n  };\n\n  return (\n    <label className=\"dark-mode-checkbox\">\n      <input type=\"checkbox\" checked={darkMode} onChange={onClick} />\n      <span className=\"sun\">{'üåû'}</span>\n      <span className=\"moon\">{'üåù'}</span>\n    </label>\n  );\n}\n\nconst DARK_MODE_COOKIE = 'DARK_MODE';\nconst DARK_MODE_REGEX = new RegExp(`^${DARK_MODE_COOKIE}=`);\nconst getDarkModeFromCookie = () => {\n  const cookie = document.cookie\n    .split(';')\n    .filter(str => str.trim().match(DARK_MODE_REGEX));\n  if (cookie.length) {\n    return cookie[0].replace(DARK_MODE_REGEX, '').trim() === 'true';\n  }\n  return false;\n};\nconst useDarkMode = () => {\n  const [darkMode, setDarkMode] = useState(getDarkModeFromCookie);\n\n  // set class name\n  useEffect(() => {\n    const classList = document.body.classList;\n    if (darkMode) {\n      classList.add(DARK_MODE);\n    } else {\n      classList.remove(DARK_MODE);\n    }\n  }, [darkMode]);\n\n  // set cookie\n  useEffect(() => {\n    document.cookie = `${DARK_MODE_COOKIE}=${darkMode};`;\n  }, [darkMode]);\n\n  return [darkMode, setDarkMode];\n};\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport { rhythm } from '../utils/typography';\nimport DarkModeSwitch from './components/DarkModeSwitch';\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props;\n    const rootPath = `${__PATH_PREFIX__}/`;\n    let header;\n\n    if (location.pathname === rootPath) {\n      header = null;\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      );\n    }\n\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          {'Built with '}\n          <span role=\"img\" className=\"emoji\">\n            {'üíª'}\n          </span>\n          {' and '}\n          <span role=\"img\" className=\"emoji\">\n            {'‚ù§Ô∏è'}\n          </span>\n          {' ‚Ä¢ '}\n          <a href=\"https://twitter.com/lihautan\">twitter</a>\n          {' ‚Ä¢ '}\n          <a href=\"https://github.com/tanhauhau\">github</a>\n          {' ‚Ä¢ '}\n          <a href=\"https://github.com/tanhauhau/tanhauhau.github.io/issues/new?assignees=&labels=grammar%2C+typo&template=fix-typos-and-grammars.md&title=%5BTYPO%5D\">\n            discuss\n          </a>\n        </footer>\n        <DarkModeSwitch />\n      </div>\n    );\n  }\n}\n\nexport default Layout;\n"],"sourceRoot":""}