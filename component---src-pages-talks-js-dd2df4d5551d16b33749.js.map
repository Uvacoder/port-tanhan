{"version":3,"sources":["webpack:///./src/pages/talks.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["TalkPage","render","data","this","props","siteTitle","site","siteMetadata","title","talks","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","map","talk","_talk$node","node","fields","frontmatter","key","slug","gatsby__WEBPACK_IMPORTED_MODULE_2__","style","boxShadow","to","target","rel","href","venueLink","venue","occasionLink","occasion","date","slides","fontStyle","lineHeight","marginBottom","color","description","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_lincoln__WEBPACK_IMPORTED_MODULE_1__","typography_theme_lincoln__WEBPACK_IMPORTED_MODULE_1___default","Lincoln","overrideThemeStyles","body","backgroundColor","a.gatsby-resp-image-link","textDecoration","textDecorationStyle","fontWeight","textShadow","backgroundImage","pre","overflow","blockquote","borderLeftColor","typography","Typography","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","header","_this$props","fontFamily","marginTop","marginLeft","marginRight","maxWidth","padding","SEO","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-talks-js-dd2df4d5551d16b33749.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nclass TalkPage extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const talks = data.allMarkdownRemark.edges;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"Talks\" />\n        <h1>Talks</h1>\n        {talks.map(talk => {\n          const { fields, frontmatter } = talk.node;\n          return (\n            <div key={fields.slug}>\n              <h3>\n                <Link style={{ boxShadow: `none` }} to={fields.slug}>\n                  {frontmatter.title}\n                </Link>\n              </h3>\n              <div>\n                üìç\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={frontmatter.venueLink}\n                >\n                  {frontmatter.venue}\n                </a>\n              </div>\n              <div>\n                üë•\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={frontmatter.occasionLink}\n                >\n                  {frontmatter.occasion}\n                </a>\n              </div>\n              <div>üóì{frontmatter.date}</div>\n              <div>\n                üìù\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={frontmatter.slides}\n                >\n                  Slides\n                </a>\n              </div>\n              <div\n                style={{\n                  fontStyle: 'italic',\n                  lineHeight: '1.5em',\n                  marginBottom: '2rem',\n                  color: 'rgba(0,0,0,0.75)',\n                }}\n              >\n                {frontmatter.description}\n              </div>\n            </div>\n          );\n        })}\n      </Layout>\n    );\n  }\n}\n\nexport default TalkPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(filter: { fields: { type: { eq: \"talk\" } } }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            occasion\n            occasionLink\n            venue\n            venueLink\n            description\n            slides\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography';\nimport Lincoln from 'typography-theme-lincoln';\nimport './theme-prisms-dracula.css'\n\nconst PRIMARY_COLOR = '#612e77';\n\nLincoln.overrideThemeStyles = () => {\n  return {\n    body: {\n      backgroundColor: '#faf0fd',\n    },\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n    a: {\n      color: PRIMARY_COLOR,\n      textDecoration: 'underline',\n      textDecorationStyle: 'dotted',\n      fontWeight: 400,\n      textShadow: 'initial',\n      backgroundImage: 'initial',\n    },\n    pre: {\n      overflow: 'scroll',\n    },\n    blockquote: {\n      borderLeftColor: PRIMARY_COLOR,\n    }\n  };\n};\n\nconst typography = new Typography(Lincoln);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = null\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          {\"Built with üíª and ‚ù§Ô∏è ‚Ä¢ \"}\n          <a href=\"https://twitter.com/lihautan\">twitter</a>\n          {\" ‚Ä¢ \"}\n          <a href=\"https://github.com/tanhauhau\">github</a>\n          {\" ‚Ä¢ \"}\n          <a href=\"https://github.com/tanhauhau/tanhauhau.github.io/issues/new?assignees=&labels=grammar%2C+typo&template=fix-typos-and-grammars.md&title=%5BTYPO%5D\">discuss</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}