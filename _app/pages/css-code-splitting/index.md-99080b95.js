import{S as Wr,i as Lr,s as jr,C as Gn,w as kr,x as vr,y as wr,z as Gr,A as dr,q as yr,o as mr,B as gr,r as Hr,R as ur,k as r,e as o,t as a,m as i,c as s,a as l,h as n,d as t,b as c,g as b,F as e,O as Nr}from"../../chunks/vendor-569a3c5c.js";import{T as Yr}from"../../chunks/TalkLayout-cd724f5b.js";import{T as $r}from"../../chunks/TableOfContent-dbc18cb8.js";import{_ as Dr}from"../../chunks/twitter-card-image-a57df29d.js";import"../../chunks/stores-ee936cd4.js";import"../../chunks/WebMentions-968cc380.js";/* empty css                                */function Kr(xe){let u,C,x,N,f,P,_e,Xt,I,uo,Y,fo,ko,$,vo,wo,zt,Rt,Ut,g,Fe,D,yo,mo,Ve,go,So,Je,Qe,bo,xo,K,_o,X,Eo,Co,Po,j,z,Ao,To,R,Io,Oo,Bo,O,Mo,U,qo,Wo,F,Lo,jo,Go,Ho,Ft,k,Ze,V,No,Yo,J,$o,Q,Do,Ko,Xo,et,zo,Ro,tt,Uo,Fo,ot,st,Vo,Jo,Ee,Z,Qo,Zo,es,A,at,ts,os,nt,ss,as,lt,ns,ls,rt,rs,is,it,cs,ps,ct,hs,ds,pt,us,Vt,S,ht,ee,fs,ks,te,vs,oe,ws,ys,ms,B,se,gs,dt,Ss,bs,xs,Ce,_s,ae,Es,Cs,ut,Ps,As,ne,Ts,le,Is,Os,Bs,re,Ms,ie,qs,Ws,Ls,Pe,ft,js,Gs,Hs,kt,Ns,Jt,v,vt,ce,Ys,$s,wt,Ds,Ks,pe,Xs,yt,zs,Rs,Us,mt,Fs,Vs,gt,Js,Qs,he,St,Zs,ea,bt,ta,oa,M,sa,de,aa,na,ue,la,ra,ia,xt,ca,pa,_t,ha,da,Et,ua,Qt,p,Ct,fe,fa,ka,q,Pt,va,wa,At,ya,ma,Tt,ga,Sa,It,ba,xa,ke,_a,Ae,Ea,Ca,Pa,Te,Sr=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">ensureCss</span><span style="color: var(--shiki-color-text)">(href) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">existingLinkTags</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">document</span><span style="color: var(--shiki-token-function)">.getElementsByTagName</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;link&quot;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-keyword)">let</span><span style="color: var(--shiki-color-text)"> i </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">; i </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">existingLinkTags</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">length</span><span style="color: var(--shiki-color-text)">; i</span><span style="color: var(--shiki-token-keyword)">++</span><span style="color: var(--shiki-color-text)">)&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">tag</span><span style="color: var(--shiki-color-text)">.rel </span><span style="color: var(--shiki-token-keyword)">===</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;stylesheet&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&amp;&amp;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">tag</span><span style="color: var(--shiki-token-function)">.getAttribute</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;href&quot;</span><span style="color: var(--shiki-color-text)">) </span><span style="color: var(--shiki-token-keyword)">===</span><span style="color: var(--shiki-color-text)"> href) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">linkTag</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">document</span><span style="color: var(--shiki-token-function)">.createElement</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;link&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">linkTag</span><span style="color: var(--shiki-color-text)">.rel </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;stylesheet&quot;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">linkTag</span><span style="color: var(--shiki-color-text)">.type </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;text/css&quot;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">linkTag</span><span style="color: var(--shiki-color-text)">.href </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> href;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">head</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">document</span><span style="color: var(--shiki-token-function)">.getElementsByTagName</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;head&quot;</span><span style="color: var(--shiki-color-text)">)[</span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">];</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">head</span><span style="color: var(--shiki-token-function)">.appendChild</span><span style="color: var(--shiki-color-text)">(linkTag);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Aa,Ot,Ta,Ia,Ie,br=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// somewhere in your application code</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// when you write</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;./styles.scss&#39;</span><span style="color: var(--shiki-color-text)">;</span></span></code></pre>`,Oa,Bt,Ba,Ma,Oe,xr=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// webpack&#39;s mini-css-extract-plugin transform it into</span></span>
<span class="line"><span style="color: var(--shiki-token-function)">ensureCss</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;https://shopee.sg/page-1-style.css&#39;</span><span style="color: var(--shiki-color-text)">);</span></span></code></pre>`,qa,W,Wa,Be,La,ja,Me,Ga,Ha,Na,Mt,qt,Ya,$a,Wt,Da,Ka,Lt,Xa,za,jt,Ra,Ua,qe,_r=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">/* only overwrite .foo in page2 */</span></span>
<span class="line"><span style="color: var(--shiki-token-function)">.page2</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">.foo</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">color</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">blue</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Fa,ve,Va,we,Ja,Qa,Za,We,Er=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> styles </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;./styles.scss&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">MyComponent</span><span style="color: var(--shiki-color-text)">(&#123; className &#125;) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> &lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">className</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">&#123;</span><span style="color: var(--shiki-token-constant)">styles</span><span style="color: var(--shiki-color-text)">.classA </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39; &#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> className&#125;&gt;Hello World&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,en,Gt,tn,on,Ht,Nt,sn,an,Yt,nn,ln,Le,Cr=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">.classA.classB</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">color</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">blue</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,rn,L,cn,je,pn,hn,Ge,dn,un,fn,ye,kn,me,vn,wn,yn,He,Pr=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">.classB.classB</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">color</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">blue</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">/* has higher specificity than */</span></span>
<span class="line"><span style="color: var(--shiki-token-function)">.c8e4436e</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">color</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">green</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,mn,$t,gn,Sn,T,bn,ge,xn,_n,Ne,En,Cn,Ye,Pn,An,Tn,Dt,In,On,Se,Bn,be,Mn,qn,Zt;return u=new $r({props:{data:[{link:"background",title:"Background"},{link:"so-how-big-is-shopee",title:"So, how big is Shopee?",nested:[{link:"but-download-time-does-not-tell-the-full-picture",title:"But download time does not tell the full picture."}]},{link:"solution",title:"Solution"},{link:"the-problem",title:"The Problem"}]}}),{c(){kr(u.$$.fragment),C=r(),x=o("p"),N=a("In the talk, I shared about why and how "),f=o("a"),P=a("Shopee"),_e=a(" does CSS Code Splitting and how we solve problems arised in the process."),Xt=r(),I=o("p"),uo=a("For those who don't know about "),Y=o("a"),fo=a("Shopee"),ko=a(", we are an e-commerce platform based in "),$=o("a"),vo=a("Greater Southeast Asia"),wo=a(", headquartered in Singapore. As a frontend engineer in Shopee, we constantly striving to deliver performant user experience with high network latency and slow CPU devices."),zt=r(),Rt=o("hr"),Ut=r(),g=o("section"),Fe=o("h2"),D=o("a"),yo=a("Background"),mo=r(),Ve=o("p"),go=a("A little background on how we use CSS in Shopee before getting into how we code split our CSS:"),So=r(),Je=o("blockquote"),Qe=o("p"),bo=a("We use SASS and CSS Modules, and we bundle all our stylesheets with webpack into 1 final CSS file."),xo=r(),K=o("p"),_o=a("For the benefit of those who might not know about "),X=o("a"),Eo=a("SASS"),Co=a(", SASS is a sassy extension of CSS that allow us to write functions and mixins, so we can easily reuse common css tricks and patterns."),Po=r(),j=o("p"),z=o("a"),Ao=a("CSS Modules"),To=a(" on the other hand, free us from racking our brain, coming up with a unique class name for every element. Even with "),R=o("a"),Io=a("BEM (Block Element Modifier) naming convention"),Oo=a(", as our application grows complex, we can't keep up with names for our element. Names with BEM convention just get longer and longer. With CSS Modules, we just need to make sure that within a CSS file (we can call it a CSS module, like a js module) the class names are unique. Our build tool will transform the stylesheets and generate class names that is unique throughout the application."),Bo=r(),O=o("p"),Mo=a("And lastly with "),U=o("a"),qo=a("webpack"),Wo=a(", we use "),F=o("a"),Lo=a("extract-text-webpack-plugin"),jo=a(" to extract all the css code within the application into 1 CSS file."),Go=r(),Ho=o("hr"),Ft=r(),k=o("section"),Ze=o("h2"),V=o("a"),No=a("So, how big is Shopee?"),Yo=r(),J=o("p"),$o=a("If you ask the business team, they will give you the numbers on "),Q=o("a"),Do=a("how well we are doing in the region"),Ko=a("."),Xo=r(),et=o("p"),zo=a("But if you ask a frontend engineer, I can tell you is that to date (Mar 27 2019), we have more than a thousand of CSS files, and more than 67K lines of CSS code, and the numbers are growing..."),Ro=r(),tt=o("p"),Uo=a("And all this CSS code is bundled into one whoppingly 500KB CSS file! \u{1F631}"),Fo=r(),ot=o("blockquote"),st=o("h3"),Vo=a("How big is 500KB ?!"),Jo=r(),Ee=o("p"),Z=o("a"),Qo=a("500KB is"),Zo=a(":"),es=r(),A=o("ul"),at=o("li"),ts=a("1 minute of MP3 at 80 Kbps bitrate"),os=r(),nt=o("li"),ss=a("2 1280x960 JPEG image"),as=r(),lt=o("li"),ns=a("1/10 second through 4G Network"),ls=r(),rt=o("li"),rs=a("2 seconds through 3G Network"),is=r(),it=o("p"),cs=a("Wait, who uses 3G nowadays? Isn't 5G is coming?"),ps=r(),ct=o("p"),hs=a("Turns out that most of the Southeast Asia is still on 3G if not slow 4G network, except major cities like Singapore, Jakarta, and etc."),ds=r(),pt=o("p"),us=a("So file size is indeed a big concern, when it comes to network speed."),Vt=r(),S=o("section"),ht=o("h3"),ee=o("a"),fs=a("But download time does not tell the full picture."),ks=r(),te=o("p"),vs=a("Because you need to look at it holistically in terms of the "),oe=o("a"),ws=a("critical rendering path"),ys=a(":"),ms=r(),B=o("ol"),se=o("li"),gs=a("When the browser sees a "),dt=o("em"),Ss=a("link tag"),bs=a(" that links to a CSS file, the browser will go and fetch the CSS file."),xs=r(),Ce=o("li"),_s=a("As soon as the CSS is downloaded into the memory, the browser will start to parse and generate a "),ae=o("a"),Es=a("CSSOM (CSS Object Model)"),Cs=r(),ut=o("li"),Ps=a("When the DOM is ready for layout, the browser will refer to CSSOM to get the style properties for a particular element and starts to layout."),As=r(),ne=o("p"),Ts=a("Which means if your CSS file is large, it will takes up a portion of time to download, and another portion of time to parse, and generate the CSSOM. All these can be traced with the "),le=o("a"),Is=a("Chrome's timeline tool"),Os=a("."),Bs=r(),re=o("p"),Ms=a("And what makes the matter worse is that, if we open up the "),ie=o("a"),qs=a("Chrome's Coverage tool"),Ws=a(", you will see that more than 90% of the CSS code is not being used to style the current page."),Ls=r(),Pe=o("p"),ft=o("strong"),js=a("After all the trouble, only 10% of it is being useful"),Gs=a(" \u{1F622}."),Hs=r(),kt=o("p"),Ns=a("So, we have to do what we need to do."),Jt=r(),v=o("section"),vt=o("h2"),ce=o("a"),Ys=a("Solution"),$s=r(),wt=o("p"),Ds=a("Big code file, that take long to download and parse, slows down the browser is not a new problem in frontend development. Indeed we've already solved this for JavaScript, we just need to apply the same technique for CSS this time."),Ks=r(),pe=o("p"),Xs=a("The answer to all of this is "),yt=o("strong"),zs=a("Code Splitting"),Rs=a(" \u{1F44F}\u{1F44F}"),Us=r(),mt=o("p"),Fs=a("The concept of Code Splitting is to split the code into seperate bundles, and dynamically load then only when you need it."),Vs=r(),gt=o("p"),Js=a("There's a few ways you can look at code splitting, you can:"),Qs=r(),he=o("ol"),St=o("li"),Zs=a("Split code based on url routes, you don't have to load the code for Page 2 in Page 1"),ea=r(),bt=o("li"),ta=a("Split code based on sections, you dont need code that is off the screen to be loaded now. Only load them when you need it."),oa=r(),M=o("p"),sa=a("So just as we were "),de=o("a"),aa=a("upgrading Webpack to Webpack 4"),na=a(", our extract-text-webpack-plugin announced that we should be using "),ue=o("a"),la=a("mini-css-extract-plugin"),ra=a(" for CSS now."),ia=r(),xt=o("p"),ca=a("We followed the guide of setting up the new plugin and it worked amazing! \u{1F60E}"),pa=r(),_t=o("p"),ha=a("What's different between extract-text-webpack-plugin and mini-css-extract-plugin is that the latter will generate 1 css file per 1 js bundle instead of combining all css files into 1 css file per build."),da=r(),Et=o("p"),ua=a("All is well until we got our first bug ticket \u{1F62B}"),Qt=r(),p=o("section"),Ct=o("h2"),fe=o("a"),fa=a("The Problem"),ka=r(),q=o("blockquote"),Pt=o("p"),va=a("Styles broken when user goes from Page XXX to Page YYY"),wa=r(),At=o("p"),ya=a("But..."),ma=r(),Tt=o("p"),ga=a("Stlyes working fine when user goes directly to Page YYY, it's only broken when user goes from Page XXX to Page YYY"),Sa=r(),It=o("p"),ba=a("Well after some investigation, it turns out that it is a special combination of how we write our style declaration and how mini-css-extract-plugin works under the hood."),xa=r(),ke=o("p"),_a=a("For the sake of simplicity, you can imagine this is how "),Ae=o("code"),Ea=a("mini-css-extract-plugin"),Ca=a(" works under the hood:"),Pa=r(),Te=o("div"),Aa=r(),Ot=o("p"),Ta=a("When you write:"),Ia=r(),Ie=o("div"),Oa=r(),Bt=o("p"),Ba=a("it gets transformed into something like:"),Ma=r(),Oe=o("div"),qa=r(),W=o("p"),Wa=a("So when this get executed, it will tries to look for existing link tag, if there's an existing link tag with the same url, it will be the end of it. But, when it does not exist, the "),Be=o("code"),La=a("ensureCss"),ja=a(" will create a new link tag and append it at the end of the "),Me=o("code"),Ga=a("<head>"),Ha=a(" element."),Na=r(),Mt=o("p"),qt=o("strong"),Ya=a("The order of the link tag depends on the order of how you navigate around the application."),$a=r(),Wt=o("p"),Da=a("If you are overwriting the same element style in 2 different css files, and in both file if you are specifying the same specificity, the style eventually got applied will solely depend on how your user navigate around your application."),Ka=r(),Lt=o("p"),Xa=a("The solution for this is to make your css declaration more specific when overwriting a particular style."),za=r(),jt=o("p"),Ra=a("eg:"),Ua=r(),qe=o("div"),Fa=r(),ve=o("p"),Va=a("Another problem we encountered when we tried to be more specific with CSS declaration, is due to how we write our "),we=o("a"),Ja=a("React"),Qa=a(" component with CSS Modules."),Za=r(),We=o("div"),en=r(),Gt=o("p"),tn=a("We wrote a custom component that takes in class name so we can overwrite the default style provided by the component."),on=r(),Ht=o("p"),Nt=o("strong"),sn=a("The order of classes in the class attribute does not matter, only the order in declaration matters."),an=r(),Yt=o("p"),nn=a("Unfortunately for us this time is that we are using CSS Modules, or else it would be much easier to overwrite it with"),ln=r(),Le=o("div"),rn=r(),L=o("p"),cn=a("However, because the "),je=o("code"),pn=a(".classA"),hn=a(" will get transformed to something like "),Ge=o("code"),dn=a(".c8e4436e"),un=a(" and we will never know the generated class name in build time, there's no way we can have a more specificity with the approach above."),fn=r(),ye=o("p"),kn=a("One hack we came across to solve this conundrum is to "),me=o("a"),vn=a("chain the selector with itself to increase its specifity"),wn=a(", namely:"),yn=r(),He=o("div"),mn=r(),$t=o("p"),gn=a("The next problem, is a very specific one."),Sn=r(),T=o("p"),bn=a("In Shopee we does "),ge=o("a"),xn=a("Server Side Rendering"),_n=a(", and the nature of "),Ne=o("code"),En=a("mini-css-extrac-plugin"),Cn=a(" that uses browser API, like "),Ye=o("code"),Pn=a("document.createElement"),An=a(" just not working in a server context."),Tn=r(),Dt=o("p"),In=a("We have our on in-house solution for it, which I am not allow to disclose any of it."),On=r(),Se=o("p"),Bn=a("But if you encounter similar issues, and are stucked somewhere, you can "),be=o("a"),Mn=a("find me on twitter"),qn=a(", I am more than willing to give out some personal pointers and advices on this matter."),this.h()},l(h){vr(u.$$.fragment,h),C=i(h),x=s(h,"P",{});var w=l(x);N=n(w,"In the talk, I shared about why and how "),f=s(w,"A",{href:!0,rel:!0});var Hn=l(f);P=n(Hn,"Shopee"),Hn.forEach(t),_e=n(w," does CSS Code Splitting and how we solve problems arised in the process."),w.forEach(t),Xt=i(h),I=s(h,"P",{});var $e=l(I);uo=n($e,"For those who don't know about "),Y=s($e,"A",{href:!0,rel:!0});var Nn=l(Y);fo=n(Nn,"Shopee"),Nn.forEach(t),ko=n($e,", we are an e-commerce platform based in "),$=s($e,"A",{href:!0,rel:!0});var Yn=l($);vo=n(Yn,"Greater Southeast Asia"),Yn.forEach(t),wo=n($e,", headquartered in Singapore. As a frontend engineer in Shopee, we constantly striving to deliver performant user experience with high network latency and slow CPU devices."),$e.forEach(t),zt=i(h),Rt=s(h,"HR",{}),Ut=i(h),g=s(h,"SECTION",{});var _=l(g);Fe=s(_,"H2",{});var $n=l(Fe);D=s($n,"A",{href:!0,id:!0});var Dn=l(D);yo=n(Dn,"Background"),Dn.forEach(t),$n.forEach(t),mo=i(_),Ve=s(_,"P",{});var Kn=l(Ve);go=n(Kn,"A little background on how we use CSS in Shopee before getting into how we code split our CSS:"),Kn.forEach(t),So=i(_),Je=s(_,"BLOCKQUOTE",{});var Xn=l(Je);Qe=s(Xn,"P",{});var zn=l(Qe);bo=n(zn,"We use SASS and CSS Modules, and we bundle all our stylesheets with webpack into 1 final CSS file."),zn.forEach(t),Xn.forEach(t),xo=i(_),K=s(_,"P",{});var eo=l(K);_o=n(eo,"For the benefit of those who might not know about "),X=s(eo,"A",{href:!0,rel:!0});var Rn=l(X);Eo=n(Rn,"SASS"),Rn.forEach(t),Co=n(eo,", SASS is a sassy extension of CSS that allow us to write functions and mixins, so we can easily reuse common css tricks and patterns."),eo.forEach(t),Po=i(_),j=s(_,"P",{});var Kt=l(j);z=s(Kt,"A",{href:!0,rel:!0});var Un=l(z);Ao=n(Un,"CSS Modules"),Un.forEach(t),To=n(Kt," on the other hand, free us from racking our brain, coming up with a unique class name for every element. Even with "),R=s(Kt,"A",{href:!0,rel:!0});var Fn=l(R);Io=n(Fn,"BEM (Block Element Modifier) naming convention"),Fn.forEach(t),Oo=n(Kt,", as our application grows complex, we can't keep up with names for our element. Names with BEM convention just get longer and longer. With CSS Modules, we just need to make sure that within a CSS file (we can call it a CSS module, like a js module) the class names are unique. Our build tool will transform the stylesheets and generate class names that is unique throughout the application."),Kt.forEach(t),Bo=i(_),O=s(_,"P",{});var De=l(O);Mo=n(De,"And lastly with "),U=s(De,"A",{href:!0,rel:!0});var Vn=l(U);qo=n(Vn,"webpack"),Vn.forEach(t),Wo=n(De,", we use "),F=s(De,"A",{href:!0,rel:!0});var Jn=l(F);Lo=n(Jn,"extract-text-webpack-plugin"),Jn.forEach(t),jo=n(De," to extract all the css code within the application into 1 CSS file."),De.forEach(t),Go=i(_),Ho=s(_,"HR",{}),_.forEach(t),Ft=i(h),k=s(h,"SECTION",{});var y=l(k);Ze=s(y,"H2",{});var Qn=l(Ze);V=s(Qn,"A",{href:!0,id:!0});var Zn=l(V);No=n(Zn,"So, how big is Shopee?"),Zn.forEach(t),Qn.forEach(t),Yo=i(y),J=s(y,"P",{});var to=l(J);$o=n(to,"If you ask the business team, they will give you the numbers on "),Q=s(to,"A",{href:!0,rel:!0});var el=l(Q);Do=n(el,"how well we are doing in the region"),el.forEach(t),Ko=n(to,"."),to.forEach(t),Xo=i(y),et=s(y,"P",{});var tl=l(et);zo=n(tl,"But if you ask a frontend engineer, I can tell you is that to date (Mar 27 2019), we have more than a thousand of CSS files, and more than 67K lines of CSS code, and the numbers are growing..."),tl.forEach(t),Ro=i(y),tt=s(y,"P",{});var ol=l(tt);Uo=n(ol,"And all this CSS code is bundled into one whoppingly 500KB CSS file! \u{1F631}"),ol.forEach(t),Fo=i(y),ot=s(y,"BLOCKQUOTE",{});var sl=l(ot);st=s(sl,"H3",{});var al=l(st);Vo=n(al,"How big is 500KB ?!"),al.forEach(t),sl.forEach(t),Jo=i(y),Ee=s(y,"P",{});var Wn=l(Ee);Z=s(Wn,"A",{href:!0,rel:!0});var nl=l(Z);Qo=n(nl,"500KB is"),nl.forEach(t),Zo=n(Wn,":"),Wn.forEach(t),es=i(y),A=s(y,"UL",{});var G=l(A);at=s(G,"LI",{});var ll=l(at);ts=n(ll,"1 minute of MP3 at 80 Kbps bitrate"),ll.forEach(t),os=i(G),nt=s(G,"LI",{});var rl=l(nt);ss=n(rl,"2 1280x960 JPEG image"),rl.forEach(t),as=i(G),lt=s(G,"LI",{});var il=l(lt);ns=n(il,"1/10 second through 4G Network"),il.forEach(t),ls=i(G),rt=s(G,"LI",{});var cl=l(rt);rs=n(cl,"2 seconds through 3G Network"),cl.forEach(t),G.forEach(t),is=i(y),it=s(y,"P",{});var pl=l(it);cs=n(pl,"Wait, who uses 3G nowadays? Isn't 5G is coming?"),pl.forEach(t),ps=i(y),ct=s(y,"P",{});var hl=l(ct);hs=n(hl,"Turns out that most of the Southeast Asia is still on 3G if not slow 4G network, except major cities like Singapore, Jakarta, and etc."),hl.forEach(t),ds=i(y),pt=s(y,"P",{});var dl=l(pt);us=n(dl,"So file size is indeed a big concern, when it comes to network speed."),dl.forEach(t),y.forEach(t),Vt=i(h),S=s(h,"SECTION",{});var E=l(S);ht=s(E,"H3",{});var ul=l(ht);ee=s(ul,"A",{href:!0,id:!0});var fl=l(ee);fs=n(fl,"But download time does not tell the full picture."),fl.forEach(t),ul.forEach(t),ks=i(E),te=s(E,"P",{});var oo=l(te);vs=n(oo,"Because you need to look at it holistically in terms of the "),oe=s(oo,"A",{href:!0,rel:!0});var kl=l(oe);ws=n(kl,"critical rendering path"),kl.forEach(t),ys=n(oo,":"),oo.forEach(t),ms=i(E),B=s(E,"OL",{});var Ke=l(B);se=s(Ke,"LI",{});var so=l(se);gs=n(so,"When the browser sees a "),dt=s(so,"EM",{});var vl=l(dt);Ss=n(vl,"link tag"),vl.forEach(t),bs=n(so," that links to a CSS file, the browser will go and fetch the CSS file."),so.forEach(t),xs=i(Ke),Ce=s(Ke,"LI",{});var Ln=l(Ce);_s=n(Ln,"As soon as the CSS is downloaded into the memory, the browser will start to parse and generate a "),ae=s(Ln,"A",{href:!0,rel:!0});var wl=l(ae);Es=n(wl,"CSSOM (CSS Object Model)"),wl.forEach(t),Ln.forEach(t),Cs=i(Ke),ut=s(Ke,"LI",{});var yl=l(ut);Ps=n(yl,"When the DOM is ready for layout, the browser will refer to CSSOM to get the style properties for a particular element and starts to layout."),yl.forEach(t),Ke.forEach(t),As=i(E),ne=s(E,"P",{});var ao=l(ne);Ts=n(ao,"Which means if your CSS file is large, it will takes up a portion of time to download, and another portion of time to parse, and generate the CSSOM. All these can be traced with the "),le=s(ao,"A",{href:!0,rel:!0});var ml=l(le);Is=n(ml,"Chrome's timeline tool"),ml.forEach(t),Os=n(ao,"."),ao.forEach(t),Bs=i(E),re=s(E,"P",{});var no=l(re);Ms=n(no,"And what makes the matter worse is that, if we open up the "),ie=s(no,"A",{href:!0,rel:!0});var gl=l(ie);qs=n(gl,"Chrome's Coverage tool"),gl.forEach(t),Ws=n(no,", you will see that more than 90% of the CSS code is not being used to style the current page."),no.forEach(t),Ls=i(E),Pe=s(E,"P",{});var jn=l(Pe);ft=s(jn,"STRONG",{});var Sl=l(ft);js=n(Sl,"After all the trouble, only 10% of it is being useful"),Sl.forEach(t),Gs=n(jn," \u{1F622}."),jn.forEach(t),Hs=i(E),kt=s(E,"P",{});var bl=l(kt);Ns=n(bl,"So, we have to do what we need to do."),bl.forEach(t),E.forEach(t),Jt=i(h),v=s(h,"SECTION",{});var m=l(v);vt=s(m,"H2",{});var xl=l(vt);ce=s(xl,"A",{href:!0,id:!0});var _l=l(ce);Ys=n(_l,"Solution"),_l.forEach(t),xl.forEach(t),$s=i(m),wt=s(m,"P",{});var El=l(wt);Ds=n(El,"Big code file, that take long to download and parse, slows down the browser is not a new problem in frontend development. Indeed we've already solved this for JavaScript, we just need to apply the same technique for CSS this time."),El.forEach(t),Ks=i(m),pe=s(m,"P",{});var lo=l(pe);Xs=n(lo,"The answer to all of this is "),yt=s(lo,"STRONG",{});var Cl=l(yt);zs=n(Cl,"Code Splitting"),Cl.forEach(t),Rs=n(lo," \u{1F44F}\u{1F44F}"),lo.forEach(t),Us=i(m),mt=s(m,"P",{});var Pl=l(mt);Fs=n(Pl,"The concept of Code Splitting is to split the code into seperate bundles, and dynamically load then only when you need it."),Pl.forEach(t),Vs=i(m),gt=s(m,"P",{});var Al=l(gt);Js=n(Al,"There's a few ways you can look at code splitting, you can:"),Al.forEach(t),Qs=i(m),he=s(m,"OL",{});var ro=l(he);St=s(ro,"LI",{});var Tl=l(St);Zs=n(Tl,"Split code based on url routes, you don't have to load the code for Page 2 in Page 1"),Tl.forEach(t),ea=i(ro),bt=s(ro,"LI",{});var Il=l(bt);ta=n(Il,"Split code based on sections, you dont need code that is off the screen to be loaded now. Only load them when you need it."),Il.forEach(t),ro.forEach(t),oa=i(m),M=s(m,"P",{});var Xe=l(M);sa=n(Xe,"So just as we were "),de=s(Xe,"A",{href:!0,rel:!0});var Ol=l(de);aa=n(Ol,"upgrading Webpack to Webpack 4"),Ol.forEach(t),na=n(Xe,", our extract-text-webpack-plugin announced that we should be using "),ue=s(Xe,"A",{href:!0,rel:!0});var Bl=l(ue);la=n(Bl,"mini-css-extract-plugin"),Bl.forEach(t),ra=n(Xe," for CSS now."),Xe.forEach(t),ia=i(m),xt=s(m,"P",{});var Ml=l(xt);ca=n(Ml,"We followed the guide of setting up the new plugin and it worked amazing! \u{1F60E}"),Ml.forEach(t),pa=i(m),_t=s(m,"P",{});var ql=l(_t);ha=n(ql,"What's different between extract-text-webpack-plugin and mini-css-extract-plugin is that the latter will generate 1 css file per 1 js bundle instead of combining all css files into 1 css file per build."),ql.forEach(t),da=i(m),Et=s(m,"P",{});var Wl=l(Et);ua=n(Wl,"All is well until we got our first bug ticket \u{1F62B}"),Wl.forEach(t),m.forEach(t),Qt=i(h),p=s(h,"SECTION",{});var d=l(p);Ct=s(d,"H2",{});var Ll=l(Ct);fe=s(Ll,"A",{href:!0,id:!0});var jl=l(fe);fa=n(jl,"The Problem"),jl.forEach(t),Ll.forEach(t),ka=i(d),q=s(d,"BLOCKQUOTE",{});var ze=l(q);Pt=s(ze,"P",{});var Gl=l(Pt);va=n(Gl,"Styles broken when user goes from Page XXX to Page YYY"),Gl.forEach(t),wa=i(ze),At=s(ze,"P",{});var Hl=l(At);ya=n(Hl,"But..."),Hl.forEach(t),ma=i(ze),Tt=s(ze,"P",{});var Nl=l(Tt);ga=n(Nl,"Stlyes working fine when user goes directly to Page YYY, it's only broken when user goes from Page XXX to Page YYY"),Nl.forEach(t),ze.forEach(t),Sa=i(d),It=s(d,"P",{});var Yl=l(It);ba=n(Yl,"Well after some investigation, it turns out that it is a special combination of how we write our style declaration and how mini-css-extract-plugin works under the hood."),Yl.forEach(t),xa=i(d),ke=s(d,"P",{});var io=l(ke);_a=n(io,"For the sake of simplicity, you can imagine this is how "),Ae=s(io,"CODE",{class:!0});var $l=l(Ae);Ea=n($l,"mini-css-extract-plugin"),$l.forEach(t),Ca=n(io," works under the hood:"),io.forEach(t),Pa=i(d),Te=s(d,"DIV",{class:!0});var Ar=l(Te);Ar.forEach(t),Aa=i(d),Ot=s(d,"P",{});var Dl=l(Ot);Ta=n(Dl,"When you write:"),Dl.forEach(t),Ia=i(d),Ie=s(d,"DIV",{class:!0});var Tr=l(Ie);Tr.forEach(t),Oa=i(d),Bt=s(d,"P",{});var Kl=l(Bt);Ba=n(Kl,"it gets transformed into something like:"),Kl.forEach(t),Ma=i(d),Oe=s(d,"DIV",{class:!0});var Ir=l(Oe);Ir.forEach(t),qa=i(d),W=s(d,"P",{});var Re=l(W);Wa=n(Re,"So when this get executed, it will tries to look for existing link tag, if there's an existing link tag with the same url, it will be the end of it. But, when it does not exist, the "),Be=s(Re,"CODE",{class:!0});var Xl=l(Be);La=n(Xl,"ensureCss"),Xl.forEach(t),ja=n(Re," will create a new link tag and append it at the end of the "),Me=s(Re,"CODE",{class:!0});var zl=l(Me);Ga=n(zl,"<head>"),zl.forEach(t),Ha=n(Re," element."),Re.forEach(t),Na=i(d),Mt=s(d,"P",{});var Rl=l(Mt);qt=s(Rl,"STRONG",{});var Ul=l(qt);Ya=n(Ul,"The order of the link tag depends on the order of how you navigate around the application."),Ul.forEach(t),Rl.forEach(t),$a=i(d),Wt=s(d,"P",{});var Fl=l(Wt);Da=n(Fl,"If you are overwriting the same element style in 2 different css files, and in both file if you are specifying the same specificity, the style eventually got applied will solely depend on how your user navigate around your application."),Fl.forEach(t),Ka=i(d),Lt=s(d,"P",{});var Vl=l(Lt);Xa=n(Vl,"The solution for this is to make your css declaration more specific when overwriting a particular style."),Vl.forEach(t),za=i(d),jt=s(d,"P",{});var Jl=l(jt);Ra=n(Jl,"eg:"),Jl.forEach(t),Ua=i(d),qe=s(d,"DIV",{class:!0});var Or=l(qe);Or.forEach(t),Fa=i(d),ve=s(d,"P",{});var co=l(ve);Va=n(co,"Another problem we encountered when we tried to be more specific with CSS declaration, is due to how we write our "),we=s(co,"A",{href:!0,rel:!0});var Ql=l(we);Ja=n(Ql,"React"),Ql.forEach(t),Qa=n(co," component with CSS Modules."),co.forEach(t),Za=i(d),We=s(d,"DIV",{class:!0});var Br=l(We);Br.forEach(t),en=i(d),Gt=s(d,"P",{});var Zl=l(Gt);tn=n(Zl,"We wrote a custom component that takes in class name so we can overwrite the default style provided by the component."),Zl.forEach(t),on=i(d),Ht=s(d,"P",{});var er=l(Ht);Nt=s(er,"STRONG",{});var tr=l(Nt);sn=n(tr,"The order of classes in the class attribute does not matter, only the order in declaration matters."),tr.forEach(t),er.forEach(t),an=i(d),Yt=s(d,"P",{});var or=l(Yt);nn=n(or,"Unfortunately for us this time is that we are using CSS Modules, or else it would be much easier to overwrite it with"),or.forEach(t),ln=i(d),Le=s(d,"DIV",{class:!0});var Mr=l(Le);Mr.forEach(t),rn=i(d),L=s(d,"P",{});var Ue=l(L);cn=n(Ue,"However, because the "),je=s(Ue,"CODE",{class:!0});var sr=l(je);pn=n(sr,".classA"),sr.forEach(t),hn=n(Ue," will get transformed to something like "),Ge=s(Ue,"CODE",{class:!0});var ar=l(Ge);dn=n(ar,".c8e4436e"),ar.forEach(t),un=n(Ue," and we will never know the generated class name in build time, there's no way we can have a more specificity with the approach above."),Ue.forEach(t),fn=i(d),ye=s(d,"P",{});var po=l(ye);kn=n(po,"One hack we came across to solve this conundrum is to "),me=s(po,"A",{href:!0,rel:!0});var nr=l(me);vn=n(nr,"chain the selector with itself to increase its specifity"),nr.forEach(t),wn=n(po,", namely:"),po.forEach(t),yn=i(d),He=s(d,"DIV",{class:!0});var qr=l(He);qr.forEach(t),mn=i(d),$t=s(d,"P",{});var lr=l($t);gn=n(lr,"The next problem, is a very specific one."),lr.forEach(t),Sn=i(d),T=s(d,"P",{});var H=l(T);bn=n(H,"In Shopee we does "),ge=s(H,"A",{href:!0,rel:!0});var rr=l(ge);xn=n(rr,"Server Side Rendering"),rr.forEach(t),_n=n(H,", and the nature of "),Ne=s(H,"CODE",{class:!0});var ir=l(Ne);En=n(ir,"mini-css-extrac-plugin"),ir.forEach(t),Cn=n(H," that uses browser API, like "),Ye=s(H,"CODE",{class:!0});var cr=l(Ye);Pn=n(cr,"document.createElement"),cr.forEach(t),An=n(H," just not working in a server context."),H.forEach(t),Tn=i(d),Dt=s(d,"P",{});var pr=l(Dt);In=n(pr,"We have our on in-house solution for it, which I am not allow to disclose any of it."),pr.forEach(t),On=i(d),Se=s(d,"P",{});var ho=l(Se);Bn=n(ho,"But if you encounter similar issues, and are stucked somewhere, you can "),be=s(ho,"A",{href:!0,rel:!0});var hr=l(be);Mn=n(hr,"find me on twitter"),hr.forEach(t),qn=n(ho,", I am more than willing to give out some personal pointers and advices on this matter."),ho.forEach(t),d.forEach(t),this.h()},h(){c(f,"href","http://careers.shopee.sg"),c(f,"rel","nofollow"),c(Y,"href","http://careers.shopee.sg"),c(Y,"rel","nofollow"),c($,"href","https://www.seagroup.com/home"),c($,"rel","nofollow"),c(D,"href","#background"),c(D,"id","background"),c(X,"href","https://sass-lang.com/"),c(X,"rel","nofollow"),c(z,"href","https://github.com/css-modules/css-modules"),c(z,"rel","nofollow"),c(R,"href","http://getbem.com/naming/"),c(R,"rel","nofollow"),c(U,"href","https://webpack.js.org/"),c(U,"rel","nofollow"),c(F,"href","https://github.com/webpack-contrib/extract-text-webpack-plugin"),c(F,"rel","nofollow"),c(V,"href","#so-how-big-is-shopee"),c(V,"id","so-how-big-is-shopee"),c(Q,"href","https://www.techinasia.com/shopee-top-ecommerce-platform-sea"),c(Q,"rel","nofollow"),c(Z,"href","https://www.greennet.org.uk/support/understanding-file-sizes"),c(Z,"rel","nofollow"),c(ee,"href","#but-download-time-does-not-tell-the-full-picture"),c(ee,"id","but-download-time-does-not-tell-the-full-picture"),c(oe,"href","https://developers.google.com/web/fundamentals/performance/critical-rendering-path/"),c(oe,"rel","nofollow"),c(ae,"href","https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model"),c(ae,"rel","nofollow"),c(le,"href","https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/timeline-tool"),c(le,"rel","nofollow"),c(ie,"href","https://developers.google.com/web/updates/2017/04/devtools-release-notes#coverage"),c(ie,"rel","nofollow"),c(ce,"href","#solution"),c(ce,"id","solution"),c(de,"href","https://engineering.seagroup.com/shopee-webpack4/"),c(de,"rel","nofollow"),c(ue,"href","https://github.com/webpack-contrib/mini-css-extract-plugin"),c(ue,"rel","nofollow"),c(fe,"href","#the-problem"),c(fe,"id","the-problem"),c(Ae,"class","inline"),c(Te,"class","code-section"),c(Ie,"class","code-section"),c(Oe,"class","code-section"),c(Be,"class","inline"),c(Me,"class","inline"),c(qe,"class","code-section"),c(we,"href","https://reactjs.org"),c(we,"rel","nofollow"),c(We,"class","code-section"),c(Le,"class","code-section"),c(je,"class","inline"),c(Ge,"class","inline"),c(me,"href","https://csswizardry.com/2014/07/hacks-for-dealing-with-specificity/"),c(me,"rel","nofollow"),c(He,"class","code-section"),c(ge,"href","https://developers.google.com/web/updates/2019/02/rendering-on-the-web"),c(ge,"rel","nofollow"),c(Ne,"class","inline"),c(Ye,"class","inline"),c(be,"href","https://twitter.com/lihautan"),c(be,"rel","nofollow")},m(h,w){wr(u,h,w),b(h,C,w),b(h,x,w),e(x,N),e(x,f),e(f,P),e(x,_e),b(h,Xt,w),b(h,I,w),e(I,uo),e(I,Y),e(Y,fo),e(I,ko),e(I,$),e($,vo),e(I,wo),b(h,zt,w),b(h,Rt,w),b(h,Ut,w),b(h,g,w),e(g,Fe),e(Fe,D),e(D,yo),e(g,mo),e(g,Ve),e(Ve,go),e(g,So),e(g,Je),e(Je,Qe),e(Qe,bo),e(g,xo),e(g,K),e(K,_o),e(K,X),e(X,Eo),e(K,Co),e(g,Po),e(g,j),e(j,z),e(z,Ao),e(j,To),e(j,R),e(R,Io),e(j,Oo),e(g,Bo),e(g,O),e(O,Mo),e(O,U),e(U,qo),e(O,Wo),e(O,F),e(F,Lo),e(O,jo),e(g,Go),e(g,Ho),b(h,Ft,w),b(h,k,w),e(k,Ze),e(Ze,V),e(V,No),e(k,Yo),e(k,J),e(J,$o),e(J,Q),e(Q,Do),e(J,Ko),e(k,Xo),e(k,et),e(et,zo),e(k,Ro),e(k,tt),e(tt,Uo),e(k,Fo),e(k,ot),e(ot,st),e(st,Vo),e(k,Jo),e(k,Ee),e(Ee,Z),e(Z,Qo),e(Ee,Zo),e(k,es),e(k,A),e(A,at),e(at,ts),e(A,os),e(A,nt),e(nt,ss),e(A,as),e(A,lt),e(lt,ns),e(A,ls),e(A,rt),e(rt,rs),e(k,is),e(k,it),e(it,cs),e(k,ps),e(k,ct),e(ct,hs),e(k,ds),e(k,pt),e(pt,us),b(h,Vt,w),b(h,S,w),e(S,ht),e(ht,ee),e(ee,fs),e(S,ks),e(S,te),e(te,vs),e(te,oe),e(oe,ws),e(te,ys),e(S,ms),e(S,B),e(B,se),e(se,gs),e(se,dt),e(dt,Ss),e(se,bs),e(B,xs),e(B,Ce),e(Ce,_s),e(Ce,ae),e(ae,Es),e(B,Cs),e(B,ut),e(ut,Ps),e(S,As),e(S,ne),e(ne,Ts),e(ne,le),e(le,Is),e(ne,Os),e(S,Bs),e(S,re),e(re,Ms),e(re,ie),e(ie,qs),e(re,Ws),e(S,Ls),e(S,Pe),e(Pe,ft),e(ft,js),e(Pe,Gs),e(S,Hs),e(S,kt),e(kt,Ns),b(h,Jt,w),b(h,v,w),e(v,vt),e(vt,ce),e(ce,Ys),e(v,$s),e(v,wt),e(wt,Ds),e(v,Ks),e(v,pe),e(pe,Xs),e(pe,yt),e(yt,zs),e(pe,Rs),e(v,Us),e(v,mt),e(mt,Fs),e(v,Vs),e(v,gt),e(gt,Js),e(v,Qs),e(v,he),e(he,St),e(St,Zs),e(he,ea),e(he,bt),e(bt,ta),e(v,oa),e(v,M),e(M,sa),e(M,de),e(de,aa),e(M,na),e(M,ue),e(ue,la),e(M,ra),e(v,ia),e(v,xt),e(xt,ca),e(v,pa),e(v,_t),e(_t,ha),e(v,da),e(v,Et),e(Et,ua),b(h,Qt,w),b(h,p,w),e(p,Ct),e(Ct,fe),e(fe,fa),e(p,ka),e(p,q),e(q,Pt),e(Pt,va),e(q,wa),e(q,At),e(At,ya),e(q,ma),e(q,Tt),e(Tt,ga),e(p,Sa),e(p,It),e(It,ba),e(p,xa),e(p,ke),e(ke,_a),e(ke,Ae),e(Ae,Ea),e(ke,Ca),e(p,Pa),e(p,Te),Te.innerHTML=Sr,e(p,Aa),e(p,Ot),e(Ot,Ta),e(p,Ia),e(p,Ie),Ie.innerHTML=br,e(p,Oa),e(p,Bt),e(Bt,Ba),e(p,Ma),e(p,Oe),Oe.innerHTML=xr,e(p,qa),e(p,W),e(W,Wa),e(W,Be),e(Be,La),e(W,ja),e(W,Me),e(Me,Ga),e(W,Ha),e(p,Na),e(p,Mt),e(Mt,qt),e(qt,Ya),e(p,$a),e(p,Wt),e(Wt,Da),e(p,Ka),e(p,Lt),e(Lt,Xa),e(p,za),e(p,jt),e(jt,Ra),e(p,Ua),e(p,qe),qe.innerHTML=_r,e(p,Fa),e(p,ve),e(ve,Va),e(ve,we),e(we,Ja),e(ve,Qa),e(p,Za),e(p,We),We.innerHTML=Er,e(p,en),e(p,Gt),e(Gt,tn),e(p,on),e(p,Ht),e(Ht,Nt),e(Nt,sn),e(p,an),e(p,Yt),e(Yt,nn),e(p,ln),e(p,Le),Le.innerHTML=Cr,e(p,rn),e(p,L),e(L,cn),e(L,je),e(je,pn),e(L,hn),e(L,Ge),e(Ge,dn),e(L,un),e(p,fn),e(p,ye),e(ye,kn),e(ye,me),e(me,vn),e(ye,wn),e(p,yn),e(p,He),He.innerHTML=Pr,e(p,mn),e(p,$t),e($t,gn),e(p,Sn),e(p,T),e(T,bn),e(T,ge),e(ge,xn),e(T,_n),e(T,Ne),e(Ne,En),e(T,Cn),e(T,Ye),e(Ye,Pn),e(T,An),e(p,Tn),e(p,Dt),e(Dt,In),e(p,On),e(p,Se),e(Se,Bn),e(Se,be),e(be,Mn),e(Se,qn),Zt=!0},p:Nr,i(h){Zt||(yr(u.$$.fragment,h),Zt=!0)},o(h){mr(u.$$.fragment,h),Zt=!1},d(h){gr(u,h),h&&t(C),h&&t(x),h&&t(Xt),h&&t(I),h&&t(zt),h&&t(Rt),h&&t(Ut),h&&t(g),h&&t(Ft),h&&t(k),h&&t(Vt),h&&t(S),h&&t(Jt),h&&t(v),h&&t(Qt),h&&t(p)}}}function Xr(xe){let u,C;const x=[xe[0],fr];let N={$$slots:{default:[Kr]},$$scope:{ctx:xe}};for(let f=0;f<x.length;f+=1)N=Gn(N,x[f]);return u=new Yr({props:N}),{c(){kr(u.$$.fragment)},l(f){vr(u.$$.fragment,f)},m(f,P){wr(u,f,P),C=!0},p(f,[P]){const _e=P&1?Gr(x,[P&1&&dr(f[0]),P&0&&dr(fr)]):{};P&2&&(_e.$$scope={dirty:P,ctx:f}),u.$set(_e)},i(f){C||(yr(u.$$.fragment,f),C=!0)},o(f){mr(u.$$.fragment,f),C=!1},d(f){gr(u,f)}}}const fr={title:"CSS Code Splitting",occasion:"talk.css meetup",occasionLink:"https://singaporecss.github.io/37/",venue:"Shopee SG",venueLink:"https://www.google.com/maps/place/Shopee+SG/@1.291278,103.7846628,15z/data=!4m2!3m1!1s0x0:0x7ddf2e854cf6e4e4?ved=2ahUKEwi5jbz6z_vgAhVBP48KHWSEAmMQ_BIwFXoECAEQCA",date:"2019-03-27",description:"The motivation of CSS splitting arises when we try to split our CSS styles and lazily load the styles only when we actually need them. CSS code splitting is one of our many efforts where we constantly improve the performance of the application.",slides:"https://slides.com/tanhauhau/css-code-splitting",video:"https://www.engineers.sg/video/css-code-splitting-talk-css--3273",label:"talk",layout:"talk"};function zr(xe,u,C){return Hr("blog",{image:Dr}),xe.$$set=x=>{C(0,u=Gn(Gn({},u),ur(x)))},u=ur(u),[u]}class ei extends Wr{constructor(u){super();Lr(this,u,zr,Xr,jr,{})}}export{ei as default,fr as metadata};
