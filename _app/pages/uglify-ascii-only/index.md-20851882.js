import{S as Ri,i as $i,s as Mi,C as Es,w as Si,x as Pi,y as Ci,z as Gi,A as mi,q as Ti,o as Ui,B as ji,r as zi,R as yi,k as _,e as i,t as p,m as d,c as o,a as l,h as c,d as t,b as a,Q as Y,f as r,g as u,F as s,O as Di}from"../../chunks/vendor-569a3c5c.js";import{B as Ji}from"../../chunks/BlogLayout-17b76cb2.js";import{T as Ni}from"../../chunks/TableOfContent-dbc18cb8.js";import{_ as Hi}from"../../chunks/twitter-card-image-a57df29d.js";import"../../chunks/stores-ee936cd4.js";import"../../chunks/WebMentions-968cc380.js";/* empty css                                */var Li="/_app/assets/babel-issue-2-023f9c00.webp",qi="/_app/assets/babel-issue-2-e0a0088b.webp",Bi="/_app/assets/babel-issue-2-3de090ec.png",bi="/_app/assets/babel-issue-2-a0416736.png",Wi="/_app/assets/uglify-0c13d940.webp",Fi="/_app/assets/uglify-eeaa6295.webp",Qi="/_app/assets/uglify-9a0169e9.png",vi="/_app/assets/uglify-5d74504f.png",Vi="/_app/assets/babel-issue-58dcecf9.webp",Zi="/_app/assets/babel-issue-e40d7ec3.webp",Ki="/_app/assets/babel-issue-0d1993b5.png",wi="/_app/assets/babel-issue-6ad1c988.png",Xi="/_app/assets/expectation-88a7a8f0.webp",Yi="/_app/assets/expectation-375c56a9.webp",eo="/_app/assets/expectation-67c15629.png",gi="/_app/assets/expectation-1f247bc2.png",to="/_app/assets/source-9835157f.webp",so="/_app/assets/source-8cd0b7bf.webp",io="/_app/assets/source-6c16af20.png",ki="/_app/assets/source-888ed129.png",oo="/_app/assets/problem-2-a1901487.webp",ao="/_app/assets/problem-2-f563111e.webp",lo="/_app/assets/problem-2-f1cac61a.png",xi="/_app/assets/problem-2-5c771710.png",ro="/_app/assets/problem-1270b588.webp",no="/_app/assets/problem-9beda3ff.webp",po="/_app/assets/problem-2aec1260.png",Ei="/_app/assets/problem-1ec44af8.png";function co(ee){let f,C,v,q,h,y,te,Le,se,j,ie,Oe,w,Is,qe,oe,vt,Be,ae,O,le,Ae,g,Ss,We,re,wt,Fe,ne,A,pe,Re,k,Ps,Qe,D,gt,ce,kt,xt,Ve,ue,R,_e,$e,x,Cs,Ze,de,Et,Ke,J,It,B,St,Pt,Xe,fe,$,he,Me,E,Ts,Ye,me,Ct,et,tt,st,T,Tt,Ge,Ut,jt,ze,Ot,At,it,N,Rt,ye,$t,Mt,ot,U,Gt,W,zt,Dt,F,Jt,Nt,at,be,M,ve,De,I,Us,lt,H,Ht,Q,Lt,qt,rt,we,G,ge,Je,S,js,nt,m,Bt,ke,Wt,Ft,V,Qt,Vt,xe,Zt,Kt,Ee,Xt,Yt,Ie,es,ts,Se,ss,is,pt,Z,Oi=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line dim"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">UglifyJsPlugin</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;uglifyjs-webpack-plugin&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line dim"></span>
<span class="line dim"><span style="color: var(--shiki-token-constant)">module</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">exports</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">//...</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  optimization</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">    minimizer</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">UglifyJsPlugin</span><span style="color: var(--shiki-color-text)">(&#123;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">      uglifyOptions</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">        output</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">          </span><span style="color: var(--shiki-token-comment)">// true for &#96;ascii_only&#96;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">          ascii_only</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">        &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">      &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">    &#125;)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,ct,ut,_t,P,Ne,K,os,as,ls,rs,X,ns,Pe,ps,cs,us,z,_s,He,ds,fs,Ce,hs,ms,dt;return f=new Ni({props:{data:[{link:"til-uglifyjs-ascii-only-option-use-it-when-you-want-to-escape-unicode-characters",title:"TIL: UglifyJs ascii_only option, use it when you want to escape Unicode characters."}]}}),{c(){Si(f.$$.fragment),C=_(),v=i("p"),q=p("The background story"),h=_(),y=i("p"),te=p("I was working on a chrome extension, and trying to add some emojis \u{1F60D}\u{1F600}\u{1F60E} into the extension, however I realised the \u{1F60D}\u{1F600}\u{1F60E} are not rendered correctly!"),Le=_(),se=i("p"),j=i("span"),ie=i("picture"),Oe=i("source"),w=i("img"),qe=_(),oe=i("p"),vt=p("And so I inspect the source code loaded into the chrome extension, it wasn\u2019t loaded correctly as well!"),Be=_(),ae=i("p"),O=i("span"),le=i("picture"),Ae=i("source"),g=i("img"),We=_(),re=i("p"),wt=p("And so I think, probably the encoding issue was caused by the webpack compilation, but, my compiled code looks exactly fine!"),Fe=_(),ne=i("p"),A=i("span"),pe=i("picture"),Re=i("source"),k=i("img"),Qe=_(),D=i("p"),gt=p("So, most likely is a decoding issue when the emoji code get loaded into chrome extension. So I manually changed the emoji in the compiled code to "),ce=i("code"),kt=p("\\ud83d\\ude0d"),xt=p(" (unicode for \u{1F60D}). Guess what? The emoji is showing correctly in the chrome extension!"),Ve=_(),ue=i("p"),R=i("span"),_e=i("picture"),$e=i("source"),x=i("img"),Ze=_(),de=i("p"),Et=p("So I changed my source code to manually type in the unicode, and compiled it using webpack. To my surprise, the unicode was compiled back into the emoji (\u{1F60D}) it represents!"),Ke=_(),J=i("p"),It=p("I googled around and I found "),B=i("a"),St=p("this fix for babel-generator"),Pt=p(":"),Xe=_(),fe=i("p"),$=i("span"),he=i("picture"),Me=i("source"),E=i("img"),Ye=_(),me=i("p"),Ct=p("I checked my babel version, and it had included this fix. So what went wrong?"),et=_(),tt=i("hr"),st=_(),T=i("p"),Tt=p("My colleague reminded me that during webpack compilation, there are 2 phases, the "),Ge=i("strong"),Ut=p("transpilation"),jt=p(" (via babel) and the "),ze=i("strong"),Ot=p("minification"),At=p(" (via uglify plugin)."),it=_(),N=i("p"),Rt=p("So I disabled the optimisation in webpack config, and noticed that my compiled code contains the original unicode string ("),ye=i("code"),$t=p("\\ud83d\\ude0d"),Mt=p("), instead of the emoji (\u{1F60D}) string. So the unicode string was converted to emoji string during minification!"),ot=_(),U=i("p"),Gt=p("So I went to my favourite "),W=i("a"),zt=p("Online JavaScript Minifier"),Dt=p(" (by "),F=i("a"),Jt=p("skalman"),Nt=p(") to try it out."),at=_(),be=i("p"),M=i("span"),ve=i("picture"),De=i("source"),I=i("img"),lt=_(),H=i("p"),Ht=p("After some googling, I "),Q=i("a"),Lt=p("found this issue"),qt=p(" which described my scenario perfectly."),rt=_(),we=i("p"),G=i("span"),ge=i("picture"),Je=i("source"),S=i("img"),nt=_(),m=i("p"),Bt=p("Turned out there is a "),ke=i("code"),Wt=p("ascii_only"),Ft=p(" for "),V=i("a"),Qt=p("output options"),Vt=p(", and it is default to "),xe=i("code"),Zt=p("false"),Kt=p(". So I set "),Ee=i("code"),Xt=p("ascii_only"),Yt=p(" to "),Ie=i("code"),es=p("true"),ts=p(", ran webpack, and checked my compiled code, it contained the unicode string ("),Se=i("code"),ss=p("\\ud83d\\ude0d"),is=p(")! And even when I wrote emoji string (\u{1F60D}) in my source code, it got compiled to unicode as well."),pt=_(),Z=i("div"),ct=_(),ut=i("hr"),_t=_(),P=i("section"),Ne=i("h2"),K=i("a"),os=p("TIL: UglifyJs ascii_only option, use it when you want to escape Unicode characters."),as=_(),ls=i("hr"),rs=_(),X=i("p"),ns=p("Why is there a "),Pe=i("code"),ps=p("ascii_only"),cs=p(" option?"),us=_(),z=i("p"),_s=p("My guess is that it takes less space for a unicode character (16\u201317bit) than the escaped ascii characters (6 "),He=i("em"),ds=p("8 bit\u200A\u2014\u200A12"),fs=p(" bit), that\u2019s why using unicode character is the default option ("),Ce=i("code"),hs=p("ascii_only=false"),ms=p(")."),this.h()},l(e){Pi(f.$$.fragment,e),C=d(e),v=o(e,"P",{});var n=l(v);q=c(n,"The background story"),n.forEach(t),h=d(e),y=o(e,"P",{});var Os=l(y);te=c(Os,"I was working on a chrome extension, and trying to add some emojis \u{1F60D}\u{1F600}\u{1F60E} into the extension, however I realised the \u{1F60D}\u{1F600}\u{1F60E} are not rendered correctly!"),Os.forEach(t),Le=d(e),se=o(e,"P",{});var As=l(se);j=o(As,"SPAN",{style:!0});var Rs=l(j);ie=o(Rs,"PICTURE",{});var ys=l(ie);Oe=o(ys,"SOURCE",{type:!0,srcset:!0}),w=o(ys,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),ys.forEach(t),Rs.forEach(t),As.forEach(t),qe=d(e),oe=o(e,"P",{});var $s=l(oe);vt=c($s,"And so I inspect the source code loaded into the chrome extension, it wasn\u2019t loaded correctly as well!"),$s.forEach(t),Be=d(e),ae=o(e,"P",{});var Ms=l(ae);O=o(Ms,"SPAN",{style:!0});var Gs=l(O);le=o(Gs,"PICTURE",{});var bs=l(le);Ae=o(bs,"SOURCE",{type:!0,srcset:!0}),g=o(bs,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),bs.forEach(t),Gs.forEach(t),Ms.forEach(t),We=d(e),re=o(e,"P",{});var zs=l(re);wt=c(zs,"And so I think, probably the encoding issue was caused by the webpack compilation, but, my compiled code looks exactly fine!"),zs.forEach(t),Fe=d(e),ne=o(e,"P",{});var Ds=l(ne);A=o(Ds,"SPAN",{style:!0});var Js=l(A);pe=o(Js,"PICTURE",{});var vs=l(pe);Re=o(vs,"SOURCE",{type:!0,srcset:!0}),k=o(vs,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),vs.forEach(t),Js.forEach(t),Ds.forEach(t),Qe=d(e),D=o(e,"P",{});var ft=l(D);gt=c(ft,"So, most likely is a decoding issue when the emoji code get loaded into chrome extension. So I manually changed the emoji in the compiled code to "),ce=o(ft,"CODE",{class:!0});var Ns=l(ce);kt=c(Ns,"\\ud83d\\ude0d"),Ns.forEach(t),xt=c(ft," (unicode for \u{1F60D}). Guess what? The emoji is showing correctly in the chrome extension!"),ft.forEach(t),Ve=d(e),ue=o(e,"P",{});var Hs=l(ue);R=o(Hs,"SPAN",{style:!0});var Ls=l(R);_e=o(Ls,"PICTURE",{});var ws=l(_e);$e=o(ws,"SOURCE",{type:!0,srcset:!0}),x=o(ws,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),ws.forEach(t),Ls.forEach(t),Hs.forEach(t),Ze=d(e),de=o(e,"P",{});var qs=l(de);Et=c(qs,"So I changed my source code to manually type in the unicode, and compiled it using webpack. To my surprise, the unicode was compiled back into the emoji (\u{1F60D}) it represents!"),qs.forEach(t),Ke=d(e),J=o(e,"P",{});var ht=l(J);It=c(ht,"I googled around and I found "),B=o(ht,"A",{href:!0,rel:!0});var Bs=l(B);St=c(Bs,"this fix for babel-generator"),Bs.forEach(t),Pt=c(ht,":"),ht.forEach(t),Xe=d(e),fe=o(e,"P",{});var Ws=l(fe);$=o(Ws,"SPAN",{style:!0});var Fs=l($);he=o(Fs,"PICTURE",{});var gs=l(he);Me=o(gs,"SOURCE",{type:!0,srcset:!0}),E=o(gs,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),gs.forEach(t),Fs.forEach(t),Ws.forEach(t),Ye=d(e),me=o(e,"P",{});var Qs=l(me);Ct=c(Qs,"I checked my babel version, and it had included this fix. So what went wrong?"),Qs.forEach(t),et=d(e),tt=o(e,"HR",{}),st=d(e),T=o(e,"P",{});var Te=l(T);Tt=c(Te,"My colleague reminded me that during webpack compilation, there are 2 phases, the "),Ge=o(Te,"STRONG",{});var Vs=l(Ge);Ut=c(Vs,"transpilation"),Vs.forEach(t),jt=c(Te," (via babel) and the "),ze=o(Te,"STRONG",{});var Zs=l(ze);Ot=c(Zs,"minification"),Zs.forEach(t),At=c(Te," (via uglify plugin)."),Te.forEach(t),it=d(e),N=o(e,"P",{});var mt=l(N);Rt=c(mt,"So I disabled the optimisation in webpack config, and noticed that my compiled code contains the original unicode string ("),ye=o(mt,"CODE",{class:!0});var Ks=l(ye);$t=c(Ks,"\\ud83d\\ude0d"),Ks.forEach(t),Mt=c(mt,"), instead of the emoji (\u{1F60D}) string. So the unicode string was converted to emoji string during minification!"),mt.forEach(t),ot=d(e),U=o(e,"P",{});var Ue=l(U);Gt=c(Ue,"So I went to my favourite "),W=o(Ue,"A",{href:!0,rel:!0});var Xs=l(W);zt=c(Xs,"Online JavaScript Minifier"),Xs.forEach(t),Dt=c(Ue," (by "),F=o(Ue,"A",{href:!0,rel:!0});var Ys=l(F);Jt=c(Ys,"skalman"),Ys.forEach(t),Nt=c(Ue,") to try it out."),Ue.forEach(t),at=d(e),be=o(e,"P",{});var ei=l(be);M=o(ei,"SPAN",{style:!0});var ti=l(M);ve=o(ti,"PICTURE",{});var ks=l(ve);De=o(ks,"SOURCE",{type:!0,srcset:!0}),I=o(ks,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),ks.forEach(t),ti.forEach(t),ei.forEach(t),lt=d(e),H=o(e,"P",{});var yt=l(H);Ht=c(yt,"After some googling, I "),Q=o(yt,"A",{href:!0,rel:!0});var si=l(Q);Lt=c(si,"found this issue"),si.forEach(t),qt=c(yt," which described my scenario perfectly."),yt.forEach(t),rt=d(e),we=o(e,"P",{});var ii=l(we);G=o(ii,"SPAN",{style:!0});var oi=l(G);ge=o(oi,"PICTURE",{});var xs=l(ge);Je=o(xs,"SOURCE",{type:!0,srcset:!0}),S=o(xs,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),xs.forEach(t),oi.forEach(t),ii.forEach(t),nt=d(e),m=o(e,"P",{});var b=l(m);Bt=c(b,"Turned out there is a "),ke=o(b,"CODE",{class:!0});var ai=l(ke);Wt=c(ai,"ascii_only"),ai.forEach(t),Ft=c(b," for "),V=o(b,"A",{href:!0,rel:!0});var li=l(V);Qt=c(li,"output options"),li.forEach(t),Vt=c(b,", and it is default to "),xe=o(b,"CODE",{class:!0});var ri=l(xe);Zt=c(ri,"false"),ri.forEach(t),Kt=c(b,". So I set "),Ee=o(b,"CODE",{class:!0});var ni=l(Ee);Xt=c(ni,"ascii_only"),ni.forEach(t),Yt=c(b," to "),Ie=o(b,"CODE",{class:!0});var pi=l(Ie);es=c(pi,"true"),pi.forEach(t),ts=c(b,", ran webpack, and checked my compiled code, it contained the unicode string ("),Se=o(b,"CODE",{class:!0});var ci=l(Se);ss=c(ci,"\\ud83d\\ude0d"),ci.forEach(t),is=c(b,")! And even when I wrote emoji string (\u{1F60D}) in my source code, it got compiled to unicode as well."),b.forEach(t),pt=d(e),Z=o(e,"DIV",{class:!0});var Ai=l(Z);Ai.forEach(t),ct=d(e),ut=o(e,"HR",{}),_t=d(e),P=o(e,"SECTION",{});var L=l(P);Ne=o(L,"H2",{});var ui=l(Ne);K=o(ui,"A",{href:!0,id:!0});var _i=l(K);os=c(_i,"TIL: UglifyJs ascii_only option, use it when you want to escape Unicode characters."),_i.forEach(t),ui.forEach(t),as=d(L),ls=o(L,"HR",{}),rs=d(L),X=o(L,"P",{});var bt=l(X);ns=c(bt,"Why is there a "),Pe=o(bt,"CODE",{class:!0});var di=l(Pe);ps=c(di,"ascii_only"),di.forEach(t),cs=c(bt," option?"),bt.forEach(t),us=d(L),z=o(L,"P",{});var je=l(z);_s=c(je,"My guess is that it takes less space for a unicode character (16\u201317bit) than the escaped ascii characters (6 "),He=o(je,"EM",{});var fi=l(He);ds=c(fi,"8 bit\u200A\u2014\u200A12"),fi.forEach(t),fs=c(je," bit), that\u2019s why using unicode character is the default option ("),Ce=o(je,"CODE",{class:!0});var hi=l(Ce);hs=c(hi,"ascii_only=false"),hi.forEach(t),ms=c(je,")."),je.forEach(t),L.forEach(t),this.h()},h(){a(Oe,"type","image/webp"),a(Oe,"srcset",no+", "+ro+" 2x"),Y(w.src,Is=Ei)||a(w,"src",Is),a(w,"srcset",Ei+", "+po+" 2x"),a(w,"loading","lazy"),r(w,"position","absolute"),r(w,"top","0"),r(w,"width","100%"),r(w,"height","100%"),a(w,"alt","The \u{1F60D}\u{1F60D}\u{1F600}\u{1F600}isn\u2019t rendered correctly in chrome extension"),r(j,"display","block"),r(j,"position","relative"),r(j,"padding-top","66.329%"),r(j,"width","100%"),a(Ae,"type","image/webp"),a(Ae,"srcset",ao+", "+oo+" 2x"),Y(g.src,Ss=xi)||a(g,"src",Ss),a(g,"srcset",xi+", "+lo+" 2x"),a(g,"loading","lazy"),r(g,"position","absolute"),r(g,"top","0"),r(g,"width","100%"),r(g,"height","100%"),a(g,"alt","problem with the source too"),r(O,"display","block"),r(O,"position","relative"),r(O,"padding-top","52.052%"),r(O,"width","100%"),a(Re,"type","image/webp"),a(Re,"srcset",so+", "+to+" 2x"),Y(k.src,Ps=ki)||a(k,"src",Ps),a(k,"srcset",ki+", "+io+" 2x"),a(k,"loading","lazy"),r(k,"position","absolute"),r(k,"top","0"),r(k,"width","100%"),r(k,"height","100%"),a(k,"alt","The compiled code seems okay!"),r(A,"display","block"),r(A,"position","relative"),r(A,"padding-top","48.957%"),r(A,"width","100%"),a(ce,"class","inline"),a($e,"type","image/webp"),a($e,"srcset",Yi+", "+Xi+" 2x"),Y(x.src,Cs=gi)||a(x,"src",Cs),a(x,"srcset",gi+", "+eo+" 2x"),a(x,"loading","lazy"),r(x,"position","absolute"),r(x,"top","0"),r(x,"width","100%"),r(x,"height","100%"),a(x,"alt","\u{1F60D}!"),r(R,"display","block"),r(R,"position","relative"),r(R,"padding-top","53.374%"),r(R,"width","100%"),a(B,"href","https://github.com/babel/babel/pull/4478"),a(B,"rel","nofollow"),a(Me,"type","image/webp"),a(Me,"srcset",Zi+", "+Vi+" 2x"),Y(E.src,Ts=wi)||a(E,"src",Ts),a(E,"srcset",wi+", "+Ki+" 2x"),a(E,"loading","lazy"),r(E,"position","absolute"),r(E,"top","0"),r(E,"width","100%"),r(E,"height","100%"),a(E,"alt","babel issue"),r($,"display","block"),r($,"position","relative"),r($,"padding-top","41.375%"),r($,"width","100%"),a(ye,"class","inline"),a(W,"href","https://skalman.github.io/UglifyJS-online/"),a(W,"rel","nofollow"),a(F,"href","https://github.com/skalman"),a(F,"rel","nofollow"),a(De,"type","image/webp"),a(De,"srcset",Fi+", "+Wi+" 2x"),Y(I.src,Us=vi)||a(I,"src",Us),a(I,"srcset",vi+", "+Qi+" 2x"),a(I,"loading","lazy"),r(I,"position","absolute"),r(I,"top","0"),r(I,"width","100%"),r(I,"height","100%"),a(I,"alt","online javasript minifier"),r(M,"display","block"),r(M,"position","relative"),r(M,"padding-top","21.195%"),r(M,"width","100%"),a(Q,"href","https://github.com/mishoo/UglifyJS2/issues/490"),a(Q,"rel","nofollow"),a(Je,"type","image/webp"),a(Je,"srcset",qi+", "+Li+" 2x"),Y(S.src,js=bi)||a(S,"src",js),a(S,"srcset",bi+", "+Bi+" 2x"),a(S,"loading","lazy"),r(S,"position","absolute"),r(S,"top","0"),r(S,"width","100%"),r(S,"height","100%"),a(S,"alt","why uglifyjs always compress unicode characters to utf8"),r(G,"display","block"),r(G,"position","relative"),r(G,"padding-top","42.304%"),r(G,"width","100%"),a(ke,"class","inline"),a(V,"href","https://github.com/mishoo/UglifyJS2#output-options"),a(V,"rel","nofollow"),a(xe,"class","inline"),a(Ee,"class","inline"),a(Ie,"class","inline"),a(Se,"class","inline"),a(Z,"class","code-section"),a(K,"href","#til-uglifyjs-ascii-only-option-use-it-when-you-want-to-escape-unicode-characters"),a(K,"id","til-uglifyjs-ascii-only-option-use-it-when-you-want-to-escape-unicode-characters"),a(Pe,"class","inline"),a(Ce,"class","inline")},m(e,n){Ci(f,e,n),u(e,C,n),u(e,v,n),s(v,q),u(e,h,n),u(e,y,n),s(y,te),u(e,Le,n),u(e,se,n),s(se,j),s(j,ie),s(ie,Oe),s(ie,w),u(e,qe,n),u(e,oe,n),s(oe,vt),u(e,Be,n),u(e,ae,n),s(ae,O),s(O,le),s(le,Ae),s(le,g),u(e,We,n),u(e,re,n),s(re,wt),u(e,Fe,n),u(e,ne,n),s(ne,A),s(A,pe),s(pe,Re),s(pe,k),u(e,Qe,n),u(e,D,n),s(D,gt),s(D,ce),s(ce,kt),s(D,xt),u(e,Ve,n),u(e,ue,n),s(ue,R),s(R,_e),s(_e,$e),s(_e,x),u(e,Ze,n),u(e,de,n),s(de,Et),u(e,Ke,n),u(e,J,n),s(J,It),s(J,B),s(B,St),s(J,Pt),u(e,Xe,n),u(e,fe,n),s(fe,$),s($,he),s(he,Me),s(he,E),u(e,Ye,n),u(e,me,n),s(me,Ct),u(e,et,n),u(e,tt,n),u(e,st,n),u(e,T,n),s(T,Tt),s(T,Ge),s(Ge,Ut),s(T,jt),s(T,ze),s(ze,Ot),s(T,At),u(e,it,n),u(e,N,n),s(N,Rt),s(N,ye),s(ye,$t),s(N,Mt),u(e,ot,n),u(e,U,n),s(U,Gt),s(U,W),s(W,zt),s(U,Dt),s(U,F),s(F,Jt),s(U,Nt),u(e,at,n),u(e,be,n),s(be,M),s(M,ve),s(ve,De),s(ve,I),u(e,lt,n),u(e,H,n),s(H,Ht),s(H,Q),s(Q,Lt),s(H,qt),u(e,rt,n),u(e,we,n),s(we,G),s(G,ge),s(ge,Je),s(ge,S),u(e,nt,n),u(e,m,n),s(m,Bt),s(m,ke),s(ke,Wt),s(m,Ft),s(m,V),s(V,Qt),s(m,Vt),s(m,xe),s(xe,Zt),s(m,Kt),s(m,Ee),s(Ee,Xt),s(m,Yt),s(m,Ie),s(Ie,es),s(m,ts),s(m,Se),s(Se,ss),s(m,is),u(e,pt,n),u(e,Z,n),Z.innerHTML=Oi,u(e,ct,n),u(e,ut,n),u(e,_t,n),u(e,P,n),s(P,Ne),s(Ne,K),s(K,os),s(P,as),s(P,ls),s(P,rs),s(P,X),s(X,ns),s(X,Pe),s(Pe,ps),s(X,cs),s(P,us),s(P,z),s(z,_s),s(z,He),s(He,ds),s(z,fs),s(z,Ce),s(Ce,hs),s(z,ms),dt=!0},p:Di,i(e){dt||(Ti(f.$$.fragment,e),dt=!0)},o(e){Ui(f.$$.fragment,e),dt=!1},d(e){ji(f,e),e&&t(C),e&&t(v),e&&t(h),e&&t(y),e&&t(Le),e&&t(se),e&&t(qe),e&&t(oe),e&&t(Be),e&&t(ae),e&&t(We),e&&t(re),e&&t(Fe),e&&t(ne),e&&t(Qe),e&&t(D),e&&t(Ve),e&&t(ue),e&&t(Ze),e&&t(de),e&&t(Ke),e&&t(J),e&&t(Xe),e&&t(fe),e&&t(Ye),e&&t(me),e&&t(et),e&&t(tt),e&&t(st),e&&t(T),e&&t(it),e&&t(N),e&&t(ot),e&&t(U),e&&t(at),e&&t(be),e&&t(lt),e&&t(H),e&&t(rt),e&&t(we),e&&t(nt),e&&t(m),e&&t(pt),e&&t(Z),e&&t(ct),e&&t(ut),e&&t(_t),e&&t(P)}}}function uo(ee){let f,C;const v=[ee[0],Ii];let q={$$slots:{default:[co]},$$scope:{ctx:ee}};for(let h=0;h<v.length;h+=1)q=Es(q,v[h]);return f=new Ji({props:q}),{c(){Si(f.$$.fragment)},l(h){Pi(f.$$.fragment,h)},m(h,y){Ci(f,h,y),C=!0},p(h,[y]){const te=y&1?Gi(v,[y&1&&mi(h[0]),y&0&&mi(Ii)]):{};y&2&&(te.$$scope={dirty:y,ctx:h}),f.$set(te)},i(h){C||(Ti(f.$$.fragment,h),C=!0)},o(h){Ui(f.$$.fragment,h),C=!1},d(h){ji(f,h)}}}const Ii={title:"The `ascii_only` option in uglify-js",date:"2018-10-27T08:00:00Z",description:"that get my emoji showing in my chrome extension",label:"blog"};function _o(ee,f,C){return zi("blog",{image:Hi}),ee.$$set=v=>{C(0,f=Es(Es({},f),yi(v)))},f=yi(f),[f]}class go extends Ri{constructor(f){super();$i(this,f,_o,uo,Mi,{})}}export{go as default,Ii as metadata};
