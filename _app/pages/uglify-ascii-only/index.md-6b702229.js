import{S as Co,i as Uo,s as Oo,C as Es,w as bo,x as ko,y as go,z as Po,A as no,q as wo,o as Eo,B as xo,r as To,R as co,k as u,e as o,t as r,m as d,c as i,a as n,h as c,d as s,b as a,Q as X,g as p,F as t,O as Ro}from"../../chunks/vendor-ea160616.js";import{B as jo}from"../../chunks/BlogLayout-1be3dc1e.js";import{T as $o}from"../../chunks/TableOfContent-c4f5cb6e.js";import{_ as Ao}from"../../chunks/twitter-card-image-a57df29d.js";import"../../chunks/stores-7d7fda0c.js";import"../../chunks/WebMentions-d768a574.js";/* empty css                                */var Mo="/_app/assets/babel-issue-2-4b70ccf8.webp",po="/_app/assets/babel-issue-2-e0456ec1.png",Go="/_app/assets/uglify-2a0d29b2.webp",uo="/_app/assets/uglify-31e985f1.png",zo="/_app/assets/babel-issue-c88fbf8f.webp",fo="/_app/assets/babel-issue-9475e314.png",Do="/_app/assets/expectation-e308aa72.webp",mo="/_app/assets/expectation-21749d2f.png",Jo="/_app/assets/source-ae091af1.webp",_o="/_app/assets/source-4da711b4.png",Ho="/_app/assets/problem-2-abc15427.webp",yo="/_app/assets/problem-2-28ca7497.png",Lo="/_app/assets/problem-a5b4b5e3.webp",ho="/_app/assets/problem-662a8224.png";function qo(Y){let f,k,v,O,m,y,ee,Le,te,P,xe,Ie,T,xs,qe,se,It,Be,oe,R,Se,Ce,j,Is,Ne,ie,St,We,ae,$,Ue,Oe,A,Ss,Fe,x,Ct,le,Ut,Ot,Qe,re,M,Pe,Te,G,Cs,Ve,ne,Pt,Ze,I,Tt,z,Rt,jt,Ke,ce,D,Re,je,J,Us,Xe,pe,$t,Ye,et,tt,g,At,$e,Mt,Gt,Ae,zt,Dt,st,S,Jt,ue,Ht,Lt,ot,w,qt,H,Bt,Nt,L,Wt,Ft,it,de,q,Me,Ge,B,Os,at,C,Qt,N,Vt,Zt,lt,fe,W,ze,De,F,Ps,rt,_,Kt,me,Xt,Yt,Q,es,ts,_e,ss,os,ye,is,as,he,ls,rs,ve,ns,cs,nt,V,Io=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line dim"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">UglifyJsPlugin</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;uglifyjs-webpack-plugin&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line dim"></span>
<span class="line dim"><span style="color: var(--shiki-token-constant)">module</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">exports</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">//...</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  optimization</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">    minimizer</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">UglifyJsPlugin</span><span style="color: var(--shiki-color-text)">(&#123;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">      uglifyOptions</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">        output</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">          </span><span style="color: var(--shiki-token-comment)">// true for &#96;ascii_only&#96;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">          ascii_only</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">        &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">      &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">    &#125;)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,ct,pt,ut,b,Je,Z,ps,us,ds,fs,K,ms,be,_s,ys,hs,E,vs,He,bs,ks,ke,gs,ws,dt;return f=new $o({props:{data:[{link:"til-uglifyjs-ascii-only-option-use-it-when-you-want-to-escape-unicode-characters",title:"TIL: UglifyJs ascii_only option, use it when you want to escape Unicode characters."}]}}),{c(){bo(f.$$.fragment),k=u(),v=o("p"),O=r("The background story"),m=u(),y=o("p"),ee=r("I was working on a chrome extension, and trying to add some emojis \u{1F60D}\u{1F600}\u{1F60E} into the extension, however I realised the \u{1F60D}\u{1F600}\u{1F60E} are not rendered correctly!"),Le=u(),te=o("p"),P=o("picture"),xe=o("source"),Ie=o("source"),T=o("img"),qe=u(),se=o("p"),It=r("And so I inspect the source code loaded into the chrome extension, it wasn\u2019t loaded correctly as well!"),Be=u(),oe=o("p"),R=o("picture"),Se=o("source"),Ce=o("source"),j=o("img"),Ne=u(),ie=o("p"),St=r("And so I think, probably the encoding issue was caused by the webpack compilation, but, my compiled code looks exactly fine!"),We=u(),ae=o("p"),$=o("picture"),Ue=o("source"),Oe=o("source"),A=o("img"),Fe=u(),x=o("p"),Ct=r("So, most likely is a decoding issue when the emoji code get loaded into chrome extension. So I manually changed the emoji in the compiled code to "),le=o("code"),Ut=r("\\ud83d\\ude0d"),Ot=r(" (unicode for \u{1F60D}). Guess what? The emoji is showing correctly in the chrome extension!"),Qe=u(),re=o("p"),M=o("picture"),Pe=o("source"),Te=o("source"),G=o("img"),Ve=u(),ne=o("p"),Pt=r("So I changed my source code to manually type in the unicode, and compiled it using webpack. To my surprise, the unicode was compiled back into the emoji (\u{1F60D}) it represents!"),Ze=u(),I=o("p"),Tt=r("I googled around and I found "),z=o("a"),Rt=r("this fix for babel-generator"),jt=r(":"),Ke=u(),ce=o("p"),D=o("picture"),Re=o("source"),je=o("source"),J=o("img"),Xe=u(),pe=o("p"),$t=r("I checked my babel version, and it had included this fix. So what went wrong?"),Ye=u(),et=o("hr"),tt=u(),g=o("p"),At=r("My colleague reminded me that during webpack compilation, there are 2 phases, the "),$e=o("strong"),Mt=r("transpilation"),Gt=r(" (via babel) and the "),Ae=o("strong"),zt=r("minification"),Dt=r(" (via uglify plugin)."),st=u(),S=o("p"),Jt=r("So I disabled the optimisation in webpack config, and noticed that my compiled code contains the original unicode string ("),ue=o("code"),Ht=r("\\ud83d\\ude0d"),Lt=r("), instead of the emoji (\u{1F60D}) string. So the unicode string was converted to emoji string during minification!"),ot=u(),w=o("p"),qt=r("So I went to my favourite "),H=o("a"),Bt=r("Online JavaScript Minifier"),Nt=r(" (by "),L=o("a"),Wt=r("skalman"),Ft=r(") to try it out."),it=u(),de=o("p"),q=o("picture"),Me=o("source"),Ge=o("source"),B=o("img"),at=u(),C=o("p"),Qt=r("After some googling, I "),N=o("a"),Vt=r("found this issue"),Zt=r(" which described my scenario perfectly."),lt=u(),fe=o("p"),W=o("picture"),ze=o("source"),De=o("source"),F=o("img"),rt=u(),_=o("p"),Kt=r("Turned out there is a "),me=o("code"),Xt=r("ascii_only"),Yt=r(" for "),Q=o("a"),es=r("output options"),ts=r(", and it is default to "),_e=o("code"),ss=r("false"),os=r(". So I set "),ye=o("code"),is=r("ascii_only"),as=r(" to "),he=o("code"),ls=r("true"),rs=r(", ran webpack, and checked my compiled code, it contained the unicode string ("),ve=o("code"),ns=r("\\ud83d\\ude0d"),cs=r(")! And even when I wrote emoji string (\u{1F60D}) in my source code, it got compiled to unicode as well."),nt=u(),V=o("div"),ct=u(),pt=o("hr"),ut=u(),b=o("section"),Je=o("h2"),Z=o("a"),ps=r("TIL: UglifyJs ascii_only option, use it when you want to escape Unicode characters."),us=u(),ds=o("hr"),fs=u(),K=o("p"),ms=r("Why is there a "),be=o("code"),_s=r("ascii_only"),ys=r(" option?"),hs=u(),E=o("p"),vs=r("My guess is that it takes less space for a unicode character (16\u201317bit) than the escaped ascii characters (6 "),He=o("em"),bs=r("8 bit\u200A\u2014\u200A12"),ks=r(" bit), that\u2019s why using unicode character is the default option ("),ke=o("code"),gs=r("ascii_only=false"),ws=r(")."),this.h()},l(e){ko(f.$$.fragment,e),k=d(e),v=i(e,"P",{});var l=n(v);O=c(l,"The background story"),l.forEach(s),m=d(e),y=i(e,"P",{});var Ts=n(y);ee=c(Ts,"I was working on a chrome extension, and trying to add some emojis \u{1F60D}\u{1F600}\u{1F60E} into the extension, however I realised the \u{1F60D}\u{1F600}\u{1F60E} are not rendered correctly!"),Ts.forEach(s),Le=d(e),te=i(e,"P",{});var Rs=n(te);P=i(Rs,"PICTURE",{});var ft=n(P);xe=i(ft,"SOURCE",{type:!0,srcset:!0}),Ie=i(ft,"SOURCE",{type:!0,srcset:!0}),T=i(ft,"IMG",{src:!0,loading:!0,alt:!0}),ft.forEach(s),Rs.forEach(s),qe=d(e),se=i(e,"P",{});var js=n(se);It=c(js,"And so I inspect the source code loaded into the chrome extension, it wasn\u2019t loaded correctly as well!"),js.forEach(s),Be=d(e),oe=i(e,"P",{});var $s=n(oe);R=i($s,"PICTURE",{});var mt=n(R);Se=i(mt,"SOURCE",{type:!0,srcset:!0}),Ce=i(mt,"SOURCE",{type:!0,srcset:!0}),j=i(mt,"IMG",{src:!0,loading:!0,alt:!0}),mt.forEach(s),$s.forEach(s),Ne=d(e),ie=i(e,"P",{});var As=n(ie);St=c(As,"And so I think, probably the encoding issue was caused by the webpack compilation, but, my compiled code looks exactly fine!"),As.forEach(s),We=d(e),ae=i(e,"P",{});var Ms=n(ae);$=i(Ms,"PICTURE",{});var _t=n($);Ue=i(_t,"SOURCE",{type:!0,srcset:!0}),Oe=i(_t,"SOURCE",{type:!0,srcset:!0}),A=i(_t,"IMG",{src:!0,loading:!0,alt:!0}),_t.forEach(s),Ms.forEach(s),Fe=d(e),x=i(e,"P",{});var yt=n(x);Ct=c(yt,"So, most likely is a decoding issue when the emoji code get loaded into chrome extension. So I manually changed the emoji in the compiled code to "),le=i(yt,"CODE",{class:!0});var Gs=n(le);Ut=c(Gs,"\\ud83d\\ude0d"),Gs.forEach(s),Ot=c(yt," (unicode for \u{1F60D}). Guess what? The emoji is showing correctly in the chrome extension!"),yt.forEach(s),Qe=d(e),re=i(e,"P",{});var zs=n(re);M=i(zs,"PICTURE",{});var ht=n(M);Pe=i(ht,"SOURCE",{type:!0,srcset:!0}),Te=i(ht,"SOURCE",{type:!0,srcset:!0}),G=i(ht,"IMG",{src:!0,loading:!0,alt:!0}),ht.forEach(s),zs.forEach(s),Ve=d(e),ne=i(e,"P",{});var Ds=n(ne);Pt=c(Ds,"So I changed my source code to manually type in the unicode, and compiled it using webpack. To my surprise, the unicode was compiled back into the emoji (\u{1F60D}) it represents!"),Ds.forEach(s),Ze=d(e),I=i(e,"P",{});var vt=n(I);Tt=c(vt,"I googled around and I found "),z=i(vt,"A",{href:!0,rel:!0});var Js=n(z);Rt=c(Js,"this fix for babel-generator"),Js.forEach(s),jt=c(vt,":"),vt.forEach(s),Ke=d(e),ce=i(e,"P",{});var Hs=n(ce);D=i(Hs,"PICTURE",{});var bt=n(D);Re=i(bt,"SOURCE",{type:!0,srcset:!0}),je=i(bt,"SOURCE",{type:!0,srcset:!0}),J=i(bt,"IMG",{src:!0,loading:!0,alt:!0}),bt.forEach(s),Hs.forEach(s),Xe=d(e),pe=i(e,"P",{});var Ls=n(pe);$t=c(Ls,"I checked my babel version, and it had included this fix. So what went wrong?"),Ls.forEach(s),Ye=d(e),et=i(e,"HR",{}),tt=d(e),g=i(e,"P",{});var ge=n(g);At=c(ge,"My colleague reminded me that during webpack compilation, there are 2 phases, the "),$e=i(ge,"STRONG",{});var qs=n($e);Mt=c(qs,"transpilation"),qs.forEach(s),Gt=c(ge," (via babel) and the "),Ae=i(ge,"STRONG",{});var Bs=n(Ae);zt=c(Bs,"minification"),Bs.forEach(s),Dt=c(ge," (via uglify plugin)."),ge.forEach(s),st=d(e),S=i(e,"P",{});var kt=n(S);Jt=c(kt,"So I disabled the optimisation in webpack config, and noticed that my compiled code contains the original unicode string ("),ue=i(kt,"CODE",{class:!0});var Ns=n(ue);Ht=c(Ns,"\\ud83d\\ude0d"),Ns.forEach(s),Lt=c(kt,"), instead of the emoji (\u{1F60D}) string. So the unicode string was converted to emoji string during minification!"),kt.forEach(s),ot=d(e),w=i(e,"P",{});var we=n(w);qt=c(we,"So I went to my favourite "),H=i(we,"A",{href:!0,rel:!0});var Ws=n(H);Bt=c(Ws,"Online JavaScript Minifier"),Ws.forEach(s),Nt=c(we," (by "),L=i(we,"A",{href:!0,rel:!0});var Fs=n(L);Wt=c(Fs,"skalman"),Fs.forEach(s),Ft=c(we,") to try it out."),we.forEach(s),it=d(e),de=i(e,"P",{});var Qs=n(de);q=i(Qs,"PICTURE",{});var gt=n(q);Me=i(gt,"SOURCE",{type:!0,srcset:!0}),Ge=i(gt,"SOURCE",{type:!0,srcset:!0}),B=i(gt,"IMG",{src:!0,loading:!0,alt:!0}),gt.forEach(s),Qs.forEach(s),at=d(e),C=i(e,"P",{});var wt=n(C);Qt=c(wt,"After some googling, I "),N=i(wt,"A",{href:!0,rel:!0});var Vs=n(N);Vt=c(Vs,"found this issue"),Vs.forEach(s),Zt=c(wt," which described my scenario perfectly."),wt.forEach(s),lt=d(e),fe=i(e,"P",{});var Zs=n(fe);W=i(Zs,"PICTURE",{});var Et=n(W);ze=i(Et,"SOURCE",{type:!0,srcset:!0}),De=i(Et,"SOURCE",{type:!0,srcset:!0}),F=i(Et,"IMG",{src:!0,loading:!0,alt:!0}),Et.forEach(s),Zs.forEach(s),rt=d(e),_=i(e,"P",{});var h=n(_);Kt=c(h,"Turned out there is a "),me=i(h,"CODE",{class:!0});var Ks=n(me);Xt=c(Ks,"ascii_only"),Ks.forEach(s),Yt=c(h," for "),Q=i(h,"A",{href:!0,rel:!0});var Xs=n(Q);es=c(Xs,"output options"),Xs.forEach(s),ts=c(h,", and it is default to "),_e=i(h,"CODE",{class:!0});var Ys=n(_e);ss=c(Ys,"false"),Ys.forEach(s),os=c(h,". So I set "),ye=i(h,"CODE",{class:!0});var eo=n(ye);is=c(eo,"ascii_only"),eo.forEach(s),as=c(h," to "),he=i(h,"CODE",{class:!0});var to=n(he);ls=c(to,"true"),to.forEach(s),rs=c(h,", ran webpack, and checked my compiled code, it contained the unicode string ("),ve=i(h,"CODE",{class:!0});var so=n(ve);ns=c(so,"\\ud83d\\ude0d"),so.forEach(s),cs=c(h,")! And even when I wrote emoji string (\u{1F60D}) in my source code, it got compiled to unicode as well."),h.forEach(s),nt=d(e),V=i(e,"DIV",{class:!0});var So=n(V);So.forEach(s),ct=d(e),pt=i(e,"HR",{}),ut=d(e),b=i(e,"SECTION",{});var U=n(b);Je=i(U,"H2",{});var oo=n(Je);Z=i(oo,"A",{href:!0,id:!0});var io=n(Z);ps=c(io,"TIL: UglifyJs ascii_only option, use it when you want to escape Unicode characters."),io.forEach(s),oo.forEach(s),us=d(U),ds=i(U,"HR",{}),fs=d(U),K=i(U,"P",{});var xt=n(K);ms=c(xt,"Why is there a "),be=i(xt,"CODE",{class:!0});var ao=n(be);_s=c(ao,"ascii_only"),ao.forEach(s),ys=c(xt," option?"),xt.forEach(s),hs=d(U),E=i(U,"P",{});var Ee=n(E);vs=c(Ee,"My guess is that it takes less space for a unicode character (16\u201317bit) than the escaped ascii characters (6 "),He=i(Ee,"EM",{});var lo=n(He);bs=c(lo,"8 bit\u200A\u2014\u200A12"),lo.forEach(s),ks=c(Ee," bit), that\u2019s why using unicode character is the default option ("),ke=i(Ee,"CODE",{class:!0});var ro=n(ke);gs=c(ro,"ascii_only=false"),ro.forEach(s),ws=c(Ee,")."),Ee.forEach(s),U.forEach(s),this.h()},h(){a(xe,"type","image/webp"),a(xe,"srcset",Lo),a(Ie,"type","image/png"),a(Ie,"srcset",ho),X(T.src,xs=ho)||a(T,"src",xs),a(T,"loading","lazy"),a(T,"alt","The \u{1F60D}\u{1F60D}\u{1F600}\u{1F600}isn\u2019t rendered correctly in chrome extension"),a(Se,"type","image/webp"),a(Se,"srcset",Ho),a(Ce,"type","image/png"),a(Ce,"srcset",yo),X(j.src,Is=yo)||a(j,"src",Is),a(j,"loading","lazy"),a(j,"alt","problem with the source too"),a(Ue,"type","image/webp"),a(Ue,"srcset",Jo),a(Oe,"type","image/png"),a(Oe,"srcset",_o),X(A.src,Ss=_o)||a(A,"src",Ss),a(A,"loading","lazy"),a(A,"alt","The compiled code seems okay!"),a(le,"class","inline"),a(Pe,"type","image/webp"),a(Pe,"srcset",Do),a(Te,"type","image/png"),a(Te,"srcset",mo),X(G.src,Cs=mo)||a(G,"src",Cs),a(G,"loading","lazy"),a(G,"alt","\u{1F60D}!"),a(z,"href","https://github.com/babel/babel/pull/4478"),a(z,"rel","nofollow"),a(Re,"type","image/webp"),a(Re,"srcset",zo),a(je,"type","image/png"),a(je,"srcset",fo),X(J.src,Us=fo)||a(J,"src",Us),a(J,"loading","lazy"),a(J,"alt","babel issue"),a(ue,"class","inline"),a(H,"href","https://skalman.github.io/UglifyJS-online/"),a(H,"rel","nofollow"),a(L,"href","https://github.com/skalman"),a(L,"rel","nofollow"),a(Me,"type","image/webp"),a(Me,"srcset",Go),a(Ge,"type","image/png"),a(Ge,"srcset",uo),X(B.src,Os=uo)||a(B,"src",Os),a(B,"loading","lazy"),a(B,"alt","online javasript minifier"),a(N,"href","https://github.com/mishoo/UglifyJS2/issues/490"),a(N,"rel","nofollow"),a(ze,"type","image/webp"),a(ze,"srcset",Mo),a(De,"type","image/png"),a(De,"srcset",po),X(F.src,Ps=po)||a(F,"src",Ps),a(F,"loading","lazy"),a(F,"alt","why uglifyjs always compress unicode characters to utf8"),a(me,"class","inline"),a(Q,"href","https://github.com/mishoo/UglifyJS2#output-options"),a(Q,"rel","nofollow"),a(_e,"class","inline"),a(ye,"class","inline"),a(he,"class","inline"),a(ve,"class","inline"),a(V,"class","code-section"),a(Z,"href","#til-uglifyjs-ascii-only-option-use-it-when-you-want-to-escape-unicode-characters"),a(Z,"id","til-uglifyjs-ascii-only-option-use-it-when-you-want-to-escape-unicode-characters"),a(be,"class","inline"),a(ke,"class","inline")},m(e,l){go(f,e,l),p(e,k,l),p(e,v,l),t(v,O),p(e,m,l),p(e,y,l),t(y,ee),p(e,Le,l),p(e,te,l),t(te,P),t(P,xe),t(P,Ie),t(P,T),p(e,qe,l),p(e,se,l),t(se,It),p(e,Be,l),p(e,oe,l),t(oe,R),t(R,Se),t(R,Ce),t(R,j),p(e,Ne,l),p(e,ie,l),t(ie,St),p(e,We,l),p(e,ae,l),t(ae,$),t($,Ue),t($,Oe),t($,A),p(e,Fe,l),p(e,x,l),t(x,Ct),t(x,le),t(le,Ut),t(x,Ot),p(e,Qe,l),p(e,re,l),t(re,M),t(M,Pe),t(M,Te),t(M,G),p(e,Ve,l),p(e,ne,l),t(ne,Pt),p(e,Ze,l),p(e,I,l),t(I,Tt),t(I,z),t(z,Rt),t(I,jt),p(e,Ke,l),p(e,ce,l),t(ce,D),t(D,Re),t(D,je),t(D,J),p(e,Xe,l),p(e,pe,l),t(pe,$t),p(e,Ye,l),p(e,et,l),p(e,tt,l),p(e,g,l),t(g,At),t(g,$e),t($e,Mt),t(g,Gt),t(g,Ae),t(Ae,zt),t(g,Dt),p(e,st,l),p(e,S,l),t(S,Jt),t(S,ue),t(ue,Ht),t(S,Lt),p(e,ot,l),p(e,w,l),t(w,qt),t(w,H),t(H,Bt),t(w,Nt),t(w,L),t(L,Wt),t(w,Ft),p(e,it,l),p(e,de,l),t(de,q),t(q,Me),t(q,Ge),t(q,B),p(e,at,l),p(e,C,l),t(C,Qt),t(C,N),t(N,Vt),t(C,Zt),p(e,lt,l),p(e,fe,l),t(fe,W),t(W,ze),t(W,De),t(W,F),p(e,rt,l),p(e,_,l),t(_,Kt),t(_,me),t(me,Xt),t(_,Yt),t(_,Q),t(Q,es),t(_,ts),t(_,_e),t(_e,ss),t(_,os),t(_,ye),t(ye,is),t(_,as),t(_,he),t(he,ls),t(_,rs),t(_,ve),t(ve,ns),t(_,cs),p(e,nt,l),p(e,V,l),V.innerHTML=Io,p(e,ct,l),p(e,pt,l),p(e,ut,l),p(e,b,l),t(b,Je),t(Je,Z),t(Z,ps),t(b,us),t(b,ds),t(b,fs),t(b,K),t(K,ms),t(K,be),t(be,_s),t(K,ys),t(b,hs),t(b,E),t(E,vs),t(E,He),t(He,bs),t(E,ks),t(E,ke),t(ke,gs),t(E,ws),dt=!0},p:Ro,i(e){dt||(wo(f.$$.fragment,e),dt=!0)},o(e){Eo(f.$$.fragment,e),dt=!1},d(e){xo(f,e),e&&s(k),e&&s(v),e&&s(m),e&&s(y),e&&s(Le),e&&s(te),e&&s(qe),e&&s(se),e&&s(Be),e&&s(oe),e&&s(Ne),e&&s(ie),e&&s(We),e&&s(ae),e&&s(Fe),e&&s(x),e&&s(Qe),e&&s(re),e&&s(Ve),e&&s(ne),e&&s(Ze),e&&s(I),e&&s(Ke),e&&s(ce),e&&s(Xe),e&&s(pe),e&&s(Ye),e&&s(et),e&&s(tt),e&&s(g),e&&s(st),e&&s(S),e&&s(ot),e&&s(w),e&&s(it),e&&s(de),e&&s(at),e&&s(C),e&&s(lt),e&&s(fe),e&&s(rt),e&&s(_),e&&s(nt),e&&s(V),e&&s(ct),e&&s(pt),e&&s(ut),e&&s(b)}}}function Bo(Y){let f,k;const v=[Y[0],vo];let O={$$slots:{default:[qo]},$$scope:{ctx:Y}};for(let m=0;m<v.length;m+=1)O=Es(O,v[m]);return f=new jo({props:O}),{c(){bo(f.$$.fragment)},l(m){ko(f.$$.fragment,m)},m(m,y){go(f,m,y),k=!0},p(m,[y]){const ee=y&1?Po(v,[y&1&&no(m[0]),y&0&&no(vo)]):{};y&2&&(ee.$$scope={dirty:y,ctx:m}),f.$set(ee)},i(m){k||(wo(f.$$.fragment,m),k=!0)},o(m){Eo(f.$$.fragment,m),k=!1},d(m){xo(f,m)}}}const vo={title:"The `ascii_only` option in uglify-js",date:"2018-10-27T08:00:00Z",description:"that get my emoji showing in my chrome extension",label:"blog"};function No(Y,f,k){return To("blog",{image:Ao}),Y.$$set=v=>{k(0,f=Es(Es({},f),co(v)))},f=co(f),[f]}class Yo extends Co{constructor(f){super();Uo(this,f,No,Bo,Oo,{})}}export{Yo as default,vo as metadata};
