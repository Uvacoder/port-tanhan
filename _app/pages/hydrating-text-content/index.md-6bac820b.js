import{S as dd,i as kd,s as vd,C as ac,w as _h,x as Eh,y as bh,z as yd,A as xh,q as Th,o as Ih,B as Hh,r as ud,R as mh,k as i,e as a,t,m as c,c as n,a as r,h as o,d as s,b as l,g as T,F as e,O as gd}from"../../chunks/vendor-569a3c5c.js";import{B as fd}from"../../chunks/BlogLayout-17b76cb2.js";import{T as xd}from"../../chunks/TableOfContent-dbc18cb8.js";import{_ as md}from"../../chunks/twitter-card-image-a57df29d.js";import"../../chunks/stores-ee936cd4.js";import"../../chunks/WebMentions-968cc380.js";/* empty css                                */function wd(Ye){let f,D,w,V,x,S,Ze,C,Wo,re,zo,Jo,le,Ko,Qo,ie,Go,Yo,Zo,j,Xo,ce,ea,sa,pe,ta,oa,aa,Et,na,xo,m,bt,he,ra,la,Tt,ia,ca,Xe,Mh='<pre class="prism language-"><code><span class="line">Text content did not match. Server: &quot;Count: 0&quot; Client: &quot;Count: &quot;</span></code></pre>',pa,It,ha,da,es,Dh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">App</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-constant)">count</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">setCount</span><span style="color: var(--shiki-color-text)">] </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">useState</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> (</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;Count: &#123;count&#125;&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &lt;</span><span style="color: var(--shiki-token-string-expression)">button</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">onClick</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">&#123;() </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">setCount</span><span style="color: var(--shiki-color-text)">(count </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)">)&#125;&gt;Increment&lt;/</span><span style="color: var(--shiki-token-string-expression)">button</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  );</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,ka,Ht,va,ya,Mt,ua,ga,Dt,fa,mo,k,St,de,xa,ma,Ct,wa,_a,ss,Sh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;Count: 0&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">button</span><span style="color: var(--shiki-color-text)">&gt;Increment&lt;/</span><span style="color: var(--shiki-token-string-expression)">button</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,Ea,Ot,ba,Ta,Rt,Ia,Ha,ts,Ch=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">&lt;!-- disabled javascript --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">\u2514\u2500 &lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    \u251C\u2500 &lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    \u2502   \u2514\u2500 &quot;Count: 0&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    \u2514\u2500 &lt;</span><span style="color: var(--shiki-token-string-expression)">button</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        \u2514\u2500 &quot;Increment&quot;</span></span></code></pre>`,Ma,os,Oh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">&lt;!-- enabled javascript --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">\u2514\u2500 &lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    \u251C\u2500 &lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    \u2502   \u251C\u2500 &quot;Count: &quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    \u2502   \u2514\u2500 &quot;0&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    \u2514\u2500 &lt;</span><span style="color: var(--shiki-token-string-expression)">button</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        \u2514\u2500 &quot;Increment&quot;</span></span></code></pre>`,Da,Lt,Sa,Ca,O,Oa,as,Ra,La,ns,Pa,Aa,rs,qa,Va,ja,ke,Na,ls,$a,Fa,Ba,R,Ua,is,Wa,za,cs,Ja,Ka,ps,Qa,Ga,Ya,hs,Rh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;Count: &#123;</span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">&#125;&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">button</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">onClick</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">&#123;() </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">setCount</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)">)&#125;&gt;Increment&lt;/</span><span style="color: var(--shiki-token-string-expression)">button</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,Za,Pt,Xa,en,ds,Lh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  type</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;div&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  props</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    children</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> [&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;div&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      props</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        children</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">          </span><span style="color: var(--shiki-token-string-expression)">&#39;Count: &#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">          </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        ]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;button&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      props</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-function)">onClick</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">setCount</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        children</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">          </span><span style="color: var(--shiki-token-string-expression)">&#39;Increment&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        ]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,sn,ve,tn,ks,on,an,nn,ye,rn,vs,ln,cn,pn,At,hn,dn,N,kn,ys,vn,yn,us,un,gn,fn,gs,Ph='<pre class="prism language-"><code><span class="line">Text content did not match. Server: &quot;Count: 0&quot; Client: &quot;Count: &quot;</span></code></pre>',xn,$,mn,fs,wn,_n,xs,En,bn,wo,y,qt,ue,Tn,In,Vt,Hn,Mn,jt,Dn,Sn,F,Cn,ge,ms,On,Rn,fe,ws,Ln,Pn,An,Nt,qn,Vn,$t,B,jn,_s,Nn,$n,Es,Fn,Bn,Un,Ft,Wn,zn,U,Jn,xe,bs,Kn,Qn,me,Ts,Gn,Yn,Zn,we,Xn,_e,Is,er,sr,tr,Hs,Ah='<pre class="prism language-diff-svelte"><code><div class="line"><span class="token deleted-sign deleted language-svelte"><span class="token prefix deleted">-</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span></div><div class="line"></span><span class="token inserted-sign inserted language-svelte"><span class="token prefix inserted">+</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">data-reactroot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span></div><div class="line"></span><span class="token deleted-sign deleted language-svelte"><span class="token prefix deleted">-</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Count: 0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></div><div class="line"></span><span class="token inserted-sign inserted language-svelte"><span class="token prefix inserted">+</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>Count: <span class="token comment">&lt;!-- --></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></div><div class="line"></span><span class="token unchanged language-svelte"><span class="token prefix unchanged"> </span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>Increment<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></div><div class="line"></span><span class="token deleted-arrow deleted language-svelte"><span class="token prefix deleted"><</span>/div></span></div></code></pre>',or,W,ar,Ms,nr,rr,A,lr,Ds,ir,cr,Ss,pr,hr,dr,z,kr,Cs,vr,yr,Os,ur,gr,fr,Rs,qh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">&lt;!-- disabled javascript --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">\u2514\u2500 &lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    \u251C\u2500 &lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    \u2502   \u251C\u2500 &quot;Count: &quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    \u2502   \u251C\u2500 </span><span style="color: var(--shiki-token-comment)">&lt;!-- --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    \u2502   \u2514\u2500 &quot;0&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    \u2514\u2500 &lt;</span><span style="color: var(--shiki-token-string-expression)">button</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        \u2514\u2500 &quot;Increment&quot;</span></span></code></pre>`,xr,Ee,mr,be,wr,_r,Er,Bt,br,Tr,Te,Ir,Ie,Hr,Mr,_o,h,Ut,He,Dr,Sr,Me,Cr,De,Or,Rr,Lr,Wt,Pr,Ar,zt,qr,Vr,Ls,Vh='<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;&#123;a&#125; + &#123;b&#125; = &#123;a + b&#125;&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>',jr,Jt,Kt,Nr,$r,Se,Fr,J,Br,Ps,Ur,Wr,zr,Jr,Ce,Kr,Oe,Qr,Gr,Yr,As,jh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">script</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">    &lt;h1&gt;Introduction&lt;/h1&gt;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">    &lt;div&gt;Hello World&lt;/div&gt;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">  &#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">script</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#123;@html string&#125;</span></span></code></pre>`,Zr,Qt,Xr,el,Gt,sl,tl,Yt,ol,al,qs,Nh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">script</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> Header </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;./Header.svelte&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> Footer </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;./Footer.svelte&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">string</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">    &lt;h1&gt;Introduction&lt;/h1&gt;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">    &lt;div&gt;Hello World&lt;/div&gt;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">  &#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">script</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">Header</span><span style="color: var(--shiki-color-text)">&gt;This is header&lt;/</span><span style="color: var(--shiki-token-string-expression)">Header</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#123;@html string&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">Footer</span><span style="color: var(--shiki-color-text)">&gt;This is footer&lt;/</span><span style="color: var(--shiki-token-string-expression)">Footer</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,nl,Zt,rl,ll,Vs,$h=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">header</span><span style="color: var(--shiki-color-text)">&gt;This is header&lt;/</span><span style="color: var(--shiki-token-string-expression)">header</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">nav</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">ul</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">li</span><span style="color: var(--shiki-color-text)">&gt;&lt;</span><span style="color: var(--shiki-token-string-expression)">a</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">href</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#&quot;</span><span style="color: var(--shiki-color-text)">&gt;Home&lt;/</span><span style="color: var(--shiki-token-string-expression)">a</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">li</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">ul</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">nav</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">h1</span><span style="color: var(--shiki-color-text)">&gt;Introduction&lt;/</span><span style="color: var(--shiki-token-string-expression)">h1</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;Hello World&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">class</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;footer&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">img</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">src</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;footer-img&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  This is footer</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,il,L,cl,js,pl,hl,Ns,dl,kl,$s,vl,yl,ul,Xt,gl,fl,P,xl,Fs,ml,wl,Bs,_l,El,Us,bl,Tl,Il,eo,Ws,so,Hl,Ml,Dl,H,Sl,zs,Cl,Ol,Js,Rl,Ll,Ks,Pl,Al,Qs,ql,Vl,jl,Gs,Fh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">&lt;!-- Header.svelte --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">header</span><span style="color: var(--shiki-color-text)">&gt;&lt;</span><span style="color: var(--shiki-token-string-expression)">slot</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">slot</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">header</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">nav</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">ul</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">li</span><span style="color: var(--shiki-color-text)">&gt;&lt;</span><span style="color: var(--shiki-token-string-expression)">a</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">href</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#&quot;</span><span style="color: var(--shiki-color-text)">&gt;Home&lt;/</span><span style="color: var(--shiki-token-string-expression)">a</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">li</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">ul</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">nav</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,Nl,to,Y,$l,Ys,Fl,Bl,Re,Ul,Wl,K,zl,Zs,Jl,Kl,Xs,Ql,Gl,Yl,oo,Zl,Xl,et,Bh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">header</span><span style="color: var(--shiki-color-text)">&gt;This is header&lt;/</span><span style="color: var(--shiki-token-string-expression)">header</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">nav</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">ul</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">li</span><span style="color: var(--shiki-color-text)">&gt;&lt;</span><span style="color: var(--shiki-token-string-expression)">a</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">href</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#&quot;</span><span style="color: var(--shiki-color-text)">&gt;Home&lt;/</span><span style="color: var(--shiki-token-string-expression)">a</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">li</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">ul</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">nav</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">h1</span><span style="color: var(--shiki-color-text)">&gt;Introduction&lt;/</span><span style="color: var(--shiki-token-string-expression)">h1</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;Hello World&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">&lt;!-- HTML Tag Ends Here --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">class</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;footer&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">img</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">src</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;footer-img&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  This is footer</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,ei,st,Uh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// claim HTML node until a comment that matches the &#96;commentMarker&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">claimUntil</span><span style="color: var(--shiki-color-text)">(nodes</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> commentMarker) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">let</span><span style="color: var(--shiki-color-text)"> i </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">while</span><span style="color: var(--shiki-color-text)">(i </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">nodes</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">length</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">node</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> nodes[i];</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">node</span><span style="color: var(--shiki-color-text)">.nodeType </span><span style="color: var(--shiki-token-keyword)">===</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">8</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">/* comment node */</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&amp;&amp;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">node</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">textContent</span><span style="color: var(--shiki-token-function)">.trim</span><span style="color: var(--shiki-color-text)">() </span><span style="color: var(--shiki-token-keyword)">===</span><span style="color: var(--shiki-color-text)"> commentMarker) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">break</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">nodes</span><span style="color: var(--shiki-token-function)">.splice</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> i);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">claimHtmlTag</span><span style="color: var(--shiki-color-text)">(nodes) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">htmlTagNodes</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">claimUntil</span><span style="color: var(--shiki-color-text)">(nodes</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;HTML Tag Ends Here&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">HtmlTag</span><span style="color: var(--shiki-color-text)">(htmlTagNodes);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125; </span></span></code></pre>`,Eo,E,ao,Le,si,ti,Pe,oi,Ae,ai,ni,ri,qe,li,tt,ii,ci,pi,ot,Wh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">MyComponent</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> &lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">dangerouslySetInnerHTML</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)">&#123;&#123;__html</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">    &lt;h1&gt;Introduction&lt;/h1&gt;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">    &lt;div&gt;Hello World&lt;/div&gt;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">  &#96;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;&#125; /&gt;;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,hi,at,zh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">&lt;!-- the parent &#96;&lt;div&gt;&#96; act as a boundary --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">h1</span><span style="color: var(--shiki-color-text)">&gt;Introduction&lt;/</span><span style="color: var(--shiki-token-string-expression)">h1</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;Hello World&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,di,Q,ki,nt,vi,yi,rt,ui,gi,bo,_,no,Ve,fi,xi,ro,mi,wi,je,_i,Z,lt,Ei,bi,Ti,Ii,Ne,Hi,it,Mi,Di,Si,$e,Ci,ct,Oi,Ri,Li,Fe,Pi,Be,Ai,qi,Vi,lo,X,io,ji,Ni,Ue,$i,Fi,To,ee,co,We,Bi,Ui,ze,pt,Wi,G,po,Je,zi,Ji,ho,Ke,Ki,Qi,ko,Qe,Gi,Yi,ht,Zi,vo,yo,Ge,Xi,Io;return f=new xd({props:{data:[{link:"disclaimer",title:"Disclaimer"},{link:"background",title:"Background"},{link:"the-investigation",title:"The investigation"},{link:"is-this-a-bug",title:"Is this a bug?"},{link:"apply-what-i-ve-learned",title:"Apply what I've learned"},{link:"dangerouslysetinnerhtml",title:"dangerouslySetInnerHtml"},{link:"react-partial-hydration",title:"React Partial Hydration"},{link:"references",title:"References"}]}}),{c(){_h(f.$$.fragment),D=i(),w=a("section"),V=a("h2"),x=a("a"),S=t("Disclaimer"),Ze=i(),C=a("p"),Wo=t("I am not going to talk about what is hydration, to know more about client-side rendering, server-side rendering and hydration, please "),re=a("a"),zo=t("read this amazing article"),Jo=t(" by "),le=a("a"),Ko=t("Jason Miller"),Qo=t(" and "),ie=a("a"),Go=t("Addy Osmani"),Yo=t("."),Zo=i(),j=a("p"),Xo=t("I am not going to share about how to do rehydration in React as well, you can read about that from "),ce=a("a"),ea=t("here"),sa=t(" and "),pe=a("a"),ta=t("here"),oa=t("."),aa=i(),Et=a("p"),na=t('I am going to share a story, how I "understand" more about the mechanics of rehydration in React, and how I apply it in real life.'),xo=i(),m=a("section"),bt=a("h2"),he=a("a"),ra=t("Background"),la=i(),Tt=a("p"),ia=t("Recently, I was bewildered by a React hydration warning:"),ca=i(),Xe=a("div"),pa=i(),It=a("p"),ha=t("To give you a sense of the situation, this is the component I was trying to rehydrate:"),da=i(),es=a("div"),ka=i(),Ht=a("p"),va=t("Although React warned about the mismatch in the console, the hydrated app still worked fine."),ya=i(),Mt=a("p"),ua=t("So I can ignore it. \u{1F648}"),ga=i(),Dt=a("p"),fa=t("Still, my curiosity made me dig deeper, to find out the reason behind it."),mo=i(),k=a("section"),St=a("h2"),de=a("a"),xa=t("The investigation"),ma=i(),Ct=a("p"),wa=t("So, the first thing I looked at, was the server-rendered HTML, which will be hydrated by React later."),_a=i(),ss=a("div"),Ea=i(),Ot=a("p"),ba=t("Looks pretty normal right?"),Ta=i(),Rt=a("p"),Ia=t("Somehow, my gut feeling telling me to look at the DOM with and without hydration next:"),Ha=i(),ts=a("div"),Ma=i(),os=a("div"),Da=i(),Lt=a("p"),Sa=t("A-ha! Noticed the difference in the DOM?"),Ca=i(),O=a("p"),Oa=t("Although they both looked visually the same, but in the DOM created by the initial HTML has only 1 text node, "),as=a("code"),Ra=t('"Count: 0"'),La=t(", but the DOM after hydration has 2 text nodes, "),ns=a("code"),Pa=t('"Count: "'),Aa=t(" and "),rs=a("code"),qa=t('"0"'),Va=t("."),ja=i(),ke=a("p"),Na=t("Why is that so? The secret lies in the component "),ls=a("code"),$a=t("App"),Fa=t("."),Ba=i(),R=a("p"),Ua=t("The functional component "),is=a("code"),Wa=t("App"),za=t(" returns the following React element when "),cs=a("code"),Ja=t("count"),Ka=t(" is "),ps=a("code"),Qa=t("0"),Ga=t(":"),Ya=i(),hs=a("div"),Za=i(),Pt=a("p"),Xa=t("which itself is a plain JavaScript object, which is roughly:"),en=i(),ds=a("div"),sn=i(),ve=a("p"),tn=t("Noticed the "),ks=a("code"),on=t("div"),an=t(" has 2 children? That's why it rendered 2 text nodes!"),nn=i(),ye=a("p"),rn=t("So, when React tries to hydrate the "),vs=a("code"),ln=t("div"),cn=t(" from SSR, it starts with comparing all the props from the React element and the attributes from the DOM. Then, it compares the element's children."),pn=i(),At=a("p"),hn=t("Based on the React element, React expects 2 text nodes, but the DOM only has 1. So it tries to match with the 1st text node, and create the 2nd one."),dn=i(),N=a("p"),kn=t("It is when the matching happens, where React realizes that it is expecting the text node to contain "),ys=a("code"),vn=t('"Count: "'),yn=t(", but the server content is "),us=a("code"),un=t('"Count: 0"'),gn=t(", thus the error message:"),fn=i(),gs=a("div"),xn=i(),$=a("p"),mn=t("Then, React patches the text node, by setting the content to the expected "),fs=a("code"),wn=t('"Count: "'),_n=t(", and created another text node, "),xs=a("code"),En=t('"0"'),bn=t(", so visually there's no change, but in the DOM, React has changed the text content and created a new text node."),wo=i(),y=a("section"),qt=a("h2"),ue=a("a"),Tn=t("Is this a bug?"),In=i(),Vt=a("p"),Hn=t("So, is this a React hydration bug? or is this an expected behavior?"),Mn=i(),jt=a("p"),Dn=t("Turns out that, it was my bug \u{1F92E}\u{1F92E}."),Sn=i(),F=a("p"),Cn=t("I used "),ge=a("a"),ms=a("code"),On=t("ReactDOMServer.renderToStaticMarkup"),Rn=t(" instead of "),fe=a("a"),ws=a("code"),Ln=t("ReactDOMServer.renderToString"),Pn=t("."),An=i(),Nt=a("p"),qn=t("The doc says clearly,"),Vn=i(),$t=a("blockquote"),B=a("p"),jn=t("If you plan to use React on the client to make the markup interactive, do not use this method. Instead, use "),_s=a("code"),Nn=t("renderToString"),$n=t(" on the server and "),Es=a("code"),Fn=t("ReactDOM.hydrate()"),Bn=t(" on the client."),Un=i(),Ft=a("p"),Wn=t("\u{1F648}"),zn=i(),U=a("p"),Jn=t("So, what is the difference between "),xe=a("a"),bs=a("code"),Kn=t("ReactDOMServer.renderToStaticMarkup"),Qn=t(" and "),me=a("a"),Ts=a("code"),Gn=t("ReactDOMServer.renderToString"),Yn=t(" ?"),Zn=i(),we=a("p"),Xn=t("This is what "),_e=a("a"),Is=a("code"),er=t("ReactDOMServer.renderToString"),sr=t(" generates:"),tr=i(),Hs=a("div"),or=i(),W=a("p"),ar=t("It adds a "),Ms=a("code"),nr=t("data-reactroot"),rr=t(" which is used by React internally. (From what I read from the code, it seemed to be used by React only to warn legacy code to "),A=a("a"),lr=t("switch from "),Ds=a("code"),ir=t("render()"),cr=t(" to "),Ss=a("code"),pr=t("hydrate()"),hr=t(" before stopping support in React v17, correct me if I'm wrong)."),dr=i(),z=a("p"),kr=t("Besides, it adds a comment in between "),Cs=a("code"),vr=t('"Count: "'),yr=t(" and "),Os=a("code"),ur=t('"0"'),gr=t(", so the initial DOM looks like this:"),fr=i(),Rs=a("div"),xr=i(),Ee=a("p"),mr=t("A "),be=a("a"),wr=t("comment node"),_r=t(" sits in between 2 text nodes, nicely separate the boundary of the 2 text nodes."),Er=i(),Bt=a("p"),br=t("As you could expect, this time around, there's no more hydration error."),Tr=i(),Te=a("p"),Ir=t("The initial DOM provided 2 text nodes as React would expect, and "),Ie=a("a"),Hr=t("React would skip comment nodes and only hydrate element nodes and text nodes"),Mr=t("."),_o=i(),h=a("section"),Ut=a("h2"),He=a("a"),Dr=t("Apply what I've learned"),Sr=i(),Me=a("p"),Cr=t("So, the next obvious place to apply what I've learned is "),De=a("a"),Or=t("Svelte"),Rr=t("."),Lr=i(),Wt=a("p"),Pr=t("I found out there are 2 places that Svelte can use this technique for better hydration."),Ar=i(),zt=a("p"),qr=t('The first is the hydrating text node. I found out that Svelte hydrates neighboring text nodes the same way as I described as "a bug", modifying the 1st text node and creating the 2nd text node. It gets "worse" when you have more neighboring text nodes:'),Vr=i(),Ls=a("div"),jr=i(),Jt=a("p"),Kt=a("em"),Nr=t("5 neighboring text nodes"),$r=i(),Se=a("p"),Fr=t("The second place I found the technique is useful, is hydrating "),J=a("a"),Br=t("HTML tags ("),Ps=a("code"),Ur=t("{@html string}"),Wr=t(")"),zr=t("."),Jr=i(),Ce=a("p"),Kr=t("HTML tags allows you to render arbitrary HTML into the DOM, just like React's "),Oe=a("a"),Qr=t("dangerouslySetInnerHTML"),Gr=t("."),Yr=i(),As=a("div"),Zr=i(),Qt=a("p"),Xr=t("So, why is hydrating HTML tag hard?"),el=i(),Gt=a("p"),sl=t("HTML tag allow multiple elements to be passed in, which makes it hard to determine the bound of the HTML tag when hydrating."),tl=i(),Yt=a("p"),ol=t("Take this example:"),al=i(),qs=a("div"),nl=i(),Zt=a("p"),rl=t("The rendered HTML may look something like this:"),ll=i(),Vs=a("div"),il=i(),L=a("p"),cl=t("Now, can you tell me which elements belong to "),js=a("code"),pl=t("<Header />"),hl=t(", "),Ns=a("code"),dl=t("{@html string}"),kl=t(" and "),$s=a("code"),vl=t("<Footer />"),yl=t("?"),ul=i(),Xt=a("p"),gl=t("Let's walk through it step by step."),fl=i(),P=a("p"),xl=t("Hydrating this component meant that we are going to claim components belong to "),Fs=a("code"),ml=t("<Header>"),wl=t(", "),Bs=a("code"),_l=t("{@html string}"),El=t(" then "),Us=a("code"),bl=t("<Footer>"),Tl=t("."),Il=i(),eo=a("blockquote"),Ws=a("p"),so=a("strong"),Hl=t("Claiming"),Ml=t(" in Svelte means marking the element as part of the component, and hydrate it by providing reactivity to the element."),Dl=i(),H=a("p"),Sl=t("Claiming the "),zs=a("code"),Cl=t("<Header />"),Ol=t(" component, by itself, will claim away "),Js=a("code"),Rl=t("<header>"),Ll=t(" and "),Ks=a("code"),Pl=t("<nav>"),Al=t(", because in "),Qs=a("code"),ql=t("Header.svelte"),Vl=t(" contains these 2 elements:"),jl=i(),Gs=a("div"),Nl=i(),to=a("blockquote"),Y=a("p"),$l=t("You can learn about Svelte "),Ys=a("code"),Fl=t("<slot>"),Bl=i(),Re=a("a"),Ul=t("here"),Wl=i(),K=a("p"),zl=t("Now claiming for "),Zs=a("code"),Jl=t("{@html string}"),Kl=t(" is tricky, because you have no idea when it ends and when is the start of the "),Xs=a("code"),Ql=t("<Footer />"),Gl=t(" component"),Yl=i(),oo=a("p"),Zl=t("If we put a comment as a marker for the end of the HTML tag, it would make things easier:"),Xl=i(),et=a("div"),ei=i(),st=a("div"),Eo=i(),E=a("section"),ao=a("h2"),Le=a("a"),si=t("dangerouslySetInnerHtml"),ti=i(),Pe=a("p"),oi=t("React has "),Ae=a("a"),ai=t("dangerouslySetInnerHTML"),ni=t(" right? Does it have the same issue?"),ri=i(),qe=a("p"),li=t("Apparently not. "),tt=a("code"),ii=t("dangerouslySetInnerHTML"),ci=t(" is always used inside an HTML element, so the parent element is the boundary of the inner HTML content."),pi=i(),ot=a("div"),hi=i(),at=a("div"),di=i(),Q=a("p"),ki=t("Unless "),nt=a("code"),vi=t("dangerouslySetInnerHTML"),yi=t(" is supported on "),rt=a("code"),ui=t("React.Fragment"),gi=t(", then it would not be a problem."),bo=i(),_=a("section"),no=a("h2"),Ve=a("a"),fi=t("React Partial Hydration"),xi=i(),ro=a("p"),mi=t("Partial hydration in React is a mechanism to partially hydrate a server-rendered result while other parts of the pages are still loading the code or data."),wi=i(),je=a("p"),_i=t("This is helpful when you are hydrating a "),Z=a("a"),lt=a("code"),Ei=t("<Suspense>"),bi=t(" component"),Ti=t(". The server-rendered HTML may have rendered based on the code or data, which is yet to be fetched by the component. If React now shows the fallback content during the hydration, the user may see a flash of the actual content, before turning into a loading state until the code or data is ready."),Ii=i(),Ne=a("p"),Hi=t("Partial hydration allows React to not hydrate those "),it=a("code"),Mi=t("<Suspense />"),Di=t(" component until the code or data is ready."),Si=i(),$e=a("p"),Ci=t("So, how does React knows the boundary of "),ct=a("code"),Oi=t("<Suspense />"),Ri=t(" from the server-rendered HTML which it could safely skip, before hydrating them when it's ready?"),Li=i(),Fe=a("p"),Pi=t("It's "),Be=a("a"),Ai=t("the marker comment"),qi=t(" to the rescue again!"),Vi=i(),lo=a("blockquote"),X=a("p"),io=a("strong"),ji=t("Disclaimer"),Ni=t(`
The section above is entirely based on my understanding by reading the `),Ue=a("a"),$i=t("Partial Hydration PR"),Fi=t(", please feel free to correct me if I'm wrong."),To=i(),ee=a("section"),co=a("h2"),We=a("a"),Bi=t("References"),Ui=i(),ze=a("ul"),pt=a("li"),Wi=t("Some interesting React commits and PRs that serves as a good entry point to understand hydration:"),G=a("ul"),po=a("li"),Je=a("a"),zi=t("Remove most comments from HTML generation output"),Ji=i(),ho=a("li"),Ke=a("a"),Ki=t("Warn When The HTML Mismatches in DEV"),Qi=i(),ko=a("li"),Qe=a("a"),Gi=t("Partial Hydration PR"),Yi=i(),ht=a("li"),Zi=t("Some related Svelte PRs"),vo=a("ul"),yo=a("li"),Ge=a("a"),Xi=t("Use SSR rendered as initial html for runtime hydration test"),this.h()},l(p){Eh(f.$$.fragment,p),D=c(p),w=n(p,"SECTION",{});var g=r(w);V=n(g,"H2",{});var nc=r(V);x=n(nc,"A",{href:!0,id:!0});var rc=r(x);S=o(rc,"Disclaimer"),rc.forEach(s),nc.forEach(s),Ze=c(g),C=n(g,"P",{});var se=r(C);Wo=o(se,"I am not going to talk about what is hydration, to know more about client-side rendering, server-side rendering and hydration, please "),re=n(se,"A",{href:!0,rel:!0});var lc=r(re);zo=o(lc,"read this amazing article"),lc.forEach(s),Jo=o(se," by "),le=n(se,"A",{href:!0,rel:!0});var ic=r(le);Ko=o(ic,"Jason Miller"),ic.forEach(s),Qo=o(se," and "),ie=n(se,"A",{href:!0,rel:!0});var cc=r(ie);Go=o(cc,"Addy Osmani"),cc.forEach(s),Yo=o(se,"."),se.forEach(s),Zo=c(g),j=n(g,"P",{});var dt=r(j);Xo=o(dt,"I am not going to share about how to do rehydration in React as well, you can read about that from "),ce=n(dt,"A",{href:!0,rel:!0});var pc=r(ce);ea=o(pc,"here"),pc.forEach(s),sa=o(dt," and "),pe=n(dt,"A",{href:!0,rel:!0});var hc=r(pe);ta=o(hc,"here"),hc.forEach(s),oa=o(dt,"."),dt.forEach(s),aa=c(g),Et=n(g,"P",{});var dc=r(Et);na=o(dc,'I am going to share a story, how I "understand" more about the mechanics of rehydration in React, and how I apply it in real life.'),dc.forEach(s),g.forEach(s),xo=c(p),m=n(p,"SECTION",{});var b=r(m);bt=n(b,"H2",{});var kc=r(bt);he=n(kc,"A",{href:!0,id:!0});var vc=r(he);ra=o(vc,"Background"),vc.forEach(s),kc.forEach(s),la=c(b),Tt=n(b,"P",{});var yc=r(Tt);ia=o(yc,"Recently, I was bewildered by a React hydration warning:"),yc.forEach(s),ca=c(b),Xe=n(b,"DIV",{class:!0});var Jh=r(Xe);Jh.forEach(s),pa=c(b),It=n(b,"P",{});var uc=r(It);ha=o(uc,"To give you a sense of the situation, this is the component I was trying to rehydrate:"),uc.forEach(s),da=c(b),es=n(b,"DIV",{class:!0});var Kh=r(es);Kh.forEach(s),ka=c(b),Ht=n(b,"P",{});var gc=r(Ht);va=o(gc,"Although React warned about the mismatch in the console, the hydrated app still worked fine."),gc.forEach(s),ya=c(b),Mt=n(b,"P",{});var fc=r(Mt);ua=o(fc,"So I can ignore it. \u{1F648}"),fc.forEach(s),ga=c(b),Dt=n(b,"P",{});var xc=r(Dt);fa=o(xc,"Still, my curiosity made me dig deeper, to find out the reason behind it."),xc.forEach(s),b.forEach(s),mo=c(p),k=n(p,"SECTION",{});var v=r(k);St=n(v,"H2",{});var mc=r(St);de=n(mc,"A",{href:!0,id:!0});var wc=r(de);xa=o(wc,"The investigation"),wc.forEach(s),mc.forEach(s),ma=c(v),Ct=n(v,"P",{});var _c=r(Ct);wa=o(_c,"So, the first thing I looked at, was the server-rendered HTML, which will be hydrated by React later."),_c.forEach(s),_a=c(v),ss=n(v,"DIV",{class:!0});var Qh=r(ss);Qh.forEach(s),Ea=c(v),Ot=n(v,"P",{});var Ec=r(Ot);ba=o(Ec,"Looks pretty normal right?"),Ec.forEach(s),Ta=c(v),Rt=n(v,"P",{});var bc=r(Rt);Ia=o(bc,"Somehow, my gut feeling telling me to look at the DOM with and without hydration next:"),bc.forEach(s),Ha=c(v),ts=n(v,"DIV",{class:!0});var Gh=r(ts);Gh.forEach(s),Ma=c(v),os=n(v,"DIV",{class:!0});var Yh=r(os);Yh.forEach(s),Da=c(v),Lt=n(v,"P",{});var Tc=r(Lt);Sa=o(Tc,"A-ha! Noticed the difference in the DOM?"),Tc.forEach(s),Ca=c(v),O=n(v,"P",{});var te=r(O);Oa=o(te,"Although they both looked visually the same, but in the DOM created by the initial HTML has only 1 text node, "),as=n(te,"CODE",{class:!0});var Ic=r(as);Ra=o(Ic,'"Count: 0"'),Ic.forEach(s),La=o(te,", but the DOM after hydration has 2 text nodes, "),ns=n(te,"CODE",{class:!0});var Hc=r(ns);Pa=o(Hc,'"Count: "'),Hc.forEach(s),Aa=o(te," and "),rs=n(te,"CODE",{class:!0});var Mc=r(rs);qa=o(Mc,'"0"'),Mc.forEach(s),Va=o(te,"."),te.forEach(s),ja=c(v),ke=n(v,"P",{});var Ho=r(ke);Na=o(Ho,"Why is that so? The secret lies in the component "),ls=n(Ho,"CODE",{class:!0});var Dc=r(ls);$a=o(Dc,"App"),Dc.forEach(s),Fa=o(Ho,"."),Ho.forEach(s),Ba=c(v),R=n(v,"P",{});var oe=r(R);Ua=o(oe,"The functional component "),is=n(oe,"CODE",{class:!0});var Sc=r(is);Wa=o(Sc,"App"),Sc.forEach(s),za=o(oe," returns the following React element when "),cs=n(oe,"CODE",{class:!0});var Cc=r(cs);Ja=o(Cc,"count"),Cc.forEach(s),Ka=o(oe," is "),ps=n(oe,"CODE",{class:!0});var Oc=r(ps);Qa=o(Oc,"0"),Oc.forEach(s),Ga=o(oe,":"),oe.forEach(s),Ya=c(v),hs=n(v,"DIV",{class:!0});var Zh=r(hs);Zh.forEach(s),Za=c(v),Pt=n(v,"P",{});var Rc=r(Pt);Xa=o(Rc,"which itself is a plain JavaScript object, which is roughly:"),Rc.forEach(s),en=c(v),ds=n(v,"DIV",{class:!0});var Xh=r(ds);Xh.forEach(s),sn=c(v),ve=n(v,"P",{});var Mo=r(ve);tn=o(Mo,"Noticed the "),ks=n(Mo,"CODE",{class:!0});var Lc=r(ks);on=o(Lc,"div"),Lc.forEach(s),an=o(Mo," has 2 children? That's why it rendered 2 text nodes!"),Mo.forEach(s),nn=c(v),ye=n(v,"P",{});var Do=r(ye);rn=o(Do,"So, when React tries to hydrate the "),vs=n(Do,"CODE",{class:!0});var Pc=r(vs);ln=o(Pc,"div"),Pc.forEach(s),cn=o(Do," from SSR, it starts with comparing all the props from the React element and the attributes from the DOM. Then, it compares the element's children."),Do.forEach(s),pn=c(v),At=n(v,"P",{});var Ac=r(At);hn=o(Ac,"Based on the React element, React expects 2 text nodes, but the DOM only has 1. So it tries to match with the 1st text node, and create the 2nd one."),Ac.forEach(s),dn=c(v),N=n(v,"P",{});var kt=r(N);kn=o(kt,"It is when the matching happens, where React realizes that it is expecting the text node to contain "),ys=n(kt,"CODE",{class:!0});var qc=r(ys);vn=o(qc,'"Count: "'),qc.forEach(s),yn=o(kt,", but the server content is "),us=n(kt,"CODE",{class:!0});var Vc=r(us);un=o(Vc,'"Count: 0"'),Vc.forEach(s),gn=o(kt,", thus the error message:"),kt.forEach(s),fn=c(v),gs=n(v,"DIV",{class:!0});var ed=r(gs);ed.forEach(s),xn=c(v),$=n(v,"P",{});var vt=r($);mn=o(vt,"Then, React patches the text node, by setting the content to the expected "),fs=n(vt,"CODE",{class:!0});var jc=r(fs);wn=o(jc,'"Count: "'),jc.forEach(s),_n=o(vt,", and created another text node, "),xs=n(vt,"CODE",{class:!0});var Nc=r(xs);En=o(Nc,'"0"'),Nc.forEach(s),bn=o(vt,", so visually there's no change, but in the DOM, React has changed the text content and created a new text node."),vt.forEach(s),v.forEach(s),wo=c(p),y=n(p,"SECTION",{});var u=r(y);qt=n(u,"H2",{});var $c=r(qt);ue=n($c,"A",{href:!0,id:!0});var Fc=r(ue);Tn=o(Fc,"Is this a bug?"),Fc.forEach(s),$c.forEach(s),In=c(u),Vt=n(u,"P",{});var Bc=r(Vt);Hn=o(Bc,"So, is this a React hydration bug? or is this an expected behavior?"),Bc.forEach(s),Mn=c(u),jt=n(u,"P",{});var Uc=r(jt);Dn=o(Uc,"Turns out that, it was my bug \u{1F92E}\u{1F92E}."),Uc.forEach(s),Sn=c(u),F=n(u,"P",{});var yt=r(F);Cn=o(yt,"I used "),ge=n(yt,"A",{href:!0,rel:!0});var Wc=r(ge);ms=n(Wc,"CODE",{class:!0});var zc=r(ms);On=o(zc,"ReactDOMServer.renderToStaticMarkup"),zc.forEach(s),Wc.forEach(s),Rn=o(yt," instead of "),fe=n(yt,"A",{href:!0,rel:!0});var Jc=r(fe);ws=n(Jc,"CODE",{class:!0});var Kc=r(ws);Ln=o(Kc,"ReactDOMServer.renderToString"),Kc.forEach(s),Jc.forEach(s),Pn=o(yt,"."),yt.forEach(s),An=c(u),Nt=n(u,"P",{});var Qc=r(Nt);qn=o(Qc,"The doc says clearly,"),Qc.forEach(s),Vn=c(u),$t=n(u,"BLOCKQUOTE",{});var Gc=r($t);B=n(Gc,"P",{});var ut=r(B);jn=o(ut,"If you plan to use React on the client to make the markup interactive, do not use this method. Instead, use "),_s=n(ut,"CODE",{class:!0});var Yc=r(_s);Nn=o(Yc,"renderToString"),Yc.forEach(s),$n=o(ut," on the server and "),Es=n(ut,"CODE",{class:!0});var Zc=r(Es);Fn=o(Zc,"ReactDOM.hydrate()"),Zc.forEach(s),Bn=o(ut," on the client."),ut.forEach(s),Gc.forEach(s),Un=c(u),Ft=n(u,"P",{});var Xc=r(Ft);Wn=o(Xc,"\u{1F648}"),Xc.forEach(s),zn=c(u),U=n(u,"P",{});var gt=r(U);Jn=o(gt,"So, what is the difference between "),xe=n(gt,"A",{href:!0,rel:!0});var ep=r(xe);bs=n(ep,"CODE",{class:!0});var sp=r(bs);Kn=o(sp,"ReactDOMServer.renderToStaticMarkup"),sp.forEach(s),ep.forEach(s),Qn=o(gt," and "),me=n(gt,"A",{href:!0,rel:!0});var tp=r(me);Ts=n(tp,"CODE",{class:!0});var op=r(Ts);Gn=o(op,"ReactDOMServer.renderToString"),op.forEach(s),tp.forEach(s),Yn=o(gt," ?"),gt.forEach(s),Zn=c(u),we=n(u,"P",{});var So=r(we);Xn=o(So,"This is what "),_e=n(So,"A",{href:!0,rel:!0});var ap=r(_e);Is=n(ap,"CODE",{class:!0});var np=r(Is);er=o(np,"ReactDOMServer.renderToString"),np.forEach(s),ap.forEach(s),sr=o(So," generates:"),So.forEach(s),tr=c(u),Hs=n(u,"DIV",{class:!0});var sd=r(Hs);sd.forEach(s),or=c(u),W=n(u,"P",{});var ft=r(W);ar=o(ft,"It adds a "),Ms=n(ft,"CODE",{class:!0});var rp=r(Ms);nr=o(rp,"data-reactroot"),rp.forEach(s),rr=o(ft," which is used by React internally. (From what I read from the code, it seemed to be used by React only to warn legacy code to "),A=n(ft,"A",{href:!0,rel:!0});var uo=r(A);lr=o(uo,"switch from "),Ds=n(uo,"CODE",{class:!0});var lp=r(Ds);ir=o(lp,"render()"),lp.forEach(s),cr=o(uo," to "),Ss=n(uo,"CODE",{class:!0});var ip=r(Ss);pr=o(ip,"hydrate()"),ip.forEach(s),uo.forEach(s),hr=o(ft," before stopping support in React v17, correct me if I'm wrong)."),ft.forEach(s),dr=c(u),z=n(u,"P",{});var xt=r(z);kr=o(xt,"Besides, it adds a comment in between "),Cs=n(xt,"CODE",{class:!0});var cp=r(Cs);vr=o(cp,'"Count: "'),cp.forEach(s),yr=o(xt," and "),Os=n(xt,"CODE",{class:!0});var pp=r(Os);ur=o(pp,'"0"'),pp.forEach(s),gr=o(xt,", so the initial DOM looks like this:"),xt.forEach(s),fr=c(u),Rs=n(u,"DIV",{class:!0});var td=r(Rs);td.forEach(s),xr=c(u),Ee=n(u,"P",{});var Co=r(Ee);mr=o(Co,"A "),be=n(Co,"A",{href:!0,rel:!0});var hp=r(be);wr=o(hp,"comment node"),hp.forEach(s),_r=o(Co," sits in between 2 text nodes, nicely separate the boundary of the 2 text nodes."),Co.forEach(s),Er=c(u),Bt=n(u,"P",{});var dp=r(Bt);br=o(dp,"As you could expect, this time around, there's no more hydration error."),dp.forEach(s),Tr=c(u),Te=n(u,"P",{});var Oo=r(Te);Ir=o(Oo,"The initial DOM provided 2 text nodes as React would expect, and "),Ie=n(Oo,"A",{href:!0,rel:!0});var kp=r(Ie);Hr=o(kp,"React would skip comment nodes and only hydrate element nodes and text nodes"),kp.forEach(s),Mr=o(Oo,"."),Oo.forEach(s),u.forEach(s),_o=c(p),h=n(p,"SECTION",{});var d=r(h);Ut=n(d,"H2",{});var vp=r(Ut);He=n(vp,"A",{href:!0,id:!0});var yp=r(He);Dr=o(yp,"Apply what I've learned"),yp.forEach(s),vp.forEach(s),Sr=c(d),Me=n(d,"P",{});var Ro=r(Me);Cr=o(Ro,"So, the next obvious place to apply what I've learned is "),De=n(Ro,"A",{href:!0,rel:!0});var up=r(De);Or=o(up,"Svelte"),up.forEach(s),Rr=o(Ro,"."),Ro.forEach(s),Lr=c(d),Wt=n(d,"P",{});var gp=r(Wt);Pr=o(gp,"I found out there are 2 places that Svelte can use this technique for better hydration."),gp.forEach(s),Ar=c(d),zt=n(d,"P",{});var fp=r(zt);qr=o(fp,'The first is the hydrating text node. I found out that Svelte hydrates neighboring text nodes the same way as I described as "a bug", modifying the 1st text node and creating the 2nd text node. It gets "worse" when you have more neighboring text nodes:'),fp.forEach(s),Vr=c(d),Ls=n(d,"DIV",{class:!0});var od=r(Ls);od.forEach(s),jr=c(d),Jt=n(d,"P",{});var xp=r(Jt);Kt=n(xp,"EM",{});var mp=r(Kt);Nr=o(mp,"5 neighboring text nodes"),mp.forEach(s),xp.forEach(s),$r=c(d),Se=n(d,"P",{});var Lo=r(Se);Fr=o(Lo,"The second place I found the technique is useful, is hydrating "),J=n(Lo,"A",{href:!0,rel:!0});var Po=r(J);Br=o(Po,"HTML tags ("),Ps=n(Po,"CODE",{class:!0});var wp=r(Ps);Ur=o(wp,"{@html string}"),wp.forEach(s),Wr=o(Po,")"),Po.forEach(s),zr=o(Lo,"."),Lo.forEach(s),Jr=c(d),Ce=n(d,"P",{});var Ao=r(Ce);Kr=o(Ao,"HTML tags allows you to render arbitrary HTML into the DOM, just like React's "),Oe=n(Ao,"A",{href:!0,rel:!0});var _p=r(Oe);Qr=o(_p,"dangerouslySetInnerHTML"),_p.forEach(s),Gr=o(Ao,"."),Ao.forEach(s),Yr=c(d),As=n(d,"DIV",{class:!0});var ad=r(As);ad.forEach(s),Zr=c(d),Qt=n(d,"P",{});var Ep=r(Qt);Xr=o(Ep,"So, why is hydrating HTML tag hard?"),Ep.forEach(s),el=c(d),Gt=n(d,"P",{});var bp=r(Gt);sl=o(bp,"HTML tag allow multiple elements to be passed in, which makes it hard to determine the bound of the HTML tag when hydrating."),bp.forEach(s),tl=c(d),Yt=n(d,"P",{});var Tp=r(Yt);ol=o(Tp,"Take this example:"),Tp.forEach(s),al=c(d),qs=n(d,"DIV",{class:!0});var nd=r(qs);nd.forEach(s),nl=c(d),Zt=n(d,"P",{});var Ip=r(Zt);rl=o(Ip,"The rendered HTML may look something like this:"),Ip.forEach(s),ll=c(d),Vs=n(d,"DIV",{class:!0});var rd=r(Vs);rd.forEach(s),il=c(d),L=n(d,"P",{});var ae=r(L);cl=o(ae,"Now, can you tell me which elements belong to "),js=n(ae,"CODE",{class:!0});var Hp=r(js);pl=o(Hp,"<Header />"),Hp.forEach(s),hl=o(ae,", "),Ns=n(ae,"CODE",{class:!0});var Mp=r(Ns);dl=o(Mp,"{@html string}"),Mp.forEach(s),kl=o(ae," and "),$s=n(ae,"CODE",{class:!0});var Dp=r($s);vl=o(Dp,"<Footer />"),Dp.forEach(s),yl=o(ae,"?"),ae.forEach(s),ul=c(d),Xt=n(d,"P",{});var Sp=r(Xt);gl=o(Sp,"Let's walk through it step by step."),Sp.forEach(s),fl=c(d),P=n(d,"P",{});var ne=r(P);xl=o(ne,"Hydrating this component meant that we are going to claim components belong to "),Fs=n(ne,"CODE",{class:!0});var Cp=r(Fs);ml=o(Cp,"<Header>"),Cp.forEach(s),wl=o(ne,", "),Bs=n(ne,"CODE",{class:!0});var Op=r(Bs);_l=o(Op,"{@html string}"),Op.forEach(s),El=o(ne," then "),Us=n(ne,"CODE",{class:!0});var Rp=r(Us);bl=o(Rp,"<Footer>"),Rp.forEach(s),Tl=o(ne,"."),ne.forEach(s),Il=c(d),eo=n(d,"BLOCKQUOTE",{});var Lp=r(eo);Ws=n(Lp,"P",{});var ec=r(Ws);so=n(ec,"STRONG",{});var Pp=r(so);Hl=o(Pp,"Claiming"),Pp.forEach(s),Ml=o(ec," in Svelte means marking the element as part of the component, and hydrate it by providing reactivity to the element."),ec.forEach(s),Lp.forEach(s),Dl=c(d),H=n(d,"P",{});var q=r(H);Sl=o(q,"Claiming the "),zs=n(q,"CODE",{class:!0});var Ap=r(zs);Cl=o(Ap,"<Header />"),Ap.forEach(s),Ol=o(q," component, by itself, will claim away "),Js=n(q,"CODE",{class:!0});var qp=r(Js);Rl=o(qp,"<header>"),qp.forEach(s),Ll=o(q," and "),Ks=n(q,"CODE",{class:!0});var Vp=r(Ks);Pl=o(Vp,"<nav>"),Vp.forEach(s),Al=o(q,", because in "),Qs=n(q,"CODE",{class:!0});var jp=r(Qs);ql=o(jp,"Header.svelte"),jp.forEach(s),Vl=o(q," contains these 2 elements:"),q.forEach(s),jl=c(d),Gs=n(d,"DIV",{class:!0});var ld=r(Gs);ld.forEach(s),Nl=c(d),to=n(d,"BLOCKQUOTE",{});var Np=r(to);Y=n(Np,"P",{});var go=r(Y);$l=o(go,"You can learn about Svelte "),Ys=n(go,"CODE",{class:!0});var $p=r(Ys);Fl=o($p,"<slot>"),$p.forEach(s),Bl=c(go),Re=n(go,"A",{href:!0,rel:!0});var Fp=r(Re);Ul=o(Fp,"here"),Fp.forEach(s),go.forEach(s),Np.forEach(s),Wl=c(d),K=n(d,"P",{});var mt=r(K);zl=o(mt,"Now claiming for "),Zs=n(mt,"CODE",{class:!0});var Bp=r(Zs);Jl=o(Bp,"{@html string}"),Bp.forEach(s),Kl=o(mt," is tricky, because you have no idea when it ends and when is the start of the "),Xs=n(mt,"CODE",{class:!0});var Up=r(Xs);Ql=o(Up,"<Footer />"),Up.forEach(s),Gl=o(mt," component"),mt.forEach(s),Yl=c(d),oo=n(d,"P",{});var Wp=r(oo);Zl=o(Wp,"If we put a comment as a marker for the end of the HTML tag, it would make things easier:"),Wp.forEach(s),Xl=c(d),et=n(d,"DIV",{class:!0});var id=r(et);id.forEach(s),ei=c(d),st=n(d,"DIV",{class:!0});var cd=r(st);cd.forEach(s),d.forEach(s),Eo=c(p),E=n(p,"SECTION",{});var M=r(E);ao=n(M,"H2",{});var zp=r(ao);Le=n(zp,"A",{href:!0,id:!0});var Jp=r(Le);si=o(Jp,"dangerouslySetInnerHtml"),Jp.forEach(s),zp.forEach(s),ti=c(M),Pe=n(M,"P",{});var qo=r(Pe);oi=o(qo,"React has "),Ae=n(qo,"A",{href:!0,rel:!0});var Kp=r(Ae);ai=o(Kp,"dangerouslySetInnerHTML"),Kp.forEach(s),ni=o(qo," right? Does it have the same issue?"),qo.forEach(s),ri=c(M),qe=n(M,"P",{});var Vo=r(qe);li=o(Vo,"Apparently not. "),tt=n(Vo,"CODE",{class:!0});var Qp=r(tt);ii=o(Qp,"dangerouslySetInnerHTML"),Qp.forEach(s),ci=o(Vo," is always used inside an HTML element, so the parent element is the boundary of the inner HTML content."),Vo.forEach(s),pi=c(M),ot=n(M,"DIV",{class:!0});var pd=r(ot);pd.forEach(s),hi=c(M),at=n(M,"DIV",{class:!0});var hd=r(at);hd.forEach(s),di=c(M),Q=n(M,"P",{});var wt=r(Q);ki=o(wt,"Unless "),nt=n(wt,"CODE",{class:!0});var Gp=r(nt);vi=o(Gp,"dangerouslySetInnerHTML"),Gp.forEach(s),yi=o(wt," is supported on "),rt=n(wt,"CODE",{class:!0});var Yp=r(rt);ui=o(Yp,"React.Fragment"),Yp.forEach(s),gi=o(wt,", then it would not be a problem."),wt.forEach(s),M.forEach(s),bo=c(p),_=n(p,"SECTION",{});var I=r(_);no=n(I,"H2",{});var Zp=r(no);Ve=n(Zp,"A",{href:!0,id:!0});var Xp=r(Ve);fi=o(Xp,"React Partial Hydration"),Xp.forEach(s),Zp.forEach(s),xi=c(I),ro=n(I,"P",{});var eh=r(ro);mi=o(eh,"Partial hydration in React is a mechanism to partially hydrate a server-rendered result while other parts of the pages are still loading the code or data."),eh.forEach(s),wi=c(I),je=n(I,"P",{});var jo=r(je);_i=o(jo,"This is helpful when you are hydrating a "),Z=n(jo,"A",{href:!0,rel:!0});var sc=r(Z);lt=n(sc,"CODE",{class:!0});var sh=r(lt);Ei=o(sh,"<Suspense>"),sh.forEach(s),bi=o(sc," component"),sc.forEach(s),Ti=o(jo,". The server-rendered HTML may have rendered based on the code or data, which is yet to be fetched by the component. If React now shows the fallback content during the hydration, the user may see a flash of the actual content, before turning into a loading state until the code or data is ready."),jo.forEach(s),Ii=c(I),Ne=n(I,"P",{});var No=r(Ne);Hi=o(No,"Partial hydration allows React to not hydrate those "),it=n(No,"CODE",{class:!0});var th=r(it);Mi=o(th,"<Suspense />"),th.forEach(s),Di=o(No," component until the code or data is ready."),No.forEach(s),Si=c(I),$e=n(I,"P",{});var $o=r($e);Ci=o($o,"So, how does React knows the boundary of "),ct=n($o,"CODE",{class:!0});var oh=r(ct);Oi=o(oh,"<Suspense />"),oh.forEach(s),Ri=o($o," from the server-rendered HTML which it could safely skip, before hydrating them when it's ready?"),$o.forEach(s),Li=c(I),Fe=n(I,"P",{});var Fo=r(Fe);Pi=o(Fo,"It's "),Be=n(Fo,"A",{href:!0,rel:!0});var ah=r(Be);Ai=o(ah,"the marker comment"),ah.forEach(s),qi=o(Fo," to the rescue again!"),Fo.forEach(s),Vi=c(I),lo=n(I,"BLOCKQUOTE",{});var nh=r(lo);X=n(nh,"P",{});var fo=r(X);io=n(fo,"STRONG",{});var rh=r(io);ji=o(rh,"Disclaimer"),rh.forEach(s),Ni=o(fo,`
The section above is entirely based on my understanding by reading the `),Ue=n(fo,"A",{href:!0,rel:!0});var lh=r(Ue);$i=o(lh,"Partial Hydration PR"),lh.forEach(s),Fi=o(fo,", please feel free to correct me if I'm wrong."),fo.forEach(s),nh.forEach(s),I.forEach(s),To=c(p),ee=n(p,"SECTION",{});var Bo=r(ee);co=n(Bo,"H2",{});var ih=r(co);We=n(ih,"A",{href:!0,id:!0});var ch=r(We);Bi=o(ch,"References"),ch.forEach(s),ih.forEach(s),Ui=c(Bo),ze=n(Bo,"UL",{});var Uo=r(ze);pt=n(Uo,"LI",{});var tc=r(pt);Wi=o(tc,"Some interesting React commits and PRs that serves as a good entry point to understand hydration:"),G=n(tc,"UL",{});var _t=r(G);po=n(_t,"LI",{});var ph=r(po);Je=n(ph,"A",{href:!0,rel:!0});var hh=r(Je);zi=o(hh,"Remove most comments from HTML generation output"),hh.forEach(s),ph.forEach(s),Ji=c(_t),ho=n(_t,"LI",{});var dh=r(ho);Ke=n(dh,"A",{href:!0,rel:!0});var kh=r(Ke);Ki=o(kh,"Warn When The HTML Mismatches in DEV"),kh.forEach(s),dh.forEach(s),Qi=c(_t),ko=n(_t,"LI",{});var vh=r(ko);Qe=n(vh,"A",{href:!0,rel:!0});var yh=r(Qe);Gi=o(yh,"Partial Hydration PR"),yh.forEach(s),vh.forEach(s),_t.forEach(s),tc.forEach(s),Yi=c(Uo),ht=n(Uo,"LI",{});var oc=r(ht);Zi=o(oc,"Some related Svelte PRs"),vo=n(oc,"UL",{});var uh=r(vo);yo=n(uh,"LI",{});var gh=r(yo);Ge=n(gh,"A",{href:!0,rel:!0});var fh=r(Ge);Xi=o(fh,"Use SSR rendered as initial html for runtime hydration test"),fh.forEach(s),gh.forEach(s),uh.forEach(s),oc.forEach(s),Uo.forEach(s),Bo.forEach(s),this.h()},h(){l(x,"href","#disclaimer"),l(x,"id","disclaimer"),l(re,"href","https://developers.google.com/web/updates/2019/02/rendering-on-the-web"),l(re,"rel","nofollow"),l(le,"href","https://twitter.com/_developit"),l(le,"rel","nofollow"),l(ie,"href","https://twitter.com/addyosmani"),l(ie,"rel","nofollow"),l(ce,"href","https://hackernoon.com/whats-new-with-server-side-rendering-in-react-16-9b0d78585d67"),l(ce,"rel","nofollow"),l(pe,"href","https://www.freecodecamp.org/news/demystifying-reacts-server-side-render-de335d408fe4/"),l(pe,"rel","nofollow"),l(he,"href","#background"),l(he,"id","background"),l(Xe,"class","code-section"),l(es,"class","code-section"),l(de,"href","#the-investigation"),l(de,"id","the-investigation"),l(ss,"class","code-section"),l(ts,"class","code-section"),l(os,"class","code-section"),l(as,"class","inline"),l(ns,"class","inline"),l(rs,"class","inline"),l(ls,"class","inline"),l(is,"class","inline"),l(cs,"class","inline"),l(ps,"class","inline"),l(hs,"class","code-section"),l(ds,"class","code-section"),l(ks,"class","inline"),l(vs,"class","inline"),l(ys,"class","inline"),l(us,"class","inline"),l(gs,"class","code-section"),l(fs,"class","inline"),l(xs,"class","inline"),l(ue,"href","#is-this-a-bug"),l(ue,"id","is-this-a-bug"),l(ms,"class","inline"),l(ge,"href","https://reactjs.org/docs/react-dom-server.html#rendertostaticmarkup"),l(ge,"rel","nofollow"),l(ws,"class","inline"),l(fe,"href","https://reactjs.org/docs/react-dom-server.html#rendertostring"),l(fe,"rel","nofollow"),l(_s,"class","inline"),l(Es,"class","inline"),l(bs,"class","inline"),l(xe,"href","https://reactjs.org/docs/react-dom-server.html#rendertostaticmarkup"),l(xe,"rel","nofollow"),l(Ts,"class","inline"),l(me,"href","https://reactjs.org/docs/react-dom-server.html#rendertostring"),l(me,"rel","nofollow"),l(Is,"class","inline"),l(_e,"href","https://reactjs.org/docs/react-dom-server.html#rendertostring"),l(_e,"rel","nofollow"),l(Hs,"class","code-section"),l(Ms,"class","inline"),l(Ds,"class","inline"),l(Ss,"class","inline"),l(A,"href","https://hackernoon.com/whats-new-with-server-side-rendering-in-react-16-9b0d78585d67"),l(A,"rel","nofollow"),l(Cs,"class","inline"),l(Os,"class","inline"),l(Rs,"class","code-section"),l(be,"href","https://developer.mozilla.org/en-US/docs/Web/API/Comment"),l(be,"rel","nofollow"),l(Ie,"href","https://github.com/facebook/react/blob/1a6d8179b6dd427fdf7ee50d5ac45ae5a40979eb/packages/react-dom/src/client/ReactDOMHostConfig.js#L703-L709"),l(Ie,"rel","nofollow"),l(He,"href","#apply-what-i-ve-learned"),l(He,"id","apply-what-i-ve-learned"),l(De,"href","http://github.com/sveltejs/svelte"),l(De,"rel","nofollow"),l(Ls,"class","code-section"),l(Ps,"class","inline"),l(J,"href","https://svelte.dev/tutorial/html-tags"),l(J,"rel","nofollow"),l(Oe,"href","https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml"),l(Oe,"rel","nofollow"),l(As,"class","code-section"),l(qs,"class","code-section"),l(Vs,"class","code-section"),l(js,"class","inline"),l(Ns,"class","inline"),l($s,"class","inline"),l(Fs,"class","inline"),l(Bs,"class","inline"),l(Us,"class","inline"),l(zs,"class","inline"),l(Js,"class","inline"),l(Ks,"class","inline"),l(Qs,"class","inline"),l(Gs,"class","code-section"),l(Ys,"class","inline"),l(Re,"href","https://svelte.dev/tutorial/slots"),l(Re,"rel","nofollow"),l(Zs,"class","inline"),l(Xs,"class","inline"),l(et,"class","code-section"),l(st,"class","code-section"),l(Le,"href","#dangerouslysetinnerhtml"),l(Le,"id","dangerouslysetinnerhtml"),l(Ae,"href","https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml"),l(Ae,"rel","nofollow"),l(tt,"class","inline"),l(ot,"class","code-section"),l(at,"class","code-section"),l(nt,"class","inline"),l(rt,"class","inline"),l(Ve,"href","#react-partial-hydration"),l(Ve,"id","react-partial-hydration"),l(lt,"class","inline"),l(Z,"href","https://reactjs.org/docs/react-api.html#reactsuspense"),l(Z,"rel","nofollow"),l(it,"class","inline"),l(ct,"class","inline"),l(Be,"href","https://github.com/facebook/react/blob/1a6d8179b6dd427fdf7ee50d5ac45ae5a40979eb/packages/react-dom/src/client/ReactDOMHostConfig.js#L131-L134"),l(Be,"rel","nofollow"),l(Ue,"href","https://github.com/facebook/react/pull/14717"),l(Ue,"rel","nofollow"),l(We,"href","#references"),l(We,"id","references"),l(Je,"href","https://github.com/facebook/react/commit/e955008b9bbee93fcaf423d4afaf4d22023e2c3f"),l(Je,"rel","nofollow"),l(Ke,"href","https://github.com/facebook/react/pull/10026/files"),l(Ke,"rel","nofollow"),l(Qe,"href","https://github.com/facebook/react/pull/14717"),l(Qe,"rel","nofollow"),l(Ge,"href","https://github.com/sveltejs/svelte/pull/4444"),l(Ge,"rel","nofollow")},m(p,g){bh(f,p,g),T(p,D,g),T(p,w,g),e(w,V),e(V,x),e(x,S),e(w,Ze),e(w,C),e(C,Wo),e(C,re),e(re,zo),e(C,Jo),e(C,le),e(le,Ko),e(C,Qo),e(C,ie),e(ie,Go),e(C,Yo),e(w,Zo),e(w,j),e(j,Xo),e(j,ce),e(ce,ea),e(j,sa),e(j,pe),e(pe,ta),e(j,oa),e(w,aa),e(w,Et),e(Et,na),T(p,xo,g),T(p,m,g),e(m,bt),e(bt,he),e(he,ra),e(m,la),e(m,Tt),e(Tt,ia),e(m,ca),e(m,Xe),Xe.innerHTML=Mh,e(m,pa),e(m,It),e(It,ha),e(m,da),e(m,es),es.innerHTML=Dh,e(m,ka),e(m,Ht),e(Ht,va),e(m,ya),e(m,Mt),e(Mt,ua),e(m,ga),e(m,Dt),e(Dt,fa),T(p,mo,g),T(p,k,g),e(k,St),e(St,de),e(de,xa),e(k,ma),e(k,Ct),e(Ct,wa),e(k,_a),e(k,ss),ss.innerHTML=Sh,e(k,Ea),e(k,Ot),e(Ot,ba),e(k,Ta),e(k,Rt),e(Rt,Ia),e(k,Ha),e(k,ts),ts.innerHTML=Ch,e(k,Ma),e(k,os),os.innerHTML=Oh,e(k,Da),e(k,Lt),e(Lt,Sa),e(k,Ca),e(k,O),e(O,Oa),e(O,as),e(as,Ra),e(O,La),e(O,ns),e(ns,Pa),e(O,Aa),e(O,rs),e(rs,qa),e(O,Va),e(k,ja),e(k,ke),e(ke,Na),e(ke,ls),e(ls,$a),e(ke,Fa),e(k,Ba),e(k,R),e(R,Ua),e(R,is),e(is,Wa),e(R,za),e(R,cs),e(cs,Ja),e(R,Ka),e(R,ps),e(ps,Qa),e(R,Ga),e(k,Ya),e(k,hs),hs.innerHTML=Rh,e(k,Za),e(k,Pt),e(Pt,Xa),e(k,en),e(k,ds),ds.innerHTML=Lh,e(k,sn),e(k,ve),e(ve,tn),e(ve,ks),e(ks,on),e(ve,an),e(k,nn),e(k,ye),e(ye,rn),e(ye,vs),e(vs,ln),e(ye,cn),e(k,pn),e(k,At),e(At,hn),e(k,dn),e(k,N),e(N,kn),e(N,ys),e(ys,vn),e(N,yn),e(N,us),e(us,un),e(N,gn),e(k,fn),e(k,gs),gs.innerHTML=Ph,e(k,xn),e(k,$),e($,mn),e($,fs),e(fs,wn),e($,_n),e($,xs),e(xs,En),e($,bn),T(p,wo,g),T(p,y,g),e(y,qt),e(qt,ue),e(ue,Tn),e(y,In),e(y,Vt),e(Vt,Hn),e(y,Mn),e(y,jt),e(jt,Dn),e(y,Sn),e(y,F),e(F,Cn),e(F,ge),e(ge,ms),e(ms,On),e(F,Rn),e(F,fe),e(fe,ws),e(ws,Ln),e(F,Pn),e(y,An),e(y,Nt),e(Nt,qn),e(y,Vn),e(y,$t),e($t,B),e(B,jn),e(B,_s),e(_s,Nn),e(B,$n),e(B,Es),e(Es,Fn),e(B,Bn),e(y,Un),e(y,Ft),e(Ft,Wn),e(y,zn),e(y,U),e(U,Jn),e(U,xe),e(xe,bs),e(bs,Kn),e(U,Qn),e(U,me),e(me,Ts),e(Ts,Gn),e(U,Yn),e(y,Zn),e(y,we),e(we,Xn),e(we,_e),e(_e,Is),e(Is,er),e(we,sr),e(y,tr),e(y,Hs),Hs.innerHTML=Ah,e(y,or),e(y,W),e(W,ar),e(W,Ms),e(Ms,nr),e(W,rr),e(W,A),e(A,lr),e(A,Ds),e(Ds,ir),e(A,cr),e(A,Ss),e(Ss,pr),e(W,hr),e(y,dr),e(y,z),e(z,kr),e(z,Cs),e(Cs,vr),e(z,yr),e(z,Os),e(Os,ur),e(z,gr),e(y,fr),e(y,Rs),Rs.innerHTML=qh,e(y,xr),e(y,Ee),e(Ee,mr),e(Ee,be),e(be,wr),e(Ee,_r),e(y,Er),e(y,Bt),e(Bt,br),e(y,Tr),e(y,Te),e(Te,Ir),e(Te,Ie),e(Ie,Hr),e(Te,Mr),T(p,_o,g),T(p,h,g),e(h,Ut),e(Ut,He),e(He,Dr),e(h,Sr),e(h,Me),e(Me,Cr),e(Me,De),e(De,Or),e(Me,Rr),e(h,Lr),e(h,Wt),e(Wt,Pr),e(h,Ar),e(h,zt),e(zt,qr),e(h,Vr),e(h,Ls),Ls.innerHTML=Vh,e(h,jr),e(h,Jt),e(Jt,Kt),e(Kt,Nr),e(h,$r),e(h,Se),e(Se,Fr),e(Se,J),e(J,Br),e(J,Ps),e(Ps,Ur),e(J,Wr),e(Se,zr),e(h,Jr),e(h,Ce),e(Ce,Kr),e(Ce,Oe),e(Oe,Qr),e(Ce,Gr),e(h,Yr),e(h,As),As.innerHTML=jh,e(h,Zr),e(h,Qt),e(Qt,Xr),e(h,el),e(h,Gt),e(Gt,sl),e(h,tl),e(h,Yt),e(Yt,ol),e(h,al),e(h,qs),qs.innerHTML=Nh,e(h,nl),e(h,Zt),e(Zt,rl),e(h,ll),e(h,Vs),Vs.innerHTML=$h,e(h,il),e(h,L),e(L,cl),e(L,js),e(js,pl),e(L,hl),e(L,Ns),e(Ns,dl),e(L,kl),e(L,$s),e($s,vl),e(L,yl),e(h,ul),e(h,Xt),e(Xt,gl),e(h,fl),e(h,P),e(P,xl),e(P,Fs),e(Fs,ml),e(P,wl),e(P,Bs),e(Bs,_l),e(P,El),e(P,Us),e(Us,bl),e(P,Tl),e(h,Il),e(h,eo),e(eo,Ws),e(Ws,so),e(so,Hl),e(Ws,Ml),e(h,Dl),e(h,H),e(H,Sl),e(H,zs),e(zs,Cl),e(H,Ol),e(H,Js),e(Js,Rl),e(H,Ll),e(H,Ks),e(Ks,Pl),e(H,Al),e(H,Qs),e(Qs,ql),e(H,Vl),e(h,jl),e(h,Gs),Gs.innerHTML=Fh,e(h,Nl),e(h,to),e(to,Y),e(Y,$l),e(Y,Ys),e(Ys,Fl),e(Y,Bl),e(Y,Re),e(Re,Ul),e(h,Wl),e(h,K),e(K,zl),e(K,Zs),e(Zs,Jl),e(K,Kl),e(K,Xs),e(Xs,Ql),e(K,Gl),e(h,Yl),e(h,oo),e(oo,Zl),e(h,Xl),e(h,et),et.innerHTML=Bh,e(h,ei),e(h,st),st.innerHTML=Uh,T(p,Eo,g),T(p,E,g),e(E,ao),e(ao,Le),e(Le,si),e(E,ti),e(E,Pe),e(Pe,oi),e(Pe,Ae),e(Ae,ai),e(Pe,ni),e(E,ri),e(E,qe),e(qe,li),e(qe,tt),e(tt,ii),e(qe,ci),e(E,pi),e(E,ot),ot.innerHTML=Wh,e(E,hi),e(E,at),at.innerHTML=zh,e(E,di),e(E,Q),e(Q,ki),e(Q,nt),e(nt,vi),e(Q,yi),e(Q,rt),e(rt,ui),e(Q,gi),T(p,bo,g),T(p,_,g),e(_,no),e(no,Ve),e(Ve,fi),e(_,xi),e(_,ro),e(ro,mi),e(_,wi),e(_,je),e(je,_i),e(je,Z),e(Z,lt),e(lt,Ei),e(Z,bi),e(je,Ti),e(_,Ii),e(_,Ne),e(Ne,Hi),e(Ne,it),e(it,Mi),e(Ne,Di),e(_,Si),e(_,$e),e($e,Ci),e($e,ct),e(ct,Oi),e($e,Ri),e(_,Li),e(_,Fe),e(Fe,Pi),e(Fe,Be),e(Be,Ai),e(Fe,qi),e(_,Vi),e(_,lo),e(lo,X),e(X,io),e(io,ji),e(X,Ni),e(X,Ue),e(Ue,$i),e(X,Fi),T(p,To,g),T(p,ee,g),e(ee,co),e(co,We),e(We,Bi),e(ee,Ui),e(ee,ze),e(ze,pt),e(pt,Wi),e(pt,G),e(G,po),e(po,Je),e(Je,zi),e(G,Ji),e(G,ho),e(ho,Ke),e(Ke,Ki),e(G,Qi),e(G,ko),e(ko,Qe),e(Qe,Gi),e(ze,Yi),e(ze,ht),e(ht,Zi),e(ht,vo),e(vo,yo),e(yo,Ge),e(Ge,Xi),Io=!0},p:gd,i(p){Io||(Th(f.$$.fragment,p),Io=!0)},o(p){Ih(f.$$.fragment,p),Io=!1},d(p){Hh(f,p),p&&s(D),p&&s(w),p&&s(xo),p&&s(m),p&&s(mo),p&&s(k),p&&s(wo),p&&s(y),p&&s(_o),p&&s(h),p&&s(Eo),p&&s(E),p&&s(bo),p&&s(_),p&&s(To),p&&s(ee)}}}function _d(Ye){let f,D;const w=[Ye[0],wh];let V={$$slots:{default:[wd]},$$scope:{ctx:Ye}};for(let x=0;x<w.length;x+=1)V=ac(V,w[x]);return f=new fd({props:V}),{c(){_h(f.$$.fragment)},l(x){Eh(f.$$.fragment,x)},m(x,S){bh(f,x,S),D=!0},p(x,[S]){const Ze=S&1?yd(w,[S&1&&xh(x[0]),S&0&&xh(wh)]):{};S&2&&(Ze.$$scope={dirty:S,ctx:x}),f.$set(Ze)},i(x){D||(Th(f.$$.fragment,x),D=!0)},o(x){Ih(f.$$.fragment,x),D=!1},d(x){Hh(f,x)}}}const wh={title:"Hydrating text content from Server-Side Rendering",date:"2020-02-28T08:00:00Z",label:"blog",description:"DisclaimerI am not going to talk about what is hydration, to know more about client-side rendering, server-side rendering and hydration, please read this amazing article by Jason Miller and Addy Osmani..."};function Ed(Ye,f,D){return ud("blog",{image:md}),Ye.$$set=w=>{D(0,f=ac(ac({},f),mh(w)))},f=mh(f),[f]}class Cd extends dd{constructor(f){super();kd(this,f,Ed,_d,vd,{})}}export{Cd as default,wh as metadata};
