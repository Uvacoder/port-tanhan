import{S as Qo,i as Zo,s as Ko,C as ql,w as Xo,x as er,y as tr,z as sr,A as jo,q as lr,o as or,B as rr,r as ar,R as Bo,e as r,t as l,k as f,c as a,a as i,h as o,d as s,m as u,b as n,Q as $t,g as c,F as e,O as ir}from"../../chunks/vendor-ea160616.js";import{B as nr}from"../../chunks/BlogLayout-1be3dc1e.js";import{_ as pr}from"../../chunks/twitter-card-image-a57df29d.js";import"../../chunks/stores-7d7fda0c.js";import"../../chunks/WebMentions-d768a574.js";/* empty css                                */var cr="/_app/assets/babel-eslint-9-ast-992c0e30.webp",Lo="/_app/assets/babel-eslint-9-ast-f8804806.png",fr="/_app/assets/babel-eslint-8-ast-3af978b3.webp",$o="/_app/assets/babel-eslint-8-ast-6f58363a.png",ur="/_app/assets/babel-eslint-9-ast-992c0e30.webp",Ho="/_app/assets/babel-eslint-9-ast-f8804806.png",dr="/_app/assets/ast-explorer-bfbe6c09.webp",Wo="/_app/assets/ast-explorer-632b492a.png";function hr(ae){let h,g,m,U,v,E,y,Ht,N,Wt,zt,M,Ft,Yt,nt,ie,Vt,pt,j,Fo='<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">fooFunction</span><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-function)">Bar</span><span style="color: var(--shiki-color-text)">&gt;(</span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">);</span></span></code></pre>',ct,I,Jt,B,Qt,Zt,He,Kt,Xt,ft,L,Yo='<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">fooFunction</span><span style="color: var(--shiki-color-text)"> &lt; </span><span style="color: var(--shiki-token-function)">Bar</span><span style="color: var(--shiki-color-text)"> &gt; (</span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">);</span></span></code></pre>',ut,x,es,ne,ts,ss,pe,ls,os,ce,rs,as,dt,R,is,$,ns,ps,H,cs,ht,_t,vt,G,fs,W,us,ds,bt,fe,z,We,ze,F,Ul,mt,ue,hs,yt,b,k,Fe,_s,vs,de,bs,ms,he,ys,ws,Y,Es,xs,ks,S,Ye,gs,Is,V,Ss,Os,J,Cs,Ts,Ps,O,Ve,Rs,Ds,Je,As,Gs,Qe,qs,Us,Ns,_e,Ze,Ms,js,Bs,ve,Ke,Ls,$s,wt,Et,xt,be,Hs,kt,me,Q,Xe,et,Z,Nl,gt,ye,Ws,It,we,K,tt,st,X,Ml,St,Ee,zs,Ot,Ct,Tt,w,lt,Fs,Ys,xe,Vs,Js,ke,Qs,Zs,ge,Ks,Xs,Pt,d,ot,el,tl,ee,sl,ll,Ie,ol,rl,Se,al,il,Oe,nl,pl,Ce,cl,fl,Te,ul,dl,Pe,hl,_l,Re,vl,bl,De,ml,yl,Ae,wl,El,Rt,Dt,At,C,xl,Ge,kl,gl,qe,Il,Sl,Gt,Ue,Ol,qt,Ne,te,rt,at,se,jl,Ut,T,Cl,Me,Tl,Pl,le,Rl,Dl;return{c(){h=r("p"),g=l("Today "),m=r("a"),U=l("Wei Gao"),v=l(" posed an interesting question:"),E=f(),y=r("p"),Ht=l("She was upgrading Flow to v0.85, "),N=r("a"),Wt=l("which requires her to explicitly type the argument of the function call"),zt=l(". However, when she saved the file, our "),M=r("a"),Ft=l("eslint-prettier"),Yt=l(" automatically format the code into a weird syntax:"),nt=f(),ie=r("p"),Vt=l("So, when she wrote:"),pt=f(),j=r("div"),ct=f(),I=r("p"),Jt=l("With "),B=r("a"),Qt=l("eslint-plugin-prettier"),Zt=l(", eslint "),He=r("em"),Kt=l("\u201Cfixed\u201D"),Xt=l(" the code into:"),ft=f(),L=r("div"),ut=f(),x=r("p"),es=l("It felt like eslint sees "),ne=r("code"),ts=l("<"),ss=l(" and "),pe=r("code"),ls=l(">"),os=l(" as the comparison operator, rather than "),ce=r("code"),rs=l("<Type>"),as=l(" as a whole!"),dt=f(),R=r("p"),is=l("To confirm with my hypothesis, I opened up my favourite tool for inspecting "),$=r("a"),ns=l("AST"),ps=l(": "),H=r("a"),cs=l("astexplorer.net"),ht=f(),_t=r("hr"),vt=f(),G=r("p"),fs=l("You can paste your code into "),W=r("a"),us=l("astexplorer.net"),ds=l(" and see how different parser \u201Csees\u201D your code in terms of a AST (Abstract Syntax Tree)."),bt=f(),fe=r("p"),z=r("picture"),We=r("source"),ze=r("source"),F=r("img"),mt=f(),ue=r("p"),hs=l("As you can see from the picture above, you can choose from different parsers:"),yt=f(),b=r("ul"),k=r("li"),Fe=r("strong"),_s=l("acorn"),vs=l("\u200A\u2014\u200Athe parser used by webpack after the loaders, webpack uses acorn\u2019s AST to find "),de=r("code"),bs=l("import"),ms=l(" and "),he=r("code"),ys=l("require()"),ws=l(" syntax to know generate the dependency tree of your project, as well as provide an entry for plugins like "),Y=r("a"),Es=l("DefinePlugin"),xs=l(" to transform the transpiled code."),ks=f(),S=r("li"),Ye=r("strong"),gs=l("babylon"),Is=l("\u2014\u200Athe "),V=r("a"),Ss=l("babel"),Os=l(" parser, now it\u2019s called "),J=r("a"),Cs=l("@babel/parser"),Ts=l("."),Ps=f(),O=r("li"),Ve=r("strong"),Rs=l("flow"),Ds=l(", "),Je=r("strong"),As=l("typescript"),Gs=l(", "),Qe=r("strong"),qs=l("uglify-js"),Us=l("\u2014\u200Athe parsers that each of the library uses"),Ns=f(),_e=r("li"),Ze=r("strong"),Ms=l("esprima"),js=l("\u200A\u2014\u200Athe default eslint parser"),Bs=f(),ve=r("li"),Ke=r("strong"),Ls=l("babel-eslint"),$s=l("\u200A\u2014\u200Aa wrapper of babel parser for eslint, which is also the one we used, because we have a ton of babel plugins configured, so by using babel-eslint we don\u2019t have to reconfigure the same plugins for eslint."),wt=f(),Et=r("hr"),xt=f(),be=r("p"),Hs=l("So I copied our code into astexplorer, and selected the \u201Cflow\u201D parser:"),kt=f(),me=r("p"),Q=r("picture"),Xe=r("source"),et=r("source"),Z=r("img"),gt=f(),ye=r("p"),Ws=l("I can see the type annotation is being parsed as \u201CTypeParameterInstantiation\u201D, however when I changed the parser to \u201Cbabel-eslint8\u201D,"),It=f(),we=r("p"),K=r("picture"),tt=r("source"),st=r("source"),X=r("img"),St=f(),Ee=r("p"),zs=l("I get a Binary Expression and a SequenceExpression!"),Ot=f(),Ct=r("hr"),Tt=f(),w=r("p"),lt=r("strong"),Fs=l("Binary Expression"),Ys=l(" is a way to express logical expression and mathematical expression, eg: "),xe=r("code"),Vs=l("a + b"),Js=l(" , "),ke=r("code"),Qs=l("a && b"),Zs=l(" , "),ge=r("code"),Ks=l("a <= b"),Xs=l(", etc."),Pt=f(),d=r("p"),ot=r("strong"),el=l("Sequence Expression"),tl=l(" on the other hand is something you don\u2019t see people write that often, you can look up how it works in "),ee=r("a"),sl=l("Comma operator (MDN)"),ll=l(", basically you can write expressions as a expression by joining them with a comma operator ("),Ie=r("code"),ol=l(","),rl=l("), and the expression returns the value of the last expression, eg: result = "),Se=r("code"),al=l("(a++, b++, c -= 2, d.push(e), --f)"),il=l(", you increment "),Oe=r("code"),nl=l("a"),pl=l(" , "),Ce=r("code"),cl=l("b"),fl=l(" , decrement "),Te=r("code"),ul=l("c"),dl=l(" by 2, and pushed "),Pe=r("code"),hl=l("e"),_l=l(" into "),Re=r("code"),vl=l("d"),bl=l(" and decrement "),De=r("code"),ml=l("f"),yl=l(" and set result to the new value of "),Ae=r("code"),wl=l("f"),El=l(". Wow, that\u2019s a lot in one statement! It\u2019s confusing to read, but you see this often in a minified code."),Rt=f(),Dt=r("hr"),At=f(),C=r("p"),xl=l("Now this explains why prettier will try to add space in between "),Ge=r("code"),kl=l("<"),gl=l(" and "),qe=r("code"),Il=l(">"),Sl=l(" ."),Gt=f(),Ue=r("p"),Ol=l("I saw that there\u2019s a babel-eslint9, and I gave it a try, and\u2026"),qt=f(),Ne=r("p"),te=r("picture"),rt=r("source"),at=r("source"),se=r("img"),Ut=f(),T=r("p"),Cl=l("It seems like the bug was fixed on "),Me=r("code"),Tl=l("babel-eslint9"),Pl=l(", so I plowed through the release notes of babel-eslint, and I found this "),le=r("a"),Rl=l("merge commit"),Dl=l(". So it seems like upgrading babel-eslint to v9 will solve the issue! \u{1F389}"),this.h()},l(t){h=a(t,"P",{});var p=i(h);g=o(p,"Today "),m=a(p,"A",{href:!0,rel:!0});var Bl=i(m);U=o(Bl,"Wei Gao"),Bl.forEach(s),v=o(p," posed an interesting question:"),p.forEach(s),E=u(t),y=a(t,"P",{});var je=i(y);Ht=o(je,"She was upgrading Flow to v0.85, "),N=a(je,"A",{href:!0,rel:!0});var Ll=i(N);Wt=o(Ll,"which requires her to explicitly type the argument of the function call"),Ll.forEach(s),zt=o(je,". However, when she saved the file, our "),M=a(je,"A",{href:!0,rel:!0});var $l=i(M);Ft=o($l,"eslint-prettier"),$l.forEach(s),Yt=o(je," automatically format the code into a weird syntax:"),je.forEach(s),nt=u(t),ie=a(t,"P",{});var Hl=i(ie);Vt=o(Hl,"So, when she wrote:"),Hl.forEach(s),pt=u(t),j=a(t,"DIV",{class:!0});var Vo=i(j);Vo.forEach(s),ct=u(t),I=a(t,"P",{});var Be=i(I);Jt=o(Be,"With "),B=a(Be,"A",{href:!0,rel:!0});var Wl=i(B);Qt=o(Wl,"eslint-plugin-prettier"),Wl.forEach(s),Zt=o(Be,", eslint "),He=a(Be,"EM",{});var zl=i(He);Kt=o(zl,"\u201Cfixed\u201D"),zl.forEach(s),Xt=o(Be," the code into:"),Be.forEach(s),ft=u(t),L=a(t,"DIV",{class:!0});var Jo=i(L);Jo.forEach(s),ut=u(t),x=a(t,"P",{});var q=i(x);es=o(q,"It felt like eslint sees "),ne=a(q,"CODE",{class:!0});var Fl=i(ne);ts=o(Fl,"<"),Fl.forEach(s),ss=o(q," and "),pe=a(q,"CODE",{class:!0});var Yl=i(pe);ls=o(Yl,">"),Yl.forEach(s),os=o(q," as the comparison operator, rather than "),ce=a(q,"CODE",{class:!0});var Vl=i(ce);rs=o(Vl,"<Type>"),Vl.forEach(s),as=o(q," as a whole!"),q.forEach(s),dt=u(t),R=a(t,"P",{});var it=i(R);is=o(it,"To confirm with my hypothesis, I opened up my favourite tool for inspecting "),$=a(it,"A",{href:!0,rel:!0});var Jl=i($);ns=o(Jl,"AST"),Jl.forEach(s),ps=o(it,": "),H=a(it,"A",{href:!0,rel:!0});var Ql=i(H);cs=o(Ql,"astexplorer.net"),Ql.forEach(s),it.forEach(s),ht=u(t),_t=a(t,"HR",{}),vt=u(t),G=a(t,"P",{});var Nt=i(G);fs=o(Nt,"You can paste your code into "),W=a(Nt,"A",{href:!0,rel:!0});var Zl=i(W);us=o(Zl,"astexplorer.net"),Zl.forEach(s),ds=o(Nt," and see how different parser \u201Csees\u201D your code in terms of a AST (Abstract Syntax Tree)."),Nt.forEach(s),bt=u(t),fe=a(t,"P",{});var Kl=i(fe);z=a(Kl,"PICTURE",{});var Mt=i(z);We=a(Mt,"SOURCE",{type:!0,srcset:!0}),ze=a(Mt,"SOURCE",{type:!0,srcset:!0}),F=a(Mt,"IMG",{src:!0,loading:!0,alt:!0}),Mt.forEach(s),Kl.forEach(s),mt=u(t),ue=a(t,"P",{});var Xl=i(ue);hs=o(Xl,"As you can see from the picture above, you can choose from different parsers:"),Xl.forEach(s),yt=u(t),b=a(t,"UL",{});var P=i(b);k=a(P,"LI",{});var D=i(k);Fe=a(D,"STRONG",{});var eo=i(Fe);_s=o(eo,"acorn"),eo.forEach(s),vs=o(D,"\u200A\u2014\u200Athe parser used by webpack after the loaders, webpack uses acorn\u2019s AST to find "),de=a(D,"CODE",{class:!0});var to=i(de);bs=o(to,"import"),to.forEach(s),ms=o(D," and "),he=a(D,"CODE",{class:!0});var so=i(he);ys=o(so,"require()"),so.forEach(s),ws=o(D," syntax to know generate the dependency tree of your project, as well as provide an entry for plugins like "),Y=a(D,"A",{href:!0,rel:!0});var lo=i(Y);Es=o(lo,"DefinePlugin"),lo.forEach(s),xs=o(D," to transform the transpiled code."),D.forEach(s),ks=u(P),S=a(P,"LI",{});var oe=i(S);Ye=a(oe,"STRONG",{});var oo=i(Ye);gs=o(oo,"babylon"),oo.forEach(s),Is=o(oe,"\u2014\u200Athe "),V=a(oe,"A",{href:!0,rel:!0});var ro=i(V);Ss=o(ro,"babel"),ro.forEach(s),Os=o(oe," parser, now it\u2019s called "),J=a(oe,"A",{href:!0,rel:!0});var ao=i(J);Cs=o(ao,"@babel/parser"),ao.forEach(s),Ts=o(oe,"."),oe.forEach(s),Ps=u(P),O=a(P,"LI",{});var re=i(O);Ve=a(re,"STRONG",{});var io=i(Ve);Rs=o(io,"flow"),io.forEach(s),Ds=o(re,", "),Je=a(re,"STRONG",{});var no=i(Je);As=o(no,"typescript"),no.forEach(s),Gs=o(re,", "),Qe=a(re,"STRONG",{});var po=i(Qe);qs=o(po,"uglify-js"),po.forEach(s),Us=o(re,"\u2014\u200Athe parsers that each of the library uses"),re.forEach(s),Ns=u(P),_e=a(P,"LI",{});var Al=i(_e);Ze=a(Al,"STRONG",{});var co=i(Ze);Ms=o(co,"esprima"),co.forEach(s),js=o(Al,"\u200A\u2014\u200Athe default eslint parser"),Al.forEach(s),Bs=u(P),ve=a(P,"LI",{});var Gl=i(ve);Ke=a(Gl,"STRONG",{});var fo=i(Ke);Ls=o(fo,"babel-eslint"),fo.forEach(s),$s=o(Gl,"\u200A\u2014\u200Aa wrapper of babel parser for eslint, which is also the one we used, because we have a ton of babel plugins configured, so by using babel-eslint we don\u2019t have to reconfigure the same plugins for eslint."),Gl.forEach(s),P.forEach(s),wt=u(t),Et=a(t,"HR",{}),xt=u(t),be=a(t,"P",{});var uo=i(be);Hs=o(uo,"So I copied our code into astexplorer, and selected the \u201Cflow\u201D parser:"),uo.forEach(s),kt=u(t),me=a(t,"P",{});var ho=i(me);Q=a(ho,"PICTURE",{});var jt=i(Q);Xe=a(jt,"SOURCE",{type:!0,srcset:!0}),et=a(jt,"SOURCE",{type:!0,srcset:!0}),Z=a(jt,"IMG",{src:!0,loading:!0,alt:!0}),jt.forEach(s),ho.forEach(s),gt=u(t),ye=a(t,"P",{});var _o=i(ye);Ws=o(_o,"I can see the type annotation is being parsed as \u201CTypeParameterInstantiation\u201D, however when I changed the parser to \u201Cbabel-eslint8\u201D,"),_o.forEach(s),It=u(t),we=a(t,"P",{});var vo=i(we);K=a(vo,"PICTURE",{});var Bt=i(K);tt=a(Bt,"SOURCE",{type:!0,srcset:!0}),st=a(Bt,"SOURCE",{type:!0,srcset:!0}),X=a(Bt,"IMG",{src:!0,loading:!0,alt:!0}),Bt.forEach(s),vo.forEach(s),St=u(t),Ee=a(t,"P",{});var bo=i(Ee);zs=o(bo,"I get a Binary Expression and a SequenceExpression!"),bo.forEach(s),Ot=u(t),Ct=a(t,"HR",{}),Tt=u(t),w=a(t,"P",{});var A=i(w);lt=a(A,"STRONG",{});var mo=i(lt);Fs=o(mo,"Binary Expression"),mo.forEach(s),Ys=o(A," is a way to express logical expression and mathematical expression, eg: "),xe=a(A,"CODE",{class:!0});var yo=i(xe);Vs=o(yo,"a + b"),yo.forEach(s),Js=o(A," , "),ke=a(A,"CODE",{class:!0});var wo=i(ke);Qs=o(wo,"a && b"),wo.forEach(s),Zs=o(A," , "),ge=a(A,"CODE",{class:!0});var Eo=i(ge);Ks=o(Eo,"a <= b"),Eo.forEach(s),Xs=o(A,", etc."),A.forEach(s),Pt=u(t),d=a(t,"P",{});var _=i(d);ot=a(_,"STRONG",{});var xo=i(ot);el=o(xo,"Sequence Expression"),xo.forEach(s),tl=o(_," on the other hand is something you don\u2019t see people write that often, you can look up how it works in "),ee=a(_,"A",{href:!0,rel:!0});var ko=i(ee);sl=o(ko,"Comma operator (MDN)"),ko.forEach(s),ll=o(_,", basically you can write expressions as a expression by joining them with a comma operator ("),Ie=a(_,"CODE",{class:!0});var go=i(Ie);ol=o(go,","),go.forEach(s),rl=o(_,"), and the expression returns the value of the last expression, eg: result = "),Se=a(_,"CODE",{class:!0});var Io=i(Se);al=o(Io,"(a++, b++, c -= 2, d.push(e), --f)"),Io.forEach(s),il=o(_,", you increment "),Oe=a(_,"CODE",{class:!0});var So=i(Oe);nl=o(So,"a"),So.forEach(s),pl=o(_," , "),Ce=a(_,"CODE",{class:!0});var Oo=i(Ce);cl=o(Oo,"b"),Oo.forEach(s),fl=o(_," , decrement "),Te=a(_,"CODE",{class:!0});var Co=i(Te);ul=o(Co,"c"),Co.forEach(s),dl=o(_," by 2, and pushed "),Pe=a(_,"CODE",{class:!0});var To=i(Pe);hl=o(To,"e"),To.forEach(s),_l=o(_," into "),Re=a(_,"CODE",{class:!0});var Po=i(Re);vl=o(Po,"d"),Po.forEach(s),bl=o(_," and decrement "),De=a(_,"CODE",{class:!0});var Ro=i(De);ml=o(Ro,"f"),Ro.forEach(s),yl=o(_," and set result to the new value of "),Ae=a(_,"CODE",{class:!0});var Do=i(Ae);wl=o(Do,"f"),Do.forEach(s),El=o(_,". Wow, that\u2019s a lot in one statement! It\u2019s confusing to read, but you see this often in a minified code."),_.forEach(s),Rt=u(t),Dt=a(t,"HR",{}),At=u(t),C=a(t,"P",{});var Le=i(C);xl=o(Le,"Now this explains why prettier will try to add space in between "),Ge=a(Le,"CODE",{class:!0});var Ao=i(Ge);kl=o(Ao,"<"),Ao.forEach(s),gl=o(Le," and "),qe=a(Le,"CODE",{class:!0});var Go=i(qe);Il=o(Go,">"),Go.forEach(s),Sl=o(Le," ."),Le.forEach(s),Gt=u(t),Ue=a(t,"P",{});var qo=i(Ue);Ol=o(qo,"I saw that there\u2019s a babel-eslint9, and I gave it a try, and\u2026"),qo.forEach(s),qt=u(t),Ne=a(t,"P",{});var Uo=i(Ne);te=a(Uo,"PICTURE",{});var Lt=i(te);rt=a(Lt,"SOURCE",{type:!0,srcset:!0}),at=a(Lt,"SOURCE",{type:!0,srcset:!0}),se=a(Lt,"IMG",{src:!0,loading:!0,alt:!0}),Lt.forEach(s),Uo.forEach(s),Ut=u(t),T=a(t,"P",{});var $e=i(T);Cl=o($e,"It seems like the bug was fixed on "),Me=a($e,"CODE",{class:!0});var No=i(Me);Tl=o(No,"babel-eslint9"),No.forEach(s),Pl=o($e,", so I plowed through the release notes of babel-eslint, and I found this "),le=a($e,"A",{href:!0,rel:!0});var Mo=i(le);Rl=o(Mo,"merge commit"),Mo.forEach(s),Dl=o($e,". So it seems like upgrading babel-eslint to v9 will solve the issue! \u{1F389}"),$e.forEach(s),this.h()},h(){n(m,"href","https://dev.wgao19.cc/"),n(m,"rel","nofollow"),n(N,"href","https://medium.com/flow-type/asking-for-required-annotations-64d4f9c1edf8"),n(N,"rel","nofollow"),n(M,"href","https://github.com/prettier/prettier"),n(M,"rel","nofollow"),n(j,"class","code-section"),n(B,"href","https://github.com/prettier/eslint-plugin-prettier"),n(B,"rel","nofollow"),n(L,"class","code-section"),n(ne,"class","inline"),n(pe,"class","inline"),n(ce,"class","inline"),n($,"href","https://en.wikipedia.org/wiki/Abstract_syntax_tree"),n($,"rel","nofollow"),n(H,"href","https://astexplorer.net/"),n(H,"rel","nofollow"),n(W,"href","https://astexplorer.net/"),n(W,"rel","nofollow"),n(We,"type","image/webp"),n(We,"srcset",dr),n(ze,"type","image/png"),n(ze,"srcset",Wo),$t(F.src,Ul=Wo)||n(F,"src",Ul),n(F,"loading","lazy"),n(F,"alt","You can choose different a parser!"),n(de,"class","inline"),n(he,"class","inline"),n(Y,"href","https://webpack.js.org/plugins/define-plugin/"),n(Y,"rel","nofollow"),n(V,"href","https://github.com/babel/babel/"),n(V,"rel","nofollow"),n(J,"href","https://babeljs.io/docs/en/babel-parser"),n(J,"rel","nofollow"),n(Xe,"type","image/webp"),n(Xe,"srcset",ur),n(et,"type","image/png"),n(et,"srcset",Ho),$t(Z.src,Nl=Ho)||n(Z,"src",Nl),n(Z,"loading","lazy"),n(Z,"alt","flow ast"),n(tt,"type","image/webp"),n(tt,"srcset",fr),n(st,"type","image/png"),n(st,"srcset",$o),$t(X.src,Ml=$o)||n(X,"src",Ml),n(X,"loading","lazy"),n(X,"alt","babel eslint 8 ast"),n(xe,"class","inline"),n(ke,"class","inline"),n(ge,"class","inline"),n(ee,"href","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comma_Operator"),n(ee,"rel","nofollow"),n(Ie,"class","inline"),n(Se,"class","inline"),n(Oe,"class","inline"),n(Ce,"class","inline"),n(Te,"class","inline"),n(Pe,"class","inline"),n(Re,"class","inline"),n(De,"class","inline"),n(Ae,"class","inline"),n(Ge,"class","inline"),n(qe,"class","inline"),n(rt,"type","image/webp"),n(rt,"srcset",cr),n(at,"type","image/png"),n(at,"srcset",Lo),$t(se.src,jl=Lo)||n(se,"src",jl),n(se,"loading","lazy"),n(se,"alt","babel eslint 9 ast"),n(Me,"class","inline"),n(le,"href","https://github.com/babel/babel-eslint/pull/444"),n(le,"rel","nofollow")},m(t,p){c(t,h,p),e(h,g),e(h,m),e(m,U),e(h,v),c(t,E,p),c(t,y,p),e(y,Ht),e(y,N),e(N,Wt),e(y,zt),e(y,M),e(M,Ft),e(y,Yt),c(t,nt,p),c(t,ie,p),e(ie,Vt),c(t,pt,p),c(t,j,p),j.innerHTML=Fo,c(t,ct,p),c(t,I,p),e(I,Jt),e(I,B),e(B,Qt),e(I,Zt),e(I,He),e(He,Kt),e(I,Xt),c(t,ft,p),c(t,L,p),L.innerHTML=Yo,c(t,ut,p),c(t,x,p),e(x,es),e(x,ne),e(ne,ts),e(x,ss),e(x,pe),e(pe,ls),e(x,os),e(x,ce),e(ce,rs),e(x,as),c(t,dt,p),c(t,R,p),e(R,is),e(R,$),e($,ns),e(R,ps),e(R,H),e(H,cs),c(t,ht,p),c(t,_t,p),c(t,vt,p),c(t,G,p),e(G,fs),e(G,W),e(W,us),e(G,ds),c(t,bt,p),c(t,fe,p),e(fe,z),e(z,We),e(z,ze),e(z,F),c(t,mt,p),c(t,ue,p),e(ue,hs),c(t,yt,p),c(t,b,p),e(b,k),e(k,Fe),e(Fe,_s),e(k,vs),e(k,de),e(de,bs),e(k,ms),e(k,he),e(he,ys),e(k,ws),e(k,Y),e(Y,Es),e(k,xs),e(b,ks),e(b,S),e(S,Ye),e(Ye,gs),e(S,Is),e(S,V),e(V,Ss),e(S,Os),e(S,J),e(J,Cs),e(S,Ts),e(b,Ps),e(b,O),e(O,Ve),e(Ve,Rs),e(O,Ds),e(O,Je),e(Je,As),e(O,Gs),e(O,Qe),e(Qe,qs),e(O,Us),e(b,Ns),e(b,_e),e(_e,Ze),e(Ze,Ms),e(_e,js),e(b,Bs),e(b,ve),e(ve,Ke),e(Ke,Ls),e(ve,$s),c(t,wt,p),c(t,Et,p),c(t,xt,p),c(t,be,p),e(be,Hs),c(t,kt,p),c(t,me,p),e(me,Q),e(Q,Xe),e(Q,et),e(Q,Z),c(t,gt,p),c(t,ye,p),e(ye,Ws),c(t,It,p),c(t,we,p),e(we,K),e(K,tt),e(K,st),e(K,X),c(t,St,p),c(t,Ee,p),e(Ee,zs),c(t,Ot,p),c(t,Ct,p),c(t,Tt,p),c(t,w,p),e(w,lt),e(lt,Fs),e(w,Ys),e(w,xe),e(xe,Vs),e(w,Js),e(w,ke),e(ke,Qs),e(w,Zs),e(w,ge),e(ge,Ks),e(w,Xs),c(t,Pt,p),c(t,d,p),e(d,ot),e(ot,el),e(d,tl),e(d,ee),e(ee,sl),e(d,ll),e(d,Ie),e(Ie,ol),e(d,rl),e(d,Se),e(Se,al),e(d,il),e(d,Oe),e(Oe,nl),e(d,pl),e(d,Ce),e(Ce,cl),e(d,fl),e(d,Te),e(Te,ul),e(d,dl),e(d,Pe),e(Pe,hl),e(d,_l),e(d,Re),e(Re,vl),e(d,bl),e(d,De),e(De,ml),e(d,yl),e(d,Ae),e(Ae,wl),e(d,El),c(t,Rt,p),c(t,Dt,p),c(t,At,p),c(t,C,p),e(C,xl),e(C,Ge),e(Ge,kl),e(C,gl),e(C,qe),e(qe,Il),e(C,Sl),c(t,Gt,p),c(t,Ue,p),e(Ue,Ol),c(t,qt,p),c(t,Ne,p),e(Ne,te),e(te,rt),e(te,at),e(te,se),c(t,Ut,p),c(t,T,p),e(T,Cl),e(T,Me),e(Me,Tl),e(T,Pl),e(T,le),e(le,Rl),e(T,Dl)},p:ir,d(t){t&&s(h),t&&s(E),t&&s(y),t&&s(nt),t&&s(ie),t&&s(pt),t&&s(j),t&&s(ct),t&&s(I),t&&s(ft),t&&s(L),t&&s(ut),t&&s(x),t&&s(dt),t&&s(R),t&&s(ht),t&&s(_t),t&&s(vt),t&&s(G),t&&s(bt),t&&s(fe),t&&s(mt),t&&s(ue),t&&s(yt),t&&s(b),t&&s(wt),t&&s(Et),t&&s(xt),t&&s(be),t&&s(kt),t&&s(me),t&&s(gt),t&&s(ye),t&&s(It),t&&s(we),t&&s(St),t&&s(Ee),t&&s(Ot),t&&s(Ct),t&&s(Tt),t&&s(w),t&&s(Pt),t&&s(d),t&&s(Rt),t&&s(Dt),t&&s(At),t&&s(C),t&&s(Gt),t&&s(Ue),t&&s(qt),t&&s(Ne),t&&s(Ut),t&&s(T)}}}function _r(ae){let h,g;const m=[ae[0],zo];let U={$$slots:{default:[hr]},$$scope:{ctx:ae}};for(let v=0;v<m.length;v+=1)U=ql(U,m[v]);return h=new nr({props:U}),{c(){Xo(h.$$.fragment)},l(v){er(h.$$.fragment,v)},m(v,E){tr(h,v,E),g=!0},p(v,[E]){const y=E&1?sr(m,[E&1&&jo(v[0]),E&0&&jo(zo)]):{};E&2&&(y.$$scope={dirty:E,ctx:v}),h.$set(y)},i(v){g||(lr(h.$$.fragment,v),g=!0)},o(v){or(h.$$.fragment,v),g=!1},d(v){rr(h,v)}}}const zo={title:"My eslint doesn\u2019t work with for flow 0.85\u2019s explicit type argument syntax",date:"2019-01-17T08:00:00Z",description:"and how I figured out why.",label:"blog"};function vr(ae,h,g){return ar("blog",{image:pr}),ae.$$set=m=>{g(0,h=ql(ql({},h),Bo(m)))},h=Bo(h),[h]}class kr extends Qo{constructor(h){super();Zo(this,h,vr,_r,Ko,{})}}export{kr as default,zo as metadata};
