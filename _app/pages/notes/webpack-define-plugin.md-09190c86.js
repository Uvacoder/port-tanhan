import{S as La,i as Da,s as Ia,C as vo,w as la,x as na,y as ra,z as Pa,A as oa,q as ia,o as ca,B as pa,r as Ca,R as aa,k as c,e as o,t as l,m as p,c as a,a as t,h as n,d as s,b as h,g as re,F as e,O as qa}from"../../chunks/vendor-569a3c5c.js";import{B as Oa}from"../../chunks/BlogLayout-17b76cb2.js";import{T as $a}from"../../chunks/TableOfContent-dbc18cb8.js";import{_ as Ta}from"../../chunks/twitter-card-image-a57df29d.js";import"../../chunks/stores-ee936cd4.js";import"../../chunks/WebMentions-968cc380.js";/* empty css                                */function Aa(M){let k,g,r,w,v,m,V,ie,Ve,Ue,ce,je,Fe,f,pe,Se,We,he,Be,Ge,de,Re,Ne,U,ze,ke,x,Ke,j,Qe,Je,F,Xe,Ye,S,Ze,es,ss,L,os,W,as,ts,B,ls,ns,rs,ve,is,cs,ue,ps,hs,b,fe,ds,ks,ye,vs,us,_e,fs,ys,G,_s,ge,me,gs,ms,xe,xs,bs,R,ha=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">a</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> __FLAG__;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (a) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;foo&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(bar</span><span style="color: var(--shiki-token-string-expression)">&#39;);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Es,be,ws,Ls,N,da=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (__FLAG__) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;foo&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(bar</span><span style="color: var(--shiki-token-string-expression)">&#39;);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Ds,O,Is,z,Ps,Cs,qs,K,ka=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">a</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (a) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;foo&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(bar</span><span style="color: var(--shiki-token-string-expression)">&#39;);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Os,Ee,$s,Ts,Q,va=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;foo&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(bar</span><span style="color: var(--shiki-token-string-expression)">&#39;);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,As,we,Hs,Ms,Le,J,Vs,$,Us,js,X,ua=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;foo&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123; &#125;</span></span></code></pre>`,Fs,E,Ss,Y,Ws,Bs,Z,Gs,Rs,ee,Ns,zs,$e,u,De,T,Ks,Qs,Ie,Js,Xs,se,fa=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">a</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (a) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;foo&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(bar</span><span style="color: var(--shiki-token-string-expression)">&#39;);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Ys,Pe,Zs,eo,oe,ya='<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;foo&#39;</span><span style="color: var(--shiki-color-text)">);</span></span></code></pre>',so,D,oo,ae,ao,to,te,lo,no,Te,I,Ce,A,ro,io,qe,Oe,H,co,Ae;return k=new $a({props:{data:[{link:"define-plugin",title:"Define Plugin",nested:[{link:"what-about-terser",title:"What about terser?"}]},{link:"read-more",title:"Read More"}]}}),{c(){la(k.$$.fragment),g=c(),r=o("section"),w=o("h2"),v=o("a"),m=l("Define Plugin"),V=c(),ie=o("p"),Ve=l("a high level of define plugin, treeshake + minification happens in the following"),Ue=c(),ce=o("p"),je=l("for any module,"),Fe=c(),f=o("ul"),pe=o("li"),Se=l("webpack reads the source code"),We=c(),he=o("li"),Be=l("apply all the loaders"),Ge=c(),de=o("li"),Re=l("apply define plugin"),Ne=c(),U=o("li"),ze=l("for the final code after loaders + define plugin, "),ke=o("ul"),x=o("li"),Ke=l("for code at "),j=o("code"),Qe=l("if (truthy)"),Je=l(" or "),F=o("code"),Xe=l("truthy && ..."),Ye=l(" or "),S=o("code"),Ze=l("truthy ? ... : ..."),es=l(", webpack will try to collapse that conditional, meaning based on truthy / falsy value, remove unwanted code logic paths"),ss=c(),L=o("li"),os=l("find all the "),W=o("code"),as=l("imports"),ts=l(" or "),B=o("code"),ls=l("require"),ns=l(" in the code"),rs=c(),ve=o("li"),is=l("traverse them and apply the same step for each module"),cs=c(),ue=o("p"),ps=l("after creating the module map"),hs=c(),b=o("ul"),fe=o("li"),ds=l("create chunks based on dynamic import()"),ks=c(),ye=o("li"),vs=l("apply graph based optimisation - such as mark unused exports and treeshake them away"),us=c(),_e=o("li"),fs=l("granular split chuks optimisation"),ys=c(),G=o("li"),_s=l("lastly, for each chunk"),ge=o("ul"),me=o("li"),gs=l("run terser to minify the code, will remove any unused variables / functions within each chunk"),ms=c(),xe=o("p"),xs=l("which means, there's a difference between the following contrived code:"),bs=c(),R=o("div"),Es=c(),be=o("p"),ws=l("and"),Ls=c(),N=o("div"),Ds=c(),O=o("p"),Is=l("after applying "),z=o("code"),Ps=l("new DefinePlugin({ __FLAG__: true })"),Cs=l(", you get:"),qs=c(),K=o("div"),Os=c(),Ee=o("p"),$s=l("and"),Ts=c(),Q=o("div"),As=c(),we=o("p"),Hs=l("webpack's parser is able to collapse the conditional of the latter, but not the former."),Ms=c(),Le=o("blockquote"),J=o("p"),Vs=l("the collapse of conditional expression happens "),$=o("a"),Us=l("here"),js=c(),X=o("div"),Fs=c(),E=o("p"),Ss=l("so, the former case, will have both "),Y=o("code"),Ws=l("foo"),Bs=l(" and "),Z=o("code"),Gs=l("bar"),Rs=l(" in the bundled code ,but the latter will only have "),ee=o("code"),Ns=l("foo"),zs=l("."),$e=c(),u=o("section"),De=o("h3"),T=o("a"),Ks=l("What about terser?"),Qs=c(),Ie=o("p"),Js=l("terser runs on chunk level after all the bundling and chunking logic, so even though terser is smart enough to collapse"),Xs=c(),se=o("div"),Ys=c(),Pe=o("p"),Zs=l("into"),eo=c(),oe=o("div"),so=c(),D=o("p"),oo=l("the bundled code still have "),ae=o("code"),ao=l("foo"),to=l(" and "),te=o("code"),lo=l("bar"),no=l("'s code."),Te=c(),I=o("section"),Ce=o("h2"),A=o("a"),ro=l("Read More"),io=c(),qe=o("ul"),Oe=o("li"),H=o("a"),co=l("https://webpack.js.org/plugins/internal-plugins/#constplugin"),this.h()},l(d){na(k.$$.fragment,d),g=p(d),r=a(d,"SECTION",{});var i=t(r);w=a(i,"H2",{});var uo=t(w);v=a(uo,"A",{href:!0,id:!0});var fo=t(v);m=n(fo,"Define Plugin"),fo.forEach(s),uo.forEach(s),V=p(i),ie=a(i,"P",{});var yo=t(ie);Ve=n(yo,"a high level of define plugin, treeshake + minification happens in the following"),yo.forEach(s),Ue=p(i),ce=a(i,"P",{});var _o=t(ce);je=n(_o,"for any module,"),_o.forEach(s),Fe=p(i),f=a(i,"UL",{});var y=t(f);pe=a(y,"LI",{});var go=t(pe);Se=n(go,"webpack reads the source code"),go.forEach(s),We=p(y),he=a(y,"LI",{});var mo=t(he);Be=n(mo,"apply all the loaders"),mo.forEach(s),Ge=p(y),de=a(y,"LI",{});var xo=t(de);Re=n(xo,"apply define plugin"),xo.forEach(s),Ne=p(y),U=a(y,"LI",{});var po=t(U);ze=n(po,"for the final code after loaders + define plugin, "),ke=a(po,"UL",{});var bo=t(ke);x=a(bo,"LI",{});var P=t(x);Ke=n(P,"for code at "),j=a(P,"CODE",{class:!0});var Eo=t(j);Qe=n(Eo,"if (truthy)"),Eo.forEach(s),Je=n(P," or "),F=a(P,"CODE",{class:!0});var wo=t(F);Xe=n(wo,"truthy && ..."),wo.forEach(s),Ye=n(P," or "),S=a(P,"CODE",{class:!0});var Lo=t(S);Ze=n(Lo,"truthy ? ... : ..."),Lo.forEach(s),es=n(P,", webpack will try to collapse that conditional, meaning based on truthy / falsy value, remove unwanted code logic paths"),P.forEach(s),bo.forEach(s),po.forEach(s),ss=p(y),L=a(y,"LI",{});var le=t(L);os=n(le,"find all the "),W=a(le,"CODE",{class:!0});var Do=t(W);as=n(Do,"imports"),Do.forEach(s),ts=n(le," or "),B=a(le,"CODE",{class:!0});var Io=t(B);ls=n(Io,"require"),Io.forEach(s),ns=n(le," in the code"),le.forEach(s),rs=p(y),ve=a(y,"LI",{});var Po=t(ve);is=n(Po,"traverse them and apply the same step for each module"),Po.forEach(s),y.forEach(s),cs=p(i),ue=a(i,"P",{});var Co=t(ue);ps=n(Co,"after creating the module map"),Co.forEach(s),hs=p(i),b=a(i,"UL",{});var C=t(b);fe=a(C,"LI",{});var qo=t(fe);ds=n(qo,"create chunks based on dynamic import()"),qo.forEach(s),ks=p(C),ye=a(C,"LI",{});var Oo=t(ye);vs=n(Oo,"apply graph based optimisation - such as mark unused exports and treeshake them away"),Oo.forEach(s),us=p(C),_e=a(C,"LI",{});var $o=t(_e);fs=n($o,"granular split chuks optimisation"),$o.forEach(s),ys=p(C),G=a(C,"LI",{});var ho=t(G);_s=n(ho,"lastly, for each chunk"),ge=a(ho,"UL",{});var To=t(ge);me=a(To,"LI",{});var Ao=t(me);gs=n(Ao,"run terser to minify the code, will remove any unused variables / functions within each chunk"),Ao.forEach(s),To.forEach(s),ho.forEach(s),C.forEach(s),ms=p(i),xe=a(i,"P",{});var Ho=t(xe);xs=n(Ho,"which means, there's a difference between the following contrived code:"),Ho.forEach(s),bs=p(i),R=a(i,"DIV",{class:!0});var _a=t(R);_a.forEach(s),Es=p(i),be=a(i,"P",{});var Mo=t(be);ws=n(Mo,"and"),Mo.forEach(s),Ls=p(i),N=a(i,"DIV",{class:!0});var ga=t(N);ga.forEach(s),Ds=p(i),O=a(i,"P",{});var He=t(O);Is=n(He,"after applying "),z=a(He,"CODE",{class:!0});var Vo=t(z);Ps=n(Vo,"new DefinePlugin({ __FLAG__: true })"),Vo.forEach(s),Cs=n(He,", you get:"),He.forEach(s),qs=p(i),K=a(i,"DIV",{class:!0});var ma=t(K);ma.forEach(s),Os=p(i),Ee=a(i,"P",{});var Uo=t(Ee);$s=n(Uo,"and"),Uo.forEach(s),Ts=p(i),Q=a(i,"DIV",{class:!0});var xa=t(Q);xa.forEach(s),As=p(i),we=a(i,"P",{});var jo=t(we);Hs=n(jo,"webpack's parser is able to collapse the conditional of the latter, but not the former."),jo.forEach(s),Ms=p(i),Le=a(i,"BLOCKQUOTE",{});var Fo=t(Le);J=a(Fo,"P",{});var ko=t(J);Vs=n(ko,"the collapse of conditional expression happens "),$=a(ko,"A",{href:!0,rel:!0});var So=t($);Us=n(So,"here"),So.forEach(s),ko.forEach(s),Fo.forEach(s),js=p(i),X=a(i,"DIV",{class:!0});var ba=t(X);ba.forEach(s),Fs=p(i),E=a(i,"P",{});var q=t(E);Ss=n(q,"so, the former case, will have both "),Y=a(q,"CODE",{class:!0});var Wo=t(Y);Ws=n(Wo,"foo"),Wo.forEach(s),Bs=n(q," and "),Z=a(q,"CODE",{class:!0});var Bo=t(Z);Gs=n(Bo,"bar"),Bo.forEach(s),Rs=n(q," in the bundled code ,but the latter will only have "),ee=a(q,"CODE",{class:!0});var Go=t(ee);Ns=n(Go,"foo"),Go.forEach(s),zs=n(q,"."),q.forEach(s),i.forEach(s),$e=p(d),u=a(d,"SECTION",{});var _=t(u);De=a(_,"H3",{});var Ro=t(De);T=a(Ro,"A",{href:!0,id:!0});var No=t(T);Ks=n(No,"What about terser?"),No.forEach(s),Ro.forEach(s),Qs=p(_),Ie=a(_,"P",{});var zo=t(Ie);Js=n(zo,"terser runs on chunk level after all the bundling and chunking logic, so even though terser is smart enough to collapse"),zo.forEach(s),Xs=p(_),se=a(_,"DIV",{class:!0});var Ea=t(se);Ea.forEach(s),Ys=p(_),Pe=a(_,"P",{});var Ko=t(Pe);Zs=n(Ko,"into"),Ko.forEach(s),eo=p(_),oe=a(_,"DIV",{class:!0});var wa=t(oe);wa.forEach(s),so=p(_),D=a(_,"P",{});var ne=t(D);oo=n(ne,"the bundled code still have "),ae=a(ne,"CODE",{class:!0});var Qo=t(ae);ao=n(Qo,"foo"),Qo.forEach(s),to=n(ne," and "),te=a(ne,"CODE",{class:!0});var Jo=t(te);lo=n(Jo,"bar"),Jo.forEach(s),no=n(ne,"'s code."),ne.forEach(s),_.forEach(s),Te=p(d),I=a(d,"SECTION",{});var Me=t(I);Ce=a(Me,"H2",{});var Xo=t(Ce);A=a(Xo,"A",{href:!0,id:!0});var Yo=t(A);ro=n(Yo,"Read More"),Yo.forEach(s),Xo.forEach(s),io=p(Me),qe=a(Me,"UL",{});var Zo=t(qe);Oe=a(Zo,"LI",{});var ea=t(Oe);H=a(ea,"A",{href:!0,rel:!0});var sa=t(H);co=n(sa,"https://webpack.js.org/plugins/internal-plugins/#constplugin"),sa.forEach(s),ea.forEach(s),Zo.forEach(s),Me.forEach(s),this.h()},h(){h(v,"href","#define-plugin"),h(v,"id","define-plugin"),h(j,"class","inline"),h(F,"class","inline"),h(S,"class","inline"),h(W,"class","inline"),h(B,"class","inline"),h(R,"class","code-section"),h(N,"class","code-section"),h(z,"class","inline"),h(K,"class","code-section"),h(Q,"class","code-section"),h($,"href","https://github.com/webpack/webpack/blob/master/lib/ConstPlugin.js#L133"),h($,"rel","nofollow"),h(X,"class","code-section"),h(Y,"class","inline"),h(Z,"class","inline"),h(ee,"class","inline"),h(T,"href","#what-about-terser"),h(T,"id","what-about-terser"),h(se,"class","code-section"),h(oe,"class","code-section"),h(ae,"class","inline"),h(te,"class","inline"),h(A,"href","#read-more"),h(A,"id","read-more"),h(H,"href","https://webpack.js.org/plugins/internal-plugins/#constplugin"),h(H,"rel","nofollow")},m(d,i){ra(k,d,i),re(d,g,i),re(d,r,i),e(r,w),e(w,v),e(v,m),e(r,V),e(r,ie),e(ie,Ve),e(r,Ue),e(r,ce),e(ce,je),e(r,Fe),e(r,f),e(f,pe),e(pe,Se),e(f,We),e(f,he),e(he,Be),e(f,Ge),e(f,de),e(de,Re),e(f,Ne),e(f,U),e(U,ze),e(U,ke),e(ke,x),e(x,Ke),e(x,j),e(j,Qe),e(x,Je),e(x,F),e(F,Xe),e(x,Ye),e(x,S),e(S,Ze),e(x,es),e(f,ss),e(f,L),e(L,os),e(L,W),e(W,as),e(L,ts),e(L,B),e(B,ls),e(L,ns),e(f,rs),e(f,ve),e(ve,is),e(r,cs),e(r,ue),e(ue,ps),e(r,hs),e(r,b),e(b,fe),e(fe,ds),e(b,ks),e(b,ye),e(ye,vs),e(b,us),e(b,_e),e(_e,fs),e(b,ys),e(b,G),e(G,_s),e(G,ge),e(ge,me),e(me,gs),e(r,ms),e(r,xe),e(xe,xs),e(r,bs),e(r,R),R.innerHTML=ha,e(r,Es),e(r,be),e(be,ws),e(r,Ls),e(r,N),N.innerHTML=da,e(r,Ds),e(r,O),e(O,Is),e(O,z),e(z,Ps),e(O,Cs),e(r,qs),e(r,K),K.innerHTML=ka,e(r,Os),e(r,Ee),e(Ee,$s),e(r,Ts),e(r,Q),Q.innerHTML=va,e(r,As),e(r,we),e(we,Hs),e(r,Ms),e(r,Le),e(Le,J),e(J,Vs),e(J,$),e($,Us),e(r,js),e(r,X),X.innerHTML=ua,e(r,Fs),e(r,E),e(E,Ss),e(E,Y),e(Y,Ws),e(E,Bs),e(E,Z),e(Z,Gs),e(E,Rs),e(E,ee),e(ee,Ns),e(E,zs),re(d,$e,i),re(d,u,i),e(u,De),e(De,T),e(T,Ks),e(u,Qs),e(u,Ie),e(Ie,Js),e(u,Xs),e(u,se),se.innerHTML=fa,e(u,Ys),e(u,Pe),e(Pe,Zs),e(u,eo),e(u,oe),oe.innerHTML=ya,e(u,so),e(u,D),e(D,oo),e(D,ae),e(ae,ao),e(D,to),e(D,te),e(te,lo),e(D,no),re(d,Te,i),re(d,I,i),e(I,Ce),e(Ce,A),e(A,ro),e(I,io),e(I,qe),e(qe,Oe),e(Oe,H),e(H,co),Ae=!0},p:qa,i(d){Ae||(ia(k.$$.fragment,d),Ae=!0)},o(d){ca(k.$$.fragment,d),Ae=!1},d(d){pa(k,d),d&&s(g),d&&s(r),d&&s($e),d&&s(u),d&&s(Te),d&&s(I)}}}function Ha(M){let k,g;const r=[M[0],ta];let w={$$slots:{default:[Aa]},$$scope:{ctx:M}};for(let v=0;v<r.length;v+=1)w=vo(w,r[v]);return k=new Oa({props:w}),{c(){la(k.$$.fragment)},l(v){na(k.$$.fragment,v)},m(v,m){ra(k,v,m),g=!0},p(v,[m]){const V=m&1?Pa(r,[m&1&&oa(v[0]),m&0&&oa(ta)]):{};m&2&&(V.$$scope={dirty:m,ctx:v}),k.$set(V)},i(v){g||(ia(k.$$.fragment,v),g=!0)},o(v){ca(k.$$.fragment,v),g=!1},d(v){pa(k,v)}}}const ta={title:"Webpack Define Plugin",tags:["define plugin","feature flag"],description:"Define Plugina high level of define plugin, treeshake + minification happens in the followingfor any module, webpack reads the source codeapply all the loadersapply define pluginfor the final code after loaders + define plugin, ..."};function Ma(M,k,g){return Ca("blog",{image:Ta}),M.$$set=r=>{g(0,k=vo(vo({},k),aa(r)))},k=aa(k),[k]}class Ga extends La{constructor(k){super();Da(this,k,Ma,Ha,Ia,{})}}export{Ga as default,ta as metadata};
