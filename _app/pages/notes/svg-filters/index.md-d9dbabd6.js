import{S as _k,i as gk,s as fk,C as Bi,w as zi,x as $i,y as Fi,z as xk,A as wh,q as Vi,o as Wi,B as Ki,r as mk,Y as Eh,e,t as n,k as c,c as t,a,h as i,d as o,m as h,b as r,X as g,f as l,g as d,H as s,J as bk}from"../../../chunks/vendor-9710682b.js";import{B as wk}from"../../../chunks/BlogLayout-9a08402e.js";import Ek from"./components/Morphology.svelte-b082a2c2.js";import qk from"./components/KnockoutText.svelte-e0001f7d.js";import"../../../chunks/stores-f9c97213.js";import"../../../chunks/TableOfContent-2fa6a472.js";/* empty css                                   */var Ck="/_app/assets/morphology-knockout-text-10e4f906.gif",qh="/_app/assets/morphology-knockout-text-a5f7f5d7.gif",Ok="/_app/assets/morphology-text-51c98c12.gif",Ch="/_app/assets/morphology-text-21a93abe.gif",Ik="/_app/assets/morphology-c623de5c.gif",Oh="/_app/assets/morphology-ff570125.gif",Lk="/_app/assets/grayscale-768327dd.webp",Sk="/_app/assets/grayscale-0dce859e.webp",Mk="/_app/assets/grayscale-2de4858f.png",Ih="/_app/assets/grayscale-d125fa35.png",Pk="/_app/assets/darken-e7407b8b.webp",Ak="/_app/assets/darken-17dacf86.webp",Rk="/_app/assets/darken-eb75f08b.png",Lh="/_app/assets/darken-ddd3f49c.png",Tk="/_app/assets/lighten-7beab715.webp",Dk="/_app/assets/lighten-82ea2978.webp",Uk="/_app/assets/lighten-9563320f.png",Sh="/_app/assets/lighten-33917603.png",Gk="/_app/assets/change-color-f2d0feb9.webp",Nk="/_app/assets/change-color-2044cbfe.webp",Hk="/_app/assets/change-color-d31cc67e.png",Mh="/_app/assets/change-color-91e17145.png",Bk="/_app/assets/blow-out-channel-b34ded9d.webp",zk="/_app/assets/blow-out-channel-bcacf82f.webp",$k="/_app/assets/blow-out-channel-e7f12f85.png",Ph="/_app/assets/blow-out-channel-b15030e3.png",Fk="/_app/assets/negative-alpha-feed49ee.webp",Vk="/_app/assets/negative-alpha-b06426df.webp",Wk="/_app/assets/negative-alpha-21e539ae.png",Ah="/_app/assets/negative-alpha-2fa31798.png",Kk="/_app/assets/yellow-filter-2-b8983785.webp",jk="/_app/assets/yellow-filter-2-9f27d0e4.webp",Jk="/_app/assets/yellow-filter-2-33ae7857.png",Rh="/_app/assets/yellow-filter-2-9e2d3b59.png",Xk="/_app/assets/yellow-filter-649a6936.webp",Yk="/_app/assets/yellow-filter-191e9d15.webp",Qk="/_app/assets/yellow-filter-7cd2ccba.png",Th="/_app/assets/yellow-filter-797aff26.png",Zk="/_app/assets/red-filter-904ea535.webp",sv="/_app/assets/red-filter-2b2b2311.webp",ev="/_app/assets/red-filter-375818e8.png",Dh="/_app/assets/red-filter-d4781599.png",tv="/_app/assets/colorise-yellow-da100449.webp",ov="/_app/assets/colorise-yellow-d49b23ef.webp",av="/_app/assets/colorise-yellow-40fc01f8.png",Uh="/_app/assets/colorise-yellow-649adc59.png",rv="/_app/assets/colorise-red-d5c17d52.webp",lv="/_app/assets/colorise-red-8acd3f2d.webp",nv="/_app/assets/colorise-red-5f71c24e.png",Gh="/_app/assets/colorise-red-fdbb65ae.png",iv="/_app/assets/default-7bbd3d4d.webp",pv="/_app/assets/default-0df15f3a.webp",cv="/_app/assets/default-68d2a120.png",Nh="/_app/assets/default-ac6872de.png",hv="/_app/assets/step-4-027229bd.webp",kv="/_app/assets/step-4-305b68e8.webp",vv="/_app/assets/step-4-d0bd4f27.png",Hh="/_app/assets/step-4-2d732f8a.png",uv="/_app/assets/step-3-55fce715.webp",yv="/_app/assets/step-3-8b92aeeb.webp",dv="/_app/assets/step-3-4aba762f.png",Bh="/_app/assets/step-3-11c50ab0.png",_v="/_app/assets/step-2-85dc1c43.webp",gv="/_app/assets/step-2-550d2c6b.webp",fv="/_app/assets/step-2-86e73706.png",zh="/_app/assets/step-2-c60f5448.png",xv="/_app/assets/step-1-734672e5.webp",mv="/_app/assets/step-1-a14663a0.webp",bv="/_app/assets/step-1-e4180411.png",$h="/_app/assets/step-1-cce86919.png",wv="/_app/assets/hero-twitter-11c7d8fb.jpg";function Ev(qe){let y,O,C,Ks,_,m,Ce,js,Fa,Va,Wa,rs,Js,Ka,Oe,ja,Ja,Xa,Jt,Ya,Qa,ls,Za,Xt,sr,er,Yt,tr,or,ua,Z,Qt,Xs,ar,rr,J,Ys,lr,Ie,nr,ir,pr,Zt,cr,hr,ss,Le,kr,vr,Se,ur,yr,Me,dr,_r,gr,Ss,fr,Pe,xr,mr,Ae,br,wr,Re,Vh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;my-filter&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- take in 1 input &#96;in&#96; --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;INPUT_NAME&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- take in 2 inputs &#96;in&#96; and &#96;in2&#96; --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;INPUT_NAME_1&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;INPUT_NAME_2&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- &#96;result&#96; defines the result name, </span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">		which can be passed in as input for the next filter --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;OUTPUT_1&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;OUTPUT_1&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- use the source as input for the filter primitive --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- apply filter on the source element --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceGraphic&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- apply filter on the alpha channel of the source element,</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">		the silhouette of the source --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceAlpha&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,ya,b,so,Qs,Er,qr,ns,eo,Cr,Or,to,Ir,Lr,oo,Sr,Mr,Te,Wh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">&lt;!-- x, y, width, height sets the filter region --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">x</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;-10%&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">y</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;-10%&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">width</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;120%&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">height</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;120%&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">filterUnits</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;objectBoundingBox&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">&lt;!-- filter primitives here --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,Pr,ao,Zs,Ar,De,Rr,Tr,Dr,Ue,Kh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feFlood</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">flood-color</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#EB0066&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-opacity</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;0.5&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;flood&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">feFlood</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceGraphic&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;flood&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,da,k,ro,se,Ur,Gr,lo,no,Nr,Hr,Ge,jh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;my-filter&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceAlpha&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">stdDeviation</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,Br,io,is,Ne,po,I,ji,zr,He,co,$r,Fr,ho,Be,Vr,ee,Wr,Kr,ze,Jh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;my-filter&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceAlpha&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">stdDeviation</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feFlood</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-color</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#EB0066&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;in&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,jr,ko,ps,$e,vo,L,Ji,Jr,Fe,Ve,Xr,We,Yr,Qr,Ke,Xh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;my-filter&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceAlpha&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">stdDeviation</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feFlood</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-color</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#EB0066&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;in&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feOffset</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SHADOW&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">dx</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">dy</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROPSHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,Zr,uo,cs,je,yo,S,Xi,sl,Je,_o,el,tl,go,fo,ol,al,Xe,Yh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;my-filter&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceAlpha&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">stdDeviation</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feFlood</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-color</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#EB0066&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;in&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feOffset</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SHADOW&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">dx</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">dy</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROPSHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROPSHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceGraphic&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,rl,xo,hs,Ye,mo,M,Yi,_a,w,bo,Ms,ll,Qe,nl,il,te,pl,oe,cl,hl,kl,Ze,Qh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;linear&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feColorMatrix</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;matrix&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">values</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;R 0 0 0 0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0 G 0 0 0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0 0 B 0 0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0 0 0 A 0 &quot;</span><span style="color: var(--shiki-color-text)">/&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,vl,st,Zh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">/* R G B A 1 */</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// R = 1*R + 0*G + 0*B + 0*A + 0</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// G = 0*R + 1*G + 0*B + 0*A + 0</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// B = 0*R + 0*G + 1*B + 0*A + 0</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// A = 0*R + 0*G + 0*B + 1*A + 0</span></span></code></pre>`,ul,wo,Eo,ae,yl,ga,es,qo,re,dl,_l,Co,ks,et,Oo,P,Qi,gl,vs,Io,fl,xl,tt,ml,us,ot,Lo,A,Zi,bl,at,wl,ys,rt,So,R,sp,fa,T,Mo,le,El,ql,ds,ne,Po,Cl,Ol,_s,Ao,Il,Ll,Ro,Sl,Ml,lt,Pl,gs,nt,To,D,ep,Al,Do,it,Rl,fs,pt,Uo,U,tp,Tl,Go,ct,Dl,xs,ht,No,G,op,Ul,Ho,ie,Gl,ms,kt,Bo,N,ap,zo,$o,Nl,Hl,vt,sk=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feColorMatrix</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;matrix&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">values</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;1  0  0  0  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  1  0  0  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  0  1 -1  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  0  0  1  0 &quot;</span><span style="color: var(--shiki-color-text)">/&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feColorMatrix</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;matrix&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">values</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;1  0  0  0  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  1  0  0  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  0  0  0  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  0  0  1  0 &quot;</span><span style="color: var(--shiki-color-text)">/&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,xa,Ps,Fo,pe,Bl,zl,ce,Vo,$l,Fl,As,Vl,ut,Wl,Kl,bs,yt,Wo,H,rp,ma,Rs,Ko,he,jl,Jl,jo,dt,Xl,ws,_t,Jo,B,lp,ba,Ts,Xo,ke,Yl,Ql,Yo,Ds,Zl,Es,gt,Qo,z,np,sn,qs,ft,Zo,$,ip,wa,Us,sa,ve,en,tn,ea,xt,on,Cs,mt,ta,F,pp,Ea,f,oa,Gs,an,bt,rn,ln,ue,nn,ye,pn,cn,hn,X,Ns,kn,wt,vn,un,Et,yn,dn,aa,_n,gn,de,fn,qt,xn,mn,bn,_e,wn,Ct,En,qn,Cn,Ot,ek=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feMorphology</span><span style="color: var(--shiki-color-text)"> </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;..&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;..&quot;</span><span style="color: var(--shiki-color-text)"> </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;dilate || erode&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">radius</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,On,ra,Os,V,cp,In,ge,Ln,It,fe,Sn,Mn,qa,E,la,Hs,Pn,Lt,An,Rn,Y,Tn,St,Dn,Un,Mt,Gn,Nn,Pt,Hn,Bn,zn,At,tk=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">h1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">style</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;filter: url(#outline)&quot;</span><span style="color: var(--shiki-color-text)">&gt;Hello World&lt;/</span><span style="color: var(--shiki-token-string-expression)">h1</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;outline&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feMorphology</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;THICK&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;dilate&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">radius</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;4&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feFlood</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-color</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#32DFEC&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-opacity</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;1&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;THICK&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;in&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;OUTLINE&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">			&lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;OUTLINE&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">			&lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceGraphic&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;/</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,$n,na,Is,W,hp,Fn,xe,me,Vn,Wn,Rt,Kn,Ca,x,ia,Bs,jn,Tt,Jn,Xn,Q,Yn,Dt,Qn,Zn,Ut,si,ei,Gt,ti,oi,ai,Nt,ok=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">h1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">style</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;filter: url(#outline)&quot;</span><span style="color: var(--shiki-color-text)">&gt;Hello World&lt;/</span><span style="color: var(--shiki-token-string-expression)">h1</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;outline&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feMorphology</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;THICK&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;dilate&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">radius</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;4&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;THICK&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceGraphic&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;out&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,ri,pa,Ls,K,kp,li,be,ni,Ht,we,ii,pi,Oa;return ge=new Ek({}),be=new qk({}),{c(){y=e("section"),O=e("h2"),C=e("a"),Ks=n("SVG Filters 101"),_=c(),m=e("p"),Ce=n("[ "),js=e("a"),Fa=n("Source"),Va=n(" ]"),Wa=c(),rs=e("ul"),Js=e("li"),Ka=n("defined in "),Oe=e("code"),ja=n("<filter>"),Ja=n(" element"),Xa=c(),Jt=e("li"),Ya=n("define a series of one or more filter primitives"),Qa=c(),ls=e("li"),Za=n("1 filter primitive performs "),Xt=e("strong"),sr=n("1 single fundamental graphic operation"),er=n(" on "),Yt=e("strong"),tr=n("one or more"),or=n(" inputs"),ua=c(),Z=e("section"),Qt=e("h3"),Xs=e("a"),ar=n("filter primitives"),rr=c(),J=e("ul"),Ys=e("li"),lr=n("filter primitives named start with "),Ie=e("code"),nr=n("fe"),ir=n(', short for "filter effect"'),pr=c(),Zt=e("li"),cr=n("filter primitives take 1-2 inputs and output 1 result"),hr=c(),ss=e("li"),Le=e("code"),kr=n("in"),vr=n(" and "),Se=e("code"),ur=n("in2"),yr=n(" attribute for input, "),Me=e("code"),dr=n("result"),_r=n(" attribute for output"),gr=c(),Ss=e("li"),fr=n("input takes in result, "),Pe=e("code"),xr=n("SourceGraphic"),mr=n(" and "),Ae=e("code"),br=n("SourceAlpha"),wr=c(),Re=e("div"),ya=c(),b=e("section"),so=e("h3"),Qs=e("a"),Er=n("Filter region"),qr=c(),ns=e("ul"),eo=e("li"),Cr=n("filter region is based on the bounding box of the element"),Or=c(),to=e("li"),Ir=n("filter result beyond filter region will be clipped off"),Lr=c(),oo=e("li"),Sr=n("default filter region extends 10% the width and height of bounding box in all 4 directions"),Mr=c(),Te=e("div"),Pr=c(),ao=e("ul"),Zs=e("li"),Ar=n("use "),De=e("code"),Rr=n("<feFlood>"),Tr=n(" to figure out the filter region"),Dr=c(),Ue=e("div"),da=c(),k=e("section"),ro=e("h3"),se=e("a"),Ur=n("Create a drop shadow"),Gr=c(),lo=e("ol"),no=e("li"),Nr=n("Blur the silhouette of the layer"),Hr=c(),Ge=e("div"),Br=c(),io=e("p"),is=e("span"),Ne=e("picture"),po=e("source"),I=e("img"),zr=c(),He=e("ol"),co=e("li"),$r=n("Composite the blur layer with a solid color layer to create a colored blur"),Fr=c(),ho=e("ul"),Be=e("li"),Vr=n("Learn compositing + blending in "),ee=e("a"),Wr=n("https://www.sarasoueidan.com/blog/compositing-and-blending-in-css/"),Kr=c(),ze=e("div"),jr=c(),ko=e("p"),ps=e("span"),$e=e("picture"),vo=e("source"),L=e("img"),Jr=c(),Fe=e("ol"),Ve=e("li"),Xr=n("Shift the shadow bottom-right with "),We=e("code"),Yr=n("<feOffset>"),Qr=c(),Ke=e("div"),Zr=c(),uo=e("p"),cs=e("span"),je=e("picture"),yo=e("source"),S=e("img"),sl=c(),Je=e("ol"),_o=e("li"),el=n("Combine the shadow with the original image"),tl=c(),go=e("ul"),fo=e("li"),ol=n("layer merge in order of declaration, latter layer stacks on top of previous layer"),al=c(),Xe=e("div"),rl=c(),xo=e("p"),hs=e("span"),Ye=e("picture"),mo=e("source"),M=e("img"),_a=c(),w=e("section"),bo=e("h2"),Ms=e("a"),ll=n("Finessing "),Qe=e("code"),nl=n("feColorMatrix"),il=c(),te=e("p"),pl=n("[ "),oe=e("a"),cl=n("Source"),hl=n(" ]"),kl=c(),Ze=e("div"),vl=c(),st=e("div"),ul=c(),wo=e("ul"),Eo=e("li"),ae=e("a"),yl=n("color matrix playground"),ga=c(),es=e("section"),qo=e("h3"),re=e("a"),dl=n("1. Colorizing"),_l=c(),Co=e("p"),ks=e("span"),et=e("picture"),Oo=e("source"),P=e("img"),gl=c(),vs=e("ul"),Io=e("li"),fl=n("Removing other color to colorise image into the remaining color"),xl=c(),tt=e("li"),ml=n(`colorise red -> remove blue & green
`),us=e("span"),ot=e("picture"),Lo=e("source"),A=e("img"),bl=c(),at=e("li"),wl=n(`colorise yellow -> remove blue (red + green = yellow)
`),ys=e("span"),rt=e("picture"),So=e("source"),R=e("img"),fa=c(),T=e("section"),Mo=e("h3"),le=e("a"),El=n("2. Alpha values"),ql=c(),ds=e("ul"),ne=e("li"),Po=e("p"),Cl=n("add opacity level to the red channel"),Ol=c(),_s=e("ul"),Ao=e("li"),Il=n("any red remaining red"),Ll=c(),Ro=e("li"),Sl=n("green -> yellow (red + green = yellow)"),Ml=c(),lt=e("li"),Pl=n(`blue -> magenta (red + blue = magenta)
`),gs=e("span"),nt=e("picture"),To=e("source"),D=e("img"),Al=c(),Do=e("li"),it=e("p"),Rl=n(`hard yellow filter
`),fs=e("span"),pt=e("picture"),Uo=e("source"),U=e("img"),Tl=c(),Go=e("li"),ct=e("p"),Dl=n(`have a value some where between 0-1 to see the mixture in the shadow
`),xs=e("span"),ht=e("picture"),No=e("source"),G=e("img"),Ul=c(),Ho=e("ul"),ie=e("li"),Gl=n(`negative value could offset the channel by the amount of opacity
`),ms=e("span"),kt=e("picture"),Bo=e("source"),N=e("img"),zo=e("ul"),$o=e("li"),Nl=n("the following 2 color matrix is identical"),Hl=c(),vt=e("div"),xa=c(),Ps=e("section"),Fo=e("h3"),pe=e("a"),Bl=n("3. Blowing out channels"),zl=c(),ce=e("ul"),Vo=e("li"),$l=n("turn 1 color to white"),Fl=c(),As=e("li"),Vl=n("set the alpha channel to "),ut=e("code"),Wl=n("-2"),Kl=c(),bs=e("span"),yt=e("picture"),Wo=e("source"),H=e("img"),ma=c(),Rs=e("section"),Ko=e("h3"),he=e("a"),jl=n("4. Change color"),Jl=c(),jo=e("ul"),dt=e("li"),Xl=n(`No more green, any green looks like magenta now. (luminosity of green is lost)
`),ws=e("span"),_t=e("picture"),Jo=e("source"),B=e("img"),ba=c(),Ts=e("section"),Xo=e("h3"),ke=e("a"),Yl=n("5. Lighten or darken"),Ql=c(),Yo=e("ul"),Ds=e("li"),Zl=n(`increase intensity to lighten, decrease to darken
`),Es=e("span"),gt=e("picture"),Qo=e("source"),z=e("img"),sn=c(),qs=e("span"),ft=e("picture"),Zo=e("source"),$=e("img"),wa=c(),Us=e("section"),sa=e("h3"),ve=e("a"),en=n("6. Grayscale"),tn=c(),ea=e("ul"),xt=e("li"),on=n(`make sure red, green, blue have the same value
`),Cs=e("span"),mt=e("picture"),ta=e("source"),F=e("img"),Ea=c(),f=e("section"),oa=e("h2"),Gs=e("a"),an=n("Outline Text with "),bt=e("code"),rn=n("<feMorphology>"),ln=c(),ue=e("p"),nn=n("[ "),ye=e("a"),pn=n("Source"),cn=n(" ]"),hn=c(),X=e("ul"),Ns=e("li"),kn=n("\u{1F5BC} image size gets smaller when "),wt=e("code"),vn=n("erode"),un=n(", larger when "),Et=e("code"),yn=n("dilate"),dn=c(),aa=e("li"),_n=n("\u{1F5BC} image looks like painted with large brush \u{1F58C}"),gn=c(),de=e("li"),fn=n("\u{1F4DD} "),qt=e("code"),xn=n("erode"),mn=n(" sets each pixel to the darkest / most transparent neighbor"),bn=c(),_e=e("li"),wn=n("\u{1F4DD} "),Ct=e("code"),En=n("dilate"),qn=n(" sets each pixel to the brightest / least transparent neighbor"),Cn=c(),Ot=e("div"),On=c(),ra=e("p"),Os=e("span"),V=e("img"),In=c(),zi(ge.$$.fragment),Ln=c(),It=e("p"),fe=e("a"),Sn=n("REPL"),Mn=n(" to see effect with different radius."),qa=c(),E=e("section"),la=e("h3"),Hs=e("a"),Pn=n("Adding Colored Outline to Text with "),Lt=e("code"),An=n("<feMorphology />"),Rn=c(),Y=e("p"),Tn=n("1\uFE0F\u20E3 expand the text with "),St=e("code"),Dn=n('<feMorphology operator="dilate" />'),Un=n(`
2\uFE0F\u20E3 colorize via `),Mt=e("code"),Gn=n("<feFlood>"),Nn=n(" with solid color and "),Pt=e("code"),Hn=n("<feComposite />"),Bn=n(`
3\uFE0F\u20E3 merge the expanded colored text with the original text`),zn=c(),At=e("div"),$n=c(),na=e("p"),Is=e("span"),W=e("img"),Fn=c(),xe=e("p"),me=e("a"),Vn=n("REPL"),Wn=n(" to visualise "),Rt=e("code"),Kn=n("<feMorphology>"),Ca=c(),x=e("section"),ia=e("h3"),Bs=e("a"),jn=n("Knockout text with "),Tt=e("code"),Jn=n("<feMorphology />"),Xn=c(),Q=e("p"),Yn=n("1\uFE0F\u20E3 expand the text with "),Dt=e("code"),Qn=n('<feMorphology operator="dilate" />'),Zn=n(`
2\uFE0F\u20E3 composite with the source with `),Ut=e("code"),si=n("<feComposite />"),ei=n(" using "),Gt=e("code"),ti=n("out"),oi=n(" operator"),ai=c(),Nt=e("div"),ri=c(),pa=e("p"),Ls=e("span"),K=e("img"),li=c(),zi(be.$$.fragment),ni=c(),Ht=e("p"),we=e("a"),ii=n("REPL"),pi=n(" to visualise the build up the knock-out text."),this.h()},l(p){y=t(p,"SECTION",{});var v=a(y);O=t(v,"H2",{});var vp=a(O);C=t(vp,"A",{href:!0,id:!0});var up=a(C);Ks=i(up,"SVG Filters 101"),up.forEach(o),vp.forEach(o),_=h(v),m=t(v,"P",{});var Ia=a(m);Ce=i(Ia,"[ "),js=t(Ia,"A",{href:!0,rel:!0});var yp=a(js);Fa=i(yp,"Source"),yp.forEach(o),Va=i(Ia," ]"),Ia.forEach(o),Wa=h(v),rs=t(v,"UL",{});var Bt=a(rs);Js=t(Bt,"LI",{});var La=a(Js);Ka=i(La,"defined in "),Oe=t(La,"CODE",{class:!0});var dp=a(Oe);ja=i(dp,"<filter>"),dp.forEach(o),Ja=i(La," element"),La.forEach(o),Xa=h(Bt),Jt=t(Bt,"LI",{});var _p=a(Jt);Ya=i(_p,"define a series of one or more filter primitives"),_p.forEach(o),Qa=h(Bt),ls=t(Bt,"LI",{});var zt=a(ls);Za=i(zt,"1 filter primitive performs "),Xt=t(zt,"STRONG",{});var gp=a(Xt);sr=i(gp,"1 single fundamental graphic operation"),gp.forEach(o),er=i(zt," on "),Yt=t(zt,"STRONG",{});var fp=a(Yt);tr=i(fp,"one or more"),fp.forEach(o),or=i(zt," inputs"),zt.forEach(o),Bt.forEach(o),v.forEach(o),ua=h(p),Z=t(p,"SECTION",{});var $t=a(Z);Qt=t($t,"H3",{});var xp=a(Qt);Xs=t(xp,"A",{href:!0,id:!0});var mp=a(Xs);ar=i(mp,"filter primitives"),mp.forEach(o),xp.forEach(o),rr=h($t),J=t($t,"UL",{});var zs=a(J);Ys=t(zs,"LI",{});var Sa=a(Ys);lr=i(Sa,"filter primitives named start with "),Ie=t(Sa,"CODE",{class:!0});var bp=a(Ie);nr=i(bp,"fe"),bp.forEach(o),ir=i(Sa,', short for "filter effect"'),Sa.forEach(o),pr=h(zs),Zt=t(zs,"LI",{});var wp=a(Zt);cr=i(wp,"filter primitives take 1-2 inputs and output 1 result"),wp.forEach(o),hr=h(zs),ss=t(zs,"LI",{});var Ee=a(ss);Le=t(Ee,"CODE",{class:!0});var Ep=a(Le);kr=i(Ep,"in"),Ep.forEach(o),vr=i(Ee," and "),Se=t(Ee,"CODE",{class:!0});var qp=a(Se);ur=i(qp,"in2"),qp.forEach(o),yr=i(Ee," attribute for input, "),Me=t(Ee,"CODE",{class:!0});var Cp=a(Me);dr=i(Cp,"result"),Cp.forEach(o),_r=i(Ee," attribute for output"),Ee.forEach(o),gr=h(zs),Ss=t(zs,"LI",{});var ca=a(Ss);fr=i(ca,"input takes in result, "),Pe=t(ca,"CODE",{class:!0});var Op=a(Pe);xr=i(Op,"SourceGraphic"),Op.forEach(o),mr=i(ca," and "),Ae=t(ca,"CODE",{class:!0});var Ip=a(Ae);br=i(Ip,"SourceAlpha"),Ip.forEach(o),ca.forEach(o),zs.forEach(o),wr=h($t),Re=t($t,"DIV",{class:!0});var ak=a(Re);ak.forEach(o),$t.forEach(o),ya=h(p),b=t(p,"SECTION",{});var ts=a(b);so=t(ts,"H3",{});var Lp=a(so);Qs=t(Lp,"A",{href:!0,id:!0});var Sp=a(Qs);Er=i(Sp,"Filter region"),Sp.forEach(o),Lp.forEach(o),qr=h(ts),ns=t(ts,"UL",{});var Ft=a(ns);eo=t(Ft,"LI",{});var Mp=a(eo);Cr=i(Mp,"filter region is based on the bounding box of the element"),Mp.forEach(o),Or=h(Ft),to=t(Ft,"LI",{});var Pp=a(to);Ir=i(Pp,"filter result beyond filter region will be clipped off"),Pp.forEach(o),Lr=h(Ft),oo=t(Ft,"LI",{});var Ap=a(oo);Sr=i(Ap,"default filter region extends 10% the width and height of bounding box in all 4 directions"),Ap.forEach(o),Ft.forEach(o),Mr=h(ts),Te=t(ts,"DIV",{class:!0});var rk=a(Te);rk.forEach(o),Pr=h(ts),ao=t(ts,"UL",{});var Rp=a(ao);Zs=t(Rp,"LI",{});var Ma=a(Zs);Ar=i(Ma,"use "),De=t(Ma,"CODE",{class:!0});var Tp=a(De);Rr=i(Tp,"<feFlood>"),Tp.forEach(o),Tr=i(Ma," to figure out the filter region"),Ma.forEach(o),Rp.forEach(o),Dr=h(ts),Ue=t(ts,"DIV",{class:!0});var lk=a(Ue);lk.forEach(o),ts.forEach(o),da=h(p),k=t(p,"SECTION",{});var u=a(k);ro=t(u,"H3",{});var Dp=a(ro);se=t(Dp,"A",{href:!0,id:!0});var Up=a(se);Ur=i(Up,"Create a drop shadow"),Up.forEach(o),Dp.forEach(o),Gr=h(u),lo=t(u,"OL",{});var Gp=a(lo);no=t(Gp,"LI",{});var Np=a(no);Nr=i(Np,"Blur the silhouette of the layer"),Np.forEach(o),Gp.forEach(o),Hr=h(u),Ge=t(u,"DIV",{class:!0});var nk=a(Ge);nk.forEach(o),Br=h(u),io=t(u,"P",{});var Hp=a(io);is=t(Hp,"SPAN",{style:!0});var Bp=a(is);Ne=t(Bp,"PICTURE",{});var ci=a(Ne);po=t(ci,"SOURCE",{type:!0,srcset:!0}),I=t(ci,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),ci.forEach(o),Bp.forEach(o),Hp.forEach(o),zr=h(u),He=t(u,"OL",{start:!0});var zp=a(He);co=t(zp,"LI",{});var $p=a(co);$r=i($p,"Composite the blur layer with a solid color layer to create a colored blur"),$p.forEach(o),zp.forEach(o),Fr=h(u),ho=t(u,"UL",{});var Fp=a(ho);Be=t(Fp,"LI",{});var hi=a(Be);Vr=i(hi,"Learn compositing + blending in "),ee=t(hi,"A",{href:!0,rel:!0});var Vp=a(ee);Wr=i(Vp,"https://www.sarasoueidan.com/blog/compositing-and-blending-in-css/"),Vp.forEach(o),hi.forEach(o),Fp.forEach(o),Kr=h(u),ze=t(u,"DIV",{class:!0});var ik=a(ze);ik.forEach(o),jr=h(u),ko=t(u,"P",{});var Wp=a(ko);ps=t(Wp,"SPAN",{style:!0});var Kp=a(ps);$e=t(Kp,"PICTURE",{});var ki=a($e);vo=t(ki,"SOURCE",{type:!0,srcset:!0}),L=t(ki,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),ki.forEach(o),Kp.forEach(o),Wp.forEach(o),Jr=h(u),Fe=t(u,"OL",{start:!0});var jp=a(Fe);Ve=t(jp,"LI",{});var vi=a(Ve);Xr=i(vi,"Shift the shadow bottom-right with "),We=t(vi,"CODE",{class:!0});var Jp=a(We);Yr=i(Jp,"<feOffset>"),Jp.forEach(o),vi.forEach(o),jp.forEach(o),Qr=h(u),Ke=t(u,"DIV",{class:!0});var pk=a(Ke);pk.forEach(o),Zr=h(u),uo=t(u,"P",{});var Xp=a(uo);cs=t(Xp,"SPAN",{style:!0});var Yp=a(cs);je=t(Yp,"PICTURE",{});var ui=a(je);yo=t(ui,"SOURCE",{type:!0,srcset:!0}),S=t(ui,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),ui.forEach(o),Yp.forEach(o),Xp.forEach(o),sl=h(u),Je=t(u,"OL",{start:!0});var Qp=a(Je);_o=t(Qp,"LI",{});var Zp=a(_o);el=i(Zp,"Combine the shadow with the original image"),Zp.forEach(o),Qp.forEach(o),tl=h(u),go=t(u,"UL",{});var sc=a(go);fo=t(sc,"LI",{});var ec=a(fo);ol=i(ec,"layer merge in order of declaration, latter layer stacks on top of previous layer"),ec.forEach(o),sc.forEach(o),al=h(u),Xe=t(u,"DIV",{class:!0});var ck=a(Xe);ck.forEach(o),rl=h(u),xo=t(u,"P",{});var tc=a(xo);hs=t(tc,"SPAN",{style:!0});var oc=a(hs);Ye=t(oc,"PICTURE",{});var yi=a(Ye);mo=t(yi,"SOURCE",{type:!0,srcset:!0}),M=t(yi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),yi.forEach(o),oc.forEach(o),tc.forEach(o),u.forEach(o),_a=h(p),w=t(p,"SECTION",{});var os=a(w);bo=t(os,"H2",{});var ac=a(bo);Ms=t(ac,"A",{href:!0,id:!0});var di=a(Ms);ll=i(di,"Finessing "),Qe=t(di,"CODE",{class:!0});var rc=a(Qe);nl=i(rc,"feColorMatrix"),rc.forEach(o),di.forEach(o),ac.forEach(o),il=h(os),te=t(os,"P",{});var Pa=a(te);pl=i(Pa,"[ "),oe=t(Pa,"A",{href:!0,rel:!0});var lc=a(oe);cl=i(lc,"Source"),lc.forEach(o),hl=i(Pa," ]"),Pa.forEach(o),kl=h(os),Ze=t(os,"DIV",{class:!0});var hk=a(Ze);hk.forEach(o),vl=h(os),st=t(os,"DIV",{class:!0});var kk=a(st);kk.forEach(o),ul=h(os),wo=t(os,"UL",{});var nc=a(wo);Eo=t(nc,"LI",{});var ic=a(Eo);ae=t(ic,"A",{href:!0,rel:!0});var pc=a(ae);yl=i(pc,"color matrix playground"),pc.forEach(o),ic.forEach(o),nc.forEach(o),os.forEach(o),ga=h(p),es=t(p,"SECTION",{});var Vt=a(es);qo=t(Vt,"H3",{});var cc=a(qo);re=t(cc,"A",{href:!0,id:!0});var hc=a(re);dl=i(hc,"1. Colorizing"),hc.forEach(o),cc.forEach(o),_l=h(Vt),Co=t(Vt,"P",{});var kc=a(Co);ks=t(kc,"SPAN",{style:!0});var vc=a(ks);et=t(vc,"PICTURE",{});var _i=a(et);Oo=t(_i,"SOURCE",{type:!0,srcset:!0}),P=t(_i,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),_i.forEach(o),vc.forEach(o),kc.forEach(o),gl=h(Vt),vs=t(Vt,"UL",{});var Wt=a(vs);Io=t(Wt,"LI",{});var uc=a(Io);fl=i(uc,"Removing other color to colorise image into the remaining color"),uc.forEach(o),xl=h(Wt),tt=t(Wt,"LI",{});var gi=a(tt);ml=i(gi,`colorise red -> remove blue & green
`),us=t(gi,"SPAN",{style:!0});var yc=a(us);ot=t(yc,"PICTURE",{});var fi=a(ot);Lo=t(fi,"SOURCE",{type:!0,srcset:!0}),A=t(fi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),fi.forEach(o),yc.forEach(o),gi.forEach(o),bl=h(Wt),at=t(Wt,"LI",{});var xi=a(at);wl=i(xi,`colorise yellow -> remove blue (red + green = yellow)
`),ys=t(xi,"SPAN",{style:!0});var dc=a(ys);rt=t(dc,"PICTURE",{});var mi=a(rt);So=t(mi,"SOURCE",{type:!0,srcset:!0}),R=t(mi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),mi.forEach(o),dc.forEach(o),xi.forEach(o),Wt.forEach(o),Vt.forEach(o),fa=h(p),T=t(p,"SECTION",{});var $s=a(T);Mo=t($s,"H3",{});var _c=a(Mo);le=t(_c,"A",{href:!0,id:!0});var gc=a(le);El=i(gc,"2. Alpha values"),gc.forEach(o),_c.forEach(o),ql=h($s),ds=t($s,"UL",{});var Kt=a(ds);ne=t(Kt,"LI",{});var Aa=a(ne);Po=t(Aa,"P",{});var fc=a(Po);Cl=i(fc,"add opacity level to the red channel"),fc.forEach(o),Ol=h(Aa),_s=t(Aa,"UL",{});var jt=a(_s);Ao=t(jt,"LI",{});var xc=a(Ao);Il=i(xc,"any red remaining red"),xc.forEach(o),Ll=h(jt),Ro=t(jt,"LI",{});var mc=a(Ro);Sl=i(mc,"green -> yellow (red + green = yellow)"),mc.forEach(o),Ml=h(jt),lt=t(jt,"LI",{});var bi=a(lt);Pl=i(bi,`blue -> magenta (red + blue = magenta)
`),gs=t(bi,"SPAN",{style:!0});var bc=a(gs);nt=t(bc,"PICTURE",{});var wi=a(nt);To=t(wi,"SOURCE",{type:!0,srcset:!0}),D=t(wi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),wi.forEach(o),bc.forEach(o),bi.forEach(o),jt.forEach(o),Aa.forEach(o),Al=h(Kt),Do=t(Kt,"LI",{});var wc=a(Do);it=t(wc,"P",{});var Ei=a(it);Rl=i(Ei,`hard yellow filter
`),fs=t(Ei,"SPAN",{style:!0});var Ec=a(fs);pt=t(Ec,"PICTURE",{});var qi=a(pt);Uo=t(qi,"SOURCE",{type:!0,srcset:!0}),U=t(qi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),qi.forEach(o),Ec.forEach(o),Ei.forEach(o),wc.forEach(o),Tl=h(Kt),Go=t(Kt,"LI",{});var qc=a(Go);ct=t(qc,"P",{});var Ci=a(ct);Dl=i(Ci,`have a value some where between 0-1 to see the mixture in the shadow
`),xs=t(Ci,"SPAN",{style:!0});var Cc=a(xs);ht=t(Cc,"PICTURE",{});var Oi=a(ht);No=t(Oi,"SOURCE",{type:!0,srcset:!0}),G=t(Oi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Oi.forEach(o),Cc.forEach(o),Ci.forEach(o),qc.forEach(o),Kt.forEach(o),Ul=h($s),Ho=t($s,"UL",{});var Oc=a(Ho);ie=t(Oc,"LI",{});var Ra=a(ie);Gl=i(Ra,`negative value could offset the channel by the amount of opacity
`),ms=t(Ra,"SPAN",{style:!0});var Ic=a(ms);kt=t(Ic,"PICTURE",{});var Ii=a(kt);Bo=t(Ii,"SOURCE",{type:!0,srcset:!0}),N=t(Ii,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Ii.forEach(o),Ic.forEach(o),zo=t(Ra,"UL",{});var Lc=a(zo);$o=t(Lc,"LI",{});var Sc=a($o);Nl=i(Sc,"the following 2 color matrix is identical"),Sc.forEach(o),Lc.forEach(o),Ra.forEach(o),Oc.forEach(o),Hl=h($s),vt=t($s,"DIV",{class:!0});var vk=a(vt);vk.forEach(o),$s.forEach(o),xa=h(p),Ps=t(p,"SECTION",{});var Ta=a(Ps);Fo=t(Ta,"H3",{});var Mc=a(Fo);pe=t(Mc,"A",{href:!0,id:!0});var Pc=a(pe);Bl=i(Pc,"3. Blowing out channels"),Pc.forEach(o),Mc.forEach(o),zl=h(Ta),ce=t(Ta,"UL",{});var Da=a(ce);Vo=t(Da,"LI",{});var Ac=a(Vo);$l=i(Ac,"turn 1 color to white"),Ac.forEach(o),Fl=h(Da),As=t(Da,"LI",{});var ha=a(As);Vl=i(ha,"set the alpha channel to "),ut=t(ha,"CODE",{class:!0});var Rc=a(ut);Wl=i(Rc,"-2"),Rc.forEach(o),Kl=h(ha),bs=t(ha,"SPAN",{style:!0});var Tc=a(bs);yt=t(Tc,"PICTURE",{});var Li=a(yt);Wo=t(Li,"SOURCE",{type:!0,srcset:!0}),H=t(Li,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Li.forEach(o),Tc.forEach(o),ha.forEach(o),Da.forEach(o),Ta.forEach(o),ma=h(p),Rs=t(p,"SECTION",{});var Ua=a(Rs);Ko=t(Ua,"H3",{});var Dc=a(Ko);he=t(Dc,"A",{href:!0,id:!0});var Uc=a(he);jl=i(Uc,"4. Change color"),Uc.forEach(o),Dc.forEach(o),Jl=h(Ua),jo=t(Ua,"UL",{});var Gc=a(jo);dt=t(Gc,"LI",{});var Si=a(dt);Xl=i(Si,`No more green, any green looks like magenta now. (luminosity of green is lost)
`),ws=t(Si,"SPAN",{style:!0});var Nc=a(ws);_t=t(Nc,"PICTURE",{});var Mi=a(_t);Jo=t(Mi,"SOURCE",{type:!0,srcset:!0}),B=t(Mi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Mi.forEach(o),Nc.forEach(o),Si.forEach(o),Gc.forEach(o),Ua.forEach(o),ba=h(p),Ts=t(p,"SECTION",{});var Ga=a(Ts);Xo=t(Ga,"H3",{});var Hc=a(Xo);ke=t(Hc,"A",{href:!0,id:!0});var Bc=a(ke);Yl=i(Bc,"5. Lighten or darken"),Bc.forEach(o),Hc.forEach(o),Ql=h(Ga),Yo=t(Ga,"UL",{});var zc=a(Yo);Ds=t(zc,"LI",{});var ka=a(Ds);Zl=i(ka,`increase intensity to lighten, decrease to darken
`),Es=t(ka,"SPAN",{style:!0});var $c=a(Es);gt=t($c,"PICTURE",{});var Pi=a(gt);Qo=t(Pi,"SOURCE",{type:!0,srcset:!0}),z=t(Pi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Pi.forEach(o),$c.forEach(o),sn=h(ka),qs=t(ka,"SPAN",{style:!0});var Fc=a(qs);ft=t(Fc,"PICTURE",{});var Ai=a(ft);Zo=t(Ai,"SOURCE",{type:!0,srcset:!0}),$=t(Ai,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Ai.forEach(o),Fc.forEach(o),ka.forEach(o),zc.forEach(o),Ga.forEach(o),wa=h(p),Us=t(p,"SECTION",{});var Na=a(Us);sa=t(Na,"H3",{});var Vc=a(sa);ve=t(Vc,"A",{href:!0,id:!0});var Wc=a(ve);en=i(Wc,"6. Grayscale"),Wc.forEach(o),Vc.forEach(o),tn=h(Na),ea=t(Na,"UL",{});var Kc=a(ea);xt=t(Kc,"LI",{});var Ri=a(xt);on=i(Ri,`make sure red, green, blue have the same value
`),Cs=t(Ri,"SPAN",{style:!0});var jc=a(Cs);mt=t(jc,"PICTURE",{});var Ti=a(mt);ta=t(Ti,"SOURCE",{type:!0,srcset:!0}),F=t(Ti,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Ti.forEach(o),jc.forEach(o),Ri.forEach(o),Kc.forEach(o),Na.forEach(o),Ea=h(p),f=t(p,"SECTION",{});var q=a(f);oa=t(q,"H2",{});var Jc=a(oa);Gs=t(Jc,"A",{href:!0,id:!0});var Di=a(Gs);an=i(Di,"Outline Text with "),bt=t(Di,"CODE",{class:!0});var Xc=a(bt);rn=i(Xc,"<feMorphology>"),Xc.forEach(o),Di.forEach(o),Jc.forEach(o),ln=h(q),ue=t(q,"P",{});var Ha=a(ue);nn=i(Ha,"[ "),ye=t(Ha,"A",{href:!0,rel:!0});var Yc=a(ye);pn=i(Yc,"Source"),Yc.forEach(o),cn=i(Ha," ]"),Ha.forEach(o),hn=h(q),X=t(q,"UL",{});var Fs=a(X);Ns=t(Fs,"LI",{});var va=a(Ns);kn=i(va,"\u{1F5BC} image size gets smaller when "),wt=t(va,"CODE",{class:!0});var Qc=a(wt);vn=i(Qc,"erode"),Qc.forEach(o),un=i(va,", larger when "),Et=t(va,"CODE",{class:!0});var Zc=a(Et);yn=i(Zc,"dilate"),Zc.forEach(o),va.forEach(o),dn=h(Fs),aa=t(Fs,"LI",{});var sh=a(aa);_n=i(sh,"\u{1F5BC} image looks like painted with large brush \u{1F58C}"),sh.forEach(o),gn=h(Fs),de=t(Fs,"LI",{});var Ba=a(de);fn=i(Ba,"\u{1F4DD} "),qt=t(Ba,"CODE",{class:!0});var eh=a(qt);xn=i(eh,"erode"),eh.forEach(o),mn=i(Ba," sets each pixel to the darkest / most transparent neighbor"),Ba.forEach(o),bn=h(Fs),_e=t(Fs,"LI",{});var za=a(_e);wn=i(za,"\u{1F4DD} "),Ct=t(za,"CODE",{class:!0});var th=a(Ct);En=i(th,"dilate"),th.forEach(o),qn=i(za," sets each pixel to the brightest / least transparent neighbor"),za.forEach(o),Fs.forEach(o),Cn=h(q),Ot=t(q,"DIV",{class:!0});var uk=a(Ot);uk.forEach(o),On=h(q),ra=t(q,"P",{});var oh=a(ra);Os=t(oh,"SPAN",{style:!0});var ah=a(Os);V=t(ah,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),ah.forEach(o),oh.forEach(o),In=h(q),$i(ge.$$.fragment,q),Ln=h(q),It=t(q,"P",{});var Ui=a(It);fe=t(Ui,"A",{href:!0,rel:!0});var rh=a(fe);Sn=i(rh,"REPL"),rh.forEach(o),Mn=i(Ui," to see effect with different radius."),Ui.forEach(o),q.forEach(o),qa=h(p),E=t(p,"SECTION",{});var as=a(E);la=t(as,"H3",{});var lh=a(la);Hs=t(lh,"A",{href:!0,id:!0});var Gi=a(Hs);Pn=i(Gi,"Adding Colored Outline to Text with "),Lt=t(Gi,"CODE",{class:!0});var nh=a(Lt);An=i(nh,"<feMorphology />"),nh.forEach(o),Gi.forEach(o),lh.forEach(o),Rn=h(as),Y=t(as,"P",{});var Vs=a(Y);Tn=i(Vs,"1\uFE0F\u20E3 expand the text with "),St=t(Vs,"CODE",{class:!0});var ih=a(St);Dn=i(ih,'<feMorphology operator="dilate" />'),ih.forEach(o),Un=i(Vs,`
2\uFE0F\u20E3 colorize via `),Mt=t(Vs,"CODE",{class:!0});var ph=a(Mt);Gn=i(ph,"<feFlood>"),ph.forEach(o),Nn=i(Vs," with solid color and "),Pt=t(Vs,"CODE",{class:!0});var ch=a(Pt);Hn=i(ch,"<feComposite />"),ch.forEach(o),Bn=i(Vs,`
3\uFE0F\u20E3 merge the expanded colored text with the original text`),Vs.forEach(o),zn=h(as),At=t(as,"DIV",{class:!0});var yk=a(At);yk.forEach(o),$n=h(as),na=t(as,"P",{});var hh=a(na);Is=t(hh,"SPAN",{style:!0});var kh=a(Is);W=t(kh,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),kh.forEach(o),hh.forEach(o),Fn=h(as),xe=t(as,"P",{});var $a=a(xe);me=t($a,"A",{href:!0,rel:!0});var vh=a(me);Vn=i(vh,"REPL"),vh.forEach(o),Wn=i($a," to visualise "),Rt=t($a,"CODE",{class:!0});var uh=a(Rt);Kn=i(uh,"<feMorphology>"),uh.forEach(o),$a.forEach(o),as.forEach(o),Ca=h(p),x=t(p,"SECTION",{});var j=a(x);ia=t(j,"H3",{});var yh=a(ia);Bs=t(yh,"A",{href:!0,id:!0});var Ni=a(Bs);jn=i(Ni,"Knockout text with "),Tt=t(Ni,"CODE",{class:!0});var dh=a(Tt);Jn=i(dh,"<feMorphology />"),dh.forEach(o),Ni.forEach(o),yh.forEach(o),Xn=h(j),Q=t(j,"P",{});var Ws=a(Q);Yn=i(Ws,"1\uFE0F\u20E3 expand the text with "),Dt=t(Ws,"CODE",{class:!0});var _h=a(Dt);Qn=i(_h,'<feMorphology operator="dilate" />'),_h.forEach(o),Zn=i(Ws,`
2\uFE0F\u20E3 composite with the source with `),Ut=t(Ws,"CODE",{class:!0});var gh=a(Ut);si=i(gh,"<feComposite />"),gh.forEach(o),ei=i(Ws," using "),Gt=t(Ws,"CODE",{class:!0});var fh=a(Gt);ti=i(fh,"out"),fh.forEach(o),oi=i(Ws," operator"),Ws.forEach(o),ai=h(j),Nt=t(j,"DIV",{class:!0});var dk=a(Nt);dk.forEach(o),ri=h(j),pa=t(j,"P",{});var xh=a(pa);Ls=t(xh,"SPAN",{style:!0});var mh=a(Ls);K=t(mh,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),mh.forEach(o),xh.forEach(o),li=h(j),$i(be.$$.fragment,j),ni=h(j),Ht=t(j,"P",{});var Hi=a(Ht);we=t(Hi,"A",{href:!0,rel:!0});var bh=a(we);ii=i(bh,"REPL"),bh.forEach(o),pi=i(Hi," to visualise the build up the knock-out text."),Hi.forEach(o),j.forEach(o),this.h()},h(){r(C,"href","#svg-filters-101"),r(C,"id","svg-filters-101"),r(js,"href","https://tympanus.net/codrops/2019/01/15/svg-filters-101/"),r(js,"rel","nofollow"),r(Oe,"class","inline"),r(Xs,"href","#filter-primitives"),r(Xs,"id","filter-primitives"),r(Ie,"class","inline"),r(Le,"class","inline"),r(Se,"class","inline"),r(Me,"class","inline"),r(Pe,"class","inline"),r(Ae,"class","inline"),r(Re,"class","code-section"),r(Qs,"href","#filter-region"),r(Qs,"id","filter-region"),r(Te,"class","code-section"),r(De,"class","inline"),r(Ue,"class","code-section"),r(se,"href","#create-a-drop-shadow"),r(se,"id","create-a-drop-shadow"),r(Ge,"class","code-section"),r(po,"type","image/webp"),r(po,"srcset",mv+", "+xv+" 2x"),g(I.src,ji=$h)||r(I,"src",ji),r(I,"srcset",$h+", "+bv+" 2x"),r(I,"loading","lazy"),l(I,"position","absolute"),l(I,"top","0"),l(I,"width","100%"),l(I,"height","100%"),r(I,"alt","step-1"),l(is,"display","block"),l(is,"position","relative"),l(is,"padding-top","97.450%"),l(is,"width","100%"),r(He,"start","2"),r(ee,"href","https://www.sarasoueidan.com/blog/compositing-and-blending-in-css/"),r(ee,"rel","nofollow"),r(ze,"class","code-section"),r(vo,"type","image/webp"),r(vo,"srcset",gv+", "+_v+" 2x"),g(L.src,Ji=zh)||r(L,"src",Ji),r(L,"srcset",zh+", "+fv+" 2x"),r(L,"loading","lazy"),l(L,"position","absolute"),l(L,"top","0"),l(L,"width","100%"),l(L,"height","100%"),r(L,"alt","step-2"),l(ps,"display","block"),l(ps,"position","relative"),l(ps,"padding-top","96.866%"),l(ps,"width","100%"),r(We,"class","inline"),r(Fe,"start","3"),r(Ke,"class","code-section"),r(yo,"type","image/webp"),r(yo,"srcset",yv+", "+uv+" 2x"),g(S.src,Xi=Bh)||r(S,"src",Xi),r(S,"srcset",Bh+", "+dv+" 2x"),r(S,"loading","lazy"),l(S,"position","absolute"),l(S,"top","0"),l(S,"width","100%"),l(S,"height","100%"),r(S,"alt","step-3"),l(cs,"display","block"),l(cs,"position","relative"),l(cs,"padding-top","96.023%"),l(cs,"width","100%"),r(Je,"start","4"),r(Xe,"class","code-section"),r(mo,"type","image/webp"),r(mo,"srcset",kv+", "+hv+" 2x"),g(M.src,Yi=Hh)||r(M,"src",Yi),r(M,"srcset",Hh+", "+vv+" 2x"),r(M,"loading","lazy"),l(M,"position","absolute"),l(M,"top","0"),l(M,"width","100%"),l(M,"height","100%"),r(M,"alt","step-4"),l(hs,"display","block"),l(hs,"position","relative"),l(hs,"padding-top","97.443%"),l(hs,"width","100%"),r(Qe,"class","inline"),r(Ms,"href","#finessing-fecolormatrix"),r(Ms,"id","finessing-fecolormatrix"),r(oe,"href","https://alistapart.com/article/finessing-fecolormatrix/"),r(oe,"rel","nofollow"),r(Ze,"class","code-section"),r(st,"class","code-section"),r(ae,"href","https://svelte.dev/repl/1fa3e758ef2442d1bcc1eba37a2bdd58"),r(ae,"rel","nofollow"),r(re,"href","#1-colorizing"),r(re,"id","1-colorizing"),r(Oo,"type","image/webp"),r(Oo,"srcset",pv+", "+iv+" 2x"),g(P.src,Qi=Nh)||r(P,"src",Qi),r(P,"srcset",Nh+", "+cv+" 2x"),r(P,"loading","lazy"),l(P,"position","absolute"),l(P,"top","0"),l(P,"width","100%"),l(P,"height","100%"),r(P,"alt","colorise default"),l(ks,"display","block"),l(ks,"position","relative"),l(ks,"padding-top","92.081%"),l(ks,"width","100%"),r(Lo,"type","image/webp"),r(Lo,"srcset",lv+", "+rv+" 2x"),g(A.src,Zi=Gh)||r(A,"src",Zi),r(A,"srcset",Gh+", "+nv+" 2x"),r(A,"loading","lazy"),l(A,"position","absolute"),l(A,"top","0"),l(A,"width","100%"),l(A,"height","100%"),r(A,"alt","colorise red"),l(us,"display","block"),l(us,"position","relative"),l(us,"padding-top","91.403%"),l(us,"width","100%"),r(So,"type","image/webp"),r(So,"srcset",ov+", "+tv+" 2x"),g(R.src,sp=Uh)||r(R,"src",sp),r(R,"srcset",Uh+", "+av+" 2x"),r(R,"loading","lazy"),l(R,"position","absolute"),l(R,"top","0"),l(R,"width","100%"),l(R,"height","100%"),r(R,"alt","colorise yellow"),l(ys,"display","block"),l(ys,"position","relative"),l(ys,"padding-top","92.466%"),l(ys,"width","100%"),r(le,"href","#2-alpha-values"),r(le,"id","2-alpha-values"),r(To,"type","image/webp"),r(To,"srcset",sv+", "+Zk+" 2x"),g(D.src,ep=Dh)||r(D,"src",ep),r(D,"srcset",Dh+", "+ev+" 2x"),r(D,"loading","lazy"),l(D,"position","absolute"),l(D,"top","0"),l(D,"width","100%"),l(D,"height","100%"),r(D,"alt","red filter"),l(gs,"display","block"),l(gs,"position","relative"),l(gs,"padding-top","91.533%"),l(gs,"width","100%"),r(Uo,"type","image/webp"),r(Uo,"srcset",Yk+", "+Xk+" 2x"),g(U.src,tp=Th)||r(U,"src",tp),r(U,"srcset",Th+", "+Qk+" 2x"),r(U,"loading","lazy"),l(U,"position","absolute"),l(U,"top","0"),l(U,"width","100%"),l(U,"height","100%"),r(U,"alt","yellow filter"),l(fs,"display","block"),l(fs,"position","relative"),l(fs,"padding-top","90.639%"),l(fs,"width","100%"),r(No,"type","image/webp"),r(No,"srcset",jk+", "+Kk+" 2x"),g(G.src,op=Rh)||r(G,"src",op),r(G,"srcset",Rh+", "+Jk+" 2x"),r(G,"loading","lazy"),l(G,"position","absolute"),l(G,"top","0"),l(G,"width","100%"),l(G,"height","100%"),r(G,"alt","yellow filter 2"),l(xs,"display","block"),l(xs,"position","relative"),l(xs,"padding-top","91.324%"),l(xs,"width","100%"),r(Bo,"type","image/webp"),r(Bo,"srcset",Vk+", "+Fk+" 2x"),g(N.src,ap=Ah)||r(N,"src",ap),r(N,"srcset",Ah+", "+Wk+" 2x"),r(N,"loading","lazy"),l(N,"position","absolute"),l(N,"top","0"),l(N,"width","100%"),l(N,"height","100%"),r(N,"alt","negative alpha"),l(ms,"display","block"),l(ms,"position","relative"),l(ms,"padding-top","92.027%"),l(ms,"width","100%"),r(vt,"class","code-section"),r(pe,"href","#3-blowing-out-channels"),r(pe,"id","3-blowing-out-channels"),r(ut,"class","inline"),r(Wo,"type","image/webp"),r(Wo,"srcset",zk+", "+Bk+" 2x"),g(H.src,rp=Ph)||r(H,"src",rp),r(H,"srcset",Ph+", "+$k+" 2x"),r(H,"loading","lazy"),l(H,"position","absolute"),l(H,"top","0"),l(H,"width","100%"),l(H,"height","100%"),r(H,"alt","blow-out-green"),l(bs,"display","block"),l(bs,"position","relative"),l(bs,"padding-top","92.466%"),l(bs,"width","100%"),r(he,"href","#4-change-color"),r(he,"id","4-change-color"),r(Jo,"type","image/webp"),r(Jo,"srcset",Nk+", "+Gk+" 2x"),g(B.src,lp=Mh)||r(B,"src",lp),r(B,"srcset",Mh+", "+Hk+" 2x"),r(B,"loading","lazy"),l(B,"position","absolute"),l(B,"top","0"),l(B,"width","100%"),l(B,"height","100%"),r(B,"alt","change-color"),l(ws,"display","block"),l(ws,"position","relative"),l(ws,"padding-top","90.868%"),l(ws,"width","100%"),r(ke,"href","#5-lighten-or-darken"),r(ke,"id","5-lighten-or-darken"),r(Qo,"type","image/webp"),r(Qo,"srcset",Dk+", "+Tk+" 2x"),g(z.src,np=Sh)||r(z,"src",np),r(z,"srcset",Sh+", "+Uk+" 2x"),r(z,"loading","lazy"),l(z,"position","absolute"),l(z,"top","0"),l(z,"width","100%"),l(z,"height","100%"),r(z,"alt","lighten"),l(Es,"display","block"),l(Es,"position","relative"),l(Es,"padding-top","92.220%"),l(Es,"width","100%"),r(Zo,"type","image/webp"),r(Zo,"srcset",Ak+", "+Pk+" 2x"),g($.src,ip=Lh)||r($,"src",ip),r($,"srcset",Lh+", "+Rk+" 2x"),r($,"loading","lazy"),l($,"position","absolute"),l($,"top","0"),l($,"width","100%"),l($,"height","100%"),r($,"alt","darken"),l(qs,"display","block"),l(qs,"position","relative"),l(qs,"padding-top","92.184%"),l(qs,"width","100%"),r(ve,"href","#6-grayscale"),r(ve,"id","6-grayscale"),r(ta,"type","image/webp"),r(ta,"srcset",Sk+", "+Lk+" 2x"),g(F.src,pp=Ih)||r(F,"src",pp),r(F,"srcset",Ih+", "+Mk+" 2x"),r(F,"loading","lazy"),l(F,"position","absolute"),l(F,"top","0"),l(F,"width","100%"),l(F,"height","100%"),r(F,"alt","grayscale"),l(Cs,"display","block"),l(Cs,"position","relative"),l(Cs,"padding-top","91.264%"),l(Cs,"width","100%"),r(bt,"class","inline"),r(Gs,"href","#outline-text-with-lt-femorphology-gt"),r(Gs,"id","outline-text-with-lt-femorphology-gt"),r(ye,"href","https://tympanus.net/codrops/2019/01/22/svg-filter-effects-outline-text-with-femorphology/"),r(ye,"rel","nofollow"),r(wt,"class","inline"),r(Et,"class","inline"),r(qt,"class","inline"),r(Ct,"class","inline"),r(Ot,"class","code-section"),g(V.src,cp=Oh)||r(V,"src",cp),r(V,"srcset",Oh+", "+Ik+" 2x"),r(V,"loading","lazy"),l(V,"position","absolute"),l(V,"top","0"),l(V,"width","100%"),l(V,"height","100%"),r(V,"alt","feMorphology"),l(Os,"display","block"),l(Os,"position","relative"),l(Os,"padding-top","56.786%"),l(Os,"width","100%"),r(fe,"href","https://svelte.dev/repl/1f0a2c16650541d082beeecc2a046c9f?version=3.29.0"),r(fe,"rel","nofollow"),r(Lt,"class","inline"),r(Hs,"href","#adding-colored-outline-to-text-with-lt-femorphology-gt"),r(Hs,"id","adding-colored-outline-to-text-with-lt-femorphology-gt"),r(St,"class","inline"),r(Mt,"class","inline"),r(Pt,"class","inline"),r(At,"class","code-section"),g(W.src,hp=Ch)||r(W,"src",hp),r(W,"srcset",Ch+", "+Ok+" 2x"),r(W,"loading","lazy"),l(W,"position","absolute"),l(W,"top","0"),l(W,"width","100%"),l(W,"height","100%"),r(W,"alt","feMorphology outline text"),l(Is,"display","block"),l(Is,"position","relative"),l(Is,"padding-top","64.643%"),l(Is,"width","100%"),r(me,"href","https://svelte.dev/repl/a1a3aa1cc844476b9ca96fec3f0164ed?version=3.29.0"),r(me,"rel","nofollow"),r(Rt,"class","inline"),r(Tt,"class","inline"),r(Bs,"href","#knockout-text-with-lt-femorphology-gt"),r(Bs,"id","knockout-text-with-lt-femorphology-gt"),r(Dt,"class","inline"),r(Ut,"class","inline"),r(Gt,"class","inline"),r(Nt,"class","code-section"),g(K.src,kp=qh)||r(K,"src",kp),r(K,"srcset",qh+", "+Ck+" 2x"),r(K,"loading","lazy"),l(K,"position","absolute"),l(K,"top","0"),l(K,"width","100%"),l(K,"height","100%"),r(K,"alt","feMorphology knockout text"),l(Ls,"display","block"),l(Ls,"position","relative"),l(Ls,"padding-top","42.643%"),l(Ls,"width","100%"),r(we,"href","https://svelte.dev/repl/30153d68324d475189d34afa26a3186f?version=3.29.0"),r(we,"rel","nofollow")},m(p,v){d(p,y,v),s(y,O),s(O,C),s(C,Ks),s(y,_),s(y,m),s(m,Ce),s(m,js),s(js,Fa),s(m,Va),s(y,Wa),s(y,rs),s(rs,Js),s(Js,Ka),s(Js,Oe),s(Oe,ja),s(Js,Ja),s(rs,Xa),s(rs,Jt),s(Jt,Ya),s(rs,Qa),s(rs,ls),s(ls,Za),s(ls,Xt),s(Xt,sr),s(ls,er),s(ls,Yt),s(Yt,tr),s(ls,or),d(p,ua,v),d(p,Z,v),s(Z,Qt),s(Qt,Xs),s(Xs,ar),s(Z,rr),s(Z,J),s(J,Ys),s(Ys,lr),s(Ys,Ie),s(Ie,nr),s(Ys,ir),s(J,pr),s(J,Zt),s(Zt,cr),s(J,hr),s(J,ss),s(ss,Le),s(Le,kr),s(ss,vr),s(ss,Se),s(Se,ur),s(ss,yr),s(ss,Me),s(Me,dr),s(ss,_r),s(J,gr),s(J,Ss),s(Ss,fr),s(Ss,Pe),s(Pe,xr),s(Ss,mr),s(Ss,Ae),s(Ae,br),s(Z,wr),s(Z,Re),Re.innerHTML=Vh,d(p,ya,v),d(p,b,v),s(b,so),s(so,Qs),s(Qs,Er),s(b,qr),s(b,ns),s(ns,eo),s(eo,Cr),s(ns,Or),s(ns,to),s(to,Ir),s(ns,Lr),s(ns,oo),s(oo,Sr),s(b,Mr),s(b,Te),Te.innerHTML=Wh,s(b,Pr),s(b,ao),s(ao,Zs),s(Zs,Ar),s(Zs,De),s(De,Rr),s(Zs,Tr),s(b,Dr),s(b,Ue),Ue.innerHTML=Kh,d(p,da,v),d(p,k,v),s(k,ro),s(ro,se),s(se,Ur),s(k,Gr),s(k,lo),s(lo,no),s(no,Nr),s(k,Hr),s(k,Ge),Ge.innerHTML=jh,s(k,Br),s(k,io),s(io,is),s(is,Ne),s(Ne,po),s(Ne,I),s(k,zr),s(k,He),s(He,co),s(co,$r),s(k,Fr),s(k,ho),s(ho,Be),s(Be,Vr),s(Be,ee),s(ee,Wr),s(k,Kr),s(k,ze),ze.innerHTML=Jh,s(k,jr),s(k,ko),s(ko,ps),s(ps,$e),s($e,vo),s($e,L),s(k,Jr),s(k,Fe),s(Fe,Ve),s(Ve,Xr),s(Ve,We),s(We,Yr),s(k,Qr),s(k,Ke),Ke.innerHTML=Xh,s(k,Zr),s(k,uo),s(uo,cs),s(cs,je),s(je,yo),s(je,S),s(k,sl),s(k,Je),s(Je,_o),s(_o,el),s(k,tl),s(k,go),s(go,fo),s(fo,ol),s(k,al),s(k,Xe),Xe.innerHTML=Yh,s(k,rl),s(k,xo),s(xo,hs),s(hs,Ye),s(Ye,mo),s(Ye,M),d(p,_a,v),d(p,w,v),s(w,bo),s(bo,Ms),s(Ms,ll),s(Ms,Qe),s(Qe,nl),s(w,il),s(w,te),s(te,pl),s(te,oe),s(oe,cl),s(te,hl),s(w,kl),s(w,Ze),Ze.innerHTML=Qh,s(w,vl),s(w,st),st.innerHTML=Zh,s(w,ul),s(w,wo),s(wo,Eo),s(Eo,ae),s(ae,yl),d(p,ga,v),d(p,es,v),s(es,qo),s(qo,re),s(re,dl),s(es,_l),s(es,Co),s(Co,ks),s(ks,et),s(et,Oo),s(et,P),s(es,gl),s(es,vs),s(vs,Io),s(Io,fl),s(vs,xl),s(vs,tt),s(tt,ml),s(tt,us),s(us,ot),s(ot,Lo),s(ot,A),s(vs,bl),s(vs,at),s(at,wl),s(at,ys),s(ys,rt),s(rt,So),s(rt,R),d(p,fa,v),d(p,T,v),s(T,Mo),s(Mo,le),s(le,El),s(T,ql),s(T,ds),s(ds,ne),s(ne,Po),s(Po,Cl),s(ne,Ol),s(ne,_s),s(_s,Ao),s(Ao,Il),s(_s,Ll),s(_s,Ro),s(Ro,Sl),s(_s,Ml),s(_s,lt),s(lt,Pl),s(lt,gs),s(gs,nt),s(nt,To),s(nt,D),s(ds,Al),s(ds,Do),s(Do,it),s(it,Rl),s(it,fs),s(fs,pt),s(pt,Uo),s(pt,U),s(ds,Tl),s(ds,Go),s(Go,ct),s(ct,Dl),s(ct,xs),s(xs,ht),s(ht,No),s(ht,G),s(T,Ul),s(T,Ho),s(Ho,ie),s(ie,Gl),s(ie,ms),s(ms,kt),s(kt,Bo),s(kt,N),s(ie,zo),s(zo,$o),s($o,Nl),s(T,Hl),s(T,vt),vt.innerHTML=sk,d(p,xa,v),d(p,Ps,v),s(Ps,Fo),s(Fo,pe),s(pe,Bl),s(Ps,zl),s(Ps,ce),s(ce,Vo),s(Vo,$l),s(ce,Fl),s(ce,As),s(As,Vl),s(As,ut),s(ut,Wl),s(As,Kl),s(As,bs),s(bs,yt),s(yt,Wo),s(yt,H),d(p,ma,v),d(p,Rs,v),s(Rs,Ko),s(Ko,he),s(he,jl),s(Rs,Jl),s(Rs,jo),s(jo,dt),s(dt,Xl),s(dt,ws),s(ws,_t),s(_t,Jo),s(_t,B),d(p,ba,v),d(p,Ts,v),s(Ts,Xo),s(Xo,ke),s(ke,Yl),s(Ts,Ql),s(Ts,Yo),s(Yo,Ds),s(Ds,Zl),s(Ds,Es),s(Es,gt),s(gt,Qo),s(gt,z),s(Ds,sn),s(Ds,qs),s(qs,ft),s(ft,Zo),s(ft,$),d(p,wa,v),d(p,Us,v),s(Us,sa),s(sa,ve),s(ve,en),s(Us,tn),s(Us,ea),s(ea,xt),s(xt,on),s(xt,Cs),s(Cs,mt),s(mt,ta),s(mt,F),d(p,Ea,v),d(p,f,v),s(f,oa),s(oa,Gs),s(Gs,an),s(Gs,bt),s(bt,rn),s(f,ln),s(f,ue),s(ue,nn),s(ue,ye),s(ye,pn),s(ue,cn),s(f,hn),s(f,X),s(X,Ns),s(Ns,kn),s(Ns,wt),s(wt,vn),s(Ns,un),s(Ns,Et),s(Et,yn),s(X,dn),s(X,aa),s(aa,_n),s(X,gn),s(X,de),s(de,fn),s(de,qt),s(qt,xn),s(de,mn),s(X,bn),s(X,_e),s(_e,wn),s(_e,Ct),s(Ct,En),s(_e,qn),s(f,Cn),s(f,Ot),Ot.innerHTML=ek,s(f,On),s(f,ra),s(ra,Os),s(Os,V),s(f,In),Fi(ge,f,null),s(f,Ln),s(f,It),s(It,fe),s(fe,Sn),s(It,Mn),d(p,qa,v),d(p,E,v),s(E,la),s(la,Hs),s(Hs,Pn),s(Hs,Lt),s(Lt,An),s(E,Rn),s(E,Y),s(Y,Tn),s(Y,St),s(St,Dn),s(Y,Un),s(Y,Mt),s(Mt,Gn),s(Y,Nn),s(Y,Pt),s(Pt,Hn),s(Y,Bn),s(E,zn),s(E,At),At.innerHTML=tk,s(E,$n),s(E,na),s(na,Is),s(Is,W),s(E,Fn),s(E,xe),s(xe,me),s(me,Vn),s(xe,Wn),s(xe,Rt),s(Rt,Kn),d(p,Ca,v),d(p,x,v),s(x,ia),s(ia,Bs),s(Bs,jn),s(Bs,Tt),s(Tt,Jn),s(x,Xn),s(x,Q),s(Q,Yn),s(Q,Dt),s(Dt,Qn),s(Q,Zn),s(Q,Ut),s(Ut,si),s(Q,ei),s(Q,Gt),s(Gt,ti),s(Q,oi),s(x,ai),s(x,Nt),Nt.innerHTML=ok,s(x,ri),s(x,pa),s(pa,Ls),s(Ls,K),s(x,li),Fi(be,x,null),s(x,ni),s(x,Ht),s(Ht,we),s(we,ii),s(Ht,pi),Oa=!0},p:bk,i(p){Oa||(Vi(ge.$$.fragment,p),Vi(be.$$.fragment,p),Oa=!0)},o(p){Wi(ge.$$.fragment,p),Wi(be.$$.fragment,p),Oa=!1},d(p){p&&o(y),p&&o(ua),p&&o(Z),p&&o(ya),p&&o(b),p&&o(da),p&&o(k),p&&o(_a),p&&o(w),p&&o(ga),p&&o(es),p&&o(fa),p&&o(T),p&&o(xa),p&&o(Ps),p&&o(ma),p&&o(Rs),p&&o(ba),p&&o(Ts),p&&o(wa),p&&o(Us),p&&o(Ea),p&&o(f),Ki(ge),p&&o(qa),p&&o(E),p&&o(Ca),p&&o(x),Ki(be)}}}function qv(qe){let y,O;const C=[qe[0],Fh];let Ks={$$slots:{default:[Ev]},$$scope:{ctx:qe}};for(let _=0;_<C.length;_+=1)Ks=Bi(Ks,C[_]);return y=new wk({props:Ks}),{c(){zi(y.$$.fragment)},l(_){$i(y.$$.fragment,_)},m(_,m){Fi(y,_,m),O=!0},p(_,[m]){const Ce=m&1?xk(C,[m&1&&wh(_[0]),m&0&&wh(Fh)]):{};m&2&&(Ce.$$scope={dirty:m,ctx:_}),y.$set(Ce)},i(_){O||(Vi(y.$$.fragment,_),O=!0)},o(_){Wi(y.$$.fragment,_),O=!1},d(_){Ki(y,_)}}}const Fh={title:"SVG Filters",tags:["svg filters","filters","svg"],description:"SVG Filters 101[ Source ]defined in `&lt;filter&gt;` elementdefine a series of one or more filter primitives1 filter primitive performs 1 single fundamental graphic operation on one or more inputsfilter primitives...",tableOfContents:[{link:"svg-filters-101",title:"SVG Filters 101",nested:[{link:"filter-primitives",title:"filter primitives"},{link:"filter-region",title:"Filter region"},{link:"create-a-drop-shadow",title:"Create a drop shadow"}]},{link:"finessing-fecolormatrix",title:"Finessing  `feColorMatrix`",nested:[{link:"1-colorizing",title:"1. Colorizing"},{link:"2-alpha-values",title:"2. Alpha values"},{link:"3-blowing-out-channels",title:"3. Blowing out channels"},{link:"4-change-color",title:"4. Change color"},{link:"5-lighten-or-darken",title:"5. Lighten or darken"},{link:"6-grayscale",title:"6. Grayscale"}]},{link:"outline-text-with-lt-femorphology-gt",title:"Outline Text with  `&lt;feMorphology&gt;`",nested:[{link:"adding-colored-outline-to-text-with-lt-femorphology-gt",title:"Adding Colored Outline to Text with  `&lt;feMorphology /&gt;`"},{link:"knockout-text-with-lt-femorphology-gt",title:"Knockout text with  `&lt;feMorphology /&gt;`"}]}]};function Cv(qe,y,O){return mk("blog",{image:wv}),qe.$$set=C=>{O(0,y=Bi(Bi({},y),Eh(C)))},y=Eh(y),[y]}class Rv extends _k{constructor(y){super();gk(this,y,Cv,qv,fk,{})}}export{Rv as default,Fh as metadata};
