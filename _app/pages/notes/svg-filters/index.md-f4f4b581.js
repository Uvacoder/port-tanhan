import{S as fk,i as xk,s as mk,C as Qi,w as Va,x as Wa,y as Ka,z as bk,A as qh,q as ja,o as Qa,B as Ja,r as wk,R as Ch,k as c,e,t as n,m as h,c as t,a,h as i,d as o,b as r,Q as g,f as l,g as y,F as s,O as Ek}from"../../../chunks/vendor-569a3c5c.js";import{B as qk}from"../../../chunks/BlogLayout-17b76cb2.js";import{T as Ck}from"../../../chunks/TableOfContent-dbc18cb8.js";import Ok from"./components/Morphology.svelte-dfaf6728.js";import Ik from"./components/KnockoutText.svelte-2b3b19f7.js";import"../../../chunks/stores-ee936cd4.js";import"../../../chunks/WebMentions-968cc380.js";/* empty css                                   */var Lk="/_app/assets/morphology-knockout-text-10e4f906.gif",Oh="/_app/assets/morphology-knockout-text-a5f7f5d7.gif",Sk="/_app/assets/morphology-text-51c98c12.gif",Ih="/_app/assets/morphology-text-21a93abe.gif",Mk="/_app/assets/morphology-c623de5c.gif",Lh="/_app/assets/morphology-ff570125.gif",Pk="/_app/assets/grayscale-768327dd.webp",Ak="/_app/assets/grayscale-0dce859e.webp",Rk="/_app/assets/grayscale-2de4858f.png",Sh="/_app/assets/grayscale-d125fa35.png",Tk="/_app/assets/darken-e7407b8b.webp",Dk="/_app/assets/darken-17dacf86.webp",Uk="/_app/assets/darken-eb75f08b.png",Mh="/_app/assets/darken-ddd3f49c.png",Gk="/_app/assets/lighten-7beab715.webp",Nk="/_app/assets/lighten-82ea2978.webp",Hk="/_app/assets/lighten-9563320f.png",Ph="/_app/assets/lighten-33917603.png",Bk="/_app/assets/change-color-f2d0feb9.webp",$k="/_app/assets/change-color-2044cbfe.webp",zk="/_app/assets/change-color-d31cc67e.png",Ah="/_app/assets/change-color-91e17145.png",Fk="/_app/assets/blow-out-channel-b34ded9d.webp",Vk="/_app/assets/blow-out-channel-bcacf82f.webp",Wk="/_app/assets/blow-out-channel-e7f12f85.png",Rh="/_app/assets/blow-out-channel-b15030e3.png",Kk="/_app/assets/negative-alpha-feed49ee.webp",jk="/_app/assets/negative-alpha-b06426df.webp",Qk="/_app/assets/negative-alpha-21e539ae.png",Th="/_app/assets/negative-alpha-2fa31798.png",Jk="/_app/assets/yellow-filter-2-b8983785.webp",Xk="/_app/assets/yellow-filter-2-9f27d0e4.webp",Yk="/_app/assets/yellow-filter-2-33ae7857.png",Dh="/_app/assets/yellow-filter-2-9e2d3b59.png",Zk="/_app/assets/yellow-filter-649a6936.webp",sv="/_app/assets/yellow-filter-191e9d15.webp",ev="/_app/assets/yellow-filter-7cd2ccba.png",Uh="/_app/assets/yellow-filter-797aff26.png",tv="/_app/assets/red-filter-904ea535.webp",ov="/_app/assets/red-filter-2b2b2311.webp",av="/_app/assets/red-filter-375818e8.png",Gh="/_app/assets/red-filter-d4781599.png",rv="/_app/assets/colorise-yellow-da100449.webp",lv="/_app/assets/colorise-yellow-d49b23ef.webp",nv="/_app/assets/colorise-yellow-40fc01f8.png",Nh="/_app/assets/colorise-yellow-649adc59.png",iv="/_app/assets/colorise-red-d5c17d52.webp",pv="/_app/assets/colorise-red-8acd3f2d.webp",cv="/_app/assets/colorise-red-5f71c24e.png",Hh="/_app/assets/colorise-red-fdbb65ae.png",hv="/_app/assets/default-7bbd3d4d.webp",kv="/_app/assets/default-0df15f3a.webp",vv="/_app/assets/default-68d2a120.png",Bh="/_app/assets/default-ac6872de.png",uv="/_app/assets/step-4-027229bd.webp",yv="/_app/assets/step-4-305b68e8.webp",dv="/_app/assets/step-4-d0bd4f27.png",$h="/_app/assets/step-4-2d732f8a.png",_v="/_app/assets/step-3-55fce715.webp",gv="/_app/assets/step-3-8b92aeeb.webp",fv="/_app/assets/step-3-4aba762f.png",zh="/_app/assets/step-3-11c50ab0.png",xv="/_app/assets/step-2-85dc1c43.webp",mv="/_app/assets/step-2-550d2c6b.webp",bv="/_app/assets/step-2-86e73706.png",Fh="/_app/assets/step-2-c60f5448.png",wv="/_app/assets/step-1-734672e5.webp",Ev="/_app/assets/step-1-a14663a0.webp",qv="/_app/assets/step-1-e4180411.png",Vh="/_app/assets/step-1-cce86919.png",Cv="/_app/assets/hero-twitter-11c7d8fb.jpg";function Ov(Ce){let d,K,x,rs,_,j,Oe,js,Xa,Qs,Ya,Za,sr,ls,Js,er,Ie,tr,or,ar,Jt,rr,lr,ns,nr,Xt,ir,pr,Yt,cr,hr,ya,Z,Zt,Xs,kr,vr,Q,Ys,ur,Le,yr,dr,_r,so,gr,fr,ss,Se,xr,mr,Me,br,wr,Pe,Er,qr,Cr,Ms,Or,Ae,Ir,Lr,Re,Sr,Mr,Te,Kh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;my-filter&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- take in 1 input &#96;in&#96; --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;INPUT_NAME&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- take in 2 inputs &#96;in&#96; and &#96;in2&#96; --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;INPUT_NAME_1&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;INPUT_NAME_2&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- &#96;result&#96; defines the result name, </span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">		which can be passed in as input for the next filter --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;OUTPUT_1&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;OUTPUT_1&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- use the source as input for the filter primitive --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- apply filter on the source element --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceGraphic&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">&lt;!-- apply filter on the alpha channel of the source element,</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">		the silhouette of the source --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceAlpha&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,da,b,eo,Zs,Pr,Ar,is,to,Rr,Tr,oo,Dr,Ur,ao,Gr,Nr,De,jh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">&lt;!-- x, y, width, height sets the filter region --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">x</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;-10%&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">y</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;-10%&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">width</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;120%&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">height</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;120%&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">filterUnits</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;objectBoundingBox&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">&lt;!-- filter primitives here --&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,Hr,ro,se,Br,Ue,$r,zr,Fr,Ge,Qh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feFlood</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">flood-color</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#EB0066&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-opacity</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;0.5&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;flood&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">feFlood</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceGraphic&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;flood&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,_a,v,lo,ee,Vr,Wr,no,io,Kr,jr,Ne,Jh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;my-filter&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceAlpha&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">stdDeviation</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,Qr,po,ps,He,co,C,Ji,Jr,Be,ho,Xr,Yr,ko,$e,Zr,te,sl,el,ze,Xh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;my-filter&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceAlpha&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">stdDeviation</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feFlood</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-color</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#EB0066&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;in&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,tl,vo,cs,Fe,uo,O,Xi,ol,Ve,We,al,Ke,rl,ll,je,Yh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;my-filter&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceAlpha&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">stdDeviation</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feFlood</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-color</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#EB0066&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;in&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feOffset</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SHADOW&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">dx</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">dy</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROPSHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,nl,yo,hs,Qe,_o,I,Yi,il,Je,go,pl,cl,fo,xo,hl,kl,Xe,Zh=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;my-filter&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceAlpha&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">stdDeviation</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">feGaussianBlur</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feFlood</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-color</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#EB0066&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROP&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;in&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feOffset</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SHADOW&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">dx</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">dy</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;10&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROPSHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;DROPSHADOW&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceGraphic&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,vl,mo,ks,Ye,bo,L,Zi,ga,w,wo,Ps,ul,Ze,yl,dl,oe,_l,ae,gl,fl,xl,st,sk=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;linear&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feColorMatrix</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;matrix&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">values</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;R 0 0 0 0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0 G 0 0 0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0 0 B 0 0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0 0 0 A 0 &quot;</span><span style="color: var(--shiki-color-text)">/&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,ml,et,ek=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">/* R G B A 1 */</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// R = 1*R + 0*G + 0*B + 0*A + 0</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// G = 0*R + 1*G + 0*B + 0*A + 0</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// B = 0*R + 0*G + 1*B + 0*A + 0</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// A = 0*R + 0*G + 0*B + 1*A + 0</span></span></code></pre>`,bl,Eo,qo,re,wl,fa,es,Co,le,El,ql,Oo,vs,tt,Io,S,sp,Cl,us,Lo,Ol,Il,ot,Ll,ys,at,So,M,ep,Sl,rt,Ml,ds,lt,Mo,P,tp,xa,A,Po,ne,Pl,Al,_s,ie,Ao,Rl,Tl,gs,Ro,Dl,Ul,To,Gl,Nl,nt,Hl,fs,it,Do,R,op,Bl,Uo,pt,$l,xs,ct,Go,T,ap,zl,No,ht,Fl,ms,kt,Ho,D,rp,Vl,Bo,pe,Wl,bs,vt,$o,U,lp,zo,Fo,Kl,jl,ut,tk=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feColorMatrix</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;matrix&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">values</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;1  0  0  0  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  1  0  0  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  0  1 -1  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  0  0  1  0 &quot;</span><span style="color: var(--shiki-color-text)">/&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feColorMatrix</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;matrix&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">values</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;1  0  0  0  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  1  0  0  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  0  0  0  0</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">            0  0  0  1  0 &quot;</span><span style="color: var(--shiki-color-text)">/&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,ma,As,Vo,ce,Ql,Jl,he,Wo,Xl,Yl,Rs,Zl,yt,sn,en,ws,dt,Ko,G,np,ba,Ts,jo,ke,tn,on,Qo,_t,an,Es,gt,Jo,N,ip,wa,Ds,Xo,ve,rn,ln,Yo,Us,nn,qs,ft,Zo,H,pp,pn,Cs,xt,sa,B,cp,Ea,Gs,ea,ue,cn,hn,ta,mt,kn,Os,bt,oa,$,hp,qa,f,aa,Ns,vn,wt,un,yn,ye,dn,de,_n,gn,fn,J,Hs,xn,Et,mn,bn,qt,wn,En,ra,qn,Cn,_e,On,Ct,In,Ln,Sn,ge,Mn,Ot,Pn,An,Rn,It,ok=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">feMorphology</span><span style="color: var(--shiki-color-text)"> </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;..&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;..&quot;</span><span style="color: var(--shiki-color-text)"> </span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;dilate || erode&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">radius</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,Tn,la,Is,z,kp,Dn,fe,Un,Lt,xe,Gn,Nn,Ca,E,na,Bs,Hn,St,Bn,$n,X,zn,Mt,Fn,Vn,Pt,Wn,Kn,At,jn,Qn,Jn,Rt,ak=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">h1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">style</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;filter: url(#outline)&quot;</span><span style="color: var(--shiki-color-text)">&gt;Hello World&lt;/</span><span style="color: var(--shiki-token-string-expression)">h1</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;outline&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feMorphology</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;THICK&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;dilate&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">radius</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;4&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feFlood</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-color</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;#32DFEC&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">flood-opacity</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;1&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;COLOR&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;THICK&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;in&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;OUTLINE&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">			&lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;OUTLINE&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">			&lt;</span><span style="color: var(--shiki-token-string-expression)">feMergeNode</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceGraphic&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;/</span><span style="color: var(--shiki-token-string-expression)">feMerge</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,Xn,ia,Ls,F,vp,Yn,me,be,Zn,si,Tt,ei,Oa,m,pa,$s,ti,Dt,oi,ai,Y,ri,Ut,li,ni,Gt,ii,pi,Nt,ci,hi,ki,Ht,rk=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">h1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">style</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;filter: url(#outline)&quot;</span><span style="color: var(--shiki-color-text)">&gt;Hello World&lt;/</span><span style="color: var(--shiki-token-string-expression)">h1</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;outline&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feMorphology</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">result</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;THICK&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;dilate&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">radius</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;4&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		&lt;</span><span style="color: var(--shiki-token-string-expression)">feComposite</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;THICK&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">in2</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;SourceGraphic&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">operator</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;out&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	&lt;/</span><span style="color: var(--shiki-token-string-expression)">filter</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,vi,ca,Ss,V,up,ui,we,yi,Bt,Ee,di,_i,Ia;return d=new Ck({props:{data:[{link:"svg-filters-101",title:"SVG Filters 101",nested:[{link:"filter-primitives",title:"filter primitives"},{link:"filter-region",title:"Filter region"},{link:"create-a-drop-shadow",title:"Create a drop shadow"}]},{link:"finessing-fecolormatrix",title:"Finessing  `feColorMatrix`",nested:[{link:"1-colorizing",title:"1. Colorizing"},{link:"2-alpha-values",title:"2. Alpha values"},{link:"3-blowing-out-channels",title:"3. Blowing out channels"},{link:"4-change-color",title:"4. Change color"},{link:"5-lighten-or-darken",title:"5. Lighten or darken"},{link:"6-grayscale",title:"6. Grayscale"}]},{link:"outline-text-with-lt-femorphology-gt",title:"Outline Text with  `&lt;feMorphology&gt;`",nested:[{link:"adding-colored-outline-to-text-with-lt-femorphology-gt",title:"Adding Colored Outline to Text with  `&lt;feMorphology /&gt;`"},{link:"knockout-text-with-lt-femorphology-gt",title:"Knockout text with  `&lt;feMorphology /&gt;`"}]}]}}),fe=new Ok({}),we=new Ik({}),{c(){Va(d.$$.fragment),K=c(),x=e("section"),rs=e("h2"),_=e("a"),j=n("SVG Filters 101"),Oe=c(),js=e("p"),Xa=n("[ "),Qs=e("a"),Ya=n("Source"),Za=n(" ]"),sr=c(),ls=e("ul"),Js=e("li"),er=n("defined in "),Ie=e("code"),tr=n("<filter>"),or=n(" element"),ar=c(),Jt=e("li"),rr=n("define a series of one or more filter primitives"),lr=c(),ns=e("li"),nr=n("1 filter primitive performs "),Xt=e("strong"),ir=n("1 single fundamental graphic operation"),pr=n(" on "),Yt=e("strong"),cr=n("one or more"),hr=n(" inputs"),ya=c(),Z=e("section"),Zt=e("h3"),Xs=e("a"),kr=n("filter primitives"),vr=c(),Q=e("ul"),Ys=e("li"),ur=n("filter primitives named start with "),Le=e("code"),yr=n("fe"),dr=n(', short for "filter effect"'),_r=c(),so=e("li"),gr=n("filter primitives take 1-2 inputs and output 1 result"),fr=c(),ss=e("li"),Se=e("code"),xr=n("in"),mr=n(" and "),Me=e("code"),br=n("in2"),wr=n(" attribute for input, "),Pe=e("code"),Er=n("result"),qr=n(" attribute for output"),Cr=c(),Ms=e("li"),Or=n("input takes in result, "),Ae=e("code"),Ir=n("SourceGraphic"),Lr=n(" and "),Re=e("code"),Sr=n("SourceAlpha"),Mr=c(),Te=e("div"),da=c(),b=e("section"),eo=e("h3"),Zs=e("a"),Pr=n("Filter region"),Ar=c(),is=e("ul"),to=e("li"),Rr=n("filter region is based on the bounding box of the element"),Tr=c(),oo=e("li"),Dr=n("filter result beyond filter region will be clipped off"),Ur=c(),ao=e("li"),Gr=n("default filter region extends 10% the width and height of bounding box in all 4 directions"),Nr=c(),De=e("div"),Hr=c(),ro=e("ul"),se=e("li"),Br=n("use "),Ue=e("code"),$r=n("<feFlood>"),zr=n(" to figure out the filter region"),Fr=c(),Ge=e("div"),_a=c(),v=e("section"),lo=e("h3"),ee=e("a"),Vr=n("Create a drop shadow"),Wr=c(),no=e("ol"),io=e("li"),Kr=n("Blur the silhouette of the layer"),jr=c(),Ne=e("div"),Qr=c(),po=e("p"),ps=e("span"),He=e("picture"),co=e("source"),C=e("img"),Jr=c(),Be=e("ol"),ho=e("li"),Xr=n("Composite the blur layer with a solid color layer to create a colored blur"),Yr=c(),ko=e("ul"),$e=e("li"),Zr=n("Learn compositing + blending in "),te=e("a"),sl=n("https://www.sarasoueidan.com/blog/compositing-and-blending-in-css/"),el=c(),ze=e("div"),tl=c(),vo=e("p"),cs=e("span"),Fe=e("picture"),uo=e("source"),O=e("img"),ol=c(),Ve=e("ol"),We=e("li"),al=n("Shift the shadow bottom-right with "),Ke=e("code"),rl=n("<feOffset>"),ll=c(),je=e("div"),nl=c(),yo=e("p"),hs=e("span"),Qe=e("picture"),_o=e("source"),I=e("img"),il=c(),Je=e("ol"),go=e("li"),pl=n("Combine the shadow with the original image"),cl=c(),fo=e("ul"),xo=e("li"),hl=n("layer merge in order of declaration, latter layer stacks on top of previous layer"),kl=c(),Xe=e("div"),vl=c(),mo=e("p"),ks=e("span"),Ye=e("picture"),bo=e("source"),L=e("img"),ga=c(),w=e("section"),wo=e("h2"),Ps=e("a"),ul=n("Finessing "),Ze=e("code"),yl=n("feColorMatrix"),dl=c(),oe=e("p"),_l=n("[ "),ae=e("a"),gl=n("Source"),fl=n(" ]"),xl=c(),st=e("div"),ml=c(),et=e("div"),bl=c(),Eo=e("ul"),qo=e("li"),re=e("a"),wl=n("color matrix playground"),fa=c(),es=e("section"),Co=e("h3"),le=e("a"),El=n("1. Colorizing"),ql=c(),Oo=e("p"),vs=e("span"),tt=e("picture"),Io=e("source"),S=e("img"),Cl=c(),us=e("ul"),Lo=e("li"),Ol=n("Removing other color to colorise image into the remaining color"),Il=c(),ot=e("li"),Ll=n(`colorise red -> remove blue & green
`),ys=e("span"),at=e("picture"),So=e("source"),M=e("img"),Sl=c(),rt=e("li"),Ml=n(`colorise yellow -> remove blue (red + green = yellow)
`),ds=e("span"),lt=e("picture"),Mo=e("source"),P=e("img"),xa=c(),A=e("section"),Po=e("h3"),ne=e("a"),Pl=n("2. Alpha values"),Al=c(),_s=e("ul"),ie=e("li"),Ao=e("p"),Rl=n("add opacity level to the red channel"),Tl=c(),gs=e("ul"),Ro=e("li"),Dl=n("any red remaining red"),Ul=c(),To=e("li"),Gl=n("green -> yellow (red + green = yellow)"),Nl=c(),nt=e("li"),Hl=n(`blue -> magenta (red + blue = magenta)
`),fs=e("span"),it=e("picture"),Do=e("source"),R=e("img"),Bl=c(),Uo=e("li"),pt=e("p"),$l=n(`hard yellow filter
`),xs=e("span"),ct=e("picture"),Go=e("source"),T=e("img"),zl=c(),No=e("li"),ht=e("p"),Fl=n(`have a value some where between 0-1 to see the mixture in the shadow
`),ms=e("span"),kt=e("picture"),Ho=e("source"),D=e("img"),Vl=c(),Bo=e("ul"),pe=e("li"),Wl=n(`negative value could offset the channel by the amount of opacity
`),bs=e("span"),vt=e("picture"),$o=e("source"),U=e("img"),zo=e("ul"),Fo=e("li"),Kl=n("the following 2 color matrix is identical"),jl=c(),ut=e("div"),ma=c(),As=e("section"),Vo=e("h3"),ce=e("a"),Ql=n("3. Blowing out channels"),Jl=c(),he=e("ul"),Wo=e("li"),Xl=n("turn 1 color to white"),Yl=c(),Rs=e("li"),Zl=n("set the alpha channel to "),yt=e("code"),sn=n("-2"),en=c(),ws=e("span"),dt=e("picture"),Ko=e("source"),G=e("img"),ba=c(),Ts=e("section"),jo=e("h3"),ke=e("a"),tn=n("4. Change color"),on=c(),Qo=e("ul"),_t=e("li"),an=n(`No more green, any green looks like magenta now. (luminosity of green is lost)
`),Es=e("span"),gt=e("picture"),Jo=e("source"),N=e("img"),wa=c(),Ds=e("section"),Xo=e("h3"),ve=e("a"),rn=n("5. Lighten or darken"),ln=c(),Yo=e("ul"),Us=e("li"),nn=n(`increase intensity to lighten, decrease to darken
`),qs=e("span"),ft=e("picture"),Zo=e("source"),H=e("img"),pn=c(),Cs=e("span"),xt=e("picture"),sa=e("source"),B=e("img"),Ea=c(),Gs=e("section"),ea=e("h3"),ue=e("a"),cn=n("6. Grayscale"),hn=c(),ta=e("ul"),mt=e("li"),kn=n(`make sure red, green, blue have the same value
`),Os=e("span"),bt=e("picture"),oa=e("source"),$=e("img"),qa=c(),f=e("section"),aa=e("h2"),Ns=e("a"),vn=n("Outline Text with "),wt=e("code"),un=n("<feMorphology>"),yn=c(),ye=e("p"),dn=n("[ "),de=e("a"),_n=n("Source"),gn=n(" ]"),fn=c(),J=e("ul"),Hs=e("li"),xn=n("\u{1F5BC} image size gets smaller when "),Et=e("code"),mn=n("erode"),bn=n(", larger when "),qt=e("code"),wn=n("dilate"),En=c(),ra=e("li"),qn=n("\u{1F5BC} image looks like painted with large brush \u{1F58C}"),Cn=c(),_e=e("li"),On=n("\u{1F4DD} "),Ct=e("code"),In=n("erode"),Ln=n(" sets each pixel to the darkest / most transparent neighbor"),Sn=c(),ge=e("li"),Mn=n("\u{1F4DD} "),Ot=e("code"),Pn=n("dilate"),An=n(" sets each pixel to the brightest / least transparent neighbor"),Rn=c(),It=e("div"),Tn=c(),la=e("p"),Is=e("span"),z=e("img"),Dn=c(),Va(fe.$$.fragment),Un=c(),Lt=e("p"),xe=e("a"),Gn=n("REPL"),Nn=n(" to see effect with different radius."),Ca=c(),E=e("section"),na=e("h3"),Bs=e("a"),Hn=n("Adding Colored Outline to Text with "),St=e("code"),Bn=n("<feMorphology />"),$n=c(),X=e("p"),zn=n("1\uFE0F\u20E3 expand the text with "),Mt=e("code"),Fn=n('<feMorphology operator="dilate" />'),Vn=n(`
2\uFE0F\u20E3 colorize via `),Pt=e("code"),Wn=n("<feFlood>"),Kn=n(" with solid color and "),At=e("code"),jn=n("<feComposite />"),Qn=n(`
3\uFE0F\u20E3 merge the expanded colored text with the original text`),Jn=c(),Rt=e("div"),Xn=c(),ia=e("p"),Ls=e("span"),F=e("img"),Yn=c(),me=e("p"),be=e("a"),Zn=n("REPL"),si=n(" to visualise "),Tt=e("code"),ei=n("<feMorphology>"),Oa=c(),m=e("section"),pa=e("h3"),$s=e("a"),ti=n("Knockout text with "),Dt=e("code"),oi=n("<feMorphology />"),ai=c(),Y=e("p"),ri=n("1\uFE0F\u20E3 expand the text with "),Ut=e("code"),li=n('<feMorphology operator="dilate" />'),ni=n(`
2\uFE0F\u20E3 composite with the source with `),Gt=e("code"),ii=n("<feComposite />"),pi=n(" using "),Nt=e("code"),ci=n("out"),hi=n(" operator"),ki=c(),Ht=e("div"),vi=c(),ca=e("p"),Ss=e("span"),V=e("img"),ui=c(),Va(we.$$.fragment),yi=c(),Bt=e("p"),Ee=e("a"),di=n("REPL"),_i=n(" to visualise the build up the knock-out text."),this.h()},l(p){Wa(d.$$.fragment,p),K=h(p),x=t(p,"SECTION",{});var k=a(x);rs=t(k,"H2",{});var yp=a(rs);_=t(yp,"A",{href:!0,id:!0});var dp=a(_);j=i(dp,"SVG Filters 101"),dp.forEach(o),yp.forEach(o),Oe=h(k),js=t(k,"P",{});var La=a(js);Xa=i(La,"[ "),Qs=t(La,"A",{href:!0,rel:!0});var _p=a(Qs);Ya=i(_p,"Source"),_p.forEach(o),Za=i(La," ]"),La.forEach(o),sr=h(k),ls=t(k,"UL",{});var $t=a(ls);Js=t($t,"LI",{});var Sa=a(Js);er=i(Sa,"defined in "),Ie=t(Sa,"CODE",{class:!0});var gp=a(Ie);tr=i(gp,"<filter>"),gp.forEach(o),or=i(Sa," element"),Sa.forEach(o),ar=h($t),Jt=t($t,"LI",{});var fp=a(Jt);rr=i(fp,"define a series of one or more filter primitives"),fp.forEach(o),lr=h($t),ns=t($t,"LI",{});var zt=a(ns);nr=i(zt,"1 filter primitive performs "),Xt=t(zt,"STRONG",{});var xp=a(Xt);ir=i(xp,"1 single fundamental graphic operation"),xp.forEach(o),pr=i(zt," on "),Yt=t(zt,"STRONG",{});var mp=a(Yt);cr=i(mp,"one or more"),mp.forEach(o),hr=i(zt," inputs"),zt.forEach(o),$t.forEach(o),k.forEach(o),ya=h(p),Z=t(p,"SECTION",{});var Ft=a(Z);Zt=t(Ft,"H3",{});var bp=a(Zt);Xs=t(bp,"A",{href:!0,id:!0});var wp=a(Xs);kr=i(wp,"filter primitives"),wp.forEach(o),bp.forEach(o),vr=h(Ft),Q=t(Ft,"UL",{});var zs=a(Q);Ys=t(zs,"LI",{});var Ma=a(Ys);ur=i(Ma,"filter primitives named start with "),Le=t(Ma,"CODE",{class:!0});var Ep=a(Le);yr=i(Ep,"fe"),Ep.forEach(o),dr=i(Ma,', short for "filter effect"'),Ma.forEach(o),_r=h(zs),so=t(zs,"LI",{});var qp=a(so);gr=i(qp,"filter primitives take 1-2 inputs and output 1 result"),qp.forEach(o),fr=h(zs),ss=t(zs,"LI",{});var qe=a(ss);Se=t(qe,"CODE",{class:!0});var Cp=a(Se);xr=i(Cp,"in"),Cp.forEach(o),mr=i(qe," and "),Me=t(qe,"CODE",{class:!0});var Op=a(Me);br=i(Op,"in2"),Op.forEach(o),wr=i(qe," attribute for input, "),Pe=t(qe,"CODE",{class:!0});var Ip=a(Pe);Er=i(Ip,"result"),Ip.forEach(o),qr=i(qe," attribute for output"),qe.forEach(o),Cr=h(zs),Ms=t(zs,"LI",{});var ha=a(Ms);Or=i(ha,"input takes in result, "),Ae=t(ha,"CODE",{class:!0});var Lp=a(Ae);Ir=i(Lp,"SourceGraphic"),Lp.forEach(o),Lr=i(ha," and "),Re=t(ha,"CODE",{class:!0});var Sp=a(Re);Sr=i(Sp,"SourceAlpha"),Sp.forEach(o),ha.forEach(o),zs.forEach(o),Mr=h(Ft),Te=t(Ft,"DIV",{class:!0});var lk=a(Te);lk.forEach(o),Ft.forEach(o),da=h(p),b=t(p,"SECTION",{});var ts=a(b);eo=t(ts,"H3",{});var Mp=a(eo);Zs=t(Mp,"A",{href:!0,id:!0});var Pp=a(Zs);Pr=i(Pp,"Filter region"),Pp.forEach(o),Mp.forEach(o),Ar=h(ts),is=t(ts,"UL",{});var Vt=a(is);to=t(Vt,"LI",{});var Ap=a(to);Rr=i(Ap,"filter region is based on the bounding box of the element"),Ap.forEach(o),Tr=h(Vt),oo=t(Vt,"LI",{});var Rp=a(oo);Dr=i(Rp,"filter result beyond filter region will be clipped off"),Rp.forEach(o),Ur=h(Vt),ao=t(Vt,"LI",{});var Tp=a(ao);Gr=i(Tp,"default filter region extends 10% the width and height of bounding box in all 4 directions"),Tp.forEach(o),Vt.forEach(o),Nr=h(ts),De=t(ts,"DIV",{class:!0});var nk=a(De);nk.forEach(o),Hr=h(ts),ro=t(ts,"UL",{});var Dp=a(ro);se=t(Dp,"LI",{});var Pa=a(se);Br=i(Pa,"use "),Ue=t(Pa,"CODE",{class:!0});var Up=a(Ue);$r=i(Up,"<feFlood>"),Up.forEach(o),zr=i(Pa," to figure out the filter region"),Pa.forEach(o),Dp.forEach(o),Fr=h(ts),Ge=t(ts,"DIV",{class:!0});var ik=a(Ge);ik.forEach(o),ts.forEach(o),_a=h(p),v=t(p,"SECTION",{});var u=a(v);lo=t(u,"H3",{});var Gp=a(lo);ee=t(Gp,"A",{href:!0,id:!0});var Np=a(ee);Vr=i(Np,"Create a drop shadow"),Np.forEach(o),Gp.forEach(o),Wr=h(u),no=t(u,"OL",{});var Hp=a(no);io=t(Hp,"LI",{});var Bp=a(io);Kr=i(Bp,"Blur the silhouette of the layer"),Bp.forEach(o),Hp.forEach(o),jr=h(u),Ne=t(u,"DIV",{class:!0});var pk=a(Ne);pk.forEach(o),Qr=h(u),po=t(u,"P",{});var $p=a(po);ps=t($p,"SPAN",{style:!0});var zp=a(ps);He=t(zp,"PICTURE",{});var gi=a(He);co=t(gi,"SOURCE",{type:!0,srcset:!0}),C=t(gi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),gi.forEach(o),zp.forEach(o),$p.forEach(o),Jr=h(u),Be=t(u,"OL",{start:!0});var Fp=a(Be);ho=t(Fp,"LI",{});var Vp=a(ho);Xr=i(Vp,"Composite the blur layer with a solid color layer to create a colored blur"),Vp.forEach(o),Fp.forEach(o),Yr=h(u),ko=t(u,"UL",{});var Wp=a(ko);$e=t(Wp,"LI",{});var fi=a($e);Zr=i(fi,"Learn compositing + blending in "),te=t(fi,"A",{href:!0,rel:!0});var Kp=a(te);sl=i(Kp,"https://www.sarasoueidan.com/blog/compositing-and-blending-in-css/"),Kp.forEach(o),fi.forEach(o),Wp.forEach(o),el=h(u),ze=t(u,"DIV",{class:!0});var ck=a(ze);ck.forEach(o),tl=h(u),vo=t(u,"P",{});var jp=a(vo);cs=t(jp,"SPAN",{style:!0});var Qp=a(cs);Fe=t(Qp,"PICTURE",{});var xi=a(Fe);uo=t(xi,"SOURCE",{type:!0,srcset:!0}),O=t(xi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),xi.forEach(o),Qp.forEach(o),jp.forEach(o),ol=h(u),Ve=t(u,"OL",{start:!0});var Jp=a(Ve);We=t(Jp,"LI",{});var mi=a(We);al=i(mi,"Shift the shadow bottom-right with "),Ke=t(mi,"CODE",{class:!0});var Xp=a(Ke);rl=i(Xp,"<feOffset>"),Xp.forEach(o),mi.forEach(o),Jp.forEach(o),ll=h(u),je=t(u,"DIV",{class:!0});var hk=a(je);hk.forEach(o),nl=h(u),yo=t(u,"P",{});var Yp=a(yo);hs=t(Yp,"SPAN",{style:!0});var Zp=a(hs);Qe=t(Zp,"PICTURE",{});var bi=a(Qe);_o=t(bi,"SOURCE",{type:!0,srcset:!0}),I=t(bi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),bi.forEach(o),Zp.forEach(o),Yp.forEach(o),il=h(u),Je=t(u,"OL",{start:!0});var sc=a(Je);go=t(sc,"LI",{});var ec=a(go);pl=i(ec,"Combine the shadow with the original image"),ec.forEach(o),sc.forEach(o),cl=h(u),fo=t(u,"UL",{});var tc=a(fo);xo=t(tc,"LI",{});var oc=a(xo);hl=i(oc,"layer merge in order of declaration, latter layer stacks on top of previous layer"),oc.forEach(o),tc.forEach(o),kl=h(u),Xe=t(u,"DIV",{class:!0});var kk=a(Xe);kk.forEach(o),vl=h(u),mo=t(u,"P",{});var ac=a(mo);ks=t(ac,"SPAN",{style:!0});var rc=a(ks);Ye=t(rc,"PICTURE",{});var wi=a(Ye);bo=t(wi,"SOURCE",{type:!0,srcset:!0}),L=t(wi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),wi.forEach(o),rc.forEach(o),ac.forEach(o),u.forEach(o),ga=h(p),w=t(p,"SECTION",{});var os=a(w);wo=t(os,"H2",{});var lc=a(wo);Ps=t(lc,"A",{href:!0,id:!0});var Ei=a(Ps);ul=i(Ei,"Finessing "),Ze=t(Ei,"CODE",{class:!0});var nc=a(Ze);yl=i(nc,"feColorMatrix"),nc.forEach(o),Ei.forEach(o),lc.forEach(o),dl=h(os),oe=t(os,"P",{});var Aa=a(oe);_l=i(Aa,"[ "),ae=t(Aa,"A",{href:!0,rel:!0});var ic=a(ae);gl=i(ic,"Source"),ic.forEach(o),fl=i(Aa," ]"),Aa.forEach(o),xl=h(os),st=t(os,"DIV",{class:!0});var vk=a(st);vk.forEach(o),ml=h(os),et=t(os,"DIV",{class:!0});var uk=a(et);uk.forEach(o),bl=h(os),Eo=t(os,"UL",{});var pc=a(Eo);qo=t(pc,"LI",{});var cc=a(qo);re=t(cc,"A",{href:!0,rel:!0});var hc=a(re);wl=i(hc,"color matrix playground"),hc.forEach(o),cc.forEach(o),pc.forEach(o),os.forEach(o),fa=h(p),es=t(p,"SECTION",{});var Wt=a(es);Co=t(Wt,"H3",{});var kc=a(Co);le=t(kc,"A",{href:!0,id:!0});var vc=a(le);El=i(vc,"1. Colorizing"),vc.forEach(o),kc.forEach(o),ql=h(Wt),Oo=t(Wt,"P",{});var uc=a(Oo);vs=t(uc,"SPAN",{style:!0});var yc=a(vs);tt=t(yc,"PICTURE",{});var qi=a(tt);Io=t(qi,"SOURCE",{type:!0,srcset:!0}),S=t(qi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),qi.forEach(o),yc.forEach(o),uc.forEach(o),Cl=h(Wt),us=t(Wt,"UL",{});var Kt=a(us);Lo=t(Kt,"LI",{});var dc=a(Lo);Ol=i(dc,"Removing other color to colorise image into the remaining color"),dc.forEach(o),Il=h(Kt),ot=t(Kt,"LI",{});var Ci=a(ot);Ll=i(Ci,`colorise red -> remove blue & green
`),ys=t(Ci,"SPAN",{style:!0});var _c=a(ys);at=t(_c,"PICTURE",{});var Oi=a(at);So=t(Oi,"SOURCE",{type:!0,srcset:!0}),M=t(Oi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Oi.forEach(o),_c.forEach(o),Ci.forEach(o),Sl=h(Kt),rt=t(Kt,"LI",{});var Ii=a(rt);Ml=i(Ii,`colorise yellow -> remove blue (red + green = yellow)
`),ds=t(Ii,"SPAN",{style:!0});var gc=a(ds);lt=t(gc,"PICTURE",{});var Li=a(lt);Mo=t(Li,"SOURCE",{type:!0,srcset:!0}),P=t(Li,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Li.forEach(o),gc.forEach(o),Ii.forEach(o),Kt.forEach(o),Wt.forEach(o),xa=h(p),A=t(p,"SECTION",{});var Fs=a(A);Po=t(Fs,"H3",{});var fc=a(Po);ne=t(fc,"A",{href:!0,id:!0});var xc=a(ne);Pl=i(xc,"2. Alpha values"),xc.forEach(o),fc.forEach(o),Al=h(Fs),_s=t(Fs,"UL",{});var jt=a(_s);ie=t(jt,"LI",{});var Ra=a(ie);Ao=t(Ra,"P",{});var mc=a(Ao);Rl=i(mc,"add opacity level to the red channel"),mc.forEach(o),Tl=h(Ra),gs=t(Ra,"UL",{});var Qt=a(gs);Ro=t(Qt,"LI",{});var bc=a(Ro);Dl=i(bc,"any red remaining red"),bc.forEach(o),Ul=h(Qt),To=t(Qt,"LI",{});var wc=a(To);Gl=i(wc,"green -> yellow (red + green = yellow)"),wc.forEach(o),Nl=h(Qt),nt=t(Qt,"LI",{});var Si=a(nt);Hl=i(Si,`blue -> magenta (red + blue = magenta)
`),fs=t(Si,"SPAN",{style:!0});var Ec=a(fs);it=t(Ec,"PICTURE",{});var Mi=a(it);Do=t(Mi,"SOURCE",{type:!0,srcset:!0}),R=t(Mi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Mi.forEach(o),Ec.forEach(o),Si.forEach(o),Qt.forEach(o),Ra.forEach(o),Bl=h(jt),Uo=t(jt,"LI",{});var qc=a(Uo);pt=t(qc,"P",{});var Pi=a(pt);$l=i(Pi,`hard yellow filter
`),xs=t(Pi,"SPAN",{style:!0});var Cc=a(xs);ct=t(Cc,"PICTURE",{});var Ai=a(ct);Go=t(Ai,"SOURCE",{type:!0,srcset:!0}),T=t(Ai,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Ai.forEach(o),Cc.forEach(o),Pi.forEach(o),qc.forEach(o),zl=h(jt),No=t(jt,"LI",{});var Oc=a(No);ht=t(Oc,"P",{});var Ri=a(ht);Fl=i(Ri,`have a value some where between 0-1 to see the mixture in the shadow
`),ms=t(Ri,"SPAN",{style:!0});var Ic=a(ms);kt=t(Ic,"PICTURE",{});var Ti=a(kt);Ho=t(Ti,"SOURCE",{type:!0,srcset:!0}),D=t(Ti,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Ti.forEach(o),Ic.forEach(o),Ri.forEach(o),Oc.forEach(o),jt.forEach(o),Vl=h(Fs),Bo=t(Fs,"UL",{});var Lc=a(Bo);pe=t(Lc,"LI",{});var Ta=a(pe);Wl=i(Ta,`negative value could offset the channel by the amount of opacity
`),bs=t(Ta,"SPAN",{style:!0});var Sc=a(bs);vt=t(Sc,"PICTURE",{});var Di=a(vt);$o=t(Di,"SOURCE",{type:!0,srcset:!0}),U=t(Di,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Di.forEach(o),Sc.forEach(o),zo=t(Ta,"UL",{});var Mc=a(zo);Fo=t(Mc,"LI",{});var Pc=a(Fo);Kl=i(Pc,"the following 2 color matrix is identical"),Pc.forEach(o),Mc.forEach(o),Ta.forEach(o),Lc.forEach(o),jl=h(Fs),ut=t(Fs,"DIV",{class:!0});var yk=a(ut);yk.forEach(o),Fs.forEach(o),ma=h(p),As=t(p,"SECTION",{});var Da=a(As);Vo=t(Da,"H3",{});var Ac=a(Vo);ce=t(Ac,"A",{href:!0,id:!0});var Rc=a(ce);Ql=i(Rc,"3. Blowing out channels"),Rc.forEach(o),Ac.forEach(o),Jl=h(Da),he=t(Da,"UL",{});var Ua=a(he);Wo=t(Ua,"LI",{});var Tc=a(Wo);Xl=i(Tc,"turn 1 color to white"),Tc.forEach(o),Yl=h(Ua),Rs=t(Ua,"LI",{});var ka=a(Rs);Zl=i(ka,"set the alpha channel to "),yt=t(ka,"CODE",{class:!0});var Dc=a(yt);sn=i(Dc,"-2"),Dc.forEach(o),en=h(ka),ws=t(ka,"SPAN",{style:!0});var Uc=a(ws);dt=t(Uc,"PICTURE",{});var Ui=a(dt);Ko=t(Ui,"SOURCE",{type:!0,srcset:!0}),G=t(Ui,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Ui.forEach(o),Uc.forEach(o),ka.forEach(o),Ua.forEach(o),Da.forEach(o),ba=h(p),Ts=t(p,"SECTION",{});var Ga=a(Ts);jo=t(Ga,"H3",{});var Gc=a(jo);ke=t(Gc,"A",{href:!0,id:!0});var Nc=a(ke);tn=i(Nc,"4. Change color"),Nc.forEach(o),Gc.forEach(o),on=h(Ga),Qo=t(Ga,"UL",{});var Hc=a(Qo);_t=t(Hc,"LI",{});var Gi=a(_t);an=i(Gi,`No more green, any green looks like magenta now. (luminosity of green is lost)
`),Es=t(Gi,"SPAN",{style:!0});var Bc=a(Es);gt=t(Bc,"PICTURE",{});var Ni=a(gt);Jo=t(Ni,"SOURCE",{type:!0,srcset:!0}),N=t(Ni,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Ni.forEach(o),Bc.forEach(o),Gi.forEach(o),Hc.forEach(o),Ga.forEach(o),wa=h(p),Ds=t(p,"SECTION",{});var Na=a(Ds);Xo=t(Na,"H3",{});var $c=a(Xo);ve=t($c,"A",{href:!0,id:!0});var zc=a(ve);rn=i(zc,"5. Lighten or darken"),zc.forEach(o),$c.forEach(o),ln=h(Na),Yo=t(Na,"UL",{});var Fc=a(Yo);Us=t(Fc,"LI",{});var va=a(Us);nn=i(va,`increase intensity to lighten, decrease to darken
`),qs=t(va,"SPAN",{style:!0});var Vc=a(qs);ft=t(Vc,"PICTURE",{});var Hi=a(ft);Zo=t(Hi,"SOURCE",{type:!0,srcset:!0}),H=t(Hi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Hi.forEach(o),Vc.forEach(o),pn=h(va),Cs=t(va,"SPAN",{style:!0});var Wc=a(Cs);xt=t(Wc,"PICTURE",{});var Bi=a(xt);sa=t(Bi,"SOURCE",{type:!0,srcset:!0}),B=t(Bi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Bi.forEach(o),Wc.forEach(o),va.forEach(o),Fc.forEach(o),Na.forEach(o),Ea=h(p),Gs=t(p,"SECTION",{});var Ha=a(Gs);ea=t(Ha,"H3",{});var Kc=a(ea);ue=t(Kc,"A",{href:!0,id:!0});var jc=a(ue);cn=i(jc,"6. Grayscale"),jc.forEach(o),Kc.forEach(o),hn=h(Ha),ta=t(Ha,"UL",{});var Qc=a(ta);mt=t(Qc,"LI",{});var $i=a(mt);kn=i($i,`make sure red, green, blue have the same value
`),Os=t($i,"SPAN",{style:!0});var Jc=a(Os);bt=t(Jc,"PICTURE",{});var zi=a(bt);oa=t(zi,"SOURCE",{type:!0,srcset:!0}),$=t(zi,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),zi.forEach(o),Jc.forEach(o),$i.forEach(o),Qc.forEach(o),Ha.forEach(o),qa=h(p),f=t(p,"SECTION",{});var q=a(f);aa=t(q,"H2",{});var Xc=a(aa);Ns=t(Xc,"A",{href:!0,id:!0});var Fi=a(Ns);vn=i(Fi,"Outline Text with "),wt=t(Fi,"CODE",{class:!0});var Yc=a(wt);un=i(Yc,"<feMorphology>"),Yc.forEach(o),Fi.forEach(o),Xc.forEach(o),yn=h(q),ye=t(q,"P",{});var Ba=a(ye);dn=i(Ba,"[ "),de=t(Ba,"A",{href:!0,rel:!0});var Zc=a(de);_n=i(Zc,"Source"),Zc.forEach(o),gn=i(Ba," ]"),Ba.forEach(o),fn=h(q),J=t(q,"UL",{});var Vs=a(J);Hs=t(Vs,"LI",{});var ua=a(Hs);xn=i(ua,"\u{1F5BC} image size gets smaller when "),Et=t(ua,"CODE",{class:!0});var sh=a(Et);mn=i(sh,"erode"),sh.forEach(o),bn=i(ua,", larger when "),qt=t(ua,"CODE",{class:!0});var eh=a(qt);wn=i(eh,"dilate"),eh.forEach(o),ua.forEach(o),En=h(Vs),ra=t(Vs,"LI",{});var th=a(ra);qn=i(th,"\u{1F5BC} image looks like painted with large brush \u{1F58C}"),th.forEach(o),Cn=h(Vs),_e=t(Vs,"LI",{});var $a=a(_e);On=i($a,"\u{1F4DD} "),Ct=t($a,"CODE",{class:!0});var oh=a(Ct);In=i(oh,"erode"),oh.forEach(o),Ln=i($a," sets each pixel to the darkest / most transparent neighbor"),$a.forEach(o),Sn=h(Vs),ge=t(Vs,"LI",{});var za=a(ge);Mn=i(za,"\u{1F4DD} "),Ot=t(za,"CODE",{class:!0});var ah=a(Ot);Pn=i(ah,"dilate"),ah.forEach(o),An=i(za," sets each pixel to the brightest / least transparent neighbor"),za.forEach(o),Vs.forEach(o),Rn=h(q),It=t(q,"DIV",{class:!0});var dk=a(It);dk.forEach(o),Tn=h(q),la=t(q,"P",{});var rh=a(la);Is=t(rh,"SPAN",{style:!0});var lh=a(Is);z=t(lh,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),lh.forEach(o),rh.forEach(o),Dn=h(q),Wa(fe.$$.fragment,q),Un=h(q),Lt=t(q,"P",{});var Vi=a(Lt);xe=t(Vi,"A",{href:!0,rel:!0});var nh=a(xe);Gn=i(nh,"REPL"),nh.forEach(o),Nn=i(Vi," to see effect with different radius."),Vi.forEach(o),q.forEach(o),Ca=h(p),E=t(p,"SECTION",{});var as=a(E);na=t(as,"H3",{});var ih=a(na);Bs=t(ih,"A",{href:!0,id:!0});var Wi=a(Bs);Hn=i(Wi,"Adding Colored Outline to Text with "),St=t(Wi,"CODE",{class:!0});var ph=a(St);Bn=i(ph,"<feMorphology />"),ph.forEach(o),Wi.forEach(o),ih.forEach(o),$n=h(as),X=t(as,"P",{});var Ws=a(X);zn=i(Ws,"1\uFE0F\u20E3 expand the text with "),Mt=t(Ws,"CODE",{class:!0});var ch=a(Mt);Fn=i(ch,'<feMorphology operator="dilate" />'),ch.forEach(o),Vn=i(Ws,`
2\uFE0F\u20E3 colorize via `),Pt=t(Ws,"CODE",{class:!0});var hh=a(Pt);Wn=i(hh,"<feFlood>"),hh.forEach(o),Kn=i(Ws," with solid color and "),At=t(Ws,"CODE",{class:!0});var kh=a(At);jn=i(kh,"<feComposite />"),kh.forEach(o),Qn=i(Ws,`
3\uFE0F\u20E3 merge the expanded colored text with the original text`),Ws.forEach(o),Jn=h(as),Rt=t(as,"DIV",{class:!0});var _k=a(Rt);_k.forEach(o),Xn=h(as),ia=t(as,"P",{});var vh=a(ia);Ls=t(vh,"SPAN",{style:!0});var uh=a(Ls);F=t(uh,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),uh.forEach(o),vh.forEach(o),Yn=h(as),me=t(as,"P",{});var Fa=a(me);be=t(Fa,"A",{href:!0,rel:!0});var yh=a(be);Zn=i(yh,"REPL"),yh.forEach(o),si=i(Fa," to visualise "),Tt=t(Fa,"CODE",{class:!0});var dh=a(Tt);ei=i(dh,"<feMorphology>"),dh.forEach(o),Fa.forEach(o),as.forEach(o),Oa=h(p),m=t(p,"SECTION",{});var W=a(m);pa=t(W,"H3",{});var _h=a(pa);$s=t(_h,"A",{href:!0,id:!0});var Ki=a($s);ti=i(Ki,"Knockout text with "),Dt=t(Ki,"CODE",{class:!0});var gh=a(Dt);oi=i(gh,"<feMorphology />"),gh.forEach(o),Ki.forEach(o),_h.forEach(o),ai=h(W),Y=t(W,"P",{});var Ks=a(Y);ri=i(Ks,"1\uFE0F\u20E3 expand the text with "),Ut=t(Ks,"CODE",{class:!0});var fh=a(Ut);li=i(fh,'<feMorphology operator="dilate" />'),fh.forEach(o),ni=i(Ks,`
2\uFE0F\u20E3 composite with the source with `),Gt=t(Ks,"CODE",{class:!0});var xh=a(Gt);ii=i(xh,"<feComposite />"),xh.forEach(o),pi=i(Ks," using "),Nt=t(Ks,"CODE",{class:!0});var mh=a(Nt);ci=i(mh,"out"),mh.forEach(o),hi=i(Ks," operator"),Ks.forEach(o),ki=h(W),Ht=t(W,"DIV",{class:!0});var gk=a(Ht);gk.forEach(o),vi=h(W),ca=t(W,"P",{});var bh=a(ca);Ss=t(bh,"SPAN",{style:!0});var wh=a(Ss);V=t(wh,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),wh.forEach(o),bh.forEach(o),ui=h(W),Wa(we.$$.fragment,W),yi=h(W),Bt=t(W,"P",{});var ji=a(Bt);Ee=t(ji,"A",{href:!0,rel:!0});var Eh=a(Ee);di=i(Eh,"REPL"),Eh.forEach(o),_i=i(ji," to visualise the build up the knock-out text."),ji.forEach(o),W.forEach(o),this.h()},h(){r(_,"href","#svg-filters-101"),r(_,"id","svg-filters-101"),r(Qs,"href","https://tympanus.net/codrops/2019/01/15/svg-filters-101/"),r(Qs,"rel","nofollow"),r(Ie,"class","inline"),r(Xs,"href","#filter-primitives"),r(Xs,"id","filter-primitives"),r(Le,"class","inline"),r(Se,"class","inline"),r(Me,"class","inline"),r(Pe,"class","inline"),r(Ae,"class","inline"),r(Re,"class","inline"),r(Te,"class","code-section"),r(Zs,"href","#filter-region"),r(Zs,"id","filter-region"),r(De,"class","code-section"),r(Ue,"class","inline"),r(Ge,"class","code-section"),r(ee,"href","#create-a-drop-shadow"),r(ee,"id","create-a-drop-shadow"),r(Ne,"class","code-section"),r(co,"type","image/webp"),r(co,"srcset",Ev+", "+wv+" 2x"),g(C.src,Ji=Vh)||r(C,"src",Ji),r(C,"srcset",Vh+", "+qv+" 2x"),r(C,"loading","lazy"),l(C,"position","absolute"),l(C,"top","0"),l(C,"width","100%"),l(C,"height","100%"),r(C,"alt","step-1"),l(ps,"display","block"),l(ps,"position","relative"),l(ps,"padding-top","97.450%"),l(ps,"width","100%"),r(Be,"start","2"),r(te,"href","https://www.sarasoueidan.com/blog/compositing-and-blending-in-css/"),r(te,"rel","nofollow"),r(ze,"class","code-section"),r(uo,"type","image/webp"),r(uo,"srcset",mv+", "+xv+" 2x"),g(O.src,Xi=Fh)||r(O,"src",Xi),r(O,"srcset",Fh+", "+bv+" 2x"),r(O,"loading","lazy"),l(O,"position","absolute"),l(O,"top","0"),l(O,"width","100%"),l(O,"height","100%"),r(O,"alt","step-2"),l(cs,"display","block"),l(cs,"position","relative"),l(cs,"padding-top","96.866%"),l(cs,"width","100%"),r(Ke,"class","inline"),r(Ve,"start","3"),r(je,"class","code-section"),r(_o,"type","image/webp"),r(_o,"srcset",gv+", "+_v+" 2x"),g(I.src,Yi=zh)||r(I,"src",Yi),r(I,"srcset",zh+", "+fv+" 2x"),r(I,"loading","lazy"),l(I,"position","absolute"),l(I,"top","0"),l(I,"width","100%"),l(I,"height","100%"),r(I,"alt","step-3"),l(hs,"display","block"),l(hs,"position","relative"),l(hs,"padding-top","96.023%"),l(hs,"width","100%"),r(Je,"start","4"),r(Xe,"class","code-section"),r(bo,"type","image/webp"),r(bo,"srcset",yv+", "+uv+" 2x"),g(L.src,Zi=$h)||r(L,"src",Zi),r(L,"srcset",$h+", "+dv+" 2x"),r(L,"loading","lazy"),l(L,"position","absolute"),l(L,"top","0"),l(L,"width","100%"),l(L,"height","100%"),r(L,"alt","step-4"),l(ks,"display","block"),l(ks,"position","relative"),l(ks,"padding-top","97.443%"),l(ks,"width","100%"),r(Ze,"class","inline"),r(Ps,"href","#finessing-fecolormatrix"),r(Ps,"id","finessing-fecolormatrix"),r(ae,"href","https://alistapart.com/article/finessing-fecolormatrix/"),r(ae,"rel","nofollow"),r(st,"class","code-section"),r(et,"class","code-section"),r(re,"href","https://svelte.dev/repl/1fa3e758ef2442d1bcc1eba37a2bdd58"),r(re,"rel","nofollow"),r(le,"href","#1-colorizing"),r(le,"id","1-colorizing"),r(Io,"type","image/webp"),r(Io,"srcset",kv+", "+hv+" 2x"),g(S.src,sp=Bh)||r(S,"src",sp),r(S,"srcset",Bh+", "+vv+" 2x"),r(S,"loading","lazy"),l(S,"position","absolute"),l(S,"top","0"),l(S,"width","100%"),l(S,"height","100%"),r(S,"alt","colorise default"),l(vs,"display","block"),l(vs,"position","relative"),l(vs,"padding-top","92.081%"),l(vs,"width","100%"),r(So,"type","image/webp"),r(So,"srcset",pv+", "+iv+" 2x"),g(M.src,ep=Hh)||r(M,"src",ep),r(M,"srcset",Hh+", "+cv+" 2x"),r(M,"loading","lazy"),l(M,"position","absolute"),l(M,"top","0"),l(M,"width","100%"),l(M,"height","100%"),r(M,"alt","colorise red"),l(ys,"display","block"),l(ys,"position","relative"),l(ys,"padding-top","91.403%"),l(ys,"width","100%"),r(Mo,"type","image/webp"),r(Mo,"srcset",lv+", "+rv+" 2x"),g(P.src,tp=Nh)||r(P,"src",tp),r(P,"srcset",Nh+", "+nv+" 2x"),r(P,"loading","lazy"),l(P,"position","absolute"),l(P,"top","0"),l(P,"width","100%"),l(P,"height","100%"),r(P,"alt","colorise yellow"),l(ds,"display","block"),l(ds,"position","relative"),l(ds,"padding-top","92.466%"),l(ds,"width","100%"),r(ne,"href","#2-alpha-values"),r(ne,"id","2-alpha-values"),r(Do,"type","image/webp"),r(Do,"srcset",ov+", "+tv+" 2x"),g(R.src,op=Gh)||r(R,"src",op),r(R,"srcset",Gh+", "+av+" 2x"),r(R,"loading","lazy"),l(R,"position","absolute"),l(R,"top","0"),l(R,"width","100%"),l(R,"height","100%"),r(R,"alt","red filter"),l(fs,"display","block"),l(fs,"position","relative"),l(fs,"padding-top","91.533%"),l(fs,"width","100%"),r(Go,"type","image/webp"),r(Go,"srcset",sv+", "+Zk+" 2x"),g(T.src,ap=Uh)||r(T,"src",ap),r(T,"srcset",Uh+", "+ev+" 2x"),r(T,"loading","lazy"),l(T,"position","absolute"),l(T,"top","0"),l(T,"width","100%"),l(T,"height","100%"),r(T,"alt","yellow filter"),l(xs,"display","block"),l(xs,"position","relative"),l(xs,"padding-top","90.639%"),l(xs,"width","100%"),r(Ho,"type","image/webp"),r(Ho,"srcset",Xk+", "+Jk+" 2x"),g(D.src,rp=Dh)||r(D,"src",rp),r(D,"srcset",Dh+", "+Yk+" 2x"),r(D,"loading","lazy"),l(D,"position","absolute"),l(D,"top","0"),l(D,"width","100%"),l(D,"height","100%"),r(D,"alt","yellow filter 2"),l(ms,"display","block"),l(ms,"position","relative"),l(ms,"padding-top","91.324%"),l(ms,"width","100%"),r($o,"type","image/webp"),r($o,"srcset",jk+", "+Kk+" 2x"),g(U.src,lp=Th)||r(U,"src",lp),r(U,"srcset",Th+", "+Qk+" 2x"),r(U,"loading","lazy"),l(U,"position","absolute"),l(U,"top","0"),l(U,"width","100%"),l(U,"height","100%"),r(U,"alt","negative alpha"),l(bs,"display","block"),l(bs,"position","relative"),l(bs,"padding-top","92.027%"),l(bs,"width","100%"),r(ut,"class","code-section"),r(ce,"href","#3-blowing-out-channels"),r(ce,"id","3-blowing-out-channels"),r(yt,"class","inline"),r(Ko,"type","image/webp"),r(Ko,"srcset",Vk+", "+Fk+" 2x"),g(G.src,np=Rh)||r(G,"src",np),r(G,"srcset",Rh+", "+Wk+" 2x"),r(G,"loading","lazy"),l(G,"position","absolute"),l(G,"top","0"),l(G,"width","100%"),l(G,"height","100%"),r(G,"alt","blow-out-green"),l(ws,"display","block"),l(ws,"position","relative"),l(ws,"padding-top","92.466%"),l(ws,"width","100%"),r(ke,"href","#4-change-color"),r(ke,"id","4-change-color"),r(Jo,"type","image/webp"),r(Jo,"srcset",$k+", "+Bk+" 2x"),g(N.src,ip=Ah)||r(N,"src",ip),r(N,"srcset",Ah+", "+zk+" 2x"),r(N,"loading","lazy"),l(N,"position","absolute"),l(N,"top","0"),l(N,"width","100%"),l(N,"height","100%"),r(N,"alt","change-color"),l(Es,"display","block"),l(Es,"position","relative"),l(Es,"padding-top","90.868%"),l(Es,"width","100%"),r(ve,"href","#5-lighten-or-darken"),r(ve,"id","5-lighten-or-darken"),r(Zo,"type","image/webp"),r(Zo,"srcset",Nk+", "+Gk+" 2x"),g(H.src,pp=Ph)||r(H,"src",pp),r(H,"srcset",Ph+", "+Hk+" 2x"),r(H,"loading","lazy"),l(H,"position","absolute"),l(H,"top","0"),l(H,"width","100%"),l(H,"height","100%"),r(H,"alt","lighten"),l(qs,"display","block"),l(qs,"position","relative"),l(qs,"padding-top","92.220%"),l(qs,"width","100%"),r(sa,"type","image/webp"),r(sa,"srcset",Dk+", "+Tk+" 2x"),g(B.src,cp=Mh)||r(B,"src",cp),r(B,"srcset",Mh+", "+Uk+" 2x"),r(B,"loading","lazy"),l(B,"position","absolute"),l(B,"top","0"),l(B,"width","100%"),l(B,"height","100%"),r(B,"alt","darken"),l(Cs,"display","block"),l(Cs,"position","relative"),l(Cs,"padding-top","92.184%"),l(Cs,"width","100%"),r(ue,"href","#6-grayscale"),r(ue,"id","6-grayscale"),r(oa,"type","image/webp"),r(oa,"srcset",Ak+", "+Pk+" 2x"),g($.src,hp=Sh)||r($,"src",hp),r($,"srcset",Sh+", "+Rk+" 2x"),r($,"loading","lazy"),l($,"position","absolute"),l($,"top","0"),l($,"width","100%"),l($,"height","100%"),r($,"alt","grayscale"),l(Os,"display","block"),l(Os,"position","relative"),l(Os,"padding-top","91.264%"),l(Os,"width","100%"),r(wt,"class","inline"),r(Ns,"href","#outline-text-with-lt-femorphology-gt"),r(Ns,"id","outline-text-with-lt-femorphology-gt"),r(de,"href","https://tympanus.net/codrops/2019/01/22/svg-filter-effects-outline-text-with-femorphology/"),r(de,"rel","nofollow"),r(Et,"class","inline"),r(qt,"class","inline"),r(Ct,"class","inline"),r(Ot,"class","inline"),r(It,"class","code-section"),g(z.src,kp=Lh)||r(z,"src",kp),r(z,"srcset",Lh+", "+Mk+" 2x"),r(z,"loading","lazy"),l(z,"position","absolute"),l(z,"top","0"),l(z,"width","100%"),l(z,"height","100%"),r(z,"alt","feMorphology"),l(Is,"display","block"),l(Is,"position","relative"),l(Is,"padding-top","56.786%"),l(Is,"width","100%"),r(xe,"href","https://svelte.dev/repl/1f0a2c16650541d082beeecc2a046c9f?version=3.29.0"),r(xe,"rel","nofollow"),r(St,"class","inline"),r(Bs,"href","#adding-colored-outline-to-text-with-lt-femorphology-gt"),r(Bs,"id","adding-colored-outline-to-text-with-lt-femorphology-gt"),r(Mt,"class","inline"),r(Pt,"class","inline"),r(At,"class","inline"),r(Rt,"class","code-section"),g(F.src,vp=Ih)||r(F,"src",vp),r(F,"srcset",Ih+", "+Sk+" 2x"),r(F,"loading","lazy"),l(F,"position","absolute"),l(F,"top","0"),l(F,"width","100%"),l(F,"height","100%"),r(F,"alt","feMorphology outline text"),l(Ls,"display","block"),l(Ls,"position","relative"),l(Ls,"padding-top","64.643%"),l(Ls,"width","100%"),r(be,"href","https://svelte.dev/repl/a1a3aa1cc844476b9ca96fec3f0164ed?version=3.29.0"),r(be,"rel","nofollow"),r(Tt,"class","inline"),r(Dt,"class","inline"),r($s,"href","#knockout-text-with-lt-femorphology-gt"),r($s,"id","knockout-text-with-lt-femorphology-gt"),r(Ut,"class","inline"),r(Gt,"class","inline"),r(Nt,"class","inline"),r(Ht,"class","code-section"),g(V.src,up=Oh)||r(V,"src",up),r(V,"srcset",Oh+", "+Lk+" 2x"),r(V,"loading","lazy"),l(V,"position","absolute"),l(V,"top","0"),l(V,"width","100%"),l(V,"height","100%"),r(V,"alt","feMorphology knockout text"),l(Ss,"display","block"),l(Ss,"position","relative"),l(Ss,"padding-top","42.643%"),l(Ss,"width","100%"),r(Ee,"href","https://svelte.dev/repl/30153d68324d475189d34afa26a3186f?version=3.29.0"),r(Ee,"rel","nofollow")},m(p,k){Ka(d,p,k),y(p,K,k),y(p,x,k),s(x,rs),s(rs,_),s(_,j),s(x,Oe),s(x,js),s(js,Xa),s(js,Qs),s(Qs,Ya),s(js,Za),s(x,sr),s(x,ls),s(ls,Js),s(Js,er),s(Js,Ie),s(Ie,tr),s(Js,or),s(ls,ar),s(ls,Jt),s(Jt,rr),s(ls,lr),s(ls,ns),s(ns,nr),s(ns,Xt),s(Xt,ir),s(ns,pr),s(ns,Yt),s(Yt,cr),s(ns,hr),y(p,ya,k),y(p,Z,k),s(Z,Zt),s(Zt,Xs),s(Xs,kr),s(Z,vr),s(Z,Q),s(Q,Ys),s(Ys,ur),s(Ys,Le),s(Le,yr),s(Ys,dr),s(Q,_r),s(Q,so),s(so,gr),s(Q,fr),s(Q,ss),s(ss,Se),s(Se,xr),s(ss,mr),s(ss,Me),s(Me,br),s(ss,wr),s(ss,Pe),s(Pe,Er),s(ss,qr),s(Q,Cr),s(Q,Ms),s(Ms,Or),s(Ms,Ae),s(Ae,Ir),s(Ms,Lr),s(Ms,Re),s(Re,Sr),s(Z,Mr),s(Z,Te),Te.innerHTML=Kh,y(p,da,k),y(p,b,k),s(b,eo),s(eo,Zs),s(Zs,Pr),s(b,Ar),s(b,is),s(is,to),s(to,Rr),s(is,Tr),s(is,oo),s(oo,Dr),s(is,Ur),s(is,ao),s(ao,Gr),s(b,Nr),s(b,De),De.innerHTML=jh,s(b,Hr),s(b,ro),s(ro,se),s(se,Br),s(se,Ue),s(Ue,$r),s(se,zr),s(b,Fr),s(b,Ge),Ge.innerHTML=Qh,y(p,_a,k),y(p,v,k),s(v,lo),s(lo,ee),s(ee,Vr),s(v,Wr),s(v,no),s(no,io),s(io,Kr),s(v,jr),s(v,Ne),Ne.innerHTML=Jh,s(v,Qr),s(v,po),s(po,ps),s(ps,He),s(He,co),s(He,C),s(v,Jr),s(v,Be),s(Be,ho),s(ho,Xr),s(v,Yr),s(v,ko),s(ko,$e),s($e,Zr),s($e,te),s(te,sl),s(v,el),s(v,ze),ze.innerHTML=Xh,s(v,tl),s(v,vo),s(vo,cs),s(cs,Fe),s(Fe,uo),s(Fe,O),s(v,ol),s(v,Ve),s(Ve,We),s(We,al),s(We,Ke),s(Ke,rl),s(v,ll),s(v,je),je.innerHTML=Yh,s(v,nl),s(v,yo),s(yo,hs),s(hs,Qe),s(Qe,_o),s(Qe,I),s(v,il),s(v,Je),s(Je,go),s(go,pl),s(v,cl),s(v,fo),s(fo,xo),s(xo,hl),s(v,kl),s(v,Xe),Xe.innerHTML=Zh,s(v,vl),s(v,mo),s(mo,ks),s(ks,Ye),s(Ye,bo),s(Ye,L),y(p,ga,k),y(p,w,k),s(w,wo),s(wo,Ps),s(Ps,ul),s(Ps,Ze),s(Ze,yl),s(w,dl),s(w,oe),s(oe,_l),s(oe,ae),s(ae,gl),s(oe,fl),s(w,xl),s(w,st),st.innerHTML=sk,s(w,ml),s(w,et),et.innerHTML=ek,s(w,bl),s(w,Eo),s(Eo,qo),s(qo,re),s(re,wl),y(p,fa,k),y(p,es,k),s(es,Co),s(Co,le),s(le,El),s(es,ql),s(es,Oo),s(Oo,vs),s(vs,tt),s(tt,Io),s(tt,S),s(es,Cl),s(es,us),s(us,Lo),s(Lo,Ol),s(us,Il),s(us,ot),s(ot,Ll),s(ot,ys),s(ys,at),s(at,So),s(at,M),s(us,Sl),s(us,rt),s(rt,Ml),s(rt,ds),s(ds,lt),s(lt,Mo),s(lt,P),y(p,xa,k),y(p,A,k),s(A,Po),s(Po,ne),s(ne,Pl),s(A,Al),s(A,_s),s(_s,ie),s(ie,Ao),s(Ao,Rl),s(ie,Tl),s(ie,gs),s(gs,Ro),s(Ro,Dl),s(gs,Ul),s(gs,To),s(To,Gl),s(gs,Nl),s(gs,nt),s(nt,Hl),s(nt,fs),s(fs,it),s(it,Do),s(it,R),s(_s,Bl),s(_s,Uo),s(Uo,pt),s(pt,$l),s(pt,xs),s(xs,ct),s(ct,Go),s(ct,T),s(_s,zl),s(_s,No),s(No,ht),s(ht,Fl),s(ht,ms),s(ms,kt),s(kt,Ho),s(kt,D),s(A,Vl),s(A,Bo),s(Bo,pe),s(pe,Wl),s(pe,bs),s(bs,vt),s(vt,$o),s(vt,U),s(pe,zo),s(zo,Fo),s(Fo,Kl),s(A,jl),s(A,ut),ut.innerHTML=tk,y(p,ma,k),y(p,As,k),s(As,Vo),s(Vo,ce),s(ce,Ql),s(As,Jl),s(As,he),s(he,Wo),s(Wo,Xl),s(he,Yl),s(he,Rs),s(Rs,Zl),s(Rs,yt),s(yt,sn),s(Rs,en),s(Rs,ws),s(ws,dt),s(dt,Ko),s(dt,G),y(p,ba,k),y(p,Ts,k),s(Ts,jo),s(jo,ke),s(ke,tn),s(Ts,on),s(Ts,Qo),s(Qo,_t),s(_t,an),s(_t,Es),s(Es,gt),s(gt,Jo),s(gt,N),y(p,wa,k),y(p,Ds,k),s(Ds,Xo),s(Xo,ve),s(ve,rn),s(Ds,ln),s(Ds,Yo),s(Yo,Us),s(Us,nn),s(Us,qs),s(qs,ft),s(ft,Zo),s(ft,H),s(Us,pn),s(Us,Cs),s(Cs,xt),s(xt,sa),s(xt,B),y(p,Ea,k),y(p,Gs,k),s(Gs,ea),s(ea,ue),s(ue,cn),s(Gs,hn),s(Gs,ta),s(ta,mt),s(mt,kn),s(mt,Os),s(Os,bt),s(bt,oa),s(bt,$),y(p,qa,k),y(p,f,k),s(f,aa),s(aa,Ns),s(Ns,vn),s(Ns,wt),s(wt,un),s(f,yn),s(f,ye),s(ye,dn),s(ye,de),s(de,_n),s(ye,gn),s(f,fn),s(f,J),s(J,Hs),s(Hs,xn),s(Hs,Et),s(Et,mn),s(Hs,bn),s(Hs,qt),s(qt,wn),s(J,En),s(J,ra),s(ra,qn),s(J,Cn),s(J,_e),s(_e,On),s(_e,Ct),s(Ct,In),s(_e,Ln),s(J,Sn),s(J,ge),s(ge,Mn),s(ge,Ot),s(Ot,Pn),s(ge,An),s(f,Rn),s(f,It),It.innerHTML=ok,s(f,Tn),s(f,la),s(la,Is),s(Is,z),s(f,Dn),Ka(fe,f,null),s(f,Un),s(f,Lt),s(Lt,xe),s(xe,Gn),s(Lt,Nn),y(p,Ca,k),y(p,E,k),s(E,na),s(na,Bs),s(Bs,Hn),s(Bs,St),s(St,Bn),s(E,$n),s(E,X),s(X,zn),s(X,Mt),s(Mt,Fn),s(X,Vn),s(X,Pt),s(Pt,Wn),s(X,Kn),s(X,At),s(At,jn),s(X,Qn),s(E,Jn),s(E,Rt),Rt.innerHTML=ak,s(E,Xn),s(E,ia),s(ia,Ls),s(Ls,F),s(E,Yn),s(E,me),s(me,be),s(be,Zn),s(me,si),s(me,Tt),s(Tt,ei),y(p,Oa,k),y(p,m,k),s(m,pa),s(pa,$s),s($s,ti),s($s,Dt),s(Dt,oi),s(m,ai),s(m,Y),s(Y,ri),s(Y,Ut),s(Ut,li),s(Y,ni),s(Y,Gt),s(Gt,ii),s(Y,pi),s(Y,Nt),s(Nt,ci),s(Y,hi),s(m,ki),s(m,Ht),Ht.innerHTML=rk,s(m,vi),s(m,ca),s(ca,Ss),s(Ss,V),s(m,ui),Ka(we,m,null),s(m,yi),s(m,Bt),s(Bt,Ee),s(Ee,di),s(Bt,_i),Ia=!0},p:Ek,i(p){Ia||(ja(d.$$.fragment,p),ja(fe.$$.fragment,p),ja(we.$$.fragment,p),Ia=!0)},o(p){Qa(d.$$.fragment,p),Qa(fe.$$.fragment,p),Qa(we.$$.fragment,p),Ia=!1},d(p){Ja(d,p),p&&o(K),p&&o(x),p&&o(ya),p&&o(Z),p&&o(da),p&&o(b),p&&o(_a),p&&o(v),p&&o(ga),p&&o(w),p&&o(fa),p&&o(es),p&&o(xa),p&&o(A),p&&o(ma),p&&o(As),p&&o(ba),p&&o(Ts),p&&o(wa),p&&o(Ds),p&&o(Ea),p&&o(Gs),p&&o(qa),p&&o(f),Ja(fe),p&&o(Ca),p&&o(E),p&&o(Oa),p&&o(m),Ja(we)}}}function Iv(Ce){let d,K;const x=[Ce[0],Wh];let rs={$$slots:{default:[Ov]},$$scope:{ctx:Ce}};for(let _=0;_<x.length;_+=1)rs=Qi(rs,x[_]);return d=new qk({props:rs}),{c(){Va(d.$$.fragment)},l(_){Wa(d.$$.fragment,_)},m(_,j){Ka(d,_,j),K=!0},p(_,[j]){const Oe=j&1?bk(x,[j&1&&qh(_[0]),j&0&&qh(Wh)]):{};j&2&&(Oe.$$scope={dirty:j,ctx:_}),d.$set(Oe)},i(_){K||(ja(d.$$.fragment,_),K=!0)},o(_){Qa(d.$$.fragment,_),K=!1},d(_){Ja(d,_)}}}const Wh={title:"SVG Filters",tags:["svg filters","filters","svg"],description:"SVG Filters 101[ Source ]defined in `&lt;filter&gt;` elementdefine a series of one or more filter primitives1 filter primitive performs 1 single fundamental graphic operation on one or more inputsfilter primitives..."};function Lv(Ce,d,K){return wk("blog",{image:Cv}),Ce.$$set=x=>{K(0,d=Qi(Qi({},d),Ch(x)))},d=Ch(d),[d]}class Gv extends fk{constructor(d){super();xk(this,d,Lv,Iv,mk,{})}}export{Gv as default,Wh as metadata};
