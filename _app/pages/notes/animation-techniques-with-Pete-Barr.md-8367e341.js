import{S as mt,i as xt,s as _t,C as Gs,w as nt,x as rt,y as it,z as Et,A as at,q as lt,o as pt,B as ct,r as wt,R as ot,k,e as o,t as h,m as v,c as e,a as n,h as y,d as a,b as l,g as d,F as s,O as qt}from"../../chunks/vendor-569a3c5c.js";import{B as St}from"../../chunks/BlogLayout-17b76cb2.js";import{T as bt}from"../../chunks/TableOfContent-dbc18cb8.js";import{_ as At}from"../../chunks/twitter-card-image-a57df29d.js";import"../../chunks/stores-ee936cd4.js";import"../../chunks/WebMentions-968cc380.js";/* empty css                                */function Tt(M){let r,g,u,q,i,m,S,c,P,b,cs,ks,D,A,hs,T,vs,ys,us,O,kt=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">mySplitText</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">SplitText</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;#quote&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> &#123;type</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-token-string-expression)">&quot;words,chars&quot;</span><span style="color: var(--shiki-color-text)">&#125;)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">//an array of all the divs that wrap each character</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">const</span><span style="color: var(--shiki-color-text)"> chars </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">mySplitText</span><span style="color: var(--shiki-color-text)">.chars;</span></span></code></pre>`,fs,R,V,ds,$,gs,ms,U,xs,_s,z,ht=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">data-splitting</span><span style="color: var(--shiki-color-text)">&gt;ABC&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">script</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">Splitting</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">script</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,Z,x,X,C,Es,ws,B,vt=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">.element</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">/* make the center of origin behind the characters */</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">transform-origin</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">center center -100</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">/* comment this out to see the back of the letters */</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">backface-visibility</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">hidden</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">animation</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">rotate 5</span><span style="color: var(--shiki-token-keyword)">s</span><span style="color: var(--shiki-token-constant)"> linear infinite</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">@keyframes</span><span style="color: var(--shiki-color-text)"> rotate &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  from &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">rotateX</span><span style="color: var(--shiki-token-constant)">(0</span><span style="color: var(--shiki-token-keyword)">deg</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  to &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">rotateX</span><span style="color: var(--shiki-token-constant)">(360</span><span style="color: var(--shiki-token-keyword)">deg</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,ss,_,F,I,qs,Ss,J,L,bs,ts,E,K,j,As,Ts,H,Q,$s,Cs,W,Is,as,w,Y,G,Ls,js,N,yt=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">defs</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">mask</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">id</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;jm-mask&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &lt;</span><span style="color: var(--shiki-token-string-expression)">path</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">d</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;...&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;/</span><span style="color: var(--shiki-token-string-expression)">mask</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">defs</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">rect</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">class</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;stage&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">width</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;716&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">height</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;1020&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">fill</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;red&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">mask</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;url(#jm-mask)&quot;</span><span style="color: var(--shiki-color-text)">/&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">svg</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,os;return r=new bt({props:{data:[{link:"split-text-from-phrase-to-animate-character-individually",title:"Split text from phrase to animate character individually"},{link:"cylinder-rotation-effect",title:"Cylinder Rotation Effect"},{link:"create-custom-easing-function-using-greensock-ease-visualiser",title:"Create custom easing function using GreenSock Ease Visualiser"},{link:"infinite-looping",title:"Infinite looping"},{link:"masking-using-svg-mask",title:"Masking using svg mask"}]}}),{c(){nt(r.$$.fragment),g=k(),u=o("p"),q=h("Link: "),i=o("a"),m=h("https://frontend.horse/articles/amazing-animation-techniques-with-gsap/"),S=k(),c=o("section"),P=o("h2"),b=o("a"),cs=h("Split text from phrase to animate character individually"),ks=k(),D=o("ul"),A=o("li"),hs=h("Greensock "),T=o("a"),vs=h("SplitText"),ys=h(" plugin"),us=k(),O=o("div"),fs=k(),R=o("ul"),V=o("li"),ds=h("Splitting.js "),$=o("a"),gs=h("https://splitting.js.org/"),ms=k(),U=o("p"),xs=h("Add data-splitting to element"),_s=k(),z=o("div"),Z=k(),x=o("section"),X=o("h2"),C=o("a"),Es=h("Cylinder Rotation Effect"),ws=k(),B=o("div"),ss=k(),_=o("section"),F=o("h2"),I=o("a"),qs=h("Create custom easing function using GreenSock Ease Visualiser"),Ss=k(),J=o("p"),L=o("a"),bs=h("https://greensock.com/docs/v3/Eases"),ts=k(),E=o("section"),K=o("h2"),j=o("a"),As=h("Infinite looping"),Ts=k(),H=o("ul"),Q=o("li"),$s=h("use linear ease"),Cs=k(),W=o("li"),Is=h("animate until the ending point is the same as starting point, then restart the animation"),as=k(),w=o("section"),Y=o("h2"),G=o("a"),Ls=h("Masking using svg mask"),js=k(),N=o("div"),this.h()},l(t){rt(r.$$.fragment,t),g=v(t),u=e(t,"P",{});var p=n(u);q=y(p,"Link: "),i=e(p,"A",{href:!0,rel:!0});var Ms=n(i);m=y(Ms,"https://frontend.horse/articles/amazing-animation-techniques-with-gsap/"),Ms.forEach(a),p.forEach(a),S=v(t),c=e(t,"SECTION",{});var f=n(c);P=e(f,"H2",{});var Os=n(P);b=e(Os,"A",{href:!0,id:!0});var Vs=n(b);cs=y(Vs,"Split text from phrase to animate character individually"),Vs.forEach(a),Os.forEach(a),ks=v(f),D=e(f,"UL",{});var zs=n(D);A=e(zs,"LI",{});var es=n(A);hs=y(es,"Greensock "),T=e(es,"A",{href:!0,rel:!0});var Bs=n(T);vs=y(Bs,"SplitText"),Bs.forEach(a),ys=y(es," plugin"),es.forEach(a),zs.forEach(a),us=v(f),O=e(f,"DIV",{class:!0});var ut=n(O);ut.forEach(a),fs=v(f),R=e(f,"UL",{});var Ns=n(R);V=e(Ns,"LI",{});var Hs=n(V);ds=y(Hs,"Splitting.js "),$=e(Hs,"A",{href:!0,rel:!0});var Ps=n($);gs=y(Ps,"https://splitting.js.org/"),Ps.forEach(a),Hs.forEach(a),Ns.forEach(a),ms=v(f),U=e(f,"P",{});var Ds=n(U);xs=y(Ds,"Add data-splitting to element"),Ds.forEach(a),_s=v(f),z=e(f,"DIV",{class:!0});var ft=n(z);ft.forEach(a),f.forEach(a),Z=v(t),x=e(t,"SECTION",{});var ns=n(x);X=e(ns,"H2",{});var Rs=n(X);C=e(Rs,"A",{href:!0,id:!0});var Us=n(C);Es=y(Us,"Cylinder Rotation Effect"),Us.forEach(a),Rs.forEach(a),ws=v(ns),B=e(ns,"DIV",{class:!0});var dt=n(B);dt.forEach(a),ns.forEach(a),ss=v(t),_=e(t,"SECTION",{});var rs=n(_);F=e(rs,"H2",{});var Xs=n(F);I=e(Xs,"A",{href:!0,id:!0});var Fs=n(I);qs=y(Fs,"Create custom easing function using GreenSock Ease Visualiser"),Fs.forEach(a),Xs.forEach(a),Ss=v(rs),J=e(rs,"P",{});var Js=n(J);L=e(Js,"A",{href:!0,rel:!0});var Ks=n(L);bs=y(Ks,"https://greensock.com/docs/v3/Eases"),Ks.forEach(a),Js.forEach(a),rs.forEach(a),ts=v(t),E=e(t,"SECTION",{});var is=n(E);K=e(is,"H2",{});var Qs=n(K);j=e(Qs,"A",{href:!0,id:!0});var Ws=n(j);As=y(Ws,"Infinite looping"),Ws.forEach(a),Qs.forEach(a),Ts=v(is),H=e(is,"UL",{});var ls=n(H);Q=e(ls,"LI",{});var Ys=n(Q);$s=y(Ys,"use linear ease"),Ys.forEach(a),Cs=v(ls),W=e(ls,"LI",{});var Zs=n(W);Is=y(Zs,"animate until the ending point is the same as starting point, then restart the animation"),Zs.forEach(a),ls.forEach(a),is.forEach(a),as=v(t),w=e(t,"SECTION",{});var ps=n(w);Y=e(ps,"H2",{});var st=n(Y);G=e(st,"A",{href:!0,id:!0});var tt=n(G);Ls=y(tt,"Masking using svg mask"),tt.forEach(a),st.forEach(a),js=v(ps),N=e(ps,"DIV",{class:!0});var gt=n(N);gt.forEach(a),ps.forEach(a),this.h()},h(){l(i,"href","https://frontend.horse/articles/amazing-animation-techniques-with-gsap/"),l(i,"rel","nofollow"),l(b,"href","#split-text-from-phrase-to-animate-character-individually"),l(b,"id","split-text-from-phrase-to-animate-character-individually"),l(T,"href","https://greensock.com/splittext/"),l(T,"rel","nofollow"),l(O,"class","code-section"),l($,"href","https://splitting.js.org/"),l($,"rel","nofollow"),l(z,"class","code-section"),l(C,"href","#cylinder-rotation-effect"),l(C,"id","cylinder-rotation-effect"),l(B,"class","code-section"),l(I,"href","#create-custom-easing-function-using-greensock-ease-visualiser"),l(I,"id","create-custom-easing-function-using-greensock-ease-visualiser"),l(L,"href","https://greensock.com/docs/v3/Eases"),l(L,"rel","nofollow"),l(j,"href","#infinite-looping"),l(j,"id","infinite-looping"),l(G,"href","#masking-using-svg-mask"),l(G,"id","masking-using-svg-mask"),l(N,"class","code-section")},m(t,p){it(r,t,p),d(t,g,p),d(t,u,p),s(u,q),s(u,i),s(i,m),d(t,S,p),d(t,c,p),s(c,P),s(P,b),s(b,cs),s(c,ks),s(c,D),s(D,A),s(A,hs),s(A,T),s(T,vs),s(A,ys),s(c,us),s(c,O),O.innerHTML=kt,s(c,fs),s(c,R),s(R,V),s(V,ds),s(V,$),s($,gs),s(c,ms),s(c,U),s(U,xs),s(c,_s),s(c,z),z.innerHTML=ht,d(t,Z,p),d(t,x,p),s(x,X),s(X,C),s(C,Es),s(x,ws),s(x,B),B.innerHTML=vt,d(t,ss,p),d(t,_,p),s(_,F),s(F,I),s(I,qs),s(_,Ss),s(_,J),s(J,L),s(L,bs),d(t,ts,p),d(t,E,p),s(E,K),s(K,j),s(j,As),s(E,Ts),s(E,H),s(H,Q),s(Q,$s),s(H,Cs),s(H,W),s(W,Is),d(t,as,p),d(t,w,p),s(w,Y),s(Y,G),s(G,Ls),s(w,js),s(w,N),N.innerHTML=yt,os=!0},p:qt,i(t){os||(lt(r.$$.fragment,t),os=!0)},o(t){pt(r.$$.fragment,t),os=!1},d(t){ct(r,t),t&&a(g),t&&a(u),t&&a(S),t&&a(c),t&&a(Z),t&&a(x),t&&a(ss),t&&a(_),t&&a(ts),t&&a(E),t&&a(as),t&&a(w)}}}function $t(M){let r,g;const u=[M[0],et];let q={$$slots:{default:[Tt]},$$scope:{ctx:M}};for(let i=0;i<u.length;i+=1)q=Gs(q,u[i]);return r=new St({props:q}),{c(){nt(r.$$.fragment)},l(i){rt(r.$$.fragment,i)},m(i,m){it(r,i,m),g=!0},p(i,[m]){const S=m&1?Et(u,[m&1&&at(i[0]),m&0&&at(et)]):{};m&2&&(S.$$scope={dirty:m,ctx:i}),r.$set(S)},i(i){g||(lt(r.$$.fragment,i),g=!0)},o(i){pt(r.$$.fragment,i),g=!1},d(i){ct(r,i)}}}const et={title:"Amazing Animation Techniques with GSAP",tags:["greensock","web animation"],description:"Link: https://frontend.horse/articles/amazing-animation-techniques-with-gsap/Split text from phrase to animate character individuallyGreensock SplitText pluginSplitting.js https://splitting.js.org/Add data-splitting to element..."};function Ct(M,r,g){return wt("blog",{image:At}),M.$$set=u=>{g(0,r=Gs(Gs({},r),ot(u)))},r=ot(r),[r]}class Vt extends mt{constructor(r){super();xt(this,r,Ct,$t,_t,{})}}export{Vt as default,et as metadata};
