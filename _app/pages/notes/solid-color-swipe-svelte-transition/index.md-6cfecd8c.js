import{S as Jo,i as Ko,s as Wo,C as Na,w as Ho,x as No,y as Ao,z as Xo,A as mo,q as Oo,o as Lo,B as Po,r as Yo,R as bo,k as i,e as n,t as v,m as p,c as t,a as e,h as y,d as a,b as r,Q as Ns,f as l,g as d,F as s,O as Zo}from"../../../chunks/vendor-569a3c5c.js";import{B as sn}from"../../../chunks/BlogLayout-17b76cb2.js";import{T as an}from"../../../chunks/TableOfContent-dbc18cb8.js";import{_ as on}from"../../../chunks/twitter-card-image-a57df29d.js";import"../../../chunks/stores-ee936cd4.js";import"../../../chunks/WebMentions-968cc380.js";/* empty css                                   */var nn="/_app/assets/reversible-a4be10be.gif",Eo="/_app/assets/reversible-25a43b02.gif",tn="/_app/assets/breakdown-3-1e0a2979.gif",$o="/_app/assets/breakdown-3-c0235810.gif",en="/_app/assets/breakdown-2-44ce42e6.gif",Io="/_app/assets/breakdown-2-7cae0151.gif",rn="/_app/assets/breakdown-1-833eff88.gif",To="/_app/assets/breakdown-1-f3da4d53.gif",ln="/_app/assets/custom-solid-swipe-1acbc9ac.gif",Co="/_app/assets/custom-solid-swipe-2928e887.gif";function pn(Y){let c,I,u,S,k,T,Z,ks,H,g,Aa,As,f,hs,R,Qs,Js,vs,N,w,Oa,Ks,ys,Ws,Xs,F,ds,Ys,Zs,us,sa,Os,P,xs,q,aa,oa,ss,jo=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">swipeColor</span><span style="color: var(--shiki-color-text)">(node</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> params) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-constant)">color</span><span style="color: var(--shiki-color-text)"> &#125; </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">window</span><span style="color: var(--shiki-token-function)">.getComputedStyle</span><span style="color: var(--shiki-color-text)">(node);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Ls,_,gs,U,na,ta,fs,Q,ea,as,ra,la,ia,os,Mo=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">css</span><span style="color: var(--shiki-color-text)">(t) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (t </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// transform t from range [0.5, 1] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// t: 0.5 -&gt; 1</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// u: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">u</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> u </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;background: linear-gradient(to right, transparent 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);&#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// transform t from range [0, 0.5] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// t: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;background: linear-gradient(to right, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, transparent </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);&#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span></code></pre>`,pa,ws,A,m,La,Ps,b,_s,J,ca,ka,ms,bs,ha,va,ns,Do=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">css</span><span style="color: var(--shiki-color-text)">(t) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (t </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;color: </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">&#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;color: transparent&#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,ya,Es,O,E,Pa,js,j,$s,K,da,ua,ts,Bo=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">css</span><span style="color: var(--shiki-color-text)">(t) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (t </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// transform t from range [0.5, 1] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// t: 0.5 -&gt; 1</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// u: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">u</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> u </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">      background: linear-gradient(to right, transparent 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">      color: </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">    &#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// transform t from range [0, 0.5] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// t: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">      background: linear-gradient(to right, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, transparent </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">      color: transparent;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">    &#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span></code></pre>`,Ms,M,Is,x,xa,es,ga,fa,rs,wa,_a,ls,ma,ba,Ea,is,zo='<pre class="prism language-svelte"><code><div class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"></div><div class="line">  <span class="token keyword">function</span> <span class="token function">swipeColor</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> params</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></div><div class="line">    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> duration<span class="token punctuation">,</span> delay<span class="token punctuation">,</span> easing <span class="token punctuation">&#125;</span> <span class="token operator">=</span> params <span class="token operator">||</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></div><div class="line">    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span></div><div class="line">      duration<span class="token punctuation">,</span></div><div class="line">      delay<span class="token punctuation">,</span></div><div class="line">      easing<span class="token punctuation">,</span></div><div class="line">      <span class="token function">css</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* ... */</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></div><div class="line">    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span></div><div class="line">  <span class="token punctuation">&#125;</span></div><div class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></div><div class="line"></div><div class="line"><span class="token language-javascript"><span class="token punctuation">&#123;</span>#<span class="token keyword">if</span> show<span class="token punctuation">&#125;</span></span></div><div class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">transition:</span>swipeColor</span><span class="token punctuation">></span></span>Hello world<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></div><div class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">transition:</span>swipeColor=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">delay</span><span class="token operator">:</span> <span class="token number">300</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span>Hello world<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></div><div class="line"><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token punctuation">&#125;</span></span></div></code></pre>',Ds,D,Ts,W,$a,Ia,ps,Vo=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">swipeColor</span><span style="color: var(--shiki-color-text)">(node</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> params) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-constant)">duration</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">delay</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">easing</span><span style="color: var(--shiki-color-text)"> &#125; </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> params </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> &#123;&#125;;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-constant)">color</span><span style="color: var(--shiki-color-text)"> &#125; </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">window</span><span style="color: var(--shiki-token-function)">.getComputedStyle</span><span style="color: var(--shiki-color-text)">(node);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    duration</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    delay</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    easing</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">css</span><span style="color: var(--shiki-color-text)">(t) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (t </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// transform t from range [0.5, 1] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// t: 0.5 -&gt; 1</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// u: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">u</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> u </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">          background: linear-gradient(to right, transparent 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">          color: </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">        &#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// transform t from range [0, 0.5] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// t: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">          background: linear-gradient(to right, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, transparent </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">          color: transparent;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">        &#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Bs,C,Cs,X,Ta,Ca,Ss,Sa,Ha,Hs,L,$,ja,zs;return c=new an({props:{data:[{link:"the-result",title:"The Result"},{link:"break-it-down-slowly",title:"Break it down slowly",nested:[{link:"1-the-first-thing-is-to-figure-out-the-color-of-the-text",title:"1. The first thing is to figure out the color of the text"},{link:"2-i-tried-using-linear-gradient-to-draw-the-background",title:"2. I tried using linear-gradient to draw the background"},{link:"3-next-i-need-to-hide-reveal-the-text-at-the-right-time",title:"3. Next I need to hide / reveal the text at the right time"},{link:"4-combining-the-both-2-and-3-together",title:"4. Combining the both 2. and 3. together"},{link:"5-final-touches-pass-the-duration-delay-and-easing-into-the-returned-object",title:"5. final touches, pass the  `duration` ,  `delay` , and  `easing`  into the returned object"}]},{link:"final-code",title:"Final code"},{link:"extra",title:"Extra"}]}}),{c(){Ho(c.$$.fragment),I=i(),u=n("section"),S=n("h2"),k=n("a"),T=v("The Result"),Z=i(),ks=n("p"),H=n("span"),g=n("img"),As=i(),f=n("section"),hs=n("h2"),R=n("a"),Qs=v("Break it down slowly"),Js=i(),vs=n("p"),N=n("span"),w=n("img"),Ks=i(),ys=n("p"),Ws=v("The transition can be broken down into 2 halves:"),Xs=i(),F=n("ul"),ds=n("li"),Ys=v("1\uFE0F\u20E3 a solid color growing from the left covering the whole text area"),Zs=i(),us=n("li"),sa=v("2\uFE0F\u20E3 as the solid color shrinks, it reveals the text"),Os=i(),P=n("section"),xs=n("h3"),q=n("a"),aa=v("1. The first thing is to figure out the color of the text"),oa=i(),ss=n("div"),Ls=i(),_=n("section"),gs=n("h3"),U=n("a"),na=v("2. I tried using linear-gradient to draw the background"),ta=i(),fs=n("ul"),Q=n("li"),ea=v("I use the value of "),as=n("code"),ra=v("t"),la=v(" to determine how wide the solid color should be"),ia=i(),os=n("div"),pa=i(),ws=n("p"),A=n("span"),m=n("img"),Ps=i(),b=n("section"),_s=n("h3"),J=n("a"),ca=v("3. Next I need to hide / reveal the text at the right time"),ka=i(),ms=n("ul"),bs=n("li"),ha=v("I hid the text by setting the text color to transparent"),va=i(),ns=n("div"),ya=i(),Es=n("p"),O=n("span"),E=n("img"),js=i(),j=n("section"),$s=n("h3"),K=n("a"),da=v("4. Combining the both 2. and 3. together"),ua=i(),ts=n("div"),Ms=i(),M=n("section"),Is=n("h3"),x=n("a"),xa=v("5. final touches, pass the "),es=n("code"),ga=v("duration"),fa=v(", "),rs=n("code"),wa=v("delay"),_a=v(", and "),ls=n("code"),ma=v("easing"),ba=v(" into the returned object"),Ea=i(),is=n("div"),Ds=i(),D=n("section"),Ts=n("h2"),W=n("a"),$a=v("Final code"),Ia=i(),ps=n("div"),Bs=i(),C=n("section"),Cs=n("h2"),X=n("a"),Ta=v("Extra"),Ca=i(),Ss=n("p"),Sa=v("Svelte has make writing custom transitions simple, with the code above, the transition itself is able to pause / reverse halfway through the transition"),Ha=i(),Hs=n("p"),L=n("span"),$=n("img"),this.h()},l(o){No(c.$$.fragment,o),I=p(o),u=t(o,"SECTION",{});var h=e(u);S=t(h,"H2",{});var Ma=e(S);k=t(Ma,"A",{href:!0,id:!0});var Da=e(k);T=y(Da,"The Result"),Da.forEach(a),Ma.forEach(a),Z=p(h),ks=t(h,"P",{});var Ba=e(ks);H=t(Ba,"SPAN",{style:!0});var za=e(H);g=t(za,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),za.forEach(a),Ba.forEach(a),h.forEach(a),As=p(o),f=t(o,"SECTION",{});var B=e(f);hs=t(B,"H2",{});var Va=e(hs);R=t(Va,"A",{href:!0,id:!0});var Ga=e(R);Qs=y(Ga,"Break it down slowly"),Ga.forEach(a),Va.forEach(a),Js=p(B),vs=t(B,"P",{});var Ra=e(vs);N=t(Ra,"SPAN",{style:!0});var Fa=e(N);w=t(Fa,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Fa.forEach(a),Ra.forEach(a),Ks=p(B),ys=t(B,"P",{});var qa=e(ys);Ws=y(qa,"The transition can be broken down into 2 halves:"),qa.forEach(a),Xs=p(B),F=t(B,"UL",{});var Vs=e(F);ds=t(Vs,"LI",{});var Ua=e(ds);Ys=y(Ua,"1\uFE0F\u20E3 a solid color growing from the left covering the whole text area"),Ua.forEach(a),Zs=p(Vs),us=t(Vs,"LI",{});var Qa=e(us);sa=y(Qa,"2\uFE0F\u20E3 as the solid color shrinks, it reveals the text"),Qa.forEach(a),Vs.forEach(a),B.forEach(a),Os=p(o),P=t(o,"SECTION",{});var Gs=e(P);xs=t(Gs,"H3",{});var Ja=e(xs);q=t(Ja,"A",{href:!0,id:!0});var Ka=e(q);aa=y(Ka,"1. The first thing is to figure out the color of the text"),Ka.forEach(a),Ja.forEach(a),oa=p(Gs),ss=t(Gs,"DIV",{class:!0});var Go=e(ss);Go.forEach(a),Gs.forEach(a),Ls=p(o),_=t(o,"SECTION",{});var z=e(_);gs=t(z,"H3",{});var Wa=e(gs);U=t(Wa,"A",{href:!0,id:!0});var Xa=e(U);na=y(Xa,"2. I tried using linear-gradient to draw the background"),Xa.forEach(a),Wa.forEach(a),ta=p(z),fs=t(z,"UL",{});var Ya=e(fs);Q=t(Ya,"LI",{});var Rs=e(Q);ea=y(Rs,"I use the value of "),as=t(Rs,"CODE",{class:!0});var Za=e(as);ra=y(Za,"t"),Za.forEach(a),la=y(Rs," to determine how wide the solid color should be"),Rs.forEach(a),Ya.forEach(a),ia=p(z),os=t(z,"DIV",{class:!0});var Ro=e(os);Ro.forEach(a),pa=p(z),ws=t(z,"P",{});var so=e(ws);A=t(so,"SPAN",{style:!0});var ao=e(A);m=t(ao,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),ao.forEach(a),so.forEach(a),z.forEach(a),Ps=p(o),b=t(o,"SECTION",{});var V=e(b);_s=t(V,"H3",{});var oo=e(_s);J=t(oo,"A",{href:!0,id:!0});var no=e(J);ca=y(no,"3. Next I need to hide / reveal the text at the right time"),no.forEach(a),oo.forEach(a),ka=p(V),ms=t(V,"UL",{});var to=e(ms);bs=t(to,"LI",{});var eo=e(bs);ha=y(eo,"I hid the text by setting the text color to transparent"),eo.forEach(a),to.forEach(a),va=p(V),ns=t(V,"DIV",{class:!0});var Fo=e(ns);Fo.forEach(a),ya=p(V),Es=t(V,"P",{});var ro=e(Es);O=t(ro,"SPAN",{style:!0});var lo=e(O);E=t(lo,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),lo.forEach(a),ro.forEach(a),V.forEach(a),js=p(o),j=t(o,"SECTION",{});var Fs=e(j);$s=t(Fs,"H3",{});var io=e($s);K=t(io,"A",{href:!0,id:!0});var po=e(K);da=y(po,"4. Combining the both 2. and 3. together"),po.forEach(a),io.forEach(a),ua=p(Fs),ts=t(Fs,"DIV",{class:!0});var qo=e(ts);qo.forEach(a),Fs.forEach(a),Ms=p(o),M=t(o,"SECTION",{});var qs=e(M);Is=t(qs,"H3",{});var co=e(Is);x=t(co,"A",{href:!0,id:!0});var G=e(x);xa=y(G,"5. final touches, pass the "),es=t(G,"CODE",{class:!0});var ko=e(es);ga=y(ko,"duration"),ko.forEach(a),fa=y(G,", "),rs=t(G,"CODE",{class:!0});var ho=e(rs);wa=y(ho,"delay"),ho.forEach(a),_a=y(G,", and "),ls=t(G,"CODE",{class:!0});var vo=e(ls);ma=y(vo,"easing"),vo.forEach(a),ba=y(G," into the returned object"),G.forEach(a),co.forEach(a),Ea=p(qs),is=t(qs,"DIV",{class:!0});var Uo=e(is);Uo.forEach(a),qs.forEach(a),Ds=p(o),D=t(o,"SECTION",{});var Us=e(D);Ts=t(Us,"H2",{});var yo=e(Ts);W=t(yo,"A",{href:!0,id:!0});var uo=e(W);$a=y(uo,"Final code"),uo.forEach(a),yo.forEach(a),Ia=p(Us),ps=t(Us,"DIV",{class:!0});var Qo=e(ps);Qo.forEach(a),Us.forEach(a),Bs=p(o),C=t(o,"SECTION",{});var cs=e(C);Cs=t(cs,"H2",{});var xo=e(Cs);X=t(xo,"A",{href:!0,id:!0});var go=e(X);Ta=y(go,"Extra"),go.forEach(a),xo.forEach(a),Ca=p(cs),Ss=t(cs,"P",{});var fo=e(Ss);Sa=y(fo,"Svelte has make writing custom transitions simple, with the code above, the transition itself is able to pause / reverse halfway through the transition"),fo.forEach(a),Ha=p(cs),Hs=t(cs,"P",{});var wo=e(Hs);L=t(wo,"SPAN",{style:!0});var _o=e(L);$=t(_o,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),_o.forEach(a),wo.forEach(a),cs.forEach(a),this.h()},h(){r(k,"href","#the-result"),r(k,"id","the-result"),Ns(g.src,Aa=Co)||r(g,"src",Aa),r(g,"srcset",Co+", "+ln+" 2x"),r(g,"loading","lazy"),l(g,"position","absolute"),l(g,"top","0"),l(g,"width","100%"),l(g,"height","100%"),r(g,"alt","the-result"),l(H,"display","block"),l(H,"position","relative"),l(H,"padding-top","65.286%"),l(H,"width","100%"),r(R,"href","#break-it-down-slowly"),r(R,"id","break-it-down-slowly"),Ns(w.src,Oa=To)||r(w,"src",Oa),r(w,"srcset",To+", "+rn+" 2x"),r(w,"loading","lazy"),l(w,"position","absolute"),l(w,"top","0"),l(w,"width","100%"),l(w,"height","100%"),r(w,"alt","breakdown"),l(N,"display","block"),l(N,"position","relative"),l(N,"padding-top","62.000%"),l(N,"width","100%"),r(q,"href","#1-the-first-thing-is-to-figure-out-the-color-of-the-text"),r(q,"id","1-the-first-thing-is-to-figure-out-the-color-of-the-text"),r(ss,"class","code-section"),r(U,"href","#2-i-tried-using-linear-gradient-to-draw-the-background"),r(U,"id","2-i-tried-using-linear-gradient-to-draw-the-background"),r(as,"class","inline"),r(os,"class","code-section"),Ns(m.src,La=Io)||r(m,"src",La),r(m,"srcset",Io+", "+en+" 2x"),r(m,"loading","lazy"),l(m,"position","absolute"),l(m,"top","0"),l(m,"width","100%"),l(m,"height","100%"),r(m,"alt","breakdown 2"),l(A,"display","block"),l(A,"position","relative"),l(A,"padding-top","62.000%"),l(A,"width","100%"),r(J,"href","#3-next-i-need-to-hide-reveal-the-text-at-the-right-time"),r(J,"id","3-next-i-need-to-hide-reveal-the-text-at-the-right-time"),r(ns,"class","code-section"),Ns(E.src,Pa=$o)||r(E,"src",Pa),r(E,"srcset",$o+", "+tn+" 2x"),r(E,"loading","lazy"),l(E,"position","absolute"),l(E,"top","0"),l(E,"width","100%"),l(E,"height","100%"),r(E,"alt","breakdown 3"),l(O,"display","block"),l(O,"position","relative"),l(O,"padding-top","62.000%"),l(O,"width","100%"),r(K,"href","#4-combining-the-both-2-and-3-together"),r(K,"id","4-combining-the-both-2-and-3-together"),r(ts,"class","code-section"),r(es,"class","inline"),r(rs,"class","inline"),r(ls,"class","inline"),r(x,"href","#5-final-touches-pass-the-duration-delay-and-easing-into-the-returned-object"),r(x,"id","5-final-touches-pass-the-duration-delay-and-easing-into-the-returned-object"),r(is,"class","code-section"),r(W,"href","#final-code"),r(W,"id","final-code"),r(ps,"class","code-section"),r(X,"href","#extra"),r(X,"id","extra"),Ns($.src,ja=Eo)||r($,"src",ja),r($,"srcset",Eo+", "+nn+" 2x"),r($,"loading","lazy"),l($,"position","absolute"),l($,"top","0"),l($,"width","100%"),l($,"height","100%"),r($,"alt","reversible"),l(L,"display","block"),l(L,"position","relative"),l(L,"padding-top","60.714%"),l(L,"width","100%")},m(o,h){Ao(c,o,h),d(o,I,h),d(o,u,h),s(u,S),s(S,k),s(k,T),s(u,Z),s(u,ks),s(ks,H),s(H,g),d(o,As,h),d(o,f,h),s(f,hs),s(hs,R),s(R,Qs),s(f,Js),s(f,vs),s(vs,N),s(N,w),s(f,Ks),s(f,ys),s(ys,Ws),s(f,Xs),s(f,F),s(F,ds),s(ds,Ys),s(F,Zs),s(F,us),s(us,sa),d(o,Os,h),d(o,P,h),s(P,xs),s(xs,q),s(q,aa),s(P,oa),s(P,ss),ss.innerHTML=jo,d(o,Ls,h),d(o,_,h),s(_,gs),s(gs,U),s(U,na),s(_,ta),s(_,fs),s(fs,Q),s(Q,ea),s(Q,as),s(as,ra),s(Q,la),s(_,ia),s(_,os),os.innerHTML=Mo,s(_,pa),s(_,ws),s(ws,A),s(A,m),d(o,Ps,h),d(o,b,h),s(b,_s),s(_s,J),s(J,ca),s(b,ka),s(b,ms),s(ms,bs),s(bs,ha),s(b,va),s(b,ns),ns.innerHTML=Do,s(b,ya),s(b,Es),s(Es,O),s(O,E),d(o,js,h),d(o,j,h),s(j,$s),s($s,K),s(K,da),s(j,ua),s(j,ts),ts.innerHTML=Bo,d(o,Ms,h),d(o,M,h),s(M,Is),s(Is,x),s(x,xa),s(x,es),s(es,ga),s(x,fa),s(x,rs),s(rs,wa),s(x,_a),s(x,ls),s(ls,ma),s(x,ba),s(M,Ea),s(M,is),is.innerHTML=zo,d(o,Ds,h),d(o,D,h),s(D,Ts),s(Ts,W),s(W,$a),s(D,Ia),s(D,ps),ps.innerHTML=Vo,d(o,Bs,h),d(o,C,h),s(C,Cs),s(Cs,X),s(X,Ta),s(C,Ca),s(C,Ss),s(Ss,Sa),s(C,Ha),s(C,Hs),s(Hs,L),s(L,$),zs=!0},p:Zo,i(o){zs||(Oo(c.$$.fragment,o),zs=!0)},o(o){Lo(c.$$.fragment,o),zs=!1},d(o){Po(c,o),o&&a(I),o&&a(u),o&&a(As),o&&a(f),o&&a(Os),o&&a(P),o&&a(Ls),o&&a(_),o&&a(Ps),o&&a(b),o&&a(js),o&&a(j),o&&a(Ms),o&&a(M),o&&a(Ds),o&&a(D),o&&a(Bs),o&&a(C)}}}function cn(Y){let c,I;const u=[Y[0],So];let S={$$slots:{default:[pn]},$$scope:{ctx:Y}};for(let k=0;k<u.length;k+=1)S=Na(S,u[k]);return c=new sn({props:S}),{c(){Ho(c.$$.fragment)},l(k){No(c.$$.fragment,k)},m(k,T){Ao(c,k,T),I=!0},p(k,[T]){const Z=T&1?Xo(u,[T&1&&mo(k[0]),T&0&&mo(So)]):{};T&2&&(Z.$$scope={dirty:T,ctx:k}),c.$set(Z)},i(k){I||(Oo(c.$$.fragment,k),I=!0)},o(k){Lo(c.$$.fragment,k),I=!1},d(k){Po(c,k)}}}const So={title:"Solid color swipe Svelte Transition",tags:["svelte","transition"],description:"The ResultBreak it down slowlyThe transition can be broken down into 2 halves:1\uFE0F\u20E3 a solid color growing from the left covering the whole text area2\uFE0F\u20E3 as the solid color shrinks, it reveals the text1. The first thing is to figure out the color of the text..."};function kn(Y,c,I){return Yo("blog",{image:on}),Y.$$set=u=>{I(0,c=Na(Na({},c),bo(u)))},c=bo(c),[c]}class fn extends Jo{constructor(c){super();Ko(this,c,kn,cn,Wo,{})}}export{fn as default,So as metadata};
