import{S as Lo,i as No,s as jo,C as $a,w as vo,x as yo,y as uo,z as Mo,A as co,q as xo,o as go,B as fo,r as Ao,R as ko,k as l,e as n,t as h,m as i,c as t,a as e,h as v,d as a,b as r,Q as $s,g as y,F as s,O as Do}from"../../../chunks/vendor-6bf294e3.js";import{B as Po}from"../../../chunks/BlogLayout-152f599b.js";import{T as zo}from"../../../chunks/TableOfContent-1b9e4572.js";import{_ as Bo}from"../../../chunks/twitter-card-image-a57df29d.js";import"../../../chunks/stores-e20b7872.js";import"../../../chunks/WebMentions-745413ea.js";/* empty css                                   */var Vo="/_app/assets/reversible-25a43b02.gif",Go="/_app/assets/breakdown-3-c2c821c3.gif",Fo="/_app/assets/breakdown-2-cc798dd4.gif",Ro="/_app/assets/breakdown-1-b0c85c04.gif",qo="/_app/assets/custom-solid-swipe-2928e887.gif";function Uo(U){let p,w,d,b,c,m,Q,es,L,Ia,Is,x,rs,N,Vs,Gs,ls,j,Ca,Fs,is,Rs,qs,M,ps,Us,Qs,cs,Js,Cs,E,ks,A,Ks,Ws,J,wo=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">swipeColor</span><span style="color: var(--shiki-color-text)">(node</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> params) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-constant)">color</span><span style="color: var(--shiki-color-text)"> &#125; </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">window</span><span style="color: var(--shiki-token-function)">.getComputedStyle</span><span style="color: var(--shiki-color-text)">(node);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Ts,g,hs,D,Xs,Ys,vs,P,Zs,K,sa,aa,oa,W,mo=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">css</span><span style="color: var(--shiki-color-text)">(t) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (t </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// transform t from range [0.5, 1] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// t: 0.5 -&gt; 1</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// u: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">u</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> u </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;background: linear-gradient(to right, transparent 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);&#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// transform t from range [0, 0.5] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// t: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;background: linear-gradient(to right, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, transparent </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);&#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span></code></pre>`,na,ys,z,Ta,Ss,f,ds,B,ta,ea,us,xs,ra,la,X,_o=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">css</span><span style="color: var(--shiki-color-text)">(t) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (t </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;color: </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">&#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;color: transparent&#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,ia,gs,V,Sa,Hs,$,fs,G,pa,ca,Y,bo=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">css</span><span style="color: var(--shiki-color-text)">(t) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (t </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// transform t from range [0.5, 1] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// t: 0.5 -&gt; 1</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// u: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">u</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> u </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">      background: linear-gradient(to right, transparent 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">      color: </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">    &#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// transform t from range [0, 0.5] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// t: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">      background: linear-gradient(to right, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, transparent </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">      color: transparent;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">    &#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span></code></pre>`,Os,I,ws,u,ka,Z,ha,va,ss,ya,da,as,ua,xa,ga,os,Eo='<pre class="prism language-svelte"><code><div class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"></div><div class="line">  <span class="token keyword">function</span> <span class="token function">swipeColor</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> params</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></div><div class="line">    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> duration<span class="token punctuation">,</span> delay<span class="token punctuation">,</span> easing <span class="token punctuation">&#125;</span> <span class="token operator">=</span> params <span class="token operator">||</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span></div><div class="line">    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span></div><div class="line">      duration<span class="token punctuation">,</span></div><div class="line">      delay<span class="token punctuation">,</span></div><div class="line">      easing<span class="token punctuation">,</span></div><div class="line">      <span class="token function">css</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* ... */</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></div><div class="line">    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span></div><div class="line">  <span class="token punctuation">&#125;</span></div><div class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></div><div class="line"></div><div class="line"><span class="token language-javascript"><span class="token punctuation">&#123;</span>#<span class="token keyword">if</span> show<span class="token punctuation">&#125;</span></span></div><div class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">transition:</span>swipeColor</span><span class="token punctuation">></span></span>Hello world<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></div><div class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">transition:</span>swipeColor=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">delay</span><span class="token operator">:</span> <span class="token number">300</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span>Hello world<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></div><div class="line"><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token punctuation">&#125;</span></span></div></code></pre>',Ls,C,ms,F,fa,wa,ns,$o=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">swipeColor</span><span style="color: var(--shiki-color-text)">(node</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> params) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-constant)">duration</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">delay</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">easing</span><span style="color: var(--shiki-color-text)"> &#125; </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> params </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> &#123;&#125;;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-constant)">color</span><span style="color: var(--shiki-color-text)"> &#125; </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">window</span><span style="color: var(--shiki-token-function)">.getComputedStyle</span><span style="color: var(--shiki-color-text)">(node);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    duration</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    delay</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    easing</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">css</span><span style="color: var(--shiki-color-text)">(t) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (t </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// transform t from range [0.5, 1] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// t: 0.5 -&gt; 1</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// u: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">u</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> u </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">          background: linear-gradient(to right, transparent 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">          color: </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">        &#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// transform t from range [0, 0.5] into percentage [0, 100]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// t: 0 -&gt; 0.5</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-comment)">// percentage: 0 -&gt; 100</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">percentage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">          background: linear-gradient(to right, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">color</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)"> 0, </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%, transparent </span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">percentage</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">%);</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">          color: transparent;</span></span>
<span class="line"><span style="color: var(--shiki-token-string-expression)">        &#96;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Ns,_,_s,R,ma,_a,bs,ba,Ea,Es,q,Ha,js;return p=new zo({props:{data:[{link:"the-result",title:"The Result"},{link:"break-it-down-slowly",title:"Break it down slowly",nested:[{link:"the-first-thing-is-to-figure-out-the-color-of-the-text",title:"1. The first thing is to figure out the color of the text"},{link:"i-tried-using-linear-gradient-to-draw-the-background",title:"2. I tried using linear-gradient to draw the background"},{link:"next-i-need-to-hide-reveal-the-text-at-the-right-time",title:"3. Next I need to hide / reveal the text at the right time"},{link:"combining-the-both-and-together",title:"4. Combining the both 2. and 3. together"},{link:"final-touches-pass-the-duration-delay-and-easing-into-the-returned-object",title:"5. final touches, pass the  `duration` ,  `delay` , and  `easing`  into the returned object"}]},{link:"final-code",title:"Final code"},{link:"extra",title:"Extra"}]}}),{c(){vo(p.$$.fragment),w=l(),d=n("section"),b=n("h2"),c=n("a"),m=h("The Result"),Q=l(),es=n("p"),L=n("img"),Is=l(),x=n("section"),rs=n("h2"),N=n("a"),Vs=h("Break it down slowly"),Gs=l(),ls=n("p"),j=n("img"),Fs=l(),is=n("p"),Rs=h("The transition can be broken down into 2 halves:"),qs=l(),M=n("ul"),ps=n("li"),Us=h("1\uFE0F\u20E3 a solid color growing from the left covering the whole text area"),Qs=l(),cs=n("li"),Js=h("2\uFE0F\u20E3 as the solid color shrinks, it reveals the text"),Cs=l(),E=n("section"),ks=n("h3"),A=n("a"),Ks=h("1. The first thing is to figure out the color of the text"),Ws=l(),J=n("div"),Ts=l(),g=n("section"),hs=n("h3"),D=n("a"),Xs=h("2. I tried using linear-gradient to draw the background"),Ys=l(),vs=n("ul"),P=n("li"),Zs=h("I use the value of "),K=n("code"),sa=h("t"),aa=h(" to determine how wide the solid color should be"),oa=l(),W=n("div"),na=l(),ys=n("p"),z=n("img"),Ss=l(),f=n("section"),ds=n("h3"),B=n("a"),ta=h("3. Next I need to hide / reveal the text at the right time"),ea=l(),us=n("ul"),xs=n("li"),ra=h("I hid the text by setting the text color to transparent"),la=l(),X=n("div"),ia=l(),gs=n("p"),V=n("img"),Hs=l(),$=n("section"),fs=n("h3"),G=n("a"),pa=h("4. Combining the both 2. and 3. together"),ca=l(),Y=n("div"),Os=l(),I=n("section"),ws=n("h3"),u=n("a"),ka=h("5. final touches, pass the "),Z=n("code"),ha=h("duration"),va=h(", "),ss=n("code"),ya=h("delay"),da=h(", and "),as=n("code"),ua=h("easing"),xa=h(" into the returned object"),ga=l(),os=n("div"),Ls=l(),C=n("section"),ms=n("h2"),F=n("a"),fa=h("Final code"),wa=l(),ns=n("div"),Ns=l(),_=n("section"),_s=n("h2"),R=n("a"),ma=h("Extra"),_a=l(),bs=n("p"),ba=h("Svelte has make writing custom transitions simple, with the code above, the transition itself is able to pause / reverse halfway through the transition"),Ea=l(),Es=n("p"),q=n("img"),this.h()},l(o){yo(p.$$.fragment,o),w=i(o),d=t(o,"SECTION",{});var k=e(d);b=t(k,"H2",{});var Oa=e(b);c=t(Oa,"A",{href:!0,id:!0});var La=e(c);m=v(La,"The Result"),La.forEach(a),Oa.forEach(a),Q=i(k),es=t(k,"P",{});var Na=e(es);L=t(Na,"IMG",{src:!0,loading:!0,alt:!0}),Na.forEach(a),k.forEach(a),Is=i(o),x=t(o,"SECTION",{});var T=e(x);rs=t(T,"H2",{});var ja=e(rs);N=t(ja,"A",{href:!0,id:!0});var Ma=e(N);Vs=v(Ma,"Break it down slowly"),Ma.forEach(a),ja.forEach(a),Gs=i(T),ls=t(T,"P",{});var Aa=e(ls);j=t(Aa,"IMG",{src:!0,loading:!0,alt:!0}),Aa.forEach(a),Fs=i(T),is=t(T,"P",{});var Da=e(is);Rs=v(Da,"The transition can be broken down into 2 halves:"),Da.forEach(a),qs=i(T),M=t(T,"UL",{});var Ms=e(M);ps=t(Ms,"LI",{});var Pa=e(ps);Us=v(Pa,"1\uFE0F\u20E3 a solid color growing from the left covering the whole text area"),Pa.forEach(a),Qs=i(Ms),cs=t(Ms,"LI",{});var za=e(cs);Js=v(za,"2\uFE0F\u20E3 as the solid color shrinks, it reveals the text"),za.forEach(a),Ms.forEach(a),T.forEach(a),Cs=i(o),E=t(o,"SECTION",{});var As=e(E);ks=t(As,"H3",{});var Ba=e(ks);A=t(Ba,"A",{href:!0,id:!0});var Va=e(A);Ks=v(Va,"1. The first thing is to figure out the color of the text"),Va.forEach(a),Ba.forEach(a),Ws=i(As),J=t(As,"DIV",{class:!0});var Io=e(J);Io.forEach(a),As.forEach(a),Ts=i(o),g=t(o,"SECTION",{});var S=e(g);hs=t(S,"H3",{});var Ga=e(hs);D=t(Ga,"A",{href:!0,id:!0});var Fa=e(D);Xs=v(Fa,"2. I tried using linear-gradient to draw the background"),Fa.forEach(a),Ga.forEach(a),Ys=i(S),vs=t(S,"UL",{});var Ra=e(vs);P=t(Ra,"LI",{});var Ds=e(P);Zs=v(Ds,"I use the value of "),K=t(Ds,"CODE",{class:!0});var qa=e(K);sa=v(qa,"t"),qa.forEach(a),aa=v(Ds," to determine how wide the solid color should be"),Ds.forEach(a),Ra.forEach(a),oa=i(S),W=t(S,"DIV",{class:!0});var Co=e(W);Co.forEach(a),na=i(S),ys=t(S,"P",{});var Ua=e(ys);z=t(Ua,"IMG",{src:!0,loading:!0,alt:!0}),Ua.forEach(a),S.forEach(a),Ss=i(o),f=t(o,"SECTION",{});var H=e(f);ds=t(H,"H3",{});var Qa=e(ds);B=t(Qa,"A",{href:!0,id:!0});var Ja=e(B);ta=v(Ja,"3. Next I need to hide / reveal the text at the right time"),Ja.forEach(a),Qa.forEach(a),ea=i(H),us=t(H,"UL",{});var Ka=e(us);xs=t(Ka,"LI",{});var Wa=e(xs);ra=v(Wa,"I hid the text by setting the text color to transparent"),Wa.forEach(a),Ka.forEach(a),la=i(H),X=t(H,"DIV",{class:!0});var To=e(X);To.forEach(a),ia=i(H),gs=t(H,"P",{});var Xa=e(gs);V=t(Xa,"IMG",{src:!0,loading:!0,alt:!0}),Xa.forEach(a),H.forEach(a),Hs=i(o),$=t(o,"SECTION",{});var Ps=e($);fs=t(Ps,"H3",{});var Ya=e(fs);G=t(Ya,"A",{href:!0,id:!0});var Za=e(G);pa=v(Za,"4. Combining the both 2. and 3. together"),Za.forEach(a),Ya.forEach(a),ca=i(Ps),Y=t(Ps,"DIV",{class:!0});var So=e(Y);So.forEach(a),Ps.forEach(a),Os=i(o),I=t(o,"SECTION",{});var zs=e(I);ws=t(zs,"H3",{});var so=e(ws);u=t(so,"A",{href:!0,id:!0});var O=e(u);ka=v(O,"5. final touches, pass the "),Z=t(O,"CODE",{class:!0});var ao=e(Z);ha=v(ao,"duration"),ao.forEach(a),va=v(O,", "),ss=t(O,"CODE",{class:!0});var oo=e(ss);ya=v(oo,"delay"),oo.forEach(a),da=v(O,", and "),as=t(O,"CODE",{class:!0});var no=e(as);ua=v(no,"easing"),no.forEach(a),xa=v(O," into the returned object"),O.forEach(a),so.forEach(a),ga=i(zs),os=t(zs,"DIV",{class:!0});var Ho=e(os);Ho.forEach(a),zs.forEach(a),Ls=i(o),C=t(o,"SECTION",{});var Bs=e(C);ms=t(Bs,"H2",{});var to=e(ms);F=t(to,"A",{href:!0,id:!0});var eo=e(F);fa=v(eo,"Final code"),eo.forEach(a),to.forEach(a),wa=i(Bs),ns=t(Bs,"DIV",{class:!0});var Oo=e(ns);Oo.forEach(a),Bs.forEach(a),Ns=i(o),_=t(o,"SECTION",{});var ts=e(_);_s=t(ts,"H2",{});var ro=e(_s);R=t(ro,"A",{href:!0,id:!0});var lo=e(R);ma=v(lo,"Extra"),lo.forEach(a),ro.forEach(a),_a=i(ts),bs=t(ts,"P",{});var io=e(bs);ba=v(io,"Svelte has make writing custom transitions simple, with the code above, the transition itself is able to pause / reverse halfway through the transition"),io.forEach(a),Ea=i(ts),Es=t(ts,"P",{});var po=e(Es);q=t(po,"IMG",{src:!0,loading:!0,alt:!0}),po.forEach(a),ts.forEach(a),this.h()},h(){r(c,"href","#the-result"),r(c,"id","the-result"),$s(L.src,Ia=qo)||r(L,"src",Ia),r(L,"loading","lazy"),r(L,"alt","the-result"),r(N,"href","#break-it-down-slowly"),r(N,"id","break-it-down-slowly"),$s(j.src,Ca=Ro)||r(j,"src",Ca),r(j,"loading","lazy"),r(j,"alt","breakdown"),r(A,"href","#the-first-thing-is-to-figure-out-the-color-of-the-text"),r(A,"id","the-first-thing-is-to-figure-out-the-color-of-the-text"),r(J,"class","code-section"),r(D,"href","#i-tried-using-linear-gradient-to-draw-the-background"),r(D,"id","i-tried-using-linear-gradient-to-draw-the-background"),r(K,"class","inline"),r(W,"class","code-section"),$s(z.src,Ta=Fo)||r(z,"src",Ta),r(z,"loading","lazy"),r(z,"alt","breakdown 2"),r(B,"href","#next-i-need-to-hide-reveal-the-text-at-the-right-time"),r(B,"id","next-i-need-to-hide-reveal-the-text-at-the-right-time"),r(X,"class","code-section"),$s(V.src,Sa=Go)||r(V,"src",Sa),r(V,"loading","lazy"),r(V,"alt","breakdown 3"),r(G,"href","#combining-the-both-and-together"),r(G,"id","combining-the-both-and-together"),r(Y,"class","code-section"),r(Z,"class","inline"),r(ss,"class","inline"),r(as,"class","inline"),r(u,"href","#final-touches-pass-the-duration-delay-and-easing-into-the-returned-object"),r(u,"id","final-touches-pass-the-duration-delay-and-easing-into-the-returned-object"),r(os,"class","code-section"),r(F,"href","#final-code"),r(F,"id","final-code"),r(ns,"class","code-section"),r(R,"href","#extra"),r(R,"id","extra"),$s(q.src,Ha=Vo)||r(q,"src",Ha),r(q,"loading","lazy"),r(q,"alt","reversible")},m(o,k){uo(p,o,k),y(o,w,k),y(o,d,k),s(d,b),s(b,c),s(c,m),s(d,Q),s(d,es),s(es,L),y(o,Is,k),y(o,x,k),s(x,rs),s(rs,N),s(N,Vs),s(x,Gs),s(x,ls),s(ls,j),s(x,Fs),s(x,is),s(is,Rs),s(x,qs),s(x,M),s(M,ps),s(ps,Us),s(M,Qs),s(M,cs),s(cs,Js),y(o,Cs,k),y(o,E,k),s(E,ks),s(ks,A),s(A,Ks),s(E,Ws),s(E,J),J.innerHTML=wo,y(o,Ts,k),y(o,g,k),s(g,hs),s(hs,D),s(D,Xs),s(g,Ys),s(g,vs),s(vs,P),s(P,Zs),s(P,K),s(K,sa),s(P,aa),s(g,oa),s(g,W),W.innerHTML=mo,s(g,na),s(g,ys),s(ys,z),y(o,Ss,k),y(o,f,k),s(f,ds),s(ds,B),s(B,ta),s(f,ea),s(f,us),s(us,xs),s(xs,ra),s(f,la),s(f,X),X.innerHTML=_o,s(f,ia),s(f,gs),s(gs,V),y(o,Hs,k),y(o,$,k),s($,fs),s(fs,G),s(G,pa),s($,ca),s($,Y),Y.innerHTML=bo,y(o,Os,k),y(o,I,k),s(I,ws),s(ws,u),s(u,ka),s(u,Z),s(Z,ha),s(u,va),s(u,ss),s(ss,ya),s(u,da),s(u,as),s(as,ua),s(u,xa),s(I,ga),s(I,os),os.innerHTML=Eo,y(o,Ls,k),y(o,C,k),s(C,ms),s(ms,F),s(F,fa),s(C,wa),s(C,ns),ns.innerHTML=$o,y(o,Ns,k),y(o,_,k),s(_,_s),s(_s,R),s(R,ma),s(_,_a),s(_,bs),s(bs,ba),s(_,Ea),s(_,Es),s(Es,q),js=!0},p:Do,i(o){js||(xo(p.$$.fragment,o),js=!0)},o(o){go(p.$$.fragment,o),js=!1},d(o){fo(p,o),o&&a(w),o&&a(d),o&&a(Is),o&&a(x),o&&a(Cs),o&&a(E),o&&a(Ts),o&&a(g),o&&a(Ss),o&&a(f),o&&a(Hs),o&&a($),o&&a(Os),o&&a(I),o&&a(Ls),o&&a(C),o&&a(Ns),o&&a(_)}}}function Qo(U){let p,w;const d=[U[0],ho];let b={$$slots:{default:[Uo]},$$scope:{ctx:U}};for(let c=0;c<d.length;c+=1)b=$a(b,d[c]);return p=new Po({props:b}),{c(){vo(p.$$.fragment)},l(c){yo(p.$$.fragment,c)},m(c,m){uo(p,c,m),w=!0},p(c,[m]){const Q=m&1?Mo(d,[m&1&&co(c[0]),m&0&&co(ho)]):{};m&2&&(Q.$$scope={dirty:m,ctx:c}),p.$set(Q)},i(c){w||(xo(p.$$.fragment,c),w=!0)},o(c){go(p.$$.fragment,c),w=!1},d(c){fo(p,c)}}}const ho={title:"Solid color swipe Svelte Transition",tags:["svelte","transition"]};function Jo(U,p,w){return Ao("blog",{image:Bo}),U.$$set=d=>{w(0,p=$a($a({},p),ko(d)))},p=ko(p),[p]}class on extends Lo{constructor(p){super();No(this,p,Jo,Qo,jo,{})}}export{on as default,ho as metadata};
