import{S as fa,i as ya,s as _a,C as po,w as ga,x as xa,y as ma,z as ba,A as Zo,q as Ea,o as wa,B as La,r as Da,Y as ea,e as o,t as n,k as c,c as a,a as t,h as r,d as s,m as p,b as h,g as qe,H as e,J as Ia}from"../../chunks/vendor-da4388d4.js";import{B as Pa}from"../../chunks/BlogLayout-86707f1c.js";import{_ as Ca}from"../../chunks/twitter-card-image-a57df29d.js";import"../../chunks/stores-1fad7c36.js";import"../../chunks/ldjson-b0805387.js";/* empty css                                */function qa($){let l,_,f,q,d,y,V,Me,re,$e,Ve,u,ie,Ue,je,ce,Se,We,pe,Be,Fe,U,Ge,he,m,Ne,j,Re,ze,S,Je,Ke,W,Qe,Ye,Xe,w,Ze,B,es,ss,F,os,as,ts,de,ls,ns,ke,rs,is,b,ve,cs,ps,ue,hs,ds,fe,ks,vs,G,us,ye,_e,fs,ys,ge,_s,gs,N,oa=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">a</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> __FLAG__;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (a) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;foo&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(bar</span><span style="color: var(--shiki-token-string-expression)">&#39;);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,xs,xe,ms,bs,R,aa=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (__FLAG__) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;foo&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(bar</span><span style="color: var(--shiki-token-string-expression)">&#39;);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Es,O,ws,z,Ls,Ds,Is,J,ta=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">a</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (a) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;foo&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(bar</span><span style="color: var(--shiki-token-string-expression)">&#39;);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Ps,me,Cs,qs,K,la=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;foo&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(bar</span><span style="color: var(--shiki-token-string-expression)">&#39;);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Os,be,Hs,Ts,Ee,Q,As,H,Ms,$s,Y,na=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;foo&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123; &#125;</span></span></code></pre>`,Vs,E,Us,X,js,Ss,Z,Ws,Bs,ee,Fs,Gs,Oe,v,we,T,Ns,Rs,Le,zs,Js,se,ra=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">a</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (a) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;foo&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(bar</span><span style="color: var(--shiki-token-string-expression)">&#39;);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Ks,De,Qs,Ys,oe,ia='<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;foo&#39;</span><span style="color: var(--shiki-color-text)">);</span></span></code></pre>',Xs,L,Zs,ae,eo,so,te,oo,ao,He,D,Ie,A,to,lo,Pe,Ce,M,no;return{c(){l=o("section"),_=o("h2"),f=o("a"),q=n("Define Plugin"),d=c(),y=o("p"),V=n("a high level of define plugin, treeshake + minification happens in the following"),Me=c(),re=o("p"),$e=n("for any module,"),Ve=c(),u=o("ul"),ie=o("li"),Ue=n("webpack reads the source code"),je=c(),ce=o("li"),Se=n("apply all the loaders"),We=c(),pe=o("li"),Be=n("apply define plugin"),Fe=c(),U=o("li"),Ge=n("for the final code after loaders + define plugin, "),he=o("ul"),m=o("li"),Ne=n("for code at "),j=o("code"),Re=n("if (truthy)"),ze=n(" or "),S=o("code"),Je=n("truthy && ..."),Ke=n(" or "),W=o("code"),Qe=n("truthy ? ... : ..."),Ye=n(", webpack will try to collapse that conditional, meaning based on truthy / falsy value, remove unwanted code logic paths"),Xe=c(),w=o("li"),Ze=n("find all the "),B=o("code"),es=n("imports"),ss=n(" or "),F=o("code"),os=n("require"),as=n(" in the code"),ts=c(),de=o("li"),ls=n("traverse them and apply the same step for each module"),ns=c(),ke=o("p"),rs=n("after creating the module map"),is=c(),b=o("ul"),ve=o("li"),cs=n("create chunks based on dynamic import()"),ps=c(),ue=o("li"),hs=n("apply graph based optimisation - such as mark unused exports and treeshake them away"),ds=c(),fe=o("li"),ks=n("granular split chuks optimisation"),vs=c(),G=o("li"),us=n("lastly, for each chunk"),ye=o("ul"),_e=o("li"),fs=n("run terser to minify the code, will remove any unused variables / functions within each chunk"),ys=c(),ge=o("p"),_s=n("which means, there's a difference between the following contrived code:"),gs=c(),N=o("div"),xs=c(),xe=o("p"),ms=n("and"),bs=c(),R=o("div"),Es=c(),O=o("p"),ws=n("after applying "),z=o("code"),Ls=n("new DefinePlugin({ __FLAG__: true })"),Ds=n(", you get:"),Is=c(),J=o("div"),Ps=c(),me=o("p"),Cs=n("and"),qs=c(),K=o("div"),Os=c(),be=o("p"),Hs=n("webpack's parser is able to collapse the conditional of the latter, but not the former."),Ts=c(),Ee=o("blockquote"),Q=o("p"),As=n("the collapse of conditional expression happens "),H=o("a"),Ms=n("here"),$s=c(),Y=o("div"),Vs=c(),E=o("p"),Us=n("so, the former case, will have both "),X=o("code"),js=n("foo"),Ss=n(" and "),Z=o("code"),Ws=n("bar"),Bs=n(" in the bundled code ,but the latter will only have "),ee=o("code"),Fs=n("foo"),Gs=n("."),Oe=c(),v=o("section"),we=o("h3"),T=o("a"),Ns=n("What about terser?"),Rs=c(),Le=o("p"),zs=n("terser runs on chunk level after all the bundling and chunking logic, so even though terser is smart enough to collapse"),Js=c(),se=o("div"),Ks=c(),De=o("p"),Qs=n("into"),Ys=c(),oe=o("div"),Xs=c(),L=o("p"),Zs=n("the bundled code still have "),ae=o("code"),eo=n("foo"),so=n(" and "),te=o("code"),oo=n("bar"),ao=n("'s code."),He=c(),D=o("section"),Ie=o("h2"),A=o("a"),to=n("Read More"),lo=c(),Pe=o("ul"),Ce=o("li"),M=o("a"),no=n("https://webpack.js.org/plugins/internal-plugins/#constplugin"),this.h()},l(k){l=a(k,"SECTION",{});var i=t(l);_=a(i,"H2",{});var ho=t(_);f=a(ho,"A",{href:!0,id:!0});var ko=t(f);q=r(ko,"Define Plugin"),ko.forEach(s),ho.forEach(s),d=p(i),y=a(i,"P",{});var vo=t(y);V=r(vo,"a high level of define plugin, treeshake + minification happens in the following"),vo.forEach(s),Me=p(i),re=a(i,"P",{});var uo=t(re);$e=r(uo,"for any module,"),uo.forEach(s),Ve=p(i),u=a(i,"UL",{});var g=t(u);ie=a(g,"LI",{});var fo=t(ie);Ue=r(fo,"webpack reads the source code"),fo.forEach(s),je=p(g),ce=a(g,"LI",{});var yo=t(ce);Se=r(yo,"apply all the loaders"),yo.forEach(s),We=p(g),pe=a(g,"LI",{});var _o=t(pe);Be=r(_o,"apply define plugin"),_o.forEach(s),Fe=p(g),U=a(g,"LI",{});var ro=t(U);Ge=r(ro,"for the final code after loaders + define plugin, "),he=a(ro,"UL",{});var go=t(he);m=a(go,"LI",{});var I=t(m);Ne=r(I,"for code at "),j=a(I,"CODE",{class:!0});var xo=t(j);Re=r(xo,"if (truthy)"),xo.forEach(s),ze=r(I," or "),S=a(I,"CODE",{class:!0});var mo=t(S);Je=r(mo,"truthy && ..."),mo.forEach(s),Ke=r(I," or "),W=a(I,"CODE",{class:!0});var bo=t(W);Qe=r(bo,"truthy ? ... : ..."),bo.forEach(s),Ye=r(I,", webpack will try to collapse that conditional, meaning based on truthy / falsy value, remove unwanted code logic paths"),I.forEach(s),go.forEach(s),ro.forEach(s),Xe=p(g),w=a(g,"LI",{});var le=t(w);Ze=r(le,"find all the "),B=a(le,"CODE",{class:!0});var Eo=t(B);es=r(Eo,"imports"),Eo.forEach(s),ss=r(le," or "),F=a(le,"CODE",{class:!0});var wo=t(F);os=r(wo,"require"),wo.forEach(s),as=r(le," in the code"),le.forEach(s),ts=p(g),de=a(g,"LI",{});var Lo=t(de);ls=r(Lo,"traverse them and apply the same step for each module"),Lo.forEach(s),g.forEach(s),ns=p(i),ke=a(i,"P",{});var Do=t(ke);rs=r(Do,"after creating the module map"),Do.forEach(s),is=p(i),b=a(i,"UL",{});var P=t(b);ve=a(P,"LI",{});var Io=t(ve);cs=r(Io,"create chunks based on dynamic import()"),Io.forEach(s),ps=p(P),ue=a(P,"LI",{});var Po=t(ue);hs=r(Po,"apply graph based optimisation - such as mark unused exports and treeshake them away"),Po.forEach(s),ds=p(P),fe=a(P,"LI",{});var Co=t(fe);ks=r(Co,"granular split chuks optimisation"),Co.forEach(s),vs=p(P),G=a(P,"LI",{});var io=t(G);us=r(io,"lastly, for each chunk"),ye=a(io,"UL",{});var qo=t(ye);_e=a(qo,"LI",{});var Oo=t(_e);fs=r(Oo,"run terser to minify the code, will remove any unused variables / functions within each chunk"),Oo.forEach(s),qo.forEach(s),io.forEach(s),P.forEach(s),ys=p(i),ge=a(i,"P",{});var Ho=t(ge);_s=r(Ho,"which means, there's a difference between the following contrived code:"),Ho.forEach(s),gs=p(i),N=a(i,"DIV",{class:!0});var ca=t(N);ca.forEach(s),xs=p(i),xe=a(i,"P",{});var To=t(xe);ms=r(To,"and"),To.forEach(s),bs=p(i),R=a(i,"DIV",{class:!0});var pa=t(R);pa.forEach(s),Es=p(i),O=a(i,"P",{});var Te=t(O);ws=r(Te,"after applying "),z=a(Te,"CODE",{class:!0});var Ao=t(z);Ls=r(Ao,"new DefinePlugin({ __FLAG__: true })"),Ao.forEach(s),Ds=r(Te,", you get:"),Te.forEach(s),Is=p(i),J=a(i,"DIV",{class:!0});var ha=t(J);ha.forEach(s),Ps=p(i),me=a(i,"P",{});var Mo=t(me);Cs=r(Mo,"and"),Mo.forEach(s),qs=p(i),K=a(i,"DIV",{class:!0});var da=t(K);da.forEach(s),Os=p(i),be=a(i,"P",{});var $o=t(be);Hs=r($o,"webpack's parser is able to collapse the conditional of the latter, but not the former."),$o.forEach(s),Ts=p(i),Ee=a(i,"BLOCKQUOTE",{});var Vo=t(Ee);Q=a(Vo,"P",{});var co=t(Q);As=r(co,"the collapse of conditional expression happens "),H=a(co,"A",{href:!0,rel:!0});var Uo=t(H);Ms=r(Uo,"here"),Uo.forEach(s),co.forEach(s),Vo.forEach(s),$s=p(i),Y=a(i,"DIV",{class:!0});var ka=t(Y);ka.forEach(s),Vs=p(i),E=a(i,"P",{});var C=t(E);Us=r(C,"so, the former case, will have both "),X=a(C,"CODE",{class:!0});var jo=t(X);js=r(jo,"foo"),jo.forEach(s),Ss=r(C," and "),Z=a(C,"CODE",{class:!0});var So=t(Z);Ws=r(So,"bar"),So.forEach(s),Bs=r(C," in the bundled code ,but the latter will only have "),ee=a(C,"CODE",{class:!0});var Wo=t(ee);Fs=r(Wo,"foo"),Wo.forEach(s),Gs=r(C,"."),C.forEach(s),i.forEach(s),Oe=p(k),v=a(k,"SECTION",{});var x=t(v);we=a(x,"H3",{});var Bo=t(we);T=a(Bo,"A",{href:!0,id:!0});var Fo=t(T);Ns=r(Fo,"What about terser?"),Fo.forEach(s),Bo.forEach(s),Rs=p(x),Le=a(x,"P",{});var Go=t(Le);zs=r(Go,"terser runs on chunk level after all the bundling and chunking logic, so even though terser is smart enough to collapse"),Go.forEach(s),Js=p(x),se=a(x,"DIV",{class:!0});var va=t(se);va.forEach(s),Ks=p(x),De=a(x,"P",{});var No=t(De);Qs=r(No,"into"),No.forEach(s),Ys=p(x),oe=a(x,"DIV",{class:!0});var ua=t(oe);ua.forEach(s),Xs=p(x),L=a(x,"P",{});var ne=t(L);Zs=r(ne,"the bundled code still have "),ae=a(ne,"CODE",{class:!0});var Ro=t(ae);eo=r(Ro,"foo"),Ro.forEach(s),so=r(ne," and "),te=a(ne,"CODE",{class:!0});var zo=t(te);oo=r(zo,"bar"),zo.forEach(s),ao=r(ne,"'s code."),ne.forEach(s),x.forEach(s),He=p(k),D=a(k,"SECTION",{});var Ae=t(D);Ie=a(Ae,"H2",{});var Jo=t(Ie);A=a(Jo,"A",{href:!0,id:!0});var Ko=t(A);to=r(Ko,"Read More"),Ko.forEach(s),Jo.forEach(s),lo=p(Ae),Pe=a(Ae,"UL",{});var Qo=t(Pe);Ce=a(Qo,"LI",{});var Yo=t(Ce);M=a(Yo,"A",{href:!0,rel:!0});var Xo=t(M);no=r(Xo,"https://webpack.js.org/plugins/internal-plugins/#constplugin"),Xo.forEach(s),Yo.forEach(s),Qo.forEach(s),Ae.forEach(s),this.h()},h(){h(f,"href","#define-plugin"),h(f,"id","define-plugin"),h(j,"class","inline"),h(S,"class","inline"),h(W,"class","inline"),h(B,"class","inline"),h(F,"class","inline"),h(N,"class","code-section"),h(R,"class","code-section"),h(z,"class","inline"),h(J,"class","code-section"),h(K,"class","code-section"),h(H,"href","https://github.com/webpack/webpack/blob/master/lib/ConstPlugin.js#L133"),h(H,"rel","nofollow"),h(Y,"class","code-section"),h(X,"class","inline"),h(Z,"class","inline"),h(ee,"class","inline"),h(T,"href","#what-about-terser"),h(T,"id","what-about-terser"),h(se,"class","code-section"),h(oe,"class","code-section"),h(ae,"class","inline"),h(te,"class","inline"),h(A,"href","#read-more"),h(A,"id","read-more"),h(M,"href","https://webpack.js.org/plugins/internal-plugins/#constplugin"),h(M,"rel","nofollow")},m(k,i){qe(k,l,i),e(l,_),e(_,f),e(f,q),e(l,d),e(l,y),e(y,V),e(l,Me),e(l,re),e(re,$e),e(l,Ve),e(l,u),e(u,ie),e(ie,Ue),e(u,je),e(u,ce),e(ce,Se),e(u,We),e(u,pe),e(pe,Be),e(u,Fe),e(u,U),e(U,Ge),e(U,he),e(he,m),e(m,Ne),e(m,j),e(j,Re),e(m,ze),e(m,S),e(S,Je),e(m,Ke),e(m,W),e(W,Qe),e(m,Ye),e(u,Xe),e(u,w),e(w,Ze),e(w,B),e(B,es),e(w,ss),e(w,F),e(F,os),e(w,as),e(u,ts),e(u,de),e(de,ls),e(l,ns),e(l,ke),e(ke,rs),e(l,is),e(l,b),e(b,ve),e(ve,cs),e(b,ps),e(b,ue),e(ue,hs),e(b,ds),e(b,fe),e(fe,ks),e(b,vs),e(b,G),e(G,us),e(G,ye),e(ye,_e),e(_e,fs),e(l,ys),e(l,ge),e(ge,_s),e(l,gs),e(l,N),N.innerHTML=oa,e(l,xs),e(l,xe),e(xe,ms),e(l,bs),e(l,R),R.innerHTML=aa,e(l,Es),e(l,O),e(O,ws),e(O,z),e(z,Ls),e(O,Ds),e(l,Is),e(l,J),J.innerHTML=ta,e(l,Ps),e(l,me),e(me,Cs),e(l,qs),e(l,K),K.innerHTML=la,e(l,Os),e(l,be),e(be,Hs),e(l,Ts),e(l,Ee),e(Ee,Q),e(Q,As),e(Q,H),e(H,Ms),e(l,$s),e(l,Y),Y.innerHTML=na,e(l,Vs),e(l,E),e(E,Us),e(E,X),e(X,js),e(E,Ss),e(E,Z),e(Z,Ws),e(E,Bs),e(E,ee),e(ee,Fs),e(E,Gs),qe(k,Oe,i),qe(k,v,i),e(v,we),e(we,T),e(T,Ns),e(v,Rs),e(v,Le),e(Le,zs),e(v,Js),e(v,se),se.innerHTML=ra,e(v,Ks),e(v,De),e(De,Qs),e(v,Ys),e(v,oe),oe.innerHTML=ia,e(v,Xs),e(v,L),e(L,Zs),e(L,ae),e(ae,eo),e(L,so),e(L,te),e(te,oo),e(L,ao),qe(k,He,i),qe(k,D,i),e(D,Ie),e(Ie,A),e(A,to),e(D,lo),e(D,Pe),e(Pe,Ce),e(Ce,M),e(M,no)},p:Ia,d(k){k&&s(l),k&&s(Oe),k&&s(v),k&&s(He),k&&s(D)}}}function Oa($){let l,_;const f=[$[0],sa];let q={$$slots:{default:[qa]},$$scope:{ctx:$}};for(let d=0;d<f.length;d+=1)q=po(q,f[d]);return l=new Pa({props:q}),{c(){ga(l.$$.fragment)},l(d){xa(l.$$.fragment,d)},m(d,y){ma(l,d,y),_=!0},p(d,[y]){const V=y&1?ba(f,[y&1&&Zo(d[0]),y&0&&Zo(sa)]):{};y&2&&(V.$$scope={dirty:y,ctx:d}),l.$set(V)},i(d){_||(Ea(l.$$.fragment,d),_=!0)},o(d){wa(l.$$.fragment,d),_=!1},d(d){La(l,d)}}}const sa={title:"Webpack Define Plugin",tags:["define plugin","feature flag"],description:"Define Plugina high level of define plugin, treeshake + minification happens in the followingfor any module, webpack reads the source codeapply all the loadersapply define pluginfor the final code after loaders + define plugin, ...",tableOfContents:[{link:"define-plugin",title:"Define Plugin",nested:[{link:"what-about-terser",title:"What about terser?"}]},{link:"read-more",title:"Read More"}]};function Ha($,l,_){return Da("blog",{image:Ca}),$.$$set=f=>{_(0,l=po(po({},l),ea(f)))},l=ea(l),[l]}class ja extends fa{constructor(l){super();ya(this,l,Ha,Oa,_a,{})}}export{ja as default,sa as metadata};
