import{S as Ru,i as Mu,s as Nu,C as Ok,w as Lu,x as Bu,y as Wu,z as Gu,A as Kv,q as qu,o as Vu,B as Yu,r as Fu,Y as $v,e as o,t as n,k as i,c as t,a,h as r,d as e,m as p,b as l,g as m,H as s,J as Ju}from"../../chunks/vendor-da4388d4.js";import{B as zu}from"../../chunks/BlogLayout-86707f1c.js";import"../../chunks/stores-1fad7c36.js";import"../../chunks/ldjson-b0805387.js";/* empty css                                */var Ku="/_app/assets/hero-twitter-32d4396a.jpg";function $u(be){let k,j,A,ws,b,D,_e,Cn,Ee,Qv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Human</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">constructor</span><span style="color: var(--shiki-color-text)">(chewAmount) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.chewAmount </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">eat</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-keyword)">let</span><span style="color: var(--shiki-color-text)"> amount </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">; amount </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.chewAmount; amount</span><span style="color: var(--shiki-token-keyword)">++</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">.chew</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">chew</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">getHumanEating</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">lihau</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Human</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">lihau</span><span style="color: var(--shiki-token-function)">.eat</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,In,ct,ht,An,Dn,bs,Sn,_s,Hn,jn,Rn,Te,Zv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Human</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">constructor</span><span style="color: var(--shiki-color-text)">(chewAmount) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.chewAmount </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">eat</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-keyword)">let</span><span style="color: var(--shiki-color-text)"> i </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">; i </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.chewAmount; i</span><span style="color: var(--shiki-token-keyword)">++</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">.chew</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">chew</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">getHumanEating</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Human</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-function)">.eat</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Mn,kt,dt,Nn,Ln,yt,vt,Bn,Wn,ut,Gn,qn,Es,Vn,ft,Yn,Fn,Jn,S,zn,Ts,Kn,$n,mt,Un,Qn,gt,Zn,Xn,xt,sr,er,or,$,tr,Pe,ar,nr,Oe,rr,lr,ir,Ce,Xv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// Terser option: &#123; mangle: &#123; module: true &#125; &#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">H</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">constructor</span><span style="color: var(--shiki-color-text)">(chewAmount) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.chewAmount </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">eat</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-keyword)">let</span><span style="color: var(--shiki-color-text)"> i </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">; i </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.chewAmount; i</span><span style="color: var(--shiki-token-keyword)">++</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">.chew</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">chew</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">e</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">H</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-function)">.eat</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> &#123; H </span><span style="color: var(--shiki-token-keyword)">as</span><span style="color: var(--shiki-color-text)"> Human</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> e </span><span style="color: var(--shiki-token-keyword)">as</span><span style="color: var(--shiki-color-text)"> getHumanEating &#125;;</span></span></code></pre>`,pr,wt,bt,cr,hr,_t,kr,dr,Ps,yr,Ie,vr,ur,fr,Et,mr,gr,Ae,su=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">H</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">constructor</span><span style="color: var(--shiki-color-text)">(t) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.c </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">a</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-keyword)">let</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">; t </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.c; t</span><span style="color: var(--shiki-token-keyword)">++</span><span style="color: var(--shiki-color-text)">) </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">.s</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">s</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">e</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">H</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-function)">.a</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> &#123; H </span><span style="color: var(--shiki-token-keyword)">as</span><span style="color: var(--shiki-color-text)"> Human</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> e </span><span style="color: var(--shiki-token-keyword)">as</span><span style="color: var(--shiki-color-text)"> getHumanEating &#125;;</span></span></code></pre>`,xr,Tt,Pt,wr,br,Ot,_r,Er,Ct,It,Tr,Pr,At,Or,Cr,U,Ir,De,Ar,Dr,Se,Sr,Hr,jr,B,Rr,He,Mr,Nr,je,Lr,Br,Re,Wr,Gr,qr,Dt,St,Vr,Yr,Q,Fr,Ht,Jr,zr,Os,Kr,$r,Ua,d,jt,Cs,Ur,Qr,Is,Zr,Rt,Xr,sl,el,Me,eu=`<div class="filename">source.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">doSomething</span><span style="color: var(--shiki-color-text)">(&#123; paramA</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> paramB &#125;) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> &#123; sum</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> paramA </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> paramB &#125;;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Car</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">constructor</span><span style="color: var(--shiki-color-text)">(&#123; model &#125;) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.model </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> model;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">drive</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,ol,Ne,ou=`<div class="filename">source.min.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">doSomething</span><span style="color: var(--shiki-color-text)">(&#123; o: t</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> t: o &#125;) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> &#123; m</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> o &#125;;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Car</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">constructor</span><span style="color: var(--shiki-color-text)">(&#123; s: t &#125;) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.s </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">i</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,tl,Z,al,Le,nl,rl,Be,ll,il,pl,As,cl,Mt,hl,kl,dl,We,tu=`<div class="filename">source.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> &#123; doSomething &#125; </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;some-library&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-function)">doSomething</span><span style="color: var(--shiki-color-text)">(&#123; paramA</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> paramB</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-color-text)"> &#125;);</span></span></code></pre>`,yl,Ge,au=`<div class="filename">source.min.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> &#123; doSomething </span><span style="color: var(--shiki-token-keyword)">as</span><span style="color: var(--shiki-color-text)"> r &#125; </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;some-library&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-function)">r</span><span style="color: var(--shiki-color-text)">(&#123; m</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> o</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-color-text)"> &#125;);</span></span></code></pre>`,vl,W,ul,Nt,fl,ml,qe,gl,xl,Ve,wl,bl,_l,X,El,Lt,Tl,Pl,Bt,Ol,Cl,Il,Ds,Al,Wt,Dl,Sl,Hl,Gt,jl,Rl,Ss,qt,Ml,Nl,Vt,Ll,Bl,Yt,Wl,Gl,Ye,nu=`<div class="filename">source.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">CarA</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">drive</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">CarB</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">drive</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">car</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.random</span><span style="color: var(--shiki-color-text)">() </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">?</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">CarA</span><span style="color: var(--shiki-color-text)">() </span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">CarB</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">car</span><span style="color: var(--shiki-token-function)">.drive</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-function)">foo</span><span style="color: var(--shiki-color-text)">(&#123; drive</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;bar&#39;</span><span style="color: var(--shiki-color-text)"> &#125;);</span></span></code></pre>`,ql,Fe,ru=`<div class="filename">source.min.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">s</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">s</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">e</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">s</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">a</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.random</span><span style="color: var(--shiki-color-text)">() </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">?</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">s</span><span style="color: var(--shiki-color-text)">() </span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">e</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">a</span><span style="color: var(--shiki-token-function)">.s</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">foo</span><span style="color: var(--shiki-color-text)">(&#123; s</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;bar&#39;</span><span style="color: var(--shiki-color-text)"> &#125;);</span></span></code></pre>`,Vl,Hs,Yl,Je,Fl,Jl,zl,H,Kl,ze,$l,Ul,Ke,Ql,Zl,$e,Xl,si,Ue,ei,oi,Qa,u,Ft,js,ti,ai,Qe,Jt,ni,ri,li,Rs,ii,Ze,pi,ci,hi,zt,Kt,ki,di,$t,yi,vi,Ms,ps,ui,Xe,fi,mi,so,gi,xi,cs,wi,eo,bi,_i,oo,Ei,Ti,ss,Pi,Ns,Oi,Ci,Ls,to,Ii,Ai,Di,R,Si,ao,Hi,ji,Bs,Ri,Mi,no,Ni,Li,Ut,Bi,Wi,Qt,Zt,Gi,qi,Xt,Vi,Yi,G,Fi,ro,Ji,zi,Ws,Ki,$i,lo,Ui,Qi,Za,C,sa,Gs,Zi,Xi,es,sp,qs,ep,op,Vs,tp,ap,np,io,ea,rp,lp,ip,oa,pp,cp,ta,hp,Xa,Y,aa,Ys,kp,dp,na,yp,vp,ra,up,sn,v,la,Fs,fp,mp,os,gp,po,xp,wp,co,bp,_p,Ep,ho,lu=`<div class="filename">source.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Car</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">driveTo</span><span style="color: var(--shiki-color-text)">(&#123; destination &#125;) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.destination </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> destination;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">.calculateRoute</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">.startDriving</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">calculateRoute</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">.planRoute</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.currentLocation</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.destination);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">startDriving</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">planRoute</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Tp,T,Pp,ko,Op,Cp,yo,Ip,Ap,vo,Dp,Sp,uo,Hp,jp,fo,Rp,Mp,mo,Np,Lp,Bp,ia,Wp,Gp,pa,ca,qp,Vp,go,iu=`<div class="filename">terser_options.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">terserOptions</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  mangle</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    properties</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      reserved</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&#39;driveTo&#39;</span><span style="color: var(--shiki-color-text)">]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;;</span></span></code></pre>`,Yp,ha,ka,Fp,Jp,xo,pu=`<div class="filename">terser_options.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">terserOptions</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  mangle</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    properties</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      regex</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-token-string-expression)"> /</span><span style="color: var(--shiki-token-keyword)">^</span><span style="color: var(--shiki-token-string-expression)">(destination</span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-token-string-expression)">calculateRoute</span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-token-string-expression)">currentLocation</span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-token-string-expression)">startDriving</span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-token-string-expression)">planRoute)</span><span style="color: var(--shiki-token-keyword)">$</span><span style="color: var(--shiki-token-string-expression)">/</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;;</span></span></code></pre>`,zp,ts,Kp,Js,$p,Up,wo,Qp,Zp,Xp,bo,cu=`<div class="filename">source.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Car</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">driveTo</span><span style="color: var(--shiki-color-text)">(&#123; destination &#125;) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">._destination </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> destination;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">._calculateRoute</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">._startDriving</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">_calculateRoute</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">._planRoute</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">._currentLocation</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">._destination);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">_startDriving</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">_planRoute</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,sc,da,ec,oc,_o,hu=`<div class="filename">terser_options.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">terserOptions</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  mangle</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    properties</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      regex</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-token-string-expression)"> /</span><span style="color: var(--shiki-token-keyword)">^</span><span style="color: var(--shiki-token-string-expression)">_/</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;;</span></span></code></pre>`,en,M,ya,zs,tc,ac,as,nc,Eo,rc,lc,To,ic,pc,cc,Po,Oo,hc,kc,dc,Co,ku=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;fs&#39;</span><span style="color: var(--shiki-color-text)">).promises;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">terser</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;terser&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">nameCache</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> &#123;&#125;;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">terser</span><span style="color: var(--shiki-token-function)">.minify</span><span style="color: var(--shiki-color-text)">(code</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  nameCache</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// serialise and store &#96;nameCache&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.writeFile</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;nameCache.json&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">JSON</span><span style="color: var(--shiki-token-function)">.stringify</span><span style="color: var(--shiki-color-text)">(nameCache)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;utf-8&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// deserialise and seed Terser</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">nameCache</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">JSON</span><span style="color: var(--shiki-token-function)">.parse</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.readFile</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;nameCache.json&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;utf-8&#39;</span><span style="color: var(--shiki-color-text)">));</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">terser</span><span style="color: var(--shiki-token-function)">.minify</span><span style="color: var(--shiki-color-text)">(code</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  nameCache</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;);</span></span></code></pre>`,on,g,va,Ks,yc,vc,ua,uc,fc,fa,mc,gc,ma,xc,wc,ga,bc,_c,xa,Ec,Tc,$s,Pc,Us,Oc,Cc,Ic,wa,Ac,Dc,ba,Sc,Hc,Io,du=`<div class="filename">babel.config.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">nameMapping</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  driveTo</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;d&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// rename all &#96;.driveTo&#96; to &#96;.d&#96;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  plugins</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    [</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-string-expression)">&#39;babel-plugin-transform-rename-properties&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        rename</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> nameMapping</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    ]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  ]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;;</span></span></code></pre>`,tn,Ao,_a,Qs,jc,an,P,Ea,Zs,Rc,Mc,q,Nc,Do,Lc,Bc,Xs,Wc,Gc,se,qc,Vc,Yc,ee,Fc,oe,Jc,zc,Kc,So,yu=`<div class="filename">webpack.config.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">TerserPlugin</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;terser-webpack-plugin&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">module</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">exports</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  optimization</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    minimize</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    minimizer</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">TerserPlugin</span><span style="color: var(--shiki-color-text)">(&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        terserOptions</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">          mangle</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">            properties</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">              regex</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-token-string-expression)"> /</span><span style="color: var(--shiki-token-keyword)">^</span><span style="color: var(--shiki-token-string-expression)">_/</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">            &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">          &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &#125;)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    ]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;;</span></span></code></pre>`,$c,Ho,Uc,te,Qc,Zc,jo,vu=`<div class="filename">rollup.config.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> &#123; terser &#125; </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;rollup-plugin-terser&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-token-function)">rollup</span><span style="color: var(--shiki-color-text)">(&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  plugins</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">terser</span><span style="color: var(--shiki-color-text)">(&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      mangle</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        properties</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">          regex</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-token-string-expression)"> /</span><span style="color: var(--shiki-token-keyword)">^</span><span style="color: var(--shiki-token-string-expression)">_/</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  ]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;);</span></span></code></pre>`,nn,x,Ta,ae,Xc,sh,Pa,ns,eh,ne,oh,th,re,ah,nh,rh,Oa,lh,ih,Ca,ph,ch,le,Ia,ie,Aa,hh,kh,Da,dh,yh,pe,ce,Sa,vh,uh,Ha,fh,mh,he,ja,gh,xh,Ra,wh,bh,ke,_h,Ro,Eh,Th,Ph,V,Ma,Mo,Oh,Ch,No,Lo,Ih,Ah,Dh,hs,Bo,Sh,Hh,Wo,jh,Rh,Mh,ks,Go,Nh,Lh,qo,Bh,Wh,Gh,rs,qh,Vo,Vh,Yh,de,Yo,Fh,Jh,zh,Na,ds,Kh,Fo,$h,Uh,ye,Qh,Zh,O,Xh,ve,sk,ek,Jo,ok,tk,zo,ak,nk,Ko,rk,lk,ue,ik,pk,rn,F,La,fe,ck,hk,Ba,kk,dk,Wa,yk,ln,ys,Ga,me,vk,uk,ls,qa,ge,fk,mk,Va,xe,gk,xk,Ya,we,wk;return{c(){k=o("section"),j=o("h2"),A=o("a"),ws=n("What is Mangling Property"),b=i(),D=o("p"),_e=n("Assume you have the following JavaScript code:"),Cn=i(),Ee=o("div"),In=i(),ct=o("p"),ht=o("strong"),An=n("Original: 268 Bytes"),Dn=i(),bs=o("p"),Sn=n("If you minify this with the default options with "),_s=o("a"),Hn=n("Terser"),jn=n(", you probably get something like:"),Rn=i(),Te=o("div"),Mn=i(),kt=o("p"),dt=o("strong"),Nn=n("207 Bytes (77.2%)"),Ln=i(),yt=o("p"),vt=o("em"),Bn=n("(Usually Terser would compress whitespace too, but for ease of reading, allow me to keep the whitespace)"),Wn=i(),ut=o("p"),Gn=n("Your code still behaves the same, even though the variable name has changed."),qn=i(),Es=o("p"),Vn=n("This behavior of renaming variable name to compress JavaScript code is called "),ft=o("strong"),Yn=n("Mangle"),Fn=n("."),Jn=i(),S=o("p"),zn=n("Terser has several "),Ts=o("a"),Kn=n("Mangle options"),$n=n(", that allows you to control whether or not to mangle "),mt=o("strong"),Un=n("class name"),Qn=n(", "),gt=o("strong"),Zn=n("function name"),Xn=n(", "),xt=o("strong"),sr=n("property name"),er=n(", or specify any reserved keywords to not mangle, or should it mangle global variable."),or=i(),$=o("p"),tr=n("If the above code is written within a ES Module, then probably we wont refer the class "),Pe=o("code"),ar=n("Human"),nr=n(" globally, rather refer it through "),Oe=o("code"),rr=n("import"),lr=n(", then the name of the class probably does not matter:"),ir=i(),Ce=o("div"),pr=i(),wt=o("p"),bt=o("strong"),cr=n("186 Bytes (69.4%)"),hr=i(),_t=o("p"),kr=n("But can we do better?"),dr=i(),Ps=o("p"),yr=n("Well, if you look at the code, the property named "),Ie=o("code"),vr=n("chewAmount"),ur=n(" takes up 20 characters, which is almost 10% of the code."),fr=i(),Et=o("p"),mr=n("If we rename all the property name to 1 character variable, then we would end up with a much smaller code:"),gr=i(),Ae=o("div"),xr=i(),Tt=o("p"),Pt=o("strong"),wr=n("107 Bytes (39.9%)"),br=i(),Ot=o("p"),_r=n("If it ends up with a much smaller bundle, should we rename our property name and method name to a shorter name? And why didn't Terser do this by default?"),Er=i(),Ct=o("p"),It=o("strong"),Tr=n("Should we rename our property name and method name to something short?"),Pr=i(),At=o("p"),Or=n("No! That would hurt the readability of the code. \u{1F625}"),Cr=i(),U=o("p"),Ir=n("Also, what if someone else imports the class "),De=o("code"),Ar=n("Human"),Dr=n(" and wants to use the property "),Se=o("code"),Sr=n("chewAmount"),Hr=n("?"),jr=i(),B=o("p"),Rr=n("He would have to rename it to "),He=o("code"),Mr=n("human.c"),Nr=n(" instead of "),je=o("code"),Lr=n("human.chewAmount"),Br=n(" and probably scratching his head everytime he reads his code, wondering what does "),Re=o("code"),Wr=n("human.c"),Gr=n(" mean?"),qr=i(),Dt=o("p"),St=o("strong"),Vr=n("Why Terser didn't mangle property name by default?"),Yr=i(),Q=o("p"),Fr=n("Because property mangling requires certain assumption on your code, therefore it is marked as "),Ht=o("strong"),Jr=n("very unsafe"),zr=n(" in the "),Os=o("a"),Kr=n("Terser documentation"),$r=n(" to turn it on entirely."),Ua=i(),d=o("section"),jt=o("h3"),Cs=o("a"),Ur=n("Why is property mangling considered unsafe?"),Qr=i(),Is=o("p"),Zr=n("If you are a library author, or you wrote a module that will be used by others, and if you mangle the property of the library / module "),Rt=o("strong"),Xr=n("alone"),sl=n(", all your method name, object property name will be mangled, and therefore all your APIs will be broken!"),el=i(),Me=o("div"),ol=i(),Ne=o("div"),tl=i(),Z=o("p"),al=n("Your user that calls "),Le=o("code"),nl=n("doSomething({ paramA: 1, paramB: 2 })"),rl=n(" or "),Be=o("code"),ll=n("car.drive()"),il=n(" will not work with the minified code!"),pl=i(),As=o("p"),cl=n("The same ways goes if you are importing some other library or module, and you mangle your code "),Mt=o("strong"),hl=n("alone"),kl=n(", your code will be broken too!"),dl=i(),We=o("div"),yl=i(),Ge=o("div"),vl=i(),W=o("p"),ul=n("I ran both the code above through the same Terser configuration, which means it also serves as a good example that the property name Terser mangles into is not consistent. It is computed and assigned at "),Nt=o("em"),fl=n('"random"'),ml=n(". You should not expect that "),qe=o("code"),gl=n("paramA"),xl=n(" always get mangled into "),Ve=o("code"),wl=n("m"),bl=n(" everytime!"),_l=i(),X=o("p"),El=n("In summary, property mangling will break your code if you mangle your code alone. It will break at the boundary of your code, where you exports your functions or class that relies on "),Lt=o("strong"),Tl=n("public property or method"),Pl=n("; or where you import functions or class which you "),Bt=o("strong"),Ol=n("pass in an object or calls a public method"),Cl=n("."),Il=i(),Ds=o("p"),Al=n("If you "),Wt=o("strong"),Dl=n("do neither of those"),Sl=n(", you are actually safe to mangle all properties by default."),Hl=i(),Gt=o("p"),jl=n("If you have a standalone script that:"),Rl=i(),Ss=o("ul"),qt=o("li"),Ml=n("does not import nor export anything"),Nl=i(),Vt=o("li"),Ll=n("does not set or read any property from the global scope (*)"),Bl=i(),Yt=o("p"),Wl=n("Then you are safe to mangle all your properties. Property or method name across the file will be mangled consistently:"),Gl=i(),Ye=o("div"),ql=i(),Fe=o("div"),Vl=i(),Hs=o("p"),Yl=n("If you use the property or method named "),Je=o("code"),Fl=n('"drive"'),Jl=n(", it will be mangled to the same name throughout the file."),zl=i(),H=o("p"),Kl=n("In the example above, the method "),ze=o("code"),$l=n("drive"),Ul=n(" in both classes and the property "),Ke=o("code"),Ql=n("drive"),Zl=n(" in "),$e=o("code"),Xl=n("foo({ drive: 'bar' })"),si=n(" means different things, but they are mangled into the same name, "),Ue=o("code"),ei=n("s"),oi=n("."),Qa=i(),u=o("section"),Ft=o("h4"),js=o("a"),ti=n("Set or get property from the global scope"),ai=i(),Qe=o("p"),Jt=o("strong"),ni=n("Rule of thumb:"),ri=n(" If you set or get property from global scope, property mangling blindly will break your code."),li=i(),Rs=o("p"),ii=n("Of course, there's caveat of when this might be safe, protected by "),Ze=o("code"),pi=n("default: false"),ci=n(" options that you can turn on at your own risk. \u{1F648}"),hi=i(),zt=o("p"),Kt=o("strong"),ki=n("Accessing DOM properties or method from built-in Objects"),di=i(),$t=o("p"),yi=n("Terser keeps a list of property names that exempt from mangling, such as:"),vi=i(),Ms=o("ul"),ps=o("li"),ui=n("DOM properties: "),Xe=o("code"),fi=n("window.location"),mi=n(", "),so=o("code"),gi=n("document.createElement"),xi=i(),cs=o("li"),wi=n("Methods of built-in objects: "),eo=o("code"),bi=n("Array.from"),_i=n(", "),oo=o("code"),Ei=n("Object.defineProperty"),Ti=i(),ss=o("p"),Pi=n("The list can be found in "),Ns=o("a"),Oi=n("domprops.js"),Ci=n(" and "),Ls=o("a"),to=o("code"),Ii=n("find_builtins"),Ai=n("."),Di=i(),R=o("p"),Si=n("This behavior is protected by the "),ao=o("code"),Hi=n("builtins"),ji=n(" option in the "),Bs=o("a"),Ri=n("Mangle properties option"),Mi=n(", set it to "),no=o("code"),Ni=n("true"),Li=n(" to mangle builtin properties as well. "),Ut=o("strong"),Bi=n("Override at your own risk"),Wi=i(),Qt=o("p"),Zt=o("strong"),Gi=n("Accessing property or method of a undeclared variable"),qi=i(),Xt=o("p"),Vi=n("Variable that is not declared within the code, can be considered as global variable that is defined outside. Their properties or methods will not be mangled too."),Yi=i(),G=o("p"),Fi=n("You can override this behavior via the "),ro=o("code"),Ji=n("undeclared"),zi=n(" option in the "),Ws=o("a"),Ki=n("Mangle properties option"),$i=n(", set it to "),lo=o("code"),Ui=n("true"),Qi=n(" to mangle them too."),Za=i(),C=o("section"),sa=o("h3"),Gs=o("a"),Zi=n("Mangling for rollup / webpack bundled code"),Xi=i(),es=o("p"),sp=n("If you add "),qs=o("a"),ep=n("terser-webpack-plugin"),op=n(" or "),Vs=o("a"),tp=n("rollup-plugin-terser"),ap=n(" to your bundling step, are you safe to mangle properties?"),np=i(),io=o("p"),ea=o("strong"),rp=n("Rule of thumb:"),lp=n(" If your bundler emits more than 1 file, No."),ip=i(),oa=o("p"),pp=n("This means any bundling set up that involves code-splitting."),cp=i(),ta=o("p"),hp=n("It is not safe because, terser is run after the code is split into separate files. Thus, the property or method names across files will not be mangled consistently."),Xa=i(),Y=o("section"),aa=o("h2"),Ys=o("a"),kp=n("How to mangle property responsibly and safely"),dp=i(),na=o("p"),yp=n("With so much restrictions in mind, you may wonder how can I utilise property mangling safely and responsibly?"),vp=i(),ra=o("p"),up=n("Property mangling is not a all-or-nothing option in Terser, there's a few options you can play around to do property mangling safely."),sn=i(),v=o("section"),la=o("h3"),Fs=o("a"),fp=n("Private property"),mp=i(),os=o("p"),gp=n("In the following example, the only publicly documented method in the class "),po=o("code"),xp=n("Car"),wp=n(" is "),co=o("code"),bp=n("driveTo()"),_p=n(", so it is okay to mangle other private methods."),Ep=i(),ho=o("div"),Tp=i(),T=o("p"),Pp=n("We want to mangle "),ko=o("code"),Op=n("this.currentLocation"),Cp=n(", "),yo=o("code"),Ip=n("this.destination"),Ap=n(", "),vo=o("code"),Dp=n("this.calculateRoute"),Sp=n(", "),uo=o("code"),Hp=n("this.startDriving"),jp=n(", "),fo=o("code"),Rp=n("this.planRoute"),Mp=n(", but give "),mo=o("code"),Np=n("this.driveTo"),Lp=n(" untouched."),Bp=i(),ia=o("p"),Wp=n("You can choose to either"),Gp=i(),pa=o("p"),ca=o("strong"),qp=n("1. mangle all methods and properties, except a reserved list of names:"),Vp=i(),go=o("div"),Yp=i(),ha=o("p"),ka=o("strong"),Fp=n("2. specify a list of names to be mangled with a regex:"),Jp=i(),xo=o("div"),zp=i(),ts=o("p"),Kp=n("Here, a "),Js=o("a"),$p=n("unofficial JavaScript naming convention"),Up=n(" for private method / properties come in handy. Often times, when a variable name starts with "),wo=o("code"),Qp=n("_"),Zp=n(", it is intended to be private."),Xp=i(),bo=o("div"),sc=i(),da=o("p"),ec=n("This way, it makes our regex much easier:"),oc=i(),_o=o("div"),en=i(),M=o("section"),ya=o("h3"),zs=o("a"),tc=n("Consistent property mangling across subsequent minifications"),ac=i(),as=o("p"),nc=n("If you want "),Eo=o("code"),rc=n("_calculateRoute"),lc=n(" to always mangled to the same name no matter how much you have changed the input file, the "),To=o("code"),ic=n("nameCache"),pc=n(" may come in handy."),cc=i(),Po=o("p"),Oo=o("code"),hc=n("nameCache"),kc=n(" is the internal state of Terser, that can be serialised and deserialised to seed the Terser mangling state."),dc=i(),Co=o("div"),on=i(),g=o("section"),va=o("h3"),Ks=o("a"),yc=n("Consistent property mangling across different builds"),vc=i(),ua=o("p"),uc=n("What if you have multiple independent projects, and you want to make sure property mangling work across these projects?"),fc=i(),fa=o("p"),mc=n("If the variables you mangled are private properties or methods, then, you don't have an issue with this. Different projects should be nicely encapsulated, and should not depends on internal properties or methods."),gc=i(),ma=o("p"),xc=n("So, what I am describing now is for public API methods and properties."),wc=i(),ga=o("p"),bc=n("What if you want to mangle them as well, how do you make sure that they wont break the user after mangling the public methods or properties?"),_c=i(),xa=o("p"),Ec=n("Since it involves public methods and properties, additional steps in setting up is understandable."),Tc=i(),$s=o("p"),Pc=n("In that case, I would recommend maintain a name mapping of how the properties should mangle into, and use "),Us=o("a"),Oc=n("babel-plugin-transform-rename-properties"),Cc=n(" to rename them."),Ic=i(),wa=o("p"),Ac=n("The name mapping is a manually curated list of names of your public properties and methods, and only need to be updated whenever there's a change in your public API."),Dc=i(),ba=o("p"),Sc=n("Think of it as part of your documentation, which should be updated whenever you change your public API."),Hc=i(),Io=o("div"),tn=i(),Ao=o("section"),_a=o("h2"),Qs=o("a"),jc=n("Misc"),an=i(),P=o("section"),Ea=o("h3"),Zs=o("a"),Rc=n("Webpack and Rollup"),Mc=i(),q=o("p"),Nc=n("Throughout the article, we mentioned Terser and "),Do=o("code"),Lc=n("terserOptions"),Bc=n(", and didnt really go into how you would use it for projects bundled with "),Xs=o("a"),Wc=n("webpack"),Gc=n(" or "),se=o("a"),qc=n("rollup"),Vc=n("."),Yc=i(),ee=o("p"),Fc=n("For webpack user, you can use "),oe=o("a"),Jc=n("terser-webpack-plugin"),zc=n("."),Kc=i(),So=o("div"),$c=i(),Ho=o("p"),Uc=n("For rollup user, you can use "),te=o("a"),Qc=n("rollup-plugin-terser"),Zc=i(),jo=o("div"),nn=i(),x=o("section"),Ta=o("h3"),ae=o("a"),Xc=n("A curious case of Preact"),sh=i(),Pa=o("blockquote"),ns=o("p"),eh=n("The rabbit hole of how to mangle property names starts with investigating the "),ne=o("a"),oh=n("Preact"),th=i(),re=o("a"),ah=n("Suspense bug"),nh=n(", but that would be a story for another time."),rh=i(),Oa=o("p"),lh=n("Preact is a fast 3kB React alternative, with the same modern API."),ih=i(),Ca=o("p"),ph=n("Property mangling contributed an important part to keep the library slim."),ch=i(),le=o("table"),Ia=o("thead"),ie=o("tr"),Aa=o("th"),hh=n("Without mangling"),kh=i(),Da=o("th"),dh=n("With mangling"),yh=i(),pe=o("tbody"),ce=o("tr"),Sa=o("td"),vh=n("10.7 KB minified"),uh=i(),Ha=o("td"),fh=n("9.7 Kb minified (reduced ~10%)"),mh=i(),he=o("tr"),ja=o("td"),gh=n("4.2 KB minified + gzipped"),xh=i(),Ra=o("td"),wh=n("3.9 KB minified + gzipped (reduced ~5%)"),bh=i(),ke=o("p"),_h=n("There's several different builds for "),Ro=o("code"),Eh=n("preact"),Th=n(":"),Ph=i(),V=o("ul"),Ma=o("li"),Mo=o("code"),Oh=n("preact/core"),Ch=i(),No=o("li"),Lo=o("code"),Ih=n("preact/compat"),Ah=n(" - a compat layer on top of preact to provide all React API"),Dh=i(),hs=o("li"),Bo=o("code"),Sh=n("preact/debug"),Hh=n(" - a layer on top of "),Wo=o("code"),jh=n("preact/core"),Rh=n(" that provides a better debugging experience"),Mh=i(),ks=o("li"),Go=o("code"),Nh=n("preact/devtools"),Lh=n(" - the bridge between "),qo=o("code"),Bh=n("preact/core"),Wh=n(" and the devtools extension."),Gh=i(),rs=o("p"),qh=n("To have a consistent mangle properties across different builds, "),Vo=o("code"),Vh=n("babel-plugin-transform-rename-properties"),Yh=n(" is used, and the name mapping is stored at "),de=o("a"),Yo=o("code"),Fh=n("mangle.json"),Jh=n("."),zh=i(),Na=o("blockquote"),ds=o("p"),Kh=n("Check out this Pull Request that adds "),Fo=o("code"),$h=n("babel-plugin-transform-rename-properties"),Uh=n(" into Preact: "),ye=o("a"),Qh=n("https://github.com/preactjs/preact/pull/2548"),Zh=i(),O=o("p"),Xh=n("For mangling private properties, the bundling process of Preact is abstracted in "),ve=o("a"),sk=n("microbundle"),ek=n(", which reads the mangle options from "),Jo=o("code"),ok=n("mangle.json"),tk=n(" or the "),zo=o("code"),ak=n("mangle"),nk=n(" property from "),Ko=o("code"),rk=n("package.json"),lk=n(". See "),ue=o("a"),ik=n("Mangling Properties for microbundle"),pk=n("."),rn=i(),F=o("section"),La=o("h2"),fe=o("a"),ck=n("Closing Note"),hk=i(),Ba=o("p"),kk=n("We've covered what is property mangling and all the caveats come along with it."),dk=i(),Wa=o("p"),yk=n("With the full grasp of the caveats, we looked at various tactics that we can use to utilise property mangling to reduce our minified code output."),ln=i(),ys=o("section"),Ga=o("h2"),me=o("a"),vk=n("Further Reading"),uk=i(),ls=o("ul"),qa=o("li"),ge=o("a"),fk=n("Terser Mangle options"),mk=i(),Va=o("li"),xe=o("a"),gk=n("microbundle Mangling Properties"),xk=i(),Ya=o("li"),we=o("a"),wk=n("babel-plugin-transform-rename-properties"),this.h()},l(h){k=t(h,"SECTION",{});var c=a(k);j=t(c,"H2",{});var Ck=a(j);A=t(Ck,"A",{href:!0,id:!0});var Ik=a(A);ws=r(Ik,"What is Mangling Property"),Ik.forEach(e),Ck.forEach(e),b=p(c),D=t(c,"P",{});var Ak=a(D);_e=r(Ak,"Assume you have the following JavaScript code:"),Ak.forEach(e),Cn=p(c),Ee=t(c,"DIV",{class:!0});var uu=a(Ee);uu.forEach(e),In=p(c),ct=t(c,"P",{});var Dk=a(ct);ht=t(Dk,"STRONG",{});var Sk=a(ht);An=r(Sk,"Original: 268 Bytes"),Sk.forEach(e),Dk.forEach(e),Dn=p(c),bs=t(c,"P",{});var pn=a(bs);Sn=r(pn,"If you minify this with the default options with "),_s=t(pn,"A",{href:!0,rel:!0});var Hk=a(_s);Hn=r(Hk,"Terser"),Hk.forEach(e),jn=r(pn,", you probably get something like:"),pn.forEach(e),Rn=p(c),Te=t(c,"DIV",{class:!0});var fu=a(Te);fu.forEach(e),Mn=p(c),kt=t(c,"P",{});var jk=a(kt);dt=t(jk,"STRONG",{});var Rk=a(dt);Nn=r(Rk,"207 Bytes (77.2%)"),Rk.forEach(e),jk.forEach(e),Ln=p(c),yt=t(c,"P",{});var Mk=a(yt);vt=t(Mk,"EM",{});var Nk=a(vt);Bn=r(Nk,"(Usually Terser would compress whitespace too, but for ease of reading, allow me to keep the whitespace)"),Nk.forEach(e),Mk.forEach(e),Wn=p(c),ut=t(c,"P",{});var Lk=a(ut);Gn=r(Lk,"Your code still behaves the same, even though the variable name has changed."),Lk.forEach(e),qn=p(c),Es=t(c,"P",{});var cn=a(Es);Vn=r(cn,"This behavior of renaming variable name to compress JavaScript code is called "),ft=t(cn,"STRONG",{});var Bk=a(ft);Yn=r(Bk,"Mangle"),Bk.forEach(e),Fn=r(cn,"."),cn.forEach(e),Jn=p(c),S=t(c,"P",{});var J=a(S);zn=r(J,"Terser has several "),Ts=t(J,"A",{href:!0,rel:!0});var Wk=a(Ts);Kn=r(Wk,"Mangle options"),Wk.forEach(e),$n=r(J,", that allows you to control whether or not to mangle "),mt=t(J,"STRONG",{});var Gk=a(mt);Un=r(Gk,"class name"),Gk.forEach(e),Qn=r(J,", "),gt=t(J,"STRONG",{});var qk=a(gt);Zn=r(qk,"function name"),qk.forEach(e),Xn=r(J,", "),xt=t(J,"STRONG",{});var Vk=a(xt);sr=r(Vk,"property name"),Vk.forEach(e),er=r(J,", or specify any reserved keywords to not mangle, or should it mangle global variable."),J.forEach(e),or=p(c),$=t(c,"P",{});var $o=a($);tr=r($o,"If the above code is written within a ES Module, then probably we wont refer the class "),Pe=t($o,"CODE",{class:!0});var Yk=a(Pe);ar=r(Yk,"Human"),Yk.forEach(e),nr=r($o," globally, rather refer it through "),Oe=t($o,"CODE",{class:!0});var Fk=a(Oe);rr=r(Fk,"import"),Fk.forEach(e),lr=r($o,", then the name of the class probably does not matter:"),$o.forEach(e),ir=p(c),Ce=t(c,"DIV",{class:!0});var mu=a(Ce);mu.forEach(e),pr=p(c),wt=t(c,"P",{});var Jk=a(wt);bt=t(Jk,"STRONG",{});var zk=a(bt);cr=r(zk,"186 Bytes (69.4%)"),zk.forEach(e),Jk.forEach(e),hr=p(c),_t=t(c,"P",{});var Kk=a(_t);kr=r(Kk,"But can we do better?"),Kk.forEach(e),dr=p(c),Ps=t(c,"P",{});var hn=a(Ps);yr=r(hn,"Well, if you look at the code, the property named "),Ie=t(hn,"CODE",{class:!0});var $k=a(Ie);vr=r($k,"chewAmount"),$k.forEach(e),ur=r(hn," takes up 20 characters, which is almost 10% of the code."),hn.forEach(e),fr=p(c),Et=t(c,"P",{});var Uk=a(Et);mr=r(Uk,"If we rename all the property name to 1 character variable, then we would end up with a much smaller code:"),Uk.forEach(e),gr=p(c),Ae=t(c,"DIV",{class:!0});var gu=a(Ae);gu.forEach(e),xr=p(c),Tt=t(c,"P",{});var Qk=a(Tt);Pt=t(Qk,"STRONG",{});var Zk=a(Pt);wr=r(Zk,"107 Bytes (39.9%)"),Zk.forEach(e),Qk.forEach(e),br=p(c),Ot=t(c,"P",{});var Xk=a(Ot);_r=r(Xk,"If it ends up with a much smaller bundle, should we rename our property name and method name to a shorter name? And why didn't Terser do this by default?"),Xk.forEach(e),Er=p(c),Ct=t(c,"P",{});var sd=a(Ct);It=t(sd,"STRONG",{});var ed=a(It);Tr=r(ed,"Should we rename our property name and method name to something short?"),ed.forEach(e),sd.forEach(e),Pr=p(c),At=t(c,"P",{});var od=a(At);Or=r(od,"No! That would hurt the readability of the code. \u{1F625}"),od.forEach(e),Cr=p(c),U=t(c,"P",{});var Uo=a(U);Ir=r(Uo,"Also, what if someone else imports the class "),De=t(Uo,"CODE",{class:!0});var td=a(De);Ar=r(td,"Human"),td.forEach(e),Dr=r(Uo," and wants to use the property "),Se=t(Uo,"CODE",{class:!0});var ad=a(Se);Sr=r(ad,"chewAmount"),ad.forEach(e),Hr=r(Uo,"?"),Uo.forEach(e),jr=p(c),B=t(c,"P",{});var vs=a(B);Rr=r(vs,"He would have to rename it to "),He=t(vs,"CODE",{class:!0});var nd=a(He);Mr=r(nd,"human.c"),nd.forEach(e),Nr=r(vs," instead of "),je=t(vs,"CODE",{class:!0});var rd=a(je);Lr=r(rd,"human.chewAmount"),rd.forEach(e),Br=r(vs," and probably scratching his head everytime he reads his code, wondering what does "),Re=t(vs,"CODE",{class:!0});var ld=a(Re);Wr=r(ld,"human.c"),ld.forEach(e),Gr=r(vs," mean?"),vs.forEach(e),qr=p(c),Dt=t(c,"P",{});var id=a(Dt);St=t(id,"STRONG",{});var pd=a(St);Vr=r(pd,"Why Terser didn't mangle property name by default?"),pd.forEach(e),id.forEach(e),Yr=p(c),Q=t(c,"P",{});var Qo=a(Q);Fr=r(Qo,"Because property mangling requires certain assumption on your code, therefore it is marked as "),Ht=t(Qo,"STRONG",{});var cd=a(Ht);Jr=r(cd,"very unsafe"),cd.forEach(e),zr=r(Qo," in the "),Os=t(Qo,"A",{href:!0,rel:!0});var hd=a(Os);Kr=r(hd,"Terser documentation"),hd.forEach(e),$r=r(Qo," to turn it on entirely."),Qo.forEach(e),c.forEach(e),Ua=p(h),d=t(h,"SECTION",{});var y=a(d);jt=t(y,"H3",{});var kd=a(jt);Cs=t(kd,"A",{href:!0,id:!0});var dd=a(Cs);Ur=r(dd,"Why is property mangling considered unsafe?"),dd.forEach(e),kd.forEach(e),Qr=p(y),Is=t(y,"P",{});var kn=a(Is);Zr=r(kn,"If you are a library author, or you wrote a module that will be used by others, and if you mangle the property of the library / module "),Rt=t(kn,"STRONG",{});var yd=a(Rt);Xr=r(yd,"alone"),yd.forEach(e),sl=r(kn,", all your method name, object property name will be mangled, and therefore all your APIs will be broken!"),kn.forEach(e),el=p(y),Me=t(y,"DIV",{class:!0});var xu=a(Me);xu.forEach(e),ol=p(y),Ne=t(y,"DIV",{class:!0});var wu=a(Ne);wu.forEach(e),tl=p(y),Z=t(y,"P",{});var Zo=a(Z);al=r(Zo,"Your user that calls "),Le=t(Zo,"CODE",{class:!0});var vd=a(Le);nl=r(vd,"doSomething({ paramA: 1, paramB: 2 })"),vd.forEach(e),rl=r(Zo," or "),Be=t(Zo,"CODE",{class:!0});var ud=a(Be);ll=r(ud,"car.drive()"),ud.forEach(e),il=r(Zo," will not work with the minified code!"),Zo.forEach(e),pl=p(y),As=t(y,"P",{});var dn=a(As);cl=r(dn,"The same ways goes if you are importing some other library or module, and you mangle your code "),Mt=t(dn,"STRONG",{});var fd=a(Mt);hl=r(fd,"alone"),fd.forEach(e),kl=r(dn,", your code will be broken too!"),dn.forEach(e),dl=p(y),We=t(y,"DIV",{class:!0});var bu=a(We);bu.forEach(e),yl=p(y),Ge=t(y,"DIV",{class:!0});var _u=a(Ge);_u.forEach(e),vl=p(y),W=t(y,"P",{});var us=a(W);ul=r(us,"I ran both the code above through the same Terser configuration, which means it also serves as a good example that the property name Terser mangles into is not consistent. It is computed and assigned at "),Nt=t(us,"EM",{});var md=a(Nt);fl=r(md,'"random"'),md.forEach(e),ml=r(us,". You should not expect that "),qe=t(us,"CODE",{class:!0});var gd=a(qe);gl=r(gd,"paramA"),gd.forEach(e),xl=r(us," always get mangled into "),Ve=t(us,"CODE",{class:!0});var xd=a(Ve);wl=r(xd,"m"),xd.forEach(e),bl=r(us," everytime!"),us.forEach(e),_l=p(y),X=t(y,"P",{});var Xo=a(X);El=r(Xo,"In summary, property mangling will break your code if you mangle your code alone. It will break at the boundary of your code, where you exports your functions or class that relies on "),Lt=t(Xo,"STRONG",{});var wd=a(Lt);Tl=r(wd,"public property or method"),wd.forEach(e),Pl=r(Xo,"; or where you import functions or class which you "),Bt=t(Xo,"STRONG",{});var bd=a(Bt);Ol=r(bd,"pass in an object or calls a public method"),bd.forEach(e),Cl=r(Xo,"."),Xo.forEach(e),Il=p(y),Ds=t(y,"P",{});var yn=a(Ds);Al=r(yn,"If you "),Wt=t(yn,"STRONG",{});var _d=a(Wt);Dl=r(_d,"do neither of those"),_d.forEach(e),Sl=r(yn,", you are actually safe to mangle all properties by default."),yn.forEach(e),Hl=p(y),Gt=t(y,"P",{});var Ed=a(Gt);jl=r(Ed,"If you have a standalone script that:"),Ed.forEach(e),Rl=p(y),Ss=t(y,"UL",{});var vn=a(Ss);qt=t(vn,"LI",{});var Td=a(qt);Ml=r(Td,"does not import nor export anything"),Td.forEach(e),Nl=p(vn),Vt=t(vn,"LI",{});var Pd=a(Vt);Ll=r(Pd,"does not set or read any property from the global scope (*)"),Pd.forEach(e),vn.forEach(e),Bl=p(y),Yt=t(y,"P",{});var Od=a(Yt);Wl=r(Od,"Then you are safe to mangle all your properties. Property or method name across the file will be mangled consistently:"),Od.forEach(e),Gl=p(y),Ye=t(y,"DIV",{class:!0});var Eu=a(Ye);Eu.forEach(e),ql=p(y),Fe=t(y,"DIV",{class:!0});var Tu=a(Fe);Tu.forEach(e),Vl=p(y),Hs=t(y,"P",{});var un=a(Hs);Yl=r(un,"If you use the property or method named "),Je=t(un,"CODE",{class:!0});var Cd=a(Je);Fl=r(Cd,'"drive"'),Cd.forEach(e),Jl=r(un,", it will be mangled to the same name throughout the file."),un.forEach(e),zl=p(y),H=t(y,"P",{});var z=a(H);Kl=r(z,"In the example above, the method "),ze=t(z,"CODE",{class:!0});var Id=a(ze);$l=r(Id,"drive"),Id.forEach(e),Ul=r(z," in both classes and the property "),Ke=t(z,"CODE",{class:!0});var Ad=a(Ke);Ql=r(Ad,"drive"),Ad.forEach(e),Zl=r(z," in "),$e=t(z,"CODE",{class:!0});var Dd=a($e);Xl=r(Dd,"foo({ drive: 'bar' })"),Dd.forEach(e),si=r(z," means different things, but they are mangled into the same name, "),Ue=t(z,"CODE",{class:!0});var Sd=a(Ue);ei=r(Sd,"s"),Sd.forEach(e),oi=r(z,"."),z.forEach(e),y.forEach(e),Qa=p(h),u=t(h,"SECTION",{});var w=a(u);Ft=t(w,"H4",{});var Hd=a(Ft);js=t(Hd,"A",{href:!0,id:!0});var jd=a(js);ti=r(jd,"Set or get property from the global scope"),jd.forEach(e),Hd.forEach(e),ai=p(w),Qe=t(w,"P",{});var bk=a(Qe);Jt=t(bk,"STRONG",{});var Rd=a(Jt);ni=r(Rd,"Rule of thumb:"),Rd.forEach(e),ri=r(bk," If you set or get property from global scope, property mangling blindly will break your code."),bk.forEach(e),li=p(w),Rs=t(w,"P",{});var fn=a(Rs);ii=r(fn,"Of course, there's caveat of when this might be safe, protected by "),Ze=t(fn,"CODE",{class:!0});var Md=a(Ze);pi=r(Md,"default: false"),Md.forEach(e),ci=r(fn," options that you can turn on at your own risk. \u{1F648}"),fn.forEach(e),hi=p(w),zt=t(w,"P",{});var Nd=a(zt);Kt=t(Nd,"STRONG",{});var Ld=a(Kt);ki=r(Ld,"Accessing DOM properties or method from built-in Objects"),Ld.forEach(e),Nd.forEach(e),di=p(w),$t=t(w,"P",{});var Bd=a($t);yi=r(Bd,"Terser keeps a list of property names that exempt from mangling, such as:"),Bd.forEach(e),vi=p(w),Ms=t(w,"UL",{});var mn=a(Ms);ps=t(mn,"LI",{});var Fa=a(ps);ui=r(Fa,"DOM properties: "),Xe=t(Fa,"CODE",{class:!0});var Wd=a(Xe);fi=r(Wd,"window.location"),Wd.forEach(e),mi=r(Fa,", "),so=t(Fa,"CODE",{class:!0});var Gd=a(so);gi=r(Gd,"document.createElement"),Gd.forEach(e),Fa.forEach(e),xi=p(mn),cs=t(mn,"LI",{});var Ja=a(cs);wi=r(Ja,"Methods of built-in objects: "),eo=t(Ja,"CODE",{class:!0});var qd=a(eo);bi=r(qd,"Array.from"),qd.forEach(e),_i=r(Ja,", "),oo=t(Ja,"CODE",{class:!0});var Vd=a(oo);Ei=r(Vd,"Object.defineProperty"),Vd.forEach(e),Ja.forEach(e),mn.forEach(e),Ti=p(w),ss=t(w,"P",{});var st=a(ss);Pi=r(st,"The list can be found in "),Ns=t(st,"A",{href:!0,rel:!0});var Yd=a(Ns);Oi=r(Yd,"domprops.js"),Yd.forEach(e),Ci=r(st," and "),Ls=t(st,"A",{href:!0,rel:!0});var Fd=a(Ls);to=t(Fd,"CODE",{class:!0});var Jd=a(to);Ii=r(Jd,"find_builtins"),Jd.forEach(e),Fd.forEach(e),Ai=r(st,"."),st.forEach(e),Di=p(w),R=t(w,"P",{});var is=a(R);Si=r(is,"This behavior is protected by the "),ao=t(is,"CODE",{class:!0});var zd=a(ao);Hi=r(zd,"builtins"),zd.forEach(e),ji=r(is," option in the "),Bs=t(is,"A",{href:!0,rel:!0});var Kd=a(Bs);Ri=r(Kd,"Mangle properties option"),Kd.forEach(e),Mi=r(is,", set it to "),no=t(is,"CODE",{class:!0});var $d=a(no);Ni=r($d,"true"),$d.forEach(e),Li=r(is," to mangle builtin properties as well. "),Ut=t(is,"STRONG",{});var Ud=a(Ut);Bi=r(Ud,"Override at your own risk"),Ud.forEach(e),is.forEach(e),Wi=p(w),Qt=t(w,"P",{});var Qd=a(Qt);Zt=t(Qd,"STRONG",{});var Zd=a(Zt);Gi=r(Zd,"Accessing property or method of a undeclared variable"),Zd.forEach(e),Qd.forEach(e),qi=p(w),Xt=t(w,"P",{});var Xd=a(Xt);Vi=r(Xd,"Variable that is not declared within the code, can be considered as global variable that is defined outside. Their properties or methods will not be mangled too."),Xd.forEach(e),Yi=p(w),G=t(w,"P",{});var fs=a(G);Fi=r(fs,"You can override this behavior via the "),ro=t(fs,"CODE",{class:!0});var sy=a(ro);Ji=r(sy,"undeclared"),sy.forEach(e),zi=r(fs," option in the "),Ws=t(fs,"A",{href:!0,rel:!0});var ey=a(Ws);Ki=r(ey,"Mangle properties option"),ey.forEach(e),$i=r(fs,", set it to "),lo=t(fs,"CODE",{class:!0});var oy=a(lo);Ui=r(oy,"true"),oy.forEach(e),Qi=r(fs," to mangle them too."),fs.forEach(e),w.forEach(e),Za=p(h),C=t(h,"SECTION",{});var K=a(C);sa=t(K,"H3",{});var ty=a(sa);Gs=t(ty,"A",{href:!0,id:!0});var ay=a(Gs);Zi=r(ay,"Mangling for rollup / webpack bundled code"),ay.forEach(e),ty.forEach(e),Xi=p(K),es=t(K,"P",{});var et=a(es);sp=r(et,"If you add "),qs=t(et,"A",{href:!0,rel:!0});var ny=a(qs);ep=r(ny,"terser-webpack-plugin"),ny.forEach(e),op=r(et," or "),Vs=t(et,"A",{href:!0,rel:!0});var ry=a(Vs);tp=r(ry,"rollup-plugin-terser"),ry.forEach(e),ap=r(et," to your bundling step, are you safe to mangle properties?"),et.forEach(e),np=p(K),io=t(K,"P",{});var _k=a(io);ea=t(_k,"STRONG",{});var ly=a(ea);rp=r(ly,"Rule of thumb:"),ly.forEach(e),lp=r(_k," If your bundler emits more than 1 file, No."),_k.forEach(e),ip=p(K),oa=t(K,"P",{});var iy=a(oa);pp=r(iy,"This means any bundling set up that involves code-splitting."),iy.forEach(e),cp=p(K),ta=t(K,"P",{});var py=a(ta);hp=r(py,"It is not safe because, terser is run after the code is split into separate files. Thus, the property or method names across files will not be mangled consistently."),py.forEach(e),K.forEach(e),Xa=p(h),Y=t(h,"SECTION",{});var ot=a(Y);aa=t(ot,"H2",{});var cy=a(aa);Ys=t(cy,"A",{href:!0,id:!0});var hy=a(Ys);kp=r(hy,"How to mangle property responsibly and safely"),hy.forEach(e),cy.forEach(e),dp=p(ot),na=t(ot,"P",{});var ky=a(na);yp=r(ky,"With so much restrictions in mind, you may wonder how can I utilise property mangling safely and responsibly?"),ky.forEach(e),vp=p(ot),ra=t(ot,"P",{});var dy=a(ra);up=r(dy,"Property mangling is not a all-or-nothing option in Terser, there's a few options you can play around to do property mangling safely."),dy.forEach(e),ot.forEach(e),sn=p(h),v=t(h,"SECTION",{});var f=a(v);la=t(f,"H3",{});var yy=a(la);Fs=t(yy,"A",{href:!0,id:!0});var vy=a(Fs);fp=r(vy,"Private property"),vy.forEach(e),yy.forEach(e),mp=p(f),os=t(f,"P",{});var tt=a(os);gp=r(tt,"In the following example, the only publicly documented method in the class "),po=t(tt,"CODE",{class:!0});var uy=a(po);xp=r(uy,"Car"),uy.forEach(e),wp=r(tt," is "),co=t(tt,"CODE",{class:!0});var fy=a(co);bp=r(fy,"driveTo()"),fy.forEach(e),_p=r(tt,", so it is okay to mangle other private methods."),tt.forEach(e),Ep=p(f),ho=t(f,"DIV",{class:!0});var Pu=a(ho);Pu.forEach(e),Tp=p(f),T=t(f,"P",{});var I=a(T);Pp=r(I,"We want to mangle "),ko=t(I,"CODE",{class:!0});var my=a(ko);Op=r(my,"this.currentLocation"),my.forEach(e),Cp=r(I,", "),yo=t(I,"CODE",{class:!0});var gy=a(yo);Ip=r(gy,"this.destination"),gy.forEach(e),Ap=r(I,", "),vo=t(I,"CODE",{class:!0});var xy=a(vo);Dp=r(xy,"this.calculateRoute"),xy.forEach(e),Sp=r(I,", "),uo=t(I,"CODE",{class:!0});var wy=a(uo);Hp=r(wy,"this.startDriving"),wy.forEach(e),jp=r(I,", "),fo=t(I,"CODE",{class:!0});var by=a(fo);Rp=r(by,"this.planRoute"),by.forEach(e),Mp=r(I,", but give "),mo=t(I,"CODE",{class:!0});var _y=a(mo);Np=r(_y,"this.driveTo"),_y.forEach(e),Lp=r(I," untouched."),I.forEach(e),Bp=p(f),ia=t(f,"P",{});var Ey=a(ia);Wp=r(Ey,"You can choose to either"),Ey.forEach(e),Gp=p(f),pa=t(f,"P",{});var Ty=a(pa);ca=t(Ty,"STRONG",{});var Py=a(ca);qp=r(Py,"1. mangle all methods and properties, except a reserved list of names:"),Py.forEach(e),Ty.forEach(e),Vp=p(f),go=t(f,"DIV",{class:!0});var Ou=a(go);Ou.forEach(e),Yp=p(f),ha=t(f,"P",{});var Oy=a(ha);ka=t(Oy,"STRONG",{});var Cy=a(ka);Fp=r(Cy,"2. specify a list of names to be mangled with a regex:"),Cy.forEach(e),Oy.forEach(e),Jp=p(f),xo=t(f,"DIV",{class:!0});var Cu=a(xo);Cu.forEach(e),zp=p(f),ts=t(f,"P",{});var at=a(ts);Kp=r(at,"Here, a "),Js=t(at,"A",{href:!0,rel:!0});var Iy=a(Js);$p=r(Iy,"unofficial JavaScript naming convention"),Iy.forEach(e),Up=r(at," for private method / properties come in handy. Often times, when a variable name starts with "),wo=t(at,"CODE",{class:!0});var Ay=a(wo);Qp=r(Ay,"_"),Ay.forEach(e),Zp=r(at,", it is intended to be private."),at.forEach(e),Xp=p(f),bo=t(f,"DIV",{class:!0});var Iu=a(bo);Iu.forEach(e),sc=p(f),da=t(f,"P",{});var Dy=a(da);ec=r(Dy,"This way, it makes our regex much easier:"),Dy.forEach(e),oc=p(f),_o=t(f,"DIV",{class:!0});var Au=a(_o);Au.forEach(e),f.forEach(e),en=p(h),M=t(h,"SECTION",{});var ms=a(M);ya=t(ms,"H3",{});var Sy=a(ya);zs=t(Sy,"A",{href:!0,id:!0});var Hy=a(zs);tc=r(Hy,"Consistent property mangling across subsequent minifications"),Hy.forEach(e),Sy.forEach(e),ac=p(ms),as=t(ms,"P",{});var nt=a(as);nc=r(nt,"If you want "),Eo=t(nt,"CODE",{class:!0});var jy=a(Eo);rc=r(jy,"_calculateRoute"),jy.forEach(e),lc=r(nt," to always mangled to the same name no matter how much you have changed the input file, the "),To=t(nt,"CODE",{class:!0});var Ry=a(To);ic=r(Ry,"nameCache"),Ry.forEach(e),pc=r(nt," may come in handy."),nt.forEach(e),cc=p(ms),Po=t(ms,"P",{});var Ek=a(Po);Oo=t(Ek,"CODE",{class:!0});var My=a(Oo);hc=r(My,"nameCache"),My.forEach(e),kc=r(Ek," is the internal state of Terser, that can be serialised and deserialised to seed the Terser mangling state."),Ek.forEach(e),dc=p(ms),Co=t(ms,"DIV",{class:!0});var Du=a(Co);Du.forEach(e),ms.forEach(e),on=p(h),g=t(h,"SECTION",{});var _=a(g);va=t(_,"H3",{});var Ny=a(va);Ks=t(Ny,"A",{href:!0,id:!0});var Ly=a(Ks);yc=r(Ly,"Consistent property mangling across different builds"),Ly.forEach(e),Ny.forEach(e),vc=p(_),ua=t(_,"P",{});var By=a(ua);uc=r(By,"What if you have multiple independent projects, and you want to make sure property mangling work across these projects?"),By.forEach(e),fc=p(_),fa=t(_,"P",{});var Wy=a(fa);mc=r(Wy,"If the variables you mangled are private properties or methods, then, you don't have an issue with this. Different projects should be nicely encapsulated, and should not depends on internal properties or methods."),Wy.forEach(e),gc=p(_),ma=t(_,"P",{});var Gy=a(ma);xc=r(Gy,"So, what I am describing now is for public API methods and properties."),Gy.forEach(e),wc=p(_),ga=t(_,"P",{});var qy=a(ga);bc=r(qy,"What if you want to mangle them as well, how do you make sure that they wont break the user after mangling the public methods or properties?"),qy.forEach(e),_c=p(_),xa=t(_,"P",{});var Vy=a(xa);Ec=r(Vy,"Since it involves public methods and properties, additional steps in setting up is understandable."),Vy.forEach(e),Tc=p(_),$s=t(_,"P",{});var gn=a($s);Pc=r(gn,"In that case, I would recommend maintain a name mapping of how the properties should mangle into, and use "),Us=t(gn,"A",{href:!0,rel:!0});var Yy=a(Us);Oc=r(Yy,"babel-plugin-transform-rename-properties"),Yy.forEach(e),Cc=r(gn," to rename them."),gn.forEach(e),Ic=p(_),wa=t(_,"P",{});var Fy=a(wa);Ac=r(Fy,"The name mapping is a manually curated list of names of your public properties and methods, and only need to be updated whenever there's a change in your public API."),Fy.forEach(e),Dc=p(_),ba=t(_,"P",{});var Jy=a(ba);Sc=r(Jy,"Think of it as part of your documentation, which should be updated whenever you change your public API."),Jy.forEach(e),Hc=p(_),Io=t(_,"DIV",{class:!0});var Su=a(Io);Su.forEach(e),_.forEach(e),tn=p(h),Ao=t(h,"SECTION",{});var zy=a(Ao);_a=t(zy,"H2",{});var Ky=a(_a);Qs=t(Ky,"A",{href:!0,id:!0});var $y=a(Qs);jc=r($y,"Misc"),$y.forEach(e),Ky.forEach(e),zy.forEach(e),an=p(h),P=t(h,"SECTION",{});var N=a(P);Ea=t(N,"H3",{});var Uy=a(Ea);Zs=t(Uy,"A",{href:!0,id:!0});var Qy=a(Zs);Rc=r(Qy,"Webpack and Rollup"),Qy.forEach(e),Uy.forEach(e),Mc=p(N),q=t(N,"P",{});var gs=a(q);Nc=r(gs,"Throughout the article, we mentioned Terser and "),Do=t(gs,"CODE",{class:!0});var Zy=a(Do);Lc=r(Zy,"terserOptions"),Zy.forEach(e),Bc=r(gs,", and didnt really go into how you would use it for projects bundled with "),Xs=t(gs,"A",{href:!0,rel:!0});var Xy=a(Xs);Wc=r(Xy,"webpack"),Xy.forEach(e),Gc=r(gs," or "),se=t(gs,"A",{href:!0,rel:!0});var sv=a(se);qc=r(sv,"rollup"),sv.forEach(e),Vc=r(gs,"."),gs.forEach(e),Yc=p(N),ee=t(N,"P",{});var xn=a(ee);Fc=r(xn,"For webpack user, you can use "),oe=t(xn,"A",{href:!0,rel:!0});var ev=a(oe);Jc=r(ev,"terser-webpack-plugin"),ev.forEach(e),zc=r(xn,"."),xn.forEach(e),Kc=p(N),So=t(N,"DIV",{class:!0});var Hu=a(So);Hu.forEach(e),$c=p(N),Ho=t(N,"P",{});var Tk=a(Ho);Uc=r(Tk,"For rollup user, you can use "),te=t(Tk,"A",{href:!0,rel:!0});var ov=a(te);Qc=r(ov,"rollup-plugin-terser"),ov.forEach(e),Tk.forEach(e),Zc=p(N),jo=t(N,"DIV",{class:!0});var ju=a(jo);ju.forEach(e),N.forEach(e),nn=p(h),x=t(h,"SECTION",{});var E=a(x);Ta=t(E,"H3",{});var tv=a(Ta);ae=t(tv,"A",{href:!0,id:!0});var av=a(ae);Xc=r(av,"A curious case of Preact"),av.forEach(e),tv.forEach(e),sh=p(E),Pa=t(E,"BLOCKQUOTE",{});var nv=a(Pa);ns=t(nv,"P",{});var rt=a(ns);eh=r(rt,"The rabbit hole of how to mangle property names starts with investigating the "),ne=t(rt,"A",{href:!0,rel:!0});var rv=a(ne);oh=r(rv,"Preact"),rv.forEach(e),th=p(rt),re=t(rt,"A",{href:!0,rel:!0});var lv=a(re);ah=r(lv,"Suspense bug"),lv.forEach(e),nh=r(rt,", but that would be a story for another time."),rt.forEach(e),nv.forEach(e),rh=p(E),Oa=t(E,"P",{});var iv=a(Oa);lh=r(iv,"Preact is a fast 3kB React alternative, with the same modern API."),iv.forEach(e),ih=p(E),Ca=t(E,"P",{});var pv=a(Ca);ph=r(pv,"Property mangling contributed an important part to keep the library slim."),pv.forEach(e),ch=p(E),le=t(E,"TABLE",{});var wn=a(le);Ia=t(wn,"THEAD",{});var cv=a(Ia);ie=t(cv,"TR",{});var bn=a(ie);Aa=t(bn,"TH",{});var hv=a(Aa);hh=r(hv,"Without mangling"),hv.forEach(e),kh=p(bn),Da=t(bn,"TH",{});var kv=a(Da);dh=r(kv,"With mangling"),kv.forEach(e),bn.forEach(e),cv.forEach(e),yh=p(wn),pe=t(wn,"TBODY",{});var _n=a(pe);ce=t(_n,"TR",{});var En=a(ce);Sa=t(En,"TD",{});var dv=a(Sa);vh=r(dv,"10.7 KB minified"),dv.forEach(e),uh=p(En),Ha=t(En,"TD",{});var yv=a(Ha);fh=r(yv,"9.7 Kb minified (reduced ~10%)"),yv.forEach(e),En.forEach(e),mh=p(_n),he=t(_n,"TR",{});var Tn=a(he);ja=t(Tn,"TD",{});var vv=a(ja);gh=r(vv,"4.2 KB minified + gzipped"),vv.forEach(e),xh=p(Tn),Ra=t(Tn,"TD",{});var uv=a(Ra);wh=r(uv,"3.9 KB minified + gzipped (reduced ~5%)"),uv.forEach(e),Tn.forEach(e),_n.forEach(e),wn.forEach(e),bh=p(E),ke=t(E,"P",{});var Pn=a(ke);_h=r(Pn,"There's several different builds for "),Ro=t(Pn,"CODE",{class:!0});var fv=a(Ro);Eh=r(fv,"preact"),fv.forEach(e),Th=r(Pn,":"),Pn.forEach(e),Ph=p(E),V=t(E,"UL",{});var xs=a(V);Ma=t(xs,"LI",{});var mv=a(Ma);Mo=t(mv,"CODE",{class:!0});var gv=a(Mo);Oh=r(gv,"preact/core"),gv.forEach(e),mv.forEach(e),Ch=p(xs),No=t(xs,"LI",{});var Pk=a(No);Lo=t(Pk,"CODE",{class:!0});var xv=a(Lo);Ih=r(xv,"preact/compat"),xv.forEach(e),Ah=r(Pk," - a compat layer on top of preact to provide all React API"),Pk.forEach(e),Dh=p(xs),hs=t(xs,"LI",{});var za=a(hs);Bo=t(za,"CODE",{class:!0});var wv=a(Bo);Sh=r(wv,"preact/debug"),wv.forEach(e),Hh=r(za," - a layer on top of "),Wo=t(za,"CODE",{class:!0});var bv=a(Wo);jh=r(bv,"preact/core"),bv.forEach(e),Rh=r(za," that provides a better debugging experience"),za.forEach(e),Mh=p(xs),ks=t(xs,"LI",{});var Ka=a(ks);Go=t(Ka,"CODE",{class:!0});var _v=a(Go);Nh=r(_v,"preact/devtools"),_v.forEach(e),Lh=r(Ka," - the bridge between "),qo=t(Ka,"CODE",{class:!0});var Ev=a(qo);Bh=r(Ev,"preact/core"),Ev.forEach(e),Wh=r(Ka," and the devtools extension."),Ka.forEach(e),xs.forEach(e),Gh=p(E),rs=t(E,"P",{});var lt=a(rs);qh=r(lt,"To have a consistent mangle properties across different builds, "),Vo=t(lt,"CODE",{class:!0});var Tv=a(Vo);Vh=r(Tv,"babel-plugin-transform-rename-properties"),Tv.forEach(e),Yh=r(lt," is used, and the name mapping is stored at "),de=t(lt,"A",{href:!0,rel:!0});var Pv=a(de);Yo=t(Pv,"CODE",{class:!0});var Ov=a(Yo);Fh=r(Ov,"mangle.json"),Ov.forEach(e),Pv.forEach(e),Jh=r(lt,"."),lt.forEach(e),zh=p(E),Na=t(E,"BLOCKQUOTE",{});var Cv=a(Na);ds=t(Cv,"P",{});var $a=a(ds);Kh=r($a,"Check out this Pull Request that adds "),Fo=t($a,"CODE",{class:!0});var Iv=a(Fo);$h=r(Iv,"babel-plugin-transform-rename-properties"),Iv.forEach(e),Uh=r($a," into Preact: "),ye=t($a,"A",{href:!0,rel:!0});var Av=a(ye);Qh=r(Av,"https://github.com/preactjs/preact/pull/2548"),Av.forEach(e),$a.forEach(e),Cv.forEach(e),Zh=p(E),O=t(E,"P",{});var L=a(O);Xh=r(L,"For mangling private properties, the bundling process of Preact is abstracted in "),ve=t(L,"A",{href:!0,rel:!0});var Dv=a(ve);sk=r(Dv,"microbundle"),Dv.forEach(e),ek=r(L,", which reads the mangle options from "),Jo=t(L,"CODE",{class:!0});var Sv=a(Jo);ok=r(Sv,"mangle.json"),Sv.forEach(e),tk=r(L," or the "),zo=t(L,"CODE",{class:!0});var Hv=a(zo);ak=r(Hv,"mangle"),Hv.forEach(e),nk=r(L," property from "),Ko=t(L,"CODE",{class:!0});var jv=a(Ko);rk=r(jv,"package.json"),jv.forEach(e),lk=r(L,". See "),ue=t(L,"A",{href:!0,rel:!0});var Rv=a(ue);ik=r(Rv,"Mangling Properties for microbundle"),Rv.forEach(e),pk=r(L,"."),L.forEach(e),E.forEach(e),rn=p(h),F=t(h,"SECTION",{});var it=a(F);La=t(it,"H2",{});var Mv=a(La);fe=t(Mv,"A",{href:!0,id:!0});var Nv=a(fe);ck=r(Nv,"Closing Note"),Nv.forEach(e),Mv.forEach(e),hk=p(it),Ba=t(it,"P",{});var Lv=a(Ba);kk=r(Lv,"We've covered what is property mangling and all the caveats come along with it."),Lv.forEach(e),dk=p(it),Wa=t(it,"P",{});var Bv=a(Wa);yk=r(Bv,"With the full grasp of the caveats, we looked at various tactics that we can use to utilise property mangling to reduce our minified code output."),Bv.forEach(e),it.forEach(e),ln=p(h),ys=t(h,"SECTION",{});var On=a(ys);Ga=t(On,"H2",{});var Wv=a(Ga);me=t(Wv,"A",{href:!0,id:!0});var Gv=a(me);vk=r(Gv,"Further Reading"),Gv.forEach(e),Wv.forEach(e),uk=p(On),ls=t(On,"UL",{});var pt=a(ls);qa=t(pt,"LI",{});var qv=a(qa);ge=t(qv,"A",{href:!0,rel:!0});var Vv=a(ge);fk=r(Vv,"Terser Mangle options"),Vv.forEach(e),qv.forEach(e),mk=p(pt),Va=t(pt,"LI",{});var Yv=a(Va);xe=t(Yv,"A",{href:!0,rel:!0});var Fv=a(xe);gk=r(Fv,"microbundle Mangling Properties"),Fv.forEach(e),Yv.forEach(e),xk=p(pt),Ya=t(pt,"LI",{});var Jv=a(Ya);we=t(Jv,"A",{href:!0,rel:!0});var zv=a(we);wk=r(zv,"babel-plugin-transform-rename-properties"),zv.forEach(e),Jv.forEach(e),pt.forEach(e),On.forEach(e),this.h()},h(){l(A,"href","#what-is-mangling-property"),l(A,"id","what-is-mangling-property"),l(Ee,"class","code-section"),l(_s,"href","https://github.com/terser/terser"),l(_s,"rel","nofollow"),l(Te,"class","code-section"),l(Ts,"href","https://github.com/terser/terser#mangle-options"),l(Ts,"rel","nofollow"),l(Pe,"class","inline"),l(Oe,"class","inline"),l(Ce,"class","code-section"),l(Ie,"class","inline"),l(Ae,"class","code-section"),l(De,"class","inline"),l(Se,"class","inline"),l(He,"class","inline"),l(je,"class","inline"),l(Re,"class","inline"),l(Os,"href","https://github.com/terser/terser#cli-mangling-property-names---mangle-props"),l(Os,"rel","nofollow"),l(Cs,"href","#why-is-property-mangling-considered-unsafe"),l(Cs,"id","why-is-property-mangling-considered-unsafe"),l(Me,"class","code-section"),l(Ne,"class","code-section"),l(Le,"class","inline"),l(Be,"class","inline"),l(We,"class","code-section"),l(Ge,"class","code-section"),l(qe,"class","inline"),l(Ve,"class","inline"),l(Ye,"class","code-section"),l(Fe,"class","code-section"),l(Je,"class","inline"),l(ze,"class","inline"),l(Ke,"class","inline"),l($e,"class","inline"),l(Ue,"class","inline"),l(js,"href","#set-or-get-property-from-the-global-scope"),l(js,"id","set-or-get-property-from-the-global-scope"),l(Ze,"class","inline"),l(Xe,"class","inline"),l(so,"class","inline"),l(eo,"class","inline"),l(oo,"class","inline"),l(Ns,"href","https://github.com/terser/terser/blob/aacd5770d9364ecaca80ff450fe329e021ac98aa/tools/domprops.js"),l(Ns,"rel","nofollow"),l(to,"class","inline"),l(Ls,"href","https://github.com/terser/terser/blob/aacd5770d9364ecaca80ff450fe329e021ac98aa/lib/propmangle.js#L67"),l(Ls,"rel","nofollow"),l(ao,"class","inline"),l(Bs,"href","https://github.com/terser/terser#mangle-properties-options"),l(Bs,"rel","nofollow"),l(no,"class","inline"),l(ro,"class","inline"),l(Ws,"href","https://github.com/terser/terser#mangle-properties-options"),l(Ws,"rel","nofollow"),l(lo,"class","inline"),l(Gs,"href","#mangling-for-rollup-webpack-bundled-code"),l(Gs,"id","mangling-for-rollup-webpack-bundled-code"),l(qs,"href","https://webpack.js.org/plugins/terser-webpack-plugin/"),l(qs,"rel","nofollow"),l(Vs,"href","https://www.npmjs.com/package/rollup-plugin-terser"),l(Vs,"rel","nofollow"),l(Ys,"href","#how-to-mangle-property-responsibly-and-safely"),l(Ys,"id","how-to-mangle-property-responsibly-and-safely"),l(Fs,"href","#private-property"),l(Fs,"id","private-property"),l(po,"class","inline"),l(co,"class","inline"),l(ho,"class","code-section"),l(ko,"class","inline"),l(yo,"class","inline"),l(vo,"class","inline"),l(uo,"class","inline"),l(fo,"class","inline"),l(mo,"class","inline"),l(go,"class","code-section"),l(xo,"class","code-section"),l(Js,"href","https://www.robinwieruch.de/javascript-naming-conventions"),l(Js,"rel","nofollow"),l(wo,"class","inline"),l(bo,"class","code-section"),l(_o,"class","code-section"),l(zs,"href","#consistent-property-mangling-across-subsequent-minifications"),l(zs,"id","consistent-property-mangling-across-subsequent-minifications"),l(Eo,"class","inline"),l(To,"class","inline"),l(Oo,"class","inline"),l(Co,"class","code-section"),l(Ks,"href","#consistent-property-mangling-across-different-builds"),l(Ks,"id","consistent-property-mangling-across-different-builds"),l(Us,"href","https://www.npmjs.com/package/babel-plugin-transform-rename-properties"),l(Us,"rel","nofollow"),l(Io,"class","code-section"),l(Qs,"href","#misc"),l(Qs,"id","misc"),l(Zs,"href","#webpack-and-rollup"),l(Zs,"id","webpack-and-rollup"),l(Do,"class","inline"),l(Xs,"href","https://webpack.js.org/"),l(Xs,"rel","nofollow"),l(se,"href","https://rollupjs.org/"),l(se,"rel","nofollow"),l(oe,"href","https://github.com/webpack-contrib/terser-webpack-plugin/"),l(oe,"rel","nofollow"),l(So,"class","code-section"),l(te,"href","https://www.npmjs.com/package/rollup-plugin-terser"),l(te,"rel","nofollow"),l(jo,"class","code-section"),l(ae,"href","#a-curious-case-of-preact"),l(ae,"id","a-curious-case-of-preact"),l(ne,"href","https://github.com/preactjs/preact"),l(ne,"rel","nofollow"),l(re,"href","https://github.com/preactjs/preact/pull/2661"),l(re,"rel","nofollow"),l(Ro,"class","inline"),l(Mo,"class","inline"),l(Lo,"class","inline"),l(Bo,"class","inline"),l(Wo,"class","inline"),l(Go,"class","inline"),l(qo,"class","inline"),l(Vo,"class","inline"),l(Yo,"class","inline"),l(de,"href","https://github.com/preactjs/preact/blob/c2c9b9414bc4202b2ac487b55be626f955fba65f/mangle.json"),l(de,"rel","nofollow"),l(Fo,"class","inline"),l(ye,"href","https://github.com/preactjs/preact/pull/2548"),l(ye,"rel","nofollow"),l(ve,"href","https://github.com/developit/microbundle"),l(ve,"rel","nofollow"),l(Jo,"class","inline"),l(zo,"class","inline"),l(Ko,"class","inline"),l(ue,"href","https://github.com/developit/microbundle#mangling-properties"),l(ue,"rel","nofollow"),l(fe,"href","#closing-note"),l(fe,"id","closing-note"),l(me,"href","#further-reading"),l(me,"id","further-reading"),l(ge,"href","https://github.com/terser/terser#mangle-options"),l(ge,"rel","nofollow"),l(xe,"href","https://github.com/developit/microbundle#mangling-properties"),l(xe,"rel","nofollow"),l(we,"href","https://www.npmjs.com/package/babel-plugin-transform-rename-properties"),l(we,"rel","nofollow")},m(h,c){m(h,k,c),s(k,j),s(j,A),s(A,ws),s(k,b),s(k,D),s(D,_e),s(k,Cn),s(k,Ee),Ee.innerHTML=Qv,s(k,In),s(k,ct),s(ct,ht),s(ht,An),s(k,Dn),s(k,bs),s(bs,Sn),s(bs,_s),s(_s,Hn),s(bs,jn),s(k,Rn),s(k,Te),Te.innerHTML=Zv,s(k,Mn),s(k,kt),s(kt,dt),s(dt,Nn),s(k,Ln),s(k,yt),s(yt,vt),s(vt,Bn),s(k,Wn),s(k,ut),s(ut,Gn),s(k,qn),s(k,Es),s(Es,Vn),s(Es,ft),s(ft,Yn),s(Es,Fn),s(k,Jn),s(k,S),s(S,zn),s(S,Ts),s(Ts,Kn),s(S,$n),s(S,mt),s(mt,Un),s(S,Qn),s(S,gt),s(gt,Zn),s(S,Xn),s(S,xt),s(xt,sr),s(S,er),s(k,or),s(k,$),s($,tr),s($,Pe),s(Pe,ar),s($,nr),s($,Oe),s(Oe,rr),s($,lr),s(k,ir),s(k,Ce),Ce.innerHTML=Xv,s(k,pr),s(k,wt),s(wt,bt),s(bt,cr),s(k,hr),s(k,_t),s(_t,kr),s(k,dr),s(k,Ps),s(Ps,yr),s(Ps,Ie),s(Ie,vr),s(Ps,ur),s(k,fr),s(k,Et),s(Et,mr),s(k,gr),s(k,Ae),Ae.innerHTML=su,s(k,xr),s(k,Tt),s(Tt,Pt),s(Pt,wr),s(k,br),s(k,Ot),s(Ot,_r),s(k,Er),s(k,Ct),s(Ct,It),s(It,Tr),s(k,Pr),s(k,At),s(At,Or),s(k,Cr),s(k,U),s(U,Ir),s(U,De),s(De,Ar),s(U,Dr),s(U,Se),s(Se,Sr),s(U,Hr),s(k,jr),s(k,B),s(B,Rr),s(B,He),s(He,Mr),s(B,Nr),s(B,je),s(je,Lr),s(B,Br),s(B,Re),s(Re,Wr),s(B,Gr),s(k,qr),s(k,Dt),s(Dt,St),s(St,Vr),s(k,Yr),s(k,Q),s(Q,Fr),s(Q,Ht),s(Ht,Jr),s(Q,zr),s(Q,Os),s(Os,Kr),s(Q,$r),m(h,Ua,c),m(h,d,c),s(d,jt),s(jt,Cs),s(Cs,Ur),s(d,Qr),s(d,Is),s(Is,Zr),s(Is,Rt),s(Rt,Xr),s(Is,sl),s(d,el),s(d,Me),Me.innerHTML=eu,s(d,ol),s(d,Ne),Ne.innerHTML=ou,s(d,tl),s(d,Z),s(Z,al),s(Z,Le),s(Le,nl),s(Z,rl),s(Z,Be),s(Be,ll),s(Z,il),s(d,pl),s(d,As),s(As,cl),s(As,Mt),s(Mt,hl),s(As,kl),s(d,dl),s(d,We),We.innerHTML=tu,s(d,yl),s(d,Ge),Ge.innerHTML=au,s(d,vl),s(d,W),s(W,ul),s(W,Nt),s(Nt,fl),s(W,ml),s(W,qe),s(qe,gl),s(W,xl),s(W,Ve),s(Ve,wl),s(W,bl),s(d,_l),s(d,X),s(X,El),s(X,Lt),s(Lt,Tl),s(X,Pl),s(X,Bt),s(Bt,Ol),s(X,Cl),s(d,Il),s(d,Ds),s(Ds,Al),s(Ds,Wt),s(Wt,Dl),s(Ds,Sl),s(d,Hl),s(d,Gt),s(Gt,jl),s(d,Rl),s(d,Ss),s(Ss,qt),s(qt,Ml),s(Ss,Nl),s(Ss,Vt),s(Vt,Ll),s(d,Bl),s(d,Yt),s(Yt,Wl),s(d,Gl),s(d,Ye),Ye.innerHTML=nu,s(d,ql),s(d,Fe),Fe.innerHTML=ru,s(d,Vl),s(d,Hs),s(Hs,Yl),s(Hs,Je),s(Je,Fl),s(Hs,Jl),s(d,zl),s(d,H),s(H,Kl),s(H,ze),s(ze,$l),s(H,Ul),s(H,Ke),s(Ke,Ql),s(H,Zl),s(H,$e),s($e,Xl),s(H,si),s(H,Ue),s(Ue,ei),s(H,oi),m(h,Qa,c),m(h,u,c),s(u,Ft),s(Ft,js),s(js,ti),s(u,ai),s(u,Qe),s(Qe,Jt),s(Jt,ni),s(Qe,ri),s(u,li),s(u,Rs),s(Rs,ii),s(Rs,Ze),s(Ze,pi),s(Rs,ci),s(u,hi),s(u,zt),s(zt,Kt),s(Kt,ki),s(u,di),s(u,$t),s($t,yi),s(u,vi),s(u,Ms),s(Ms,ps),s(ps,ui),s(ps,Xe),s(Xe,fi),s(ps,mi),s(ps,so),s(so,gi),s(Ms,xi),s(Ms,cs),s(cs,wi),s(cs,eo),s(eo,bi),s(cs,_i),s(cs,oo),s(oo,Ei),s(u,Ti),s(u,ss),s(ss,Pi),s(ss,Ns),s(Ns,Oi),s(ss,Ci),s(ss,Ls),s(Ls,to),s(to,Ii),s(ss,Ai),s(u,Di),s(u,R),s(R,Si),s(R,ao),s(ao,Hi),s(R,ji),s(R,Bs),s(Bs,Ri),s(R,Mi),s(R,no),s(no,Ni),s(R,Li),s(R,Ut),s(Ut,Bi),s(u,Wi),s(u,Qt),s(Qt,Zt),s(Zt,Gi),s(u,qi),s(u,Xt),s(Xt,Vi),s(u,Yi),s(u,G),s(G,Fi),s(G,ro),s(ro,Ji),s(G,zi),s(G,Ws),s(Ws,Ki),s(G,$i),s(G,lo),s(lo,Ui),s(G,Qi),m(h,Za,c),m(h,C,c),s(C,sa),s(sa,Gs),s(Gs,Zi),s(C,Xi),s(C,es),s(es,sp),s(es,qs),s(qs,ep),s(es,op),s(es,Vs),s(Vs,tp),s(es,ap),s(C,np),s(C,io),s(io,ea),s(ea,rp),s(io,lp),s(C,ip),s(C,oa),s(oa,pp),s(C,cp),s(C,ta),s(ta,hp),m(h,Xa,c),m(h,Y,c),s(Y,aa),s(aa,Ys),s(Ys,kp),s(Y,dp),s(Y,na),s(na,yp),s(Y,vp),s(Y,ra),s(ra,up),m(h,sn,c),m(h,v,c),s(v,la),s(la,Fs),s(Fs,fp),s(v,mp),s(v,os),s(os,gp),s(os,po),s(po,xp),s(os,wp),s(os,co),s(co,bp),s(os,_p),s(v,Ep),s(v,ho),ho.innerHTML=lu,s(v,Tp),s(v,T),s(T,Pp),s(T,ko),s(ko,Op),s(T,Cp),s(T,yo),s(yo,Ip),s(T,Ap),s(T,vo),s(vo,Dp),s(T,Sp),s(T,uo),s(uo,Hp),s(T,jp),s(T,fo),s(fo,Rp),s(T,Mp),s(T,mo),s(mo,Np),s(T,Lp),s(v,Bp),s(v,ia),s(ia,Wp),s(v,Gp),s(v,pa),s(pa,ca),s(ca,qp),s(v,Vp),s(v,go),go.innerHTML=iu,s(v,Yp),s(v,ha),s(ha,ka),s(ka,Fp),s(v,Jp),s(v,xo),xo.innerHTML=pu,s(v,zp),s(v,ts),s(ts,Kp),s(ts,Js),s(Js,$p),s(ts,Up),s(ts,wo),s(wo,Qp),s(ts,Zp),s(v,Xp),s(v,bo),bo.innerHTML=cu,s(v,sc),s(v,da),s(da,ec),s(v,oc),s(v,_o),_o.innerHTML=hu,m(h,en,c),m(h,M,c),s(M,ya),s(ya,zs),s(zs,tc),s(M,ac),s(M,as),s(as,nc),s(as,Eo),s(Eo,rc),s(as,lc),s(as,To),s(To,ic),s(as,pc),s(M,cc),s(M,Po),s(Po,Oo),s(Oo,hc),s(Po,kc),s(M,dc),s(M,Co),Co.innerHTML=ku,m(h,on,c),m(h,g,c),s(g,va),s(va,Ks),s(Ks,yc),s(g,vc),s(g,ua),s(ua,uc),s(g,fc),s(g,fa),s(fa,mc),s(g,gc),s(g,ma),s(ma,xc),s(g,wc),s(g,ga),s(ga,bc),s(g,_c),s(g,xa),s(xa,Ec),s(g,Tc),s(g,$s),s($s,Pc),s($s,Us),s(Us,Oc),s($s,Cc),s(g,Ic),s(g,wa),s(wa,Ac),s(g,Dc),s(g,ba),s(ba,Sc),s(g,Hc),s(g,Io),Io.innerHTML=du,m(h,tn,c),m(h,Ao,c),s(Ao,_a),s(_a,Qs),s(Qs,jc),m(h,an,c),m(h,P,c),s(P,Ea),s(Ea,Zs),s(Zs,Rc),s(P,Mc),s(P,q),s(q,Nc),s(q,Do),s(Do,Lc),s(q,Bc),s(q,Xs),s(Xs,Wc),s(q,Gc),s(q,se),s(se,qc),s(q,Vc),s(P,Yc),s(P,ee),s(ee,Fc),s(ee,oe),s(oe,Jc),s(ee,zc),s(P,Kc),s(P,So),So.innerHTML=yu,s(P,$c),s(P,Ho),s(Ho,Uc),s(Ho,te),s(te,Qc),s(P,Zc),s(P,jo),jo.innerHTML=vu,m(h,nn,c),m(h,x,c),s(x,Ta),s(Ta,ae),s(ae,Xc),s(x,sh),s(x,Pa),s(Pa,ns),s(ns,eh),s(ns,ne),s(ne,oh),s(ns,th),s(ns,re),s(re,ah),s(ns,nh),s(x,rh),s(x,Oa),s(Oa,lh),s(x,ih),s(x,Ca),s(Ca,ph),s(x,ch),s(x,le),s(le,Ia),s(Ia,ie),s(ie,Aa),s(Aa,hh),s(ie,kh),s(ie,Da),s(Da,dh),s(le,yh),s(le,pe),s(pe,ce),s(ce,Sa),s(Sa,vh),s(ce,uh),s(ce,Ha),s(Ha,fh),s(pe,mh),s(pe,he),s(he,ja),s(ja,gh),s(he,xh),s(he,Ra),s(Ra,wh),s(x,bh),s(x,ke),s(ke,_h),s(ke,Ro),s(Ro,Eh),s(ke,Th),s(x,Ph),s(x,V),s(V,Ma),s(Ma,Mo),s(Mo,Oh),s(V,Ch),s(V,No),s(No,Lo),s(Lo,Ih),s(No,Ah),s(V,Dh),s(V,hs),s(hs,Bo),s(Bo,Sh),s(hs,Hh),s(hs,Wo),s(Wo,jh),s(hs,Rh),s(V,Mh),s(V,ks),s(ks,Go),s(Go,Nh),s(ks,Lh),s(ks,qo),s(qo,Bh),s(ks,Wh),s(x,Gh),s(x,rs),s(rs,qh),s(rs,Vo),s(Vo,Vh),s(rs,Yh),s(rs,de),s(de,Yo),s(Yo,Fh),s(rs,Jh),s(x,zh),s(x,Na),s(Na,ds),s(ds,Kh),s(ds,Fo),s(Fo,$h),s(ds,Uh),s(ds,ye),s(ye,Qh),s(x,Zh),s(x,O),s(O,Xh),s(O,ve),s(ve,sk),s(O,ek),s(O,Jo),s(Jo,ok),s(O,tk),s(O,zo),s(zo,ak),s(O,nk),s(O,Ko),s(Ko,rk),s(O,lk),s(O,ue),s(ue,ik),s(O,pk),m(h,rn,c),m(h,F,c),s(F,La),s(La,fe),s(fe,ck),s(F,hk),s(F,Ba),s(Ba,kk),s(F,dk),s(F,Wa),s(Wa,yk),m(h,ln,c),m(h,ys,c),s(ys,Ga),s(Ga,me),s(me,vk),s(ys,uk),s(ys,ls),s(ls,qa),s(qa,ge),s(ge,fk),s(ls,mk),s(ls,Va),s(Va,xe),s(xe,gk),s(ls,xk),s(ls,Ya),s(Ya,we),s(we,wk)},p:Ju,d(h){h&&e(k),h&&e(Ua),h&&e(d),h&&e(Qa),h&&e(u),h&&e(Za),h&&e(C),h&&e(Xa),h&&e(Y),h&&e(sn),h&&e(v),h&&e(en),h&&e(M),h&&e(on),h&&e(g),h&&e(tn),h&&e(Ao),h&&e(an),h&&e(P),h&&e(nn),h&&e(x),h&&e(rn),h&&e(F),h&&e(ln),h&&e(ys)}}}function Uu(be){let k,j;const A=[be[0],Uv];let ws={$$slots:{default:[$u]},$$scope:{ctx:be}};for(let b=0;b<A.length;b+=1)ws=Ok(ws,A[b]);return k=new zu({props:ws}),{c(){Lu(k.$$.fragment)},l(b){Bu(k.$$.fragment,b)},m(b,D){Wu(k,b,D),j=!0},p(b,[D]){const _e=D&1?Gu(A,[D&1&&Kv(b[0]),D&0&&Kv(Uv)]):{};D&2&&(_e.$$scope={dirty:D,ctx:b}),k.$set(_e)},i(b){j||(qu(k.$$.fragment,b),j=!0)},o(b){Vu(k.$$.fragment,b),j=!1},d(b){Yu(k,b)}}}const Uv={title:"Reduce minified code size by property mangling",date:"2020-08-08T08:00:00Z",tags:["JavaScript","Terser"],label:"blog",description:"What is Mangling PropertyAssume you have the following JavaScript code:Original: 268 BytesIf you minify this with the default options with Terser, you probably get something like:207 Bytes (77.2%)(Usually Terser would compress whitespace too, but for ease of reading, allow me to keep the whitespace)...",tableOfContents:[{link:"what-is-mangling-property",title:"What is Mangling Property",nested:[{link:"why-is-property-mangling-considered-unsafe",title:"Why is property mangling considered unsafe?",nested:[{link:"set-or-get-property-from-the-global-scope",title:"Set or get property from the global scope"}]},{link:"mangling-for-rollup-webpack-bundled-code",title:"Mangling for rollup / webpack bundled code"}]},{link:"how-to-mangle-property-responsibly-and-safely",title:"How to mangle property responsibly and safely",nested:[{link:"private-property",title:"Private property"},{link:"consistent-property-mangling-across-subsequent-minifications",title:"Consistent property mangling across subsequent minifications"},{link:"consistent-property-mangling-across-different-builds",title:"Consistent property mangling across different builds"}]},{link:"misc",title:"Misc",nested:[{link:"webpack-and-rollup",title:"Webpack and Rollup"},{link:"a-curious-case-of-preact",title:"A curious case of Preact"}]},{link:"closing-note",title:"Closing Note"},{link:"further-reading",title:"Further Reading"}]};function Qu(be,k,j){return Fu("blog",{image:Ku}),be.$$set=A=>{j(0,k=Ok(Ok({},k),$v(A)))},k=$v(k),[k]}class tf extends Ru{constructor(k){super();Mu(this,k,Qu,Uu,Nu,{})}}export{tf as default,Uv as metadata};
