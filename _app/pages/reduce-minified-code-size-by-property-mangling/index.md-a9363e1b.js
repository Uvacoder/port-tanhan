import{S as $u,i as Fu,s as Yu,C as Ak,w as su,x as eu,y as ou,z as zu,A as Qv,q as tu,o as au,B as nu,r as Ku,R as Zv,k as i,e as o,t as n,m as p,c as t,a,h as r,d as e,b as l,g as m,F as s,O as Ju}from"../../chunks/vendor-6bf294e3.js";import{B as Uu}from"../../chunks/BlogLayout-152f599b.js";import{T as Qu}from"../../chunks/TableOfContent-1b9e4572.js";import"../../chunks/stores-e20b7872.js";import"../../chunks/WebMentions-745413ea.js";/* empty css                                */var Zu="/_app/assets/hero-twitter-32d4396a.jpg";function Xu(be){let g,N,k,J,x,L,_e,ct,An,Dn,Ee,ru=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Human</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">constructor</span><span style="color: var(--shiki-color-text)">(chewAmount) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.chewAmount </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">eat</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-keyword)">let</span><span style="color: var(--shiki-color-text)"> amount </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">; amount </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.chewAmount; amount</span><span style="color: var(--shiki-token-keyword)">++</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">.chew</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">chew</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">getHumanEating</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">lihau</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Human</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">lihau</span><span style="color: var(--shiki-token-function)">.eat</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Sn,ht,kt,Hn,jn,bs,Rn,_s,Mn,Nn,Ln,Te,lu=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Human</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">constructor</span><span style="color: var(--shiki-color-text)">(chewAmount) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.chewAmount </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">eat</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-keyword)">let</span><span style="color: var(--shiki-color-text)"> i </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">; i </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.chewAmount; i</span><span style="color: var(--shiki-token-keyword)">++</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">.chew</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">chew</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">getHumanEating</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Human</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-function)">.eat</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Bn,dt,yt,Wn,Gn,vt,ut,qn,Vn,ft,$n,Fn,Es,Yn,mt,zn,Kn,Jn,D,Un,Ts,Qn,Zn,gt,Xn,sr,xt,er,or,wt,tr,ar,nr,U,rr,Oe,lr,ir,Pe,pr,cr,hr,Ce,iu=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// Terser option: &#123; mangle: &#123; module: true &#125; &#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">H</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">constructor</span><span style="color: var(--shiki-color-text)">(chewAmount) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.chewAmount </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">eat</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-keyword)">let</span><span style="color: var(--shiki-color-text)"> i </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">; i </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.chewAmount; i</span><span style="color: var(--shiki-token-keyword)">++</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">.chew</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">chew</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">e</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">H</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-function)">.eat</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> &#123; H </span><span style="color: var(--shiki-token-keyword)">as</span><span style="color: var(--shiki-color-text)"> Human</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> e </span><span style="color: var(--shiki-token-keyword)">as</span><span style="color: var(--shiki-color-text)"> getHumanEating &#125;;</span></span></code></pre>`,kr,bt,_t,dr,yr,Et,vr,ur,Os,fr,Ie,mr,gr,xr,Tt,wr,br,Ae,pu=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">H</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">constructor</span><span style="color: var(--shiki-color-text)">(t) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.c </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">a</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-keyword)">let</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3</span><span style="color: var(--shiki-color-text)">; t </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.c; t</span><span style="color: var(--shiki-token-keyword)">++</span><span style="color: var(--shiki-color-text)">) </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">.s</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">s</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">e</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">H</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-function)">.a</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> &#123; H </span><span style="color: var(--shiki-token-keyword)">as</span><span style="color: var(--shiki-color-text)"> Human</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> e </span><span style="color: var(--shiki-token-keyword)">as</span><span style="color: var(--shiki-color-text)"> getHumanEating &#125;;</span></span></code></pre>`,_r,Ot,Pt,Er,Tr,Ct,Or,Pr,It,At,Cr,Ir,Dt,Ar,Dr,Q,Sr,De,Hr,jr,Se,Rr,Mr,Nr,B,Lr,He,Br,Wr,je,Gr,qr,Re,Vr,$r,Fr,St,Ht,Yr,zr,Z,Kr,jt,Jr,Ur,Ps,Qr,Zr,Qa,d,Rt,Cs,Xr,sl,Is,el,Mt,ol,tl,al,Me,cu=`<div class="filename">source.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">doSomething</span><span style="color: var(--shiki-color-text)">(&#123; paramA</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> paramB &#125;) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> &#123; sum</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> paramA </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> paramB &#125;;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Car</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">constructor</span><span style="color: var(--shiki-color-text)">(&#123; model &#125;) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.model </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> model;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">drive</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,nl,Ne,hu=`<div class="filename">source.min.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">doSomething</span><span style="color: var(--shiki-color-text)">(&#123; o: t</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> t: o &#125;) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> &#123; m</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> t </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> o &#125;;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Car</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">constructor</span><span style="color: var(--shiki-color-text)">(&#123; s: t &#125;) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.s </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> t;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">i</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,rl,X,ll,Le,il,pl,Be,cl,hl,kl,As,dl,Nt,yl,vl,ul,We,ku=`<div class="filename">source.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> &#123; doSomething &#125; </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;some-library&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-function)">doSomething</span><span style="color: var(--shiki-color-text)">(&#123; paramA</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> paramB</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-color-text)"> &#125;);</span></span></code></pre>`,fl,Ge,du=`<div class="filename">source.min.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> &#123; doSomething </span><span style="color: var(--shiki-token-keyword)">as</span><span style="color: var(--shiki-color-text)"> r &#125; </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;some-library&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-function)">r</span><span style="color: var(--shiki-color-text)">(&#123; m</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> o</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-color-text)"> &#125;);</span></span></code></pre>`,ml,W,gl,Lt,xl,wl,qe,bl,_l,Ve,El,Tl,Ol,ss,Pl,Bt,Cl,Il,Wt,Al,Dl,Sl,Ds,Hl,Gt,jl,Rl,Ml,qt,Nl,Ll,Ss,Vt,Bl,Wl,$t,Gl,ql,Ft,Vl,$l,$e,yu=`<div class="filename">source.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">CarA</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">drive</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">CarB</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">drive</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">car</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.random</span><span style="color: var(--shiki-color-text)">() </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">?</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">CarA</span><span style="color: var(--shiki-color-text)">() </span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">CarB</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">car</span><span style="color: var(--shiki-token-function)">.drive</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-function)">foo</span><span style="color: var(--shiki-color-text)">(&#123; drive</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;bar&#39;</span><span style="color: var(--shiki-color-text)"> &#125;);</span></span></code></pre>`,Fl,Fe,vu=`<div class="filename">source.min.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">s</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">s</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">e</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">s</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">a</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.random</span><span style="color: var(--shiki-color-text)">() </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">?</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">s</span><span style="color: var(--shiki-color-text)">() </span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">e</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">a</span><span style="color: var(--shiki-token-function)">.s</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">foo</span><span style="color: var(--shiki-color-text)">(&#123; s</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;bar&#39;</span><span style="color: var(--shiki-color-text)"> &#125;);</span></span></code></pre>`,Yl,Hs,zl,Ye,Kl,Jl,Ul,S,Ql,ze,Zl,Xl,Ke,si,ei,Je,oi,ti,Ue,ai,ni,Za,u,Yt,js,ri,li,Qe,zt,ii,pi,ci,Rs,hi,Ze,ki,di,yi,Kt,Jt,vi,ui,Ut,fi,mi,Ms,cs,gi,Xe,xi,wi,so,bi,_i,hs,Ei,eo,Ti,Oi,oo,Pi,Ci,es,Ii,Ns,Ai,Di,Ls,to,Si,Hi,ji,H,Ri,ao,Mi,Ni,Bs,Li,Bi,no,Wi,Gi,Qt,qi,Vi,Zt,Xt,$i,Fi,sa,Yi,zi,G,Ki,ro,Ji,Ui,Ws,Qi,Zi,lo,Xi,sp,Xa,I,ea,Gs,ep,op,os,tp,qs,ap,np,Vs,rp,lp,ip,io,oa,pp,cp,hp,ta,kp,dp,aa,yp,sn,$,na,$s,vp,up,ra,fp,mp,la,gp,en,v,ia,Fs,xp,wp,ts,bp,po,_p,Ep,co,Tp,Op,Pp,ho,uu=`<div class="filename">source.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Car</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">driveTo</span><span style="color: var(--shiki-color-text)">(&#123; destination &#125;) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.destination </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> destination;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">.calculateRoute</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">.startDriving</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">calculateRoute</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">.planRoute</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.currentLocation</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">.destination);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">startDriving</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">planRoute</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Cp,O,Ip,ko,Ap,Dp,yo,Sp,Hp,vo,jp,Rp,uo,Mp,Np,fo,Lp,Bp,mo,Wp,Gp,qp,pa,Vp,$p,ca,ha,Fp,Yp,go,fu=`<div class="filename">terser_options.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">terserOptions</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  mangle</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    properties</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      reserved</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&#39;driveTo&#39;</span><span style="color: var(--shiki-color-text)">]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;;</span></span></code></pre>`,zp,ka,da,Kp,Jp,xo,mu=`<div class="filename">terser_options.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">terserOptions</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  mangle</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    properties</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      regex</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-token-string-expression)"> /</span><span style="color: var(--shiki-token-keyword)">^</span><span style="color: var(--shiki-token-string-expression)">(destination</span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-token-string-expression)">calculateRoute</span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-token-string-expression)">currentLocation</span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-token-string-expression)">startDriving</span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-token-string-expression)">planRoute)</span><span style="color: var(--shiki-token-keyword)">$</span><span style="color: var(--shiki-token-string-expression)">/</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;;</span></span></code></pre>`,Up,as,Qp,Ys,Zp,Xp,wo,sc,ec,oc,bo,gu=`<div class="filename">source.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">class</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Car</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">driveTo</span><span style="color: var(--shiki-color-text)">(&#123; destination &#125;) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">._destination </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> destination;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">._calculateRoute</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">._startDriving</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">_calculateRoute</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-token-function)">._planRoute</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">._currentLocation</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">this</span><span style="color: var(--shiki-color-text)">._destination);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">_startDriving</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">_planRoute</span><span style="color: var(--shiki-color-text)">() &#123;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,tc,ya,ac,nc,_o,xu=`<div class="filename">terser_options.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">terserOptions</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  mangle</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    properties</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      regex</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-token-string-expression)"> /</span><span style="color: var(--shiki-token-keyword)">^</span><span style="color: var(--shiki-token-string-expression)">_/</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;;</span></span></code></pre>`,on,j,va,zs,rc,lc,ns,ic,Eo,pc,cc,To,hc,kc,dc,Oo,Po,yc,vc,uc,Co,wu=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;fs&#39;</span><span style="color: var(--shiki-color-text)">).promises;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">terser</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;terser&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">nameCache</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> &#123;&#125;;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">terser</span><span style="color: var(--shiki-token-function)">.minify</span><span style="color: var(--shiki-color-text)">(code</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  nameCache</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// serialise and store &#96;nameCache&#96;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.writeFile</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;nameCache.json&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">JSON</span><span style="color: var(--shiki-token-function)">.stringify</span><span style="color: var(--shiki-color-text)">(nameCache)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;utf-8&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// deserialise and seed Terser</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">nameCache</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">JSON</span><span style="color: var(--shiki-token-function)">.parse</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.readFile</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;nameCache.json&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;utf-8&#39;</span><span style="color: var(--shiki-color-text)">));</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">terser</span><span style="color: var(--shiki-token-function)">.minify</span><span style="color: var(--shiki-color-text)">(code</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  nameCache</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;);</span></span></code></pre>`,tn,w,ua,Ks,fc,mc,fa,gc,xc,ma,wc,bc,ga,_c,Ec,xa,Tc,Oc,wa,Pc,Cc,Js,Ic,Us,Ac,Dc,Sc,ba,Hc,jc,_a,Rc,Mc,Io,bu=`<div class="filename">babel.config.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">nameMapping</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  driveTo</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;d&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment)">// rename all &#96;.driveTo&#96; to &#96;.d&#96;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  plugins</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    [</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-string-expression)">&#39;babel-plugin-transform-rename-properties&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        rename</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> nameMapping</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    ]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  ]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;;</span></span></code></pre>`,an,Ao,Ea,Qs,Nc,nn,P,Ta,Zs,Lc,Bc,q,Wc,Do,Gc,qc,Xs,Vc,$c,se,Fc,Yc,zc,ee,Kc,oe,Jc,Uc,Qc,So,_u=`<div class="filename">webpack.config.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">TerserPlugin</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;terser-webpack-plugin&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">module</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">exports</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  optimization</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    minimize</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    minimizer</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">TerserPlugin</span><span style="color: var(--shiki-color-text)">(&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        terserOptions</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">          mangle</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">            properties</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">              regex</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-token-string-expression)"> /</span><span style="color: var(--shiki-token-keyword)">^</span><span style="color: var(--shiki-token-string-expression)">_/</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">            &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">          &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &#125;)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    ]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;;</span></span></code></pre>`,Zc,Ho,Xc,te,sh,eh,jo,Eu=`<div class="filename">rollup.config.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> &#123; terser &#125; </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;rollup-plugin-terser&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-token-function)">rollup</span><span style="color: var(--shiki-color-text)">(&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  plugins</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">terser</span><span style="color: var(--shiki-color-text)">(&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      mangle</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        properties</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">          regex</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-token-string-expression)"> /</span><span style="color: var(--shiki-token-keyword)">^</span><span style="color: var(--shiki-token-string-expression)">_/</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;)</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  ]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;);</span></span></code></pre>`,rn,b,Oa,ae,oh,th,Pa,rs,ah,ne,nh,rh,re,lh,ih,ph,Ca,ch,hh,Ia,kh,dh,le,Aa,ie,Da,yh,vh,Sa,uh,fh,pe,ce,Ha,mh,gh,ja,xh,wh,he,Ra,bh,_h,Ma,Eh,Th,ke,Oh,Ro,Ph,Ch,Ih,V,Na,Mo,Ah,Dh,No,Lo,Sh,Hh,jh,ks,Bo,Rh,Mh,Wo,Nh,Lh,Bh,ds,Go,Wh,Gh,qo,qh,Vh,$h,ls,Fh,Vo,Yh,zh,de,$o,Kh,Jh,Uh,La,ys,Qh,Fo,Zh,Xh,ye,sk,ek,C,ok,ve,tk,ak,Yo,nk,rk,zo,lk,ik,Ko,pk,ck,ue,hk,kk,ln,F,Ba,fe,dk,yk,Wa,vk,uk,Ga,fk,pn,vs,qa,me,mk,gk,is,Va,ge,xk,wk,$a,xe,bk,_k,Fa,we,Ek,cn;return g=new Qu({props:{data:[{link:"what-is-mangling-property",title:"What is Mangling Property",nested:[{link:"why-is-property-mangling-considered-unsafe",title:"Why is property mangling considered unsafe?",nested:[{link:"set-or-get-property-from-the-global-scope",title:"Set or get property from the global scope"}]},{link:"mangling-for-rollup-webpack-bundled-code",title:"Mangling for rollup / webpack bundled code"}]},{link:"how-to-mangle-property-responsibly-and-safely",title:"How to mangle property responsibly and safely",nested:[{link:"private-property",title:"Private property"},{link:"consistent-property-mangling-across-subsequent-minifications",title:"Consistent property mangling across subsequent minifications"},{link:"consistent-property-mangling-across-different-builds",title:"Consistent property mangling across different builds"}]},{link:"misc",title:"Misc",nested:[{link:"webpack-and-rollup",title:"Webpack and Rollup"},{link:"a-curious-case-of-preact",title:"A curious case of Preact"}]},{link:"closing-note",title:"Closing Note"},{link:"further-reading",title:"Further Reading"}]}}),{c(){su(g.$$.fragment),N=i(),k=o("section"),J=o("h2"),x=o("a"),L=n("What is Mangling Property"),_e=i(),ct=o("p"),An=n("Assume you have the following JavaScript code:"),Dn=i(),Ee=o("div"),Sn=i(),ht=o("p"),kt=o("strong"),Hn=n("Original: 268 Bytes"),jn=i(),bs=o("p"),Rn=n("If you minify this with the default options with "),_s=o("a"),Mn=n("Terser"),Nn=n(", you probably get something like:"),Ln=i(),Te=o("div"),Bn=i(),dt=o("p"),yt=o("strong"),Wn=n("207 Bytes (77.2%)"),Gn=i(),vt=o("p"),ut=o("em"),qn=n("(Usually Terser would compress whitespace too, but for ease of reading, allow me to keep the whitespace)"),Vn=i(),ft=o("p"),$n=n("Your code still behaves the same, even though the variable name has changed."),Fn=i(),Es=o("p"),Yn=n("This behavior of renaming variable name to compress JavaScript code is called "),mt=o("strong"),zn=n("Mangle"),Kn=n("."),Jn=i(),D=o("p"),Un=n("Terser has several "),Ts=o("a"),Qn=n("Mangle options"),Zn=n(", that allows you to control whether or not to mangle "),gt=o("strong"),Xn=n("class name"),sr=n(", "),xt=o("strong"),er=n("function name"),or=n(", "),wt=o("strong"),tr=n("property name"),ar=n(", or specify any reserved keywords to not mangle, or should it mangle global variable."),nr=i(),U=o("p"),rr=n("If the above code is written within a ES Module, then probably we wont refer the class "),Oe=o("code"),lr=n("Human"),ir=n(" globally, rather refer it through "),Pe=o("code"),pr=n("import"),cr=n(", then the name of the class probably does not matter:"),hr=i(),Ce=o("div"),kr=i(),bt=o("p"),_t=o("strong"),dr=n("186 Bytes (69.4%)"),yr=i(),Et=o("p"),vr=n("But can we do better?"),ur=i(),Os=o("p"),fr=n("Well, if you look at the code, the property named "),Ie=o("code"),mr=n("chewAmount"),gr=n(" takes up 20 characters, which is almost 10% of the code."),xr=i(),Tt=o("p"),wr=n("If we rename all the property name to 1 character variable, then we would end up with a much smaller code:"),br=i(),Ae=o("div"),_r=i(),Ot=o("p"),Pt=o("strong"),Er=n("107 Bytes (39.9%)"),Tr=i(),Ct=o("p"),Or=n("If it ends up with a much smaller bundle, should we rename our property name and method name to a shorter name? And why didn't Terser do this by default?"),Pr=i(),It=o("p"),At=o("strong"),Cr=n("Should we rename our property name and method name to something short?"),Ir=i(),Dt=o("p"),Ar=n("No! That would hurt the readability of the code. \u{1F625}"),Dr=i(),Q=o("p"),Sr=n("Also, what if someone else imports the class "),De=o("code"),Hr=n("Human"),jr=n(" and wants to use the property "),Se=o("code"),Rr=n("chewAmount"),Mr=n("?"),Nr=i(),B=o("p"),Lr=n("He would have to rename it to "),He=o("code"),Br=n("human.c"),Wr=n(" instead of "),je=o("code"),Gr=n("human.chewAmount"),qr=n(" and probably scratching his head everytime he reads his code, wondering what does "),Re=o("code"),Vr=n("human.c"),$r=n(" mean?"),Fr=i(),St=o("p"),Ht=o("strong"),Yr=n("Why Terser didn't mangle property name by default?"),zr=i(),Z=o("p"),Kr=n("Because property mangling requires certain assumption on your code, therefore it is marked as "),jt=o("strong"),Jr=n("very unsafe"),Ur=n(" in the "),Ps=o("a"),Qr=n("Terser documentation"),Zr=n(" to turn it on entirely."),Qa=i(),d=o("section"),Rt=o("h3"),Cs=o("a"),Xr=n("Why is property mangling considered unsafe?"),sl=i(),Is=o("p"),el=n("If you are a library author, or you wrote a module that will be used by others, and if you mangle the property of the library / module "),Mt=o("strong"),ol=n("alone"),tl=n(", all your method name, object property name will be mangled, and therefore all your APIs will be broken!"),al=i(),Me=o("div"),nl=i(),Ne=o("div"),rl=i(),X=o("p"),ll=n("Your user that calls "),Le=o("code"),il=n("doSomething({ paramA: 1, paramB: 2 })"),pl=n(" or "),Be=o("code"),cl=n("car.drive()"),hl=n(" will not work with the minified code!"),kl=i(),As=o("p"),dl=n("The same ways goes if you are importing some other library or module, and you mangle your code "),Nt=o("strong"),yl=n("alone"),vl=n(", your code will be broken too!"),ul=i(),We=o("div"),fl=i(),Ge=o("div"),ml=i(),W=o("p"),gl=n("I ran both the code above through the same Terser configuration, which means it also serves as a good example that the property name Terser mangles into is not consistent. It is computed and assigned at "),Lt=o("em"),xl=n('"random"'),wl=n(". You should not expect that "),qe=o("code"),bl=n("paramA"),_l=n(" always get mangled into "),Ve=o("code"),El=n("m"),Tl=n(" everytime!"),Ol=i(),ss=o("p"),Pl=n("In summary, property mangling will break your code if you mangle your code alone. It will break at the boundary of your code, where you exports your functions or class that relies on "),Bt=o("strong"),Cl=n("public property or method"),Il=n("; or where you import functions or class which you "),Wt=o("strong"),Al=n("pass in an object or calls a public method"),Dl=n("."),Sl=i(),Ds=o("p"),Hl=n("If you "),Gt=o("strong"),jl=n("do neither of those"),Rl=n(", you are actually safe to mangle all properties by default."),Ml=i(),qt=o("p"),Nl=n("If you have a standalone script that:"),Ll=i(),Ss=o("ul"),Vt=o("li"),Bl=n("does not import nor export anything"),Wl=i(),$t=o("li"),Gl=n("does not set or read any property from the global scope (*)"),ql=i(),Ft=o("p"),Vl=n("Then you are safe to mangle all your properties. Property or method name across the file will be mangled consistently:"),$l=i(),$e=o("div"),Fl=i(),Fe=o("div"),Yl=i(),Hs=o("p"),zl=n("If you use the property or method named "),Ye=o("code"),Kl=n('"drive"'),Jl=n(", it will be mangled to the same name throughout the file."),Ul=i(),S=o("p"),Ql=n("In the example above, the method "),ze=o("code"),Zl=n("drive"),Xl=n(" in both classes and the property "),Ke=o("code"),si=n("drive"),ei=n(" in "),Je=o("code"),oi=n("foo({ drive: 'bar' })"),ti=n(" means different things, but they are mangled into the same name, "),Ue=o("code"),ai=n("s"),ni=n("."),Za=i(),u=o("section"),Yt=o("h4"),js=o("a"),ri=n("Set or get property from the global scope"),li=i(),Qe=o("p"),zt=o("strong"),ii=n("Rule of thumb:"),pi=n(" If you set or get property from global scope, property mangling blindly will break your code."),ci=i(),Rs=o("p"),hi=n("Of course, there's caveat of when this might be safe, protected by "),Ze=o("code"),ki=n("default: false"),di=n(" options that you can turn on at your own risk. \u{1F648}"),yi=i(),Kt=o("p"),Jt=o("strong"),vi=n("Accessing DOM properties or method from built-in Objects"),ui=i(),Ut=o("p"),fi=n("Terser keeps a list of property names that exempt from mangling, such as:"),mi=i(),Ms=o("ul"),cs=o("li"),gi=n("DOM properties: "),Xe=o("code"),xi=n("window.location"),wi=n(", "),so=o("code"),bi=n("document.createElement"),_i=i(),hs=o("li"),Ei=n("Methods of built-in objects: "),eo=o("code"),Ti=n("Array.from"),Oi=n(", "),oo=o("code"),Pi=n("Object.defineProperty"),Ci=i(),es=o("p"),Ii=n("The list can be found in "),Ns=o("a"),Ai=n("domprops.js"),Di=n(" and "),Ls=o("a"),to=o("code"),Si=n("find_builtins"),Hi=n("."),ji=i(),H=o("p"),Ri=n("This behavior is protected by the "),ao=o("code"),Mi=n("builtins"),Ni=n(" option in the "),Bs=o("a"),Li=n("Mangle properties option"),Bi=n(", set it to "),no=o("code"),Wi=n("true"),Gi=n(" to mangle builtin properties as well. "),Qt=o("strong"),qi=n("Override at your own risk"),Vi=i(),Zt=o("p"),Xt=o("strong"),$i=n("Accessing property or method of a undeclared variable"),Fi=i(),sa=o("p"),Yi=n("Variable that is not declared within the code, can be considered as global variable that is defined outside. Their properties or methods will not be mangled too."),zi=i(),G=o("p"),Ki=n("You can override this behavior via the "),ro=o("code"),Ji=n("undeclared"),Ui=n(" option in the "),Ws=o("a"),Qi=n("Mangle properties option"),Zi=n(", set it to "),lo=o("code"),Xi=n("true"),sp=n(" to mangle them too."),Xa=i(),I=o("section"),ea=o("h3"),Gs=o("a"),ep=n("Mangling for rollup / webpack bundled code"),op=i(),os=o("p"),tp=n("If you add "),qs=o("a"),ap=n("terser-webpack-plugin"),np=n(" or "),Vs=o("a"),rp=n("rollup-plugin-terser"),lp=n(" to your bundling step, are you safe to mangle properties?"),ip=i(),io=o("p"),oa=o("strong"),pp=n("Rule of thumb:"),cp=n(" If your bundler emits more than 1 file, No."),hp=i(),ta=o("p"),kp=n("This means any bundling set up that involves code-splitting."),dp=i(),aa=o("p"),yp=n("It is not safe because, terser is run after the code is split into separate files. Thus, the property or method names across files will not be mangled consistently."),sn=i(),$=o("section"),na=o("h2"),$s=o("a"),vp=n("How to mangle property responsibly and safely"),up=i(),ra=o("p"),fp=n("With so much restrictions in mind, you may wonder how can I utilise property mangling safely and responsibly?"),mp=i(),la=o("p"),gp=n("Property mangling is not a all-or-nothing option in Terser, there's a few options you can play around to do property mangling safely."),en=i(),v=o("section"),ia=o("h3"),Fs=o("a"),xp=n("Private property"),wp=i(),ts=o("p"),bp=n("In the following example, the only publicly documented method in the class "),po=o("code"),_p=n("Car"),Ep=n(" is "),co=o("code"),Tp=n("driveTo()"),Op=n(", so it is okay to mangle other private methods."),Pp=i(),ho=o("div"),Cp=i(),O=o("p"),Ip=n("We want to mangle "),ko=o("code"),Ap=n("this.currentLocation"),Dp=n(", "),yo=o("code"),Sp=n("this.destination"),Hp=n(", "),vo=o("code"),jp=n("this.calculateRoute"),Rp=n(", "),uo=o("code"),Mp=n("this.startDriving"),Np=n(", "),fo=o("code"),Lp=n("this.planRoute"),Bp=n(", but give "),mo=o("code"),Wp=n("this.driveTo"),Gp=n(" untouched."),qp=i(),pa=o("p"),Vp=n("You can choose to either"),$p=i(),ca=o("p"),ha=o("strong"),Fp=n("1. mangle all methods and properties, except a reserved list of names:"),Yp=i(),go=o("div"),zp=i(),ka=o("p"),da=o("strong"),Kp=n("2. specify a list of names to be mangled with a regex:"),Jp=i(),xo=o("div"),Up=i(),as=o("p"),Qp=n("Here, a "),Ys=o("a"),Zp=n("unofficial JavaScript naming convention"),Xp=n(" for private method / properties come in handy. Often times, when a variable name starts with "),wo=o("code"),sc=n("_"),ec=n(", it is intended to be private."),oc=i(),bo=o("div"),tc=i(),ya=o("p"),ac=n("This way, it makes our regex much easier:"),nc=i(),_o=o("div"),on=i(),j=o("section"),va=o("h3"),zs=o("a"),rc=n("Consistent property mangling across subsequent minifications"),lc=i(),ns=o("p"),ic=n("If you want "),Eo=o("code"),pc=n("_calculateRoute"),cc=n(" to always mangled to the same name no matter how much you have changed the input file, the "),To=o("code"),hc=n("nameCache"),kc=n(" may come in handy."),dc=i(),Oo=o("p"),Po=o("code"),yc=n("nameCache"),vc=n(" is the internal state of Terser, that can be serialised and deserialised to seed the Terser mangling state."),uc=i(),Co=o("div"),tn=i(),w=o("section"),ua=o("h3"),Ks=o("a"),fc=n("Consistent property mangling across different builds"),mc=i(),fa=o("p"),gc=n("What if you have multiple independent projects, and you want to make sure property mangling work across these projects?"),xc=i(),ma=o("p"),wc=n("If the variables you mangled are private properties or methods, then, you don't have an issue with this. Different projects should be nicely encapsulated, and should not depends on internal properties or methods."),bc=i(),ga=o("p"),_c=n("So, what I am describing now is for public API methods and properties."),Ec=i(),xa=o("p"),Tc=n("What if you want to mangle them as well, how do you make sure that they wont break the user after mangling the public methods or properties?"),Oc=i(),wa=o("p"),Pc=n("Since it involves public methods and properties, additional steps in setting up is understandable."),Cc=i(),Js=o("p"),Ic=n("In that case, I would recommend maintain a name mapping of how the properties should mangle into, and use "),Us=o("a"),Ac=n("babel-plugin-transform-rename-properties"),Dc=n(" to rename them."),Sc=i(),ba=o("p"),Hc=n("The name mapping is a manually curated list of names of your public properties and methods, and only need to be updated whenever there's a change in your public API."),jc=i(),_a=o("p"),Rc=n("Think of it as part of your documentation, which should be updated whenever you change your public API."),Mc=i(),Io=o("div"),an=i(),Ao=o("section"),Ea=o("h2"),Qs=o("a"),Nc=n("Misc"),nn=i(),P=o("section"),Ta=o("h3"),Zs=o("a"),Lc=n("Webpack and Rollup"),Bc=i(),q=o("p"),Wc=n("Throughout the article, we mentioned Terser and "),Do=o("code"),Gc=n("terserOptions"),qc=n(", and didnt really go into how you would use it for projects bundled with "),Xs=o("a"),Vc=n("webpack"),$c=n(" or "),se=o("a"),Fc=n("rollup"),Yc=n("."),zc=i(),ee=o("p"),Kc=n("For webpack user, you can use "),oe=o("a"),Jc=n("terser-webpack-plugin"),Uc=n("."),Qc=i(),So=o("div"),Zc=i(),Ho=o("p"),Xc=n("For rollup user, you can use "),te=o("a"),sh=n("rollup-plugin-terser"),eh=i(),jo=o("div"),rn=i(),b=o("section"),Oa=o("h3"),ae=o("a"),oh=n("A curious case of Preact"),th=i(),Pa=o("blockquote"),rs=o("p"),ah=n("The rabbit hole of how to mangle property names starts with investigating the "),ne=o("a"),nh=n("Preact"),rh=i(),re=o("a"),lh=n("Suspense bug"),ih=n(", but that would be a story for another time."),ph=i(),Ca=o("p"),ch=n("Preact is a fast 3kB React alternative, with the same modern API."),hh=i(),Ia=o("p"),kh=n("Property mangling contributed an important part to keep the library slim."),dh=i(),le=o("table"),Aa=o("thead"),ie=o("tr"),Da=o("th"),yh=n("Without mangling"),vh=i(),Sa=o("th"),uh=n("With mangling"),fh=i(),pe=o("tbody"),ce=o("tr"),Ha=o("td"),mh=n("10.7 KB minified"),gh=i(),ja=o("td"),xh=n("9.7 Kb minified (reduced ~10%)"),wh=i(),he=o("tr"),Ra=o("td"),bh=n("4.2 KB minified + gzipped"),_h=i(),Ma=o("td"),Eh=n("3.9 KB minified + gzipped (reduced ~5%)"),Th=i(),ke=o("p"),Oh=n("There's several different builds for "),Ro=o("code"),Ph=n("preact"),Ch=n(":"),Ih=i(),V=o("ul"),Na=o("li"),Mo=o("code"),Ah=n("preact/core"),Dh=i(),No=o("li"),Lo=o("code"),Sh=n("preact/compat"),Hh=n(" - a compat layer on top of preact to provide all React API"),jh=i(),ks=o("li"),Bo=o("code"),Rh=n("preact/debug"),Mh=n(" - a layer on top of "),Wo=o("code"),Nh=n("preact/core"),Lh=n(" that provides a better debugging experience"),Bh=i(),ds=o("li"),Go=o("code"),Wh=n("preact/devtools"),Gh=n(" - the bridge between "),qo=o("code"),qh=n("preact/core"),Vh=n(" and the devtools extension."),$h=i(),ls=o("p"),Fh=n("To have a consistent mangle properties across different builds, "),Vo=o("code"),Yh=n("babel-plugin-transform-rename-properties"),zh=n(" is used, and the name mapping is stored at "),de=o("a"),$o=o("code"),Kh=n("mangle.json"),Jh=n("."),Uh=i(),La=o("blockquote"),ys=o("p"),Qh=n("Check out this Pull Request that adds "),Fo=o("code"),Zh=n("babel-plugin-transform-rename-properties"),Xh=n(" into Preact: "),ye=o("a"),sk=n("https://github.com/preactjs/preact/pull/2548"),ek=i(),C=o("p"),ok=n("For mangling private properties, the bundling process of Preact is abstracted in "),ve=o("a"),tk=n("microbundle"),ak=n(", which reads the mangle options from "),Yo=o("code"),nk=n("mangle.json"),rk=n(" or the "),zo=o("code"),lk=n("mangle"),ik=n(" property from "),Ko=o("code"),pk=n("package.json"),ck=n(". See "),ue=o("a"),hk=n("Mangling Properties for microbundle"),kk=n("."),ln=i(),F=o("section"),Ba=o("h2"),fe=o("a"),dk=n("Closing Note"),yk=i(),Wa=o("p"),vk=n("We've covered what is property mangling and all the caveats come along with it."),uk=i(),Ga=o("p"),fk=n("With the full grasp of the caveats, we looked at various tactics that we can use to utilise property mangling to reduce our minified code output."),pn=i(),vs=o("section"),qa=o("h2"),me=o("a"),mk=n("Further Reading"),gk=i(),is=o("ul"),Va=o("li"),ge=o("a"),xk=n("Terser Mangle options"),wk=i(),$a=o("li"),xe=o("a"),bk=n("microbundle Mangling Properties"),_k=i(),Fa=o("li"),we=o("a"),Ek=n("babel-plugin-transform-rename-properties"),this.h()},l(c){eu(g.$$.fragment,c),N=p(c),k=t(c,"SECTION",{});var h=a(k);J=t(h,"H2",{});var Dk=a(J);x=t(Dk,"A",{href:!0,id:!0});var Sk=a(x);L=r(Sk,"What is Mangling Property"),Sk.forEach(e),Dk.forEach(e),_e=p(h),ct=t(h,"P",{});var Hk=a(ct);An=r(Hk,"Assume you have the following JavaScript code:"),Hk.forEach(e),Dn=p(h),Ee=t(h,"DIV",{class:!0});var Tu=a(Ee);Tu.forEach(e),Sn=p(h),ht=t(h,"P",{});var jk=a(ht);kt=t(jk,"STRONG",{});var Rk=a(kt);Hn=r(Rk,"Original: 268 Bytes"),Rk.forEach(e),jk.forEach(e),jn=p(h),bs=t(h,"P",{});var hn=a(bs);Rn=r(hn,"If you minify this with the default options with "),_s=t(hn,"A",{href:!0,rel:!0});var Mk=a(_s);Mn=r(Mk,"Terser"),Mk.forEach(e),Nn=r(hn,", you probably get something like:"),hn.forEach(e),Ln=p(h),Te=t(h,"DIV",{class:!0});var Ou=a(Te);Ou.forEach(e),Bn=p(h),dt=t(h,"P",{});var Nk=a(dt);yt=t(Nk,"STRONG",{});var Lk=a(yt);Wn=r(Lk,"207 Bytes (77.2%)"),Lk.forEach(e),Nk.forEach(e),Gn=p(h),vt=t(h,"P",{});var Bk=a(vt);ut=t(Bk,"EM",{});var Wk=a(ut);qn=r(Wk,"(Usually Terser would compress whitespace too, but for ease of reading, allow me to keep the whitespace)"),Wk.forEach(e),Bk.forEach(e),Vn=p(h),ft=t(h,"P",{});var Gk=a(ft);$n=r(Gk,"Your code still behaves the same, even though the variable name has changed."),Gk.forEach(e),Fn=p(h),Es=t(h,"P",{});var kn=a(Es);Yn=r(kn,"This behavior of renaming variable name to compress JavaScript code is called "),mt=t(kn,"STRONG",{});var qk=a(mt);zn=r(qk,"Mangle"),qk.forEach(e),Kn=r(kn,"."),kn.forEach(e),Jn=p(h),D=t(h,"P",{});var Y=a(D);Un=r(Y,"Terser has several "),Ts=t(Y,"A",{href:!0,rel:!0});var Vk=a(Ts);Qn=r(Vk,"Mangle options"),Vk.forEach(e),Zn=r(Y,", that allows you to control whether or not to mangle "),gt=t(Y,"STRONG",{});var $k=a(gt);Xn=r($k,"class name"),$k.forEach(e),sr=r(Y,", "),xt=t(Y,"STRONG",{});var Fk=a(xt);er=r(Fk,"function name"),Fk.forEach(e),or=r(Y,", "),wt=t(Y,"STRONG",{});var Yk=a(wt);tr=r(Yk,"property name"),Yk.forEach(e),ar=r(Y,", or specify any reserved keywords to not mangle, or should it mangle global variable."),Y.forEach(e),nr=p(h),U=t(h,"P",{});var Jo=a(U);rr=r(Jo,"If the above code is written within a ES Module, then probably we wont refer the class "),Oe=t(Jo,"CODE",{class:!0});var zk=a(Oe);lr=r(zk,"Human"),zk.forEach(e),ir=r(Jo," globally, rather refer it through "),Pe=t(Jo,"CODE",{class:!0});var Kk=a(Pe);pr=r(Kk,"import"),Kk.forEach(e),cr=r(Jo,", then the name of the class probably does not matter:"),Jo.forEach(e),hr=p(h),Ce=t(h,"DIV",{class:!0});var Pu=a(Ce);Pu.forEach(e),kr=p(h),bt=t(h,"P",{});var Jk=a(bt);_t=t(Jk,"STRONG",{});var Uk=a(_t);dr=r(Uk,"186 Bytes (69.4%)"),Uk.forEach(e),Jk.forEach(e),yr=p(h),Et=t(h,"P",{});var Qk=a(Et);vr=r(Qk,"But can we do better?"),Qk.forEach(e),ur=p(h),Os=t(h,"P",{});var dn=a(Os);fr=r(dn,"Well, if you look at the code, the property named "),Ie=t(dn,"CODE",{class:!0});var Zk=a(Ie);mr=r(Zk,"chewAmount"),Zk.forEach(e),gr=r(dn," takes up 20 characters, which is almost 10% of the code."),dn.forEach(e),xr=p(h),Tt=t(h,"P",{});var Xk=a(Tt);wr=r(Xk,"If we rename all the property name to 1 character variable, then we would end up with a much smaller code:"),Xk.forEach(e),br=p(h),Ae=t(h,"DIV",{class:!0});var Cu=a(Ae);Cu.forEach(e),_r=p(h),Ot=t(h,"P",{});var sd=a(Ot);Pt=t(sd,"STRONG",{});var ed=a(Pt);Er=r(ed,"107 Bytes (39.9%)"),ed.forEach(e),sd.forEach(e),Tr=p(h),Ct=t(h,"P",{});var od=a(Ct);Or=r(od,"If it ends up with a much smaller bundle, should we rename our property name and method name to a shorter name? And why didn't Terser do this by default?"),od.forEach(e),Pr=p(h),It=t(h,"P",{});var td=a(It);At=t(td,"STRONG",{});var ad=a(At);Cr=r(ad,"Should we rename our property name and method name to something short?"),ad.forEach(e),td.forEach(e),Ir=p(h),Dt=t(h,"P",{});var nd=a(Dt);Ar=r(nd,"No! That would hurt the readability of the code. \u{1F625}"),nd.forEach(e),Dr=p(h),Q=t(h,"P",{});var Uo=a(Q);Sr=r(Uo,"Also, what if someone else imports the class "),De=t(Uo,"CODE",{class:!0});var rd=a(De);Hr=r(rd,"Human"),rd.forEach(e),jr=r(Uo," and wants to use the property "),Se=t(Uo,"CODE",{class:!0});var ld=a(Se);Rr=r(ld,"chewAmount"),ld.forEach(e),Mr=r(Uo,"?"),Uo.forEach(e),Nr=p(h),B=t(h,"P",{});var us=a(B);Lr=r(us,"He would have to rename it to "),He=t(us,"CODE",{class:!0});var id=a(He);Br=r(id,"human.c"),id.forEach(e),Wr=r(us," instead of "),je=t(us,"CODE",{class:!0});var pd=a(je);Gr=r(pd,"human.chewAmount"),pd.forEach(e),qr=r(us," and probably scratching his head everytime he reads his code, wondering what does "),Re=t(us,"CODE",{class:!0});var cd=a(Re);Vr=r(cd,"human.c"),cd.forEach(e),$r=r(us," mean?"),us.forEach(e),Fr=p(h),St=t(h,"P",{});var hd=a(St);Ht=t(hd,"STRONG",{});var kd=a(Ht);Yr=r(kd,"Why Terser didn't mangle property name by default?"),kd.forEach(e),hd.forEach(e),zr=p(h),Z=t(h,"P",{});var Qo=a(Z);Kr=r(Qo,"Because property mangling requires certain assumption on your code, therefore it is marked as "),jt=t(Qo,"STRONG",{});var dd=a(jt);Jr=r(dd,"very unsafe"),dd.forEach(e),Ur=r(Qo," in the "),Ps=t(Qo,"A",{href:!0,rel:!0});var yd=a(Ps);Qr=r(yd,"Terser documentation"),yd.forEach(e),Zr=r(Qo," to turn it on entirely."),Qo.forEach(e),h.forEach(e),Qa=p(c),d=t(c,"SECTION",{});var y=a(d);Rt=t(y,"H3",{});var vd=a(Rt);Cs=t(vd,"A",{href:!0,id:!0});var ud=a(Cs);Xr=r(ud,"Why is property mangling considered unsafe?"),ud.forEach(e),vd.forEach(e),sl=p(y),Is=t(y,"P",{});var yn=a(Is);el=r(yn,"If you are a library author, or you wrote a module that will be used by others, and if you mangle the property of the library / module "),Mt=t(yn,"STRONG",{});var fd=a(Mt);ol=r(fd,"alone"),fd.forEach(e),tl=r(yn,", all your method name, object property name will be mangled, and therefore all your APIs will be broken!"),yn.forEach(e),al=p(y),Me=t(y,"DIV",{class:!0});var Iu=a(Me);Iu.forEach(e),nl=p(y),Ne=t(y,"DIV",{class:!0});var Au=a(Ne);Au.forEach(e),rl=p(y),X=t(y,"P",{});var Zo=a(X);ll=r(Zo,"Your user that calls "),Le=t(Zo,"CODE",{class:!0});var md=a(Le);il=r(md,"doSomething({ paramA: 1, paramB: 2 })"),md.forEach(e),pl=r(Zo," or "),Be=t(Zo,"CODE",{class:!0});var gd=a(Be);cl=r(gd,"car.drive()"),gd.forEach(e),hl=r(Zo," will not work with the minified code!"),Zo.forEach(e),kl=p(y),As=t(y,"P",{});var vn=a(As);dl=r(vn,"The same ways goes if you are importing some other library or module, and you mangle your code "),Nt=t(vn,"STRONG",{});var xd=a(Nt);yl=r(xd,"alone"),xd.forEach(e),vl=r(vn,", your code will be broken too!"),vn.forEach(e),ul=p(y),We=t(y,"DIV",{class:!0});var Du=a(We);Du.forEach(e),fl=p(y),Ge=t(y,"DIV",{class:!0});var Su=a(Ge);Su.forEach(e),ml=p(y),W=t(y,"P",{});var fs=a(W);gl=r(fs,"I ran both the code above through the same Terser configuration, which means it also serves as a good example that the property name Terser mangles into is not consistent. It is computed and assigned at "),Lt=t(fs,"EM",{});var wd=a(Lt);xl=r(wd,'"random"'),wd.forEach(e),wl=r(fs,". You should not expect that "),qe=t(fs,"CODE",{class:!0});var bd=a(qe);bl=r(bd,"paramA"),bd.forEach(e),_l=r(fs," always get mangled into "),Ve=t(fs,"CODE",{class:!0});var _d=a(Ve);El=r(_d,"m"),_d.forEach(e),Tl=r(fs," everytime!"),fs.forEach(e),Ol=p(y),ss=t(y,"P",{});var Xo=a(ss);Pl=r(Xo,"In summary, property mangling will break your code if you mangle your code alone. It will break at the boundary of your code, where you exports your functions or class that relies on "),Bt=t(Xo,"STRONG",{});var Ed=a(Bt);Cl=r(Ed,"public property or method"),Ed.forEach(e),Il=r(Xo,"; or where you import functions or class which you "),Wt=t(Xo,"STRONG",{});var Td=a(Wt);Al=r(Td,"pass in an object or calls a public method"),Td.forEach(e),Dl=r(Xo,"."),Xo.forEach(e),Sl=p(y),Ds=t(y,"P",{});var un=a(Ds);Hl=r(un,"If you "),Gt=t(un,"STRONG",{});var Od=a(Gt);jl=r(Od,"do neither of those"),Od.forEach(e),Rl=r(un,", you are actually safe to mangle all properties by default."),un.forEach(e),Ml=p(y),qt=t(y,"P",{});var Pd=a(qt);Nl=r(Pd,"If you have a standalone script that:"),Pd.forEach(e),Ll=p(y),Ss=t(y,"UL",{});var fn=a(Ss);Vt=t(fn,"LI",{});var Cd=a(Vt);Bl=r(Cd,"does not import nor export anything"),Cd.forEach(e),Wl=p(fn),$t=t(fn,"LI",{});var Id=a($t);Gl=r(Id,"does not set or read any property from the global scope (*)"),Id.forEach(e),fn.forEach(e),ql=p(y),Ft=t(y,"P",{});var Ad=a(Ft);Vl=r(Ad,"Then you are safe to mangle all your properties. Property or method name across the file will be mangled consistently:"),Ad.forEach(e),$l=p(y),$e=t(y,"DIV",{class:!0});var Hu=a($e);Hu.forEach(e),Fl=p(y),Fe=t(y,"DIV",{class:!0});var ju=a(Fe);ju.forEach(e),Yl=p(y),Hs=t(y,"P",{});var mn=a(Hs);zl=r(mn,"If you use the property or method named "),Ye=t(mn,"CODE",{class:!0});var Dd=a(Ye);Kl=r(Dd,'"drive"'),Dd.forEach(e),Jl=r(mn,", it will be mangled to the same name throughout the file."),mn.forEach(e),Ul=p(y),S=t(y,"P",{});var z=a(S);Ql=r(z,"In the example above, the method "),ze=t(z,"CODE",{class:!0});var Sd=a(ze);Zl=r(Sd,"drive"),Sd.forEach(e),Xl=r(z," in both classes and the property "),Ke=t(z,"CODE",{class:!0});var Hd=a(Ke);si=r(Hd,"drive"),Hd.forEach(e),ei=r(z," in "),Je=t(z,"CODE",{class:!0});var jd=a(Je);oi=r(jd,"foo({ drive: 'bar' })"),jd.forEach(e),ti=r(z," means different things, but they are mangled into the same name, "),Ue=t(z,"CODE",{class:!0});var Rd=a(Ue);ai=r(Rd,"s"),Rd.forEach(e),ni=r(z,"."),z.forEach(e),y.forEach(e),Za=p(c),u=t(c,"SECTION",{});var _=a(u);Yt=t(_,"H4",{});var Md=a(Yt);js=t(Md,"A",{href:!0,id:!0});var Nd=a(js);ri=r(Nd,"Set or get property from the global scope"),Nd.forEach(e),Md.forEach(e),li=p(_),Qe=t(_,"P",{});var Tk=a(Qe);zt=t(Tk,"STRONG",{});var Ld=a(zt);ii=r(Ld,"Rule of thumb:"),Ld.forEach(e),pi=r(Tk," If you set or get property from global scope, property mangling blindly will break your code."),Tk.forEach(e),ci=p(_),Rs=t(_,"P",{});var gn=a(Rs);hi=r(gn,"Of course, there's caveat of when this might be safe, protected by "),Ze=t(gn,"CODE",{class:!0});var Bd=a(Ze);ki=r(Bd,"default: false"),Bd.forEach(e),di=r(gn," options that you can turn on at your own risk. \u{1F648}"),gn.forEach(e),yi=p(_),Kt=t(_,"P",{});var Wd=a(Kt);Jt=t(Wd,"STRONG",{});var Gd=a(Jt);vi=r(Gd,"Accessing DOM properties or method from built-in Objects"),Gd.forEach(e),Wd.forEach(e),ui=p(_),Ut=t(_,"P",{});var qd=a(Ut);fi=r(qd,"Terser keeps a list of property names that exempt from mangling, such as:"),qd.forEach(e),mi=p(_),Ms=t(_,"UL",{});var xn=a(Ms);cs=t(xn,"LI",{});var Ya=a(cs);gi=r(Ya,"DOM properties: "),Xe=t(Ya,"CODE",{class:!0});var Vd=a(Xe);xi=r(Vd,"window.location"),Vd.forEach(e),wi=r(Ya,", "),so=t(Ya,"CODE",{class:!0});var $d=a(so);bi=r($d,"document.createElement"),$d.forEach(e),Ya.forEach(e),_i=p(xn),hs=t(xn,"LI",{});var za=a(hs);Ei=r(za,"Methods of built-in objects: "),eo=t(za,"CODE",{class:!0});var Fd=a(eo);Ti=r(Fd,"Array.from"),Fd.forEach(e),Oi=r(za,", "),oo=t(za,"CODE",{class:!0});var Yd=a(oo);Pi=r(Yd,"Object.defineProperty"),Yd.forEach(e),za.forEach(e),xn.forEach(e),Ci=p(_),es=t(_,"P",{});var st=a(es);Ii=r(st,"The list can be found in "),Ns=t(st,"A",{href:!0,rel:!0});var zd=a(Ns);Ai=r(zd,"domprops.js"),zd.forEach(e),Di=r(st," and "),Ls=t(st,"A",{href:!0,rel:!0});var Kd=a(Ls);to=t(Kd,"CODE",{class:!0});var Jd=a(to);Si=r(Jd,"find_builtins"),Jd.forEach(e),Kd.forEach(e),Hi=r(st,"."),st.forEach(e),ji=p(_),H=t(_,"P",{});var ps=a(H);Ri=r(ps,"This behavior is protected by the "),ao=t(ps,"CODE",{class:!0});var Ud=a(ao);Mi=r(Ud,"builtins"),Ud.forEach(e),Ni=r(ps," option in the "),Bs=t(ps,"A",{href:!0,rel:!0});var Qd=a(Bs);Li=r(Qd,"Mangle properties option"),Qd.forEach(e),Bi=r(ps,", set it to "),no=t(ps,"CODE",{class:!0});var Zd=a(no);Wi=r(Zd,"true"),Zd.forEach(e),Gi=r(ps," to mangle builtin properties as well. "),Qt=t(ps,"STRONG",{});var Xd=a(Qt);qi=r(Xd,"Override at your own risk"),Xd.forEach(e),ps.forEach(e),Vi=p(_),Zt=t(_,"P",{});var sy=a(Zt);Xt=t(sy,"STRONG",{});var ey=a(Xt);$i=r(ey,"Accessing property or method of a undeclared variable"),ey.forEach(e),sy.forEach(e),Fi=p(_),sa=t(_,"P",{});var oy=a(sa);Yi=r(oy,"Variable that is not declared within the code, can be considered as global variable that is defined outside. Their properties or methods will not be mangled too."),oy.forEach(e),zi=p(_),G=t(_,"P",{});var ms=a(G);Ki=r(ms,"You can override this behavior via the "),ro=t(ms,"CODE",{class:!0});var ty=a(ro);Ji=r(ty,"undeclared"),ty.forEach(e),Ui=r(ms," option in the "),Ws=t(ms,"A",{href:!0,rel:!0});var ay=a(Ws);Qi=r(ay,"Mangle properties option"),ay.forEach(e),Zi=r(ms,", set it to "),lo=t(ms,"CODE",{class:!0});var ny=a(lo);Xi=r(ny,"true"),ny.forEach(e),sp=r(ms," to mangle them too."),ms.forEach(e),_.forEach(e),Xa=p(c),I=t(c,"SECTION",{});var K=a(I);ea=t(K,"H3",{});var ry=a(ea);Gs=t(ry,"A",{href:!0,id:!0});var ly=a(Gs);ep=r(ly,"Mangling for rollup / webpack bundled code"),ly.forEach(e),ry.forEach(e),op=p(K),os=t(K,"P",{});var et=a(os);tp=r(et,"If you add "),qs=t(et,"A",{href:!0,rel:!0});var iy=a(qs);ap=r(iy,"terser-webpack-plugin"),iy.forEach(e),np=r(et," or "),Vs=t(et,"A",{href:!0,rel:!0});var py=a(Vs);rp=r(py,"rollup-plugin-terser"),py.forEach(e),lp=r(et," to your bundling step, are you safe to mangle properties?"),et.forEach(e),ip=p(K),io=t(K,"P",{});var Ok=a(io);oa=t(Ok,"STRONG",{});var cy=a(oa);pp=r(cy,"Rule of thumb:"),cy.forEach(e),cp=r(Ok," If your bundler emits more than 1 file, No."),Ok.forEach(e),hp=p(K),ta=t(K,"P",{});var hy=a(ta);kp=r(hy,"This means any bundling set up that involves code-splitting."),hy.forEach(e),dp=p(K),aa=t(K,"P",{});var ky=a(aa);yp=r(ky,"It is not safe because, terser is run after the code is split into separate files. Thus, the property or method names across files will not be mangled consistently."),ky.forEach(e),K.forEach(e),sn=p(c),$=t(c,"SECTION",{});var ot=a($);na=t(ot,"H2",{});var dy=a(na);$s=t(dy,"A",{href:!0,id:!0});var yy=a($s);vp=r(yy,"How to mangle property responsibly and safely"),yy.forEach(e),dy.forEach(e),up=p(ot),ra=t(ot,"P",{});var vy=a(ra);fp=r(vy,"With so much restrictions in mind, you may wonder how can I utilise property mangling safely and responsibly?"),vy.forEach(e),mp=p(ot),la=t(ot,"P",{});var uy=a(la);gp=r(uy,"Property mangling is not a all-or-nothing option in Terser, there's a few options you can play around to do property mangling safely."),uy.forEach(e),ot.forEach(e),en=p(c),v=t(c,"SECTION",{});var f=a(v);ia=t(f,"H3",{});var fy=a(ia);Fs=t(fy,"A",{href:!0,id:!0});var my=a(Fs);xp=r(my,"Private property"),my.forEach(e),fy.forEach(e),wp=p(f),ts=t(f,"P",{});var tt=a(ts);bp=r(tt,"In the following example, the only publicly documented method in the class "),po=t(tt,"CODE",{class:!0});var gy=a(po);_p=r(gy,"Car"),gy.forEach(e),Ep=r(tt," is "),co=t(tt,"CODE",{class:!0});var xy=a(co);Tp=r(xy,"driveTo()"),xy.forEach(e),Op=r(tt,", so it is okay to mangle other private methods."),tt.forEach(e),Pp=p(f),ho=t(f,"DIV",{class:!0});var Ru=a(ho);Ru.forEach(e),Cp=p(f),O=t(f,"P",{});var A=a(O);Ip=r(A,"We want to mangle "),ko=t(A,"CODE",{class:!0});var wy=a(ko);Ap=r(wy,"this.currentLocation"),wy.forEach(e),Dp=r(A,", "),yo=t(A,"CODE",{class:!0});var by=a(yo);Sp=r(by,"this.destination"),by.forEach(e),Hp=r(A,", "),vo=t(A,"CODE",{class:!0});var _y=a(vo);jp=r(_y,"this.calculateRoute"),_y.forEach(e),Rp=r(A,", "),uo=t(A,"CODE",{class:!0});var Ey=a(uo);Mp=r(Ey,"this.startDriving"),Ey.forEach(e),Np=r(A,", "),fo=t(A,"CODE",{class:!0});var Ty=a(fo);Lp=r(Ty,"this.planRoute"),Ty.forEach(e),Bp=r(A,", but give "),mo=t(A,"CODE",{class:!0});var Oy=a(mo);Wp=r(Oy,"this.driveTo"),Oy.forEach(e),Gp=r(A," untouched."),A.forEach(e),qp=p(f),pa=t(f,"P",{});var Py=a(pa);Vp=r(Py,"You can choose to either"),Py.forEach(e),$p=p(f),ca=t(f,"P",{});var Cy=a(ca);ha=t(Cy,"STRONG",{});var Iy=a(ha);Fp=r(Iy,"1. mangle all methods and properties, except a reserved list of names:"),Iy.forEach(e),Cy.forEach(e),Yp=p(f),go=t(f,"DIV",{class:!0});var Mu=a(go);Mu.forEach(e),zp=p(f),ka=t(f,"P",{});var Ay=a(ka);da=t(Ay,"STRONG",{});var Dy=a(da);Kp=r(Dy,"2. specify a list of names to be mangled with a regex:"),Dy.forEach(e),Ay.forEach(e),Jp=p(f),xo=t(f,"DIV",{class:!0});var Nu=a(xo);Nu.forEach(e),Up=p(f),as=t(f,"P",{});var at=a(as);Qp=r(at,"Here, a "),Ys=t(at,"A",{href:!0,rel:!0});var Sy=a(Ys);Zp=r(Sy,"unofficial JavaScript naming convention"),Sy.forEach(e),Xp=r(at," for private method / properties come in handy. Often times, when a variable name starts with "),wo=t(at,"CODE",{class:!0});var Hy=a(wo);sc=r(Hy,"_"),Hy.forEach(e),ec=r(at,", it is intended to be private."),at.forEach(e),oc=p(f),bo=t(f,"DIV",{class:!0});var Lu=a(bo);Lu.forEach(e),tc=p(f),ya=t(f,"P",{});var jy=a(ya);ac=r(jy,"This way, it makes our regex much easier:"),jy.forEach(e),nc=p(f),_o=t(f,"DIV",{class:!0});var Bu=a(_o);Bu.forEach(e),f.forEach(e),on=p(c),j=t(c,"SECTION",{});var gs=a(j);va=t(gs,"H3",{});var Ry=a(va);zs=t(Ry,"A",{href:!0,id:!0});var My=a(zs);rc=r(My,"Consistent property mangling across subsequent minifications"),My.forEach(e),Ry.forEach(e),lc=p(gs),ns=t(gs,"P",{});var nt=a(ns);ic=r(nt,"If you want "),Eo=t(nt,"CODE",{class:!0});var Ny=a(Eo);pc=r(Ny,"_calculateRoute"),Ny.forEach(e),cc=r(nt," to always mangled to the same name no matter how much you have changed the input file, the "),To=t(nt,"CODE",{class:!0});var Ly=a(To);hc=r(Ly,"nameCache"),Ly.forEach(e),kc=r(nt," may come in handy."),nt.forEach(e),dc=p(gs),Oo=t(gs,"P",{});var Pk=a(Oo);Po=t(Pk,"CODE",{class:!0});var By=a(Po);yc=r(By,"nameCache"),By.forEach(e),vc=r(Pk," is the internal state of Terser, that can be serialised and deserialised to seed the Terser mangling state."),Pk.forEach(e),uc=p(gs),Co=t(gs,"DIV",{class:!0});var Wu=a(Co);Wu.forEach(e),gs.forEach(e),tn=p(c),w=t(c,"SECTION",{});var E=a(w);ua=t(E,"H3",{});var Wy=a(ua);Ks=t(Wy,"A",{href:!0,id:!0});var Gy=a(Ks);fc=r(Gy,"Consistent property mangling across different builds"),Gy.forEach(e),Wy.forEach(e),mc=p(E),fa=t(E,"P",{});var qy=a(fa);gc=r(qy,"What if you have multiple independent projects, and you want to make sure property mangling work across these projects?"),qy.forEach(e),xc=p(E),ma=t(E,"P",{});var Vy=a(ma);wc=r(Vy,"If the variables you mangled are private properties or methods, then, you don't have an issue with this. Different projects should be nicely encapsulated, and should not depends on internal properties or methods."),Vy.forEach(e),bc=p(E),ga=t(E,"P",{});var $y=a(ga);_c=r($y,"So, what I am describing now is for public API methods and properties."),$y.forEach(e),Ec=p(E),xa=t(E,"P",{});var Fy=a(xa);Tc=r(Fy,"What if you want to mangle them as well, how do you make sure that they wont break the user after mangling the public methods or properties?"),Fy.forEach(e),Oc=p(E),wa=t(E,"P",{});var Yy=a(wa);Pc=r(Yy,"Since it involves public methods and properties, additional steps in setting up is understandable."),Yy.forEach(e),Cc=p(E),Js=t(E,"P",{});var wn=a(Js);Ic=r(wn,"In that case, I would recommend maintain a name mapping of how the properties should mangle into, and use "),Us=t(wn,"A",{href:!0,rel:!0});var zy=a(Us);Ac=r(zy,"babel-plugin-transform-rename-properties"),zy.forEach(e),Dc=r(wn," to rename them."),wn.forEach(e),Sc=p(E),ba=t(E,"P",{});var Ky=a(ba);Hc=r(Ky,"The name mapping is a manually curated list of names of your public properties and methods, and only need to be updated whenever there's a change in your public API."),Ky.forEach(e),jc=p(E),_a=t(E,"P",{});var Jy=a(_a);Rc=r(Jy,"Think of it as part of your documentation, which should be updated whenever you change your public API."),Jy.forEach(e),Mc=p(E),Io=t(E,"DIV",{class:!0});var Gu=a(Io);Gu.forEach(e),E.forEach(e),an=p(c),Ao=t(c,"SECTION",{});var Uy=a(Ao);Ea=t(Uy,"H2",{});var Qy=a(Ea);Qs=t(Qy,"A",{href:!0,id:!0});var Zy=a(Qs);Nc=r(Zy,"Misc"),Zy.forEach(e),Qy.forEach(e),Uy.forEach(e),nn=p(c),P=t(c,"SECTION",{});var R=a(P);Ta=t(R,"H3",{});var Xy=a(Ta);Zs=t(Xy,"A",{href:!0,id:!0});var sv=a(Zs);Lc=r(sv,"Webpack and Rollup"),sv.forEach(e),Xy.forEach(e),Bc=p(R),q=t(R,"P",{});var xs=a(q);Wc=r(xs,"Throughout the article, we mentioned Terser and "),Do=t(xs,"CODE",{class:!0});var ev=a(Do);Gc=r(ev,"terserOptions"),ev.forEach(e),qc=r(xs,", and didnt really go into how you would use it for projects bundled with "),Xs=t(xs,"A",{href:!0,rel:!0});var ov=a(Xs);Vc=r(ov,"webpack"),ov.forEach(e),$c=r(xs," or "),se=t(xs,"A",{href:!0,rel:!0});var tv=a(se);Fc=r(tv,"rollup"),tv.forEach(e),Yc=r(xs,"."),xs.forEach(e),zc=p(R),ee=t(R,"P",{});var bn=a(ee);Kc=r(bn,"For webpack user, you can use "),oe=t(bn,"A",{href:!0,rel:!0});var av=a(oe);Jc=r(av,"terser-webpack-plugin"),av.forEach(e),Uc=r(bn,"."),bn.forEach(e),Qc=p(R),So=t(R,"DIV",{class:!0});var qu=a(So);qu.forEach(e),Zc=p(R),Ho=t(R,"P",{});var Ck=a(Ho);Xc=r(Ck,"For rollup user, you can use "),te=t(Ck,"A",{href:!0,rel:!0});var nv=a(te);sh=r(nv,"rollup-plugin-terser"),nv.forEach(e),Ck.forEach(e),eh=p(R),jo=t(R,"DIV",{class:!0});var Vu=a(jo);Vu.forEach(e),R.forEach(e),rn=p(c),b=t(c,"SECTION",{});var T=a(b);Oa=t(T,"H3",{});var rv=a(Oa);ae=t(rv,"A",{href:!0,id:!0});var lv=a(ae);oh=r(lv,"A curious case of Preact"),lv.forEach(e),rv.forEach(e),th=p(T),Pa=t(T,"BLOCKQUOTE",{});var iv=a(Pa);rs=t(iv,"P",{});var rt=a(rs);ah=r(rt,"The rabbit hole of how to mangle property names starts with investigating the "),ne=t(rt,"A",{href:!0,rel:!0});var pv=a(ne);nh=r(pv,"Preact"),pv.forEach(e),rh=p(rt),re=t(rt,"A",{href:!0,rel:!0});var cv=a(re);lh=r(cv,"Suspense bug"),cv.forEach(e),ih=r(rt,", but that would be a story for another time."),rt.forEach(e),iv.forEach(e),ph=p(T),Ca=t(T,"P",{});var hv=a(Ca);ch=r(hv,"Preact is a fast 3kB React alternative, with the same modern API."),hv.forEach(e),hh=p(T),Ia=t(T,"P",{});var kv=a(Ia);kh=r(kv,"Property mangling contributed an important part to keep the library slim."),kv.forEach(e),dh=p(T),le=t(T,"TABLE",{});var _n=a(le);Aa=t(_n,"THEAD",{});var dv=a(Aa);ie=t(dv,"TR",{});var En=a(ie);Da=t(En,"TH",{});var yv=a(Da);yh=r(yv,"Without mangling"),yv.forEach(e),vh=p(En),Sa=t(En,"TH",{});var vv=a(Sa);uh=r(vv,"With mangling"),vv.forEach(e),En.forEach(e),dv.forEach(e),fh=p(_n),pe=t(_n,"TBODY",{});var Tn=a(pe);ce=t(Tn,"TR",{});var On=a(ce);Ha=t(On,"TD",{});var uv=a(Ha);mh=r(uv,"10.7 KB minified"),uv.forEach(e),gh=p(On),ja=t(On,"TD",{});var fv=a(ja);xh=r(fv,"9.7 Kb minified (reduced ~10%)"),fv.forEach(e),On.forEach(e),wh=p(Tn),he=t(Tn,"TR",{});var Pn=a(he);Ra=t(Pn,"TD",{});var mv=a(Ra);bh=r(mv,"4.2 KB minified + gzipped"),mv.forEach(e),_h=p(Pn),Ma=t(Pn,"TD",{});var gv=a(Ma);Eh=r(gv,"3.9 KB minified + gzipped (reduced ~5%)"),gv.forEach(e),Pn.forEach(e),Tn.forEach(e),_n.forEach(e),Th=p(T),ke=t(T,"P",{});var Cn=a(ke);Oh=r(Cn,"There's several different builds for "),Ro=t(Cn,"CODE",{class:!0});var xv=a(Ro);Ph=r(xv,"preact"),xv.forEach(e),Ch=r(Cn,":"),Cn.forEach(e),Ih=p(T),V=t(T,"UL",{});var ws=a(V);Na=t(ws,"LI",{});var wv=a(Na);Mo=t(wv,"CODE",{class:!0});var bv=a(Mo);Ah=r(bv,"preact/core"),bv.forEach(e),wv.forEach(e),Dh=p(ws),No=t(ws,"LI",{});var Ik=a(No);Lo=t(Ik,"CODE",{class:!0});var _v=a(Lo);Sh=r(_v,"preact/compat"),_v.forEach(e),Hh=r(Ik," - a compat layer on top of preact to provide all React API"),Ik.forEach(e),jh=p(ws),ks=t(ws,"LI",{});var Ka=a(ks);Bo=t(Ka,"CODE",{class:!0});var Ev=a(Bo);Rh=r(Ev,"preact/debug"),Ev.forEach(e),Mh=r(Ka," - a layer on top of "),Wo=t(Ka,"CODE",{class:!0});var Tv=a(Wo);Nh=r(Tv,"preact/core"),Tv.forEach(e),Lh=r(Ka," that provides a better debugging experience"),Ka.forEach(e),Bh=p(ws),ds=t(ws,"LI",{});var Ja=a(ds);Go=t(Ja,"CODE",{class:!0});var Ov=a(Go);Wh=r(Ov,"preact/devtools"),Ov.forEach(e),Gh=r(Ja," - the bridge between "),qo=t(Ja,"CODE",{class:!0});var Pv=a(qo);qh=r(Pv,"preact/core"),Pv.forEach(e),Vh=r(Ja," and the devtools extension."),Ja.forEach(e),ws.forEach(e),$h=p(T),ls=t(T,"P",{});var lt=a(ls);Fh=r(lt,"To have a consistent mangle properties across different builds, "),Vo=t(lt,"CODE",{class:!0});var Cv=a(Vo);Yh=r(Cv,"babel-plugin-transform-rename-properties"),Cv.forEach(e),zh=r(lt," is used, and the name mapping is stored at "),de=t(lt,"A",{href:!0,rel:!0});var Iv=a(de);$o=t(Iv,"CODE",{class:!0});var Av=a($o);Kh=r(Av,"mangle.json"),Av.forEach(e),Iv.forEach(e),Jh=r(lt,"."),lt.forEach(e),Uh=p(T),La=t(T,"BLOCKQUOTE",{});var Dv=a(La);ys=t(Dv,"P",{});var Ua=a(ys);Qh=r(Ua,"Check out this Pull Request that adds "),Fo=t(Ua,"CODE",{class:!0});var Sv=a(Fo);Zh=r(Sv,"babel-plugin-transform-rename-properties"),Sv.forEach(e),Xh=r(Ua," into Preact: "),ye=t(Ua,"A",{href:!0,rel:!0});var Hv=a(ye);sk=r(Hv,"https://github.com/preactjs/preact/pull/2548"),Hv.forEach(e),Ua.forEach(e),Dv.forEach(e),ek=p(T),C=t(T,"P",{});var M=a(C);ok=r(M,"For mangling private properties, the bundling process of Preact is abstracted in "),ve=t(M,"A",{href:!0,rel:!0});var jv=a(ve);tk=r(jv,"microbundle"),jv.forEach(e),ak=r(M,", which reads the mangle options from "),Yo=t(M,"CODE",{class:!0});var Rv=a(Yo);nk=r(Rv,"mangle.json"),Rv.forEach(e),rk=r(M," or the "),zo=t(M,"CODE",{class:!0});var Mv=a(zo);lk=r(Mv,"mangle"),Mv.forEach(e),ik=r(M," property from "),Ko=t(M,"CODE",{class:!0});var Nv=a(Ko);pk=r(Nv,"package.json"),Nv.forEach(e),ck=r(M,". See "),ue=t(M,"A",{href:!0,rel:!0});var Lv=a(ue);hk=r(Lv,"Mangling Properties for microbundle"),Lv.forEach(e),kk=r(M,"."),M.forEach(e),T.forEach(e),ln=p(c),F=t(c,"SECTION",{});var it=a(F);Ba=t(it,"H2",{});var Bv=a(Ba);fe=t(Bv,"A",{href:!0,id:!0});var Wv=a(fe);dk=r(Wv,"Closing Note"),Wv.forEach(e),Bv.forEach(e),yk=p(it),Wa=t(it,"P",{});var Gv=a(Wa);vk=r(Gv,"We've covered what is property mangling and all the caveats come along with it."),Gv.forEach(e),uk=p(it),Ga=t(it,"P",{});var qv=a(Ga);fk=r(qv,"With the full grasp of the caveats, we looked at various tactics that we can use to utilise property mangling to reduce our minified code output."),qv.forEach(e),it.forEach(e),pn=p(c),vs=t(c,"SECTION",{});var In=a(vs);qa=t(In,"H2",{});var Vv=a(qa);me=t(Vv,"A",{href:!0,id:!0});var $v=a(me);mk=r($v,"Further Reading"),$v.forEach(e),Vv.forEach(e),gk=p(In),is=t(In,"UL",{});var pt=a(is);Va=t(pt,"LI",{});var Fv=a(Va);ge=t(Fv,"A",{href:!0,rel:!0});var Yv=a(ge);xk=r(Yv,"Terser Mangle options"),Yv.forEach(e),Fv.forEach(e),wk=p(pt),$a=t(pt,"LI",{});var zv=a($a);xe=t(zv,"A",{href:!0,rel:!0});var Kv=a(xe);bk=r(Kv,"microbundle Mangling Properties"),Kv.forEach(e),zv.forEach(e),_k=p(pt),Fa=t(pt,"LI",{});var Jv=a(Fa);we=t(Jv,"A",{href:!0,rel:!0});var Uv=a(we);Ek=r(Uv,"babel-plugin-transform-rename-properties"),Uv.forEach(e),Jv.forEach(e),pt.forEach(e),In.forEach(e),this.h()},h(){l(x,"href","#what-is-mangling-property"),l(x,"id","what-is-mangling-property"),l(Ee,"class","code-section"),l(_s,"href","https://github.com/terser/terser"),l(_s,"rel","nofollow"),l(Te,"class","code-section"),l(Ts,"href","https://github.com/terser/terser#mangle-options"),l(Ts,"rel","nofollow"),l(Oe,"class","inline"),l(Pe,"class","inline"),l(Ce,"class","code-section"),l(Ie,"class","inline"),l(Ae,"class","code-section"),l(De,"class","inline"),l(Se,"class","inline"),l(He,"class","inline"),l(je,"class","inline"),l(Re,"class","inline"),l(Ps,"href","https://github.com/terser/terser#cli-mangling-property-names---mangle-props"),l(Ps,"rel","nofollow"),l(Cs,"href","#why-is-property-mangling-considered-unsafe"),l(Cs,"id","why-is-property-mangling-considered-unsafe"),l(Me,"class","code-section"),l(Ne,"class","code-section"),l(Le,"class","inline"),l(Be,"class","inline"),l(We,"class","code-section"),l(Ge,"class","code-section"),l(qe,"class","inline"),l(Ve,"class","inline"),l($e,"class","code-section"),l(Fe,"class","code-section"),l(Ye,"class","inline"),l(ze,"class","inline"),l(Ke,"class","inline"),l(Je,"class","inline"),l(Ue,"class","inline"),l(js,"href","#set-or-get-property-from-the-global-scope"),l(js,"id","set-or-get-property-from-the-global-scope"),l(Ze,"class","inline"),l(Xe,"class","inline"),l(so,"class","inline"),l(eo,"class","inline"),l(oo,"class","inline"),l(Ns,"href","https://github.com/terser/terser/blob/aacd5770d9364ecaca80ff450fe329e021ac98aa/tools/domprops.js"),l(Ns,"rel","nofollow"),l(to,"class","inline"),l(Ls,"href","https://github.com/terser/terser/blob/aacd5770d9364ecaca80ff450fe329e021ac98aa/lib/propmangle.js#L67"),l(Ls,"rel","nofollow"),l(ao,"class","inline"),l(Bs,"href","https://github.com/terser/terser#mangle-properties-options"),l(Bs,"rel","nofollow"),l(no,"class","inline"),l(ro,"class","inline"),l(Ws,"href","https://github.com/terser/terser#mangle-properties-options"),l(Ws,"rel","nofollow"),l(lo,"class","inline"),l(Gs,"href","#mangling-for-rollup-webpack-bundled-code"),l(Gs,"id","mangling-for-rollup-webpack-bundled-code"),l(qs,"href","https://webpack.js.org/plugins/terser-webpack-plugin/"),l(qs,"rel","nofollow"),l(Vs,"href","https://www.npmjs.com/package/rollup-plugin-terser"),l(Vs,"rel","nofollow"),l($s,"href","#how-to-mangle-property-responsibly-and-safely"),l($s,"id","how-to-mangle-property-responsibly-and-safely"),l(Fs,"href","#private-property"),l(Fs,"id","private-property"),l(po,"class","inline"),l(co,"class","inline"),l(ho,"class","code-section"),l(ko,"class","inline"),l(yo,"class","inline"),l(vo,"class","inline"),l(uo,"class","inline"),l(fo,"class","inline"),l(mo,"class","inline"),l(go,"class","code-section"),l(xo,"class","code-section"),l(Ys,"href","https://www.robinwieruch.de/javascript-naming-conventions"),l(Ys,"rel","nofollow"),l(wo,"class","inline"),l(bo,"class","code-section"),l(_o,"class","code-section"),l(zs,"href","#consistent-property-mangling-across-subsequent-minifications"),l(zs,"id","consistent-property-mangling-across-subsequent-minifications"),l(Eo,"class","inline"),l(To,"class","inline"),l(Po,"class","inline"),l(Co,"class","code-section"),l(Ks,"href","#consistent-property-mangling-across-different-builds"),l(Ks,"id","consistent-property-mangling-across-different-builds"),l(Us,"href","https://www.npmjs.com/package/babel-plugin-transform-rename-properties"),l(Us,"rel","nofollow"),l(Io,"class","code-section"),l(Qs,"href","#misc"),l(Qs,"id","misc"),l(Zs,"href","#webpack-and-rollup"),l(Zs,"id","webpack-and-rollup"),l(Do,"class","inline"),l(Xs,"href","https://webpack.js.org/"),l(Xs,"rel","nofollow"),l(se,"href","https://rollupjs.org/"),l(se,"rel","nofollow"),l(oe,"href","https://github.com/webpack-contrib/terser-webpack-plugin/"),l(oe,"rel","nofollow"),l(So,"class","code-section"),l(te,"href","https://www.npmjs.com/package/rollup-plugin-terser"),l(te,"rel","nofollow"),l(jo,"class","code-section"),l(ae,"href","#a-curious-case-of-preact"),l(ae,"id","a-curious-case-of-preact"),l(ne,"href","https://github.com/preactjs/preact"),l(ne,"rel","nofollow"),l(re,"href","https://github.com/preactjs/preact/pull/2661"),l(re,"rel","nofollow"),l(Ro,"class","inline"),l(Mo,"class","inline"),l(Lo,"class","inline"),l(Bo,"class","inline"),l(Wo,"class","inline"),l(Go,"class","inline"),l(qo,"class","inline"),l(Vo,"class","inline"),l($o,"class","inline"),l(de,"href","https://github.com/preactjs/preact/blob/c2c9b9414bc4202b2ac487b55be626f955fba65f/mangle.json"),l(de,"rel","nofollow"),l(Fo,"class","inline"),l(ye,"href","https://github.com/preactjs/preact/pull/2548"),l(ye,"rel","nofollow"),l(ve,"href","https://github.com/developit/microbundle"),l(ve,"rel","nofollow"),l(Yo,"class","inline"),l(zo,"class","inline"),l(Ko,"class","inline"),l(ue,"href","https://github.com/developit/microbundle#mangling-properties"),l(ue,"rel","nofollow"),l(fe,"href","#closing-note"),l(fe,"id","closing-note"),l(me,"href","#further-reading"),l(me,"id","further-reading"),l(ge,"href","https://github.com/terser/terser#mangle-options"),l(ge,"rel","nofollow"),l(xe,"href","https://github.com/developit/microbundle#mangling-properties"),l(xe,"rel","nofollow"),l(we,"href","https://www.npmjs.com/package/babel-plugin-transform-rename-properties"),l(we,"rel","nofollow")},m(c,h){ou(g,c,h),m(c,N,h),m(c,k,h),s(k,J),s(J,x),s(x,L),s(k,_e),s(k,ct),s(ct,An),s(k,Dn),s(k,Ee),Ee.innerHTML=ru,s(k,Sn),s(k,ht),s(ht,kt),s(kt,Hn),s(k,jn),s(k,bs),s(bs,Rn),s(bs,_s),s(_s,Mn),s(bs,Nn),s(k,Ln),s(k,Te),Te.innerHTML=lu,s(k,Bn),s(k,dt),s(dt,yt),s(yt,Wn),s(k,Gn),s(k,vt),s(vt,ut),s(ut,qn),s(k,Vn),s(k,ft),s(ft,$n),s(k,Fn),s(k,Es),s(Es,Yn),s(Es,mt),s(mt,zn),s(Es,Kn),s(k,Jn),s(k,D),s(D,Un),s(D,Ts),s(Ts,Qn),s(D,Zn),s(D,gt),s(gt,Xn),s(D,sr),s(D,xt),s(xt,er),s(D,or),s(D,wt),s(wt,tr),s(D,ar),s(k,nr),s(k,U),s(U,rr),s(U,Oe),s(Oe,lr),s(U,ir),s(U,Pe),s(Pe,pr),s(U,cr),s(k,hr),s(k,Ce),Ce.innerHTML=iu,s(k,kr),s(k,bt),s(bt,_t),s(_t,dr),s(k,yr),s(k,Et),s(Et,vr),s(k,ur),s(k,Os),s(Os,fr),s(Os,Ie),s(Ie,mr),s(Os,gr),s(k,xr),s(k,Tt),s(Tt,wr),s(k,br),s(k,Ae),Ae.innerHTML=pu,s(k,_r),s(k,Ot),s(Ot,Pt),s(Pt,Er),s(k,Tr),s(k,Ct),s(Ct,Or),s(k,Pr),s(k,It),s(It,At),s(At,Cr),s(k,Ir),s(k,Dt),s(Dt,Ar),s(k,Dr),s(k,Q),s(Q,Sr),s(Q,De),s(De,Hr),s(Q,jr),s(Q,Se),s(Se,Rr),s(Q,Mr),s(k,Nr),s(k,B),s(B,Lr),s(B,He),s(He,Br),s(B,Wr),s(B,je),s(je,Gr),s(B,qr),s(B,Re),s(Re,Vr),s(B,$r),s(k,Fr),s(k,St),s(St,Ht),s(Ht,Yr),s(k,zr),s(k,Z),s(Z,Kr),s(Z,jt),s(jt,Jr),s(Z,Ur),s(Z,Ps),s(Ps,Qr),s(Z,Zr),m(c,Qa,h),m(c,d,h),s(d,Rt),s(Rt,Cs),s(Cs,Xr),s(d,sl),s(d,Is),s(Is,el),s(Is,Mt),s(Mt,ol),s(Is,tl),s(d,al),s(d,Me),Me.innerHTML=cu,s(d,nl),s(d,Ne),Ne.innerHTML=hu,s(d,rl),s(d,X),s(X,ll),s(X,Le),s(Le,il),s(X,pl),s(X,Be),s(Be,cl),s(X,hl),s(d,kl),s(d,As),s(As,dl),s(As,Nt),s(Nt,yl),s(As,vl),s(d,ul),s(d,We),We.innerHTML=ku,s(d,fl),s(d,Ge),Ge.innerHTML=du,s(d,ml),s(d,W),s(W,gl),s(W,Lt),s(Lt,xl),s(W,wl),s(W,qe),s(qe,bl),s(W,_l),s(W,Ve),s(Ve,El),s(W,Tl),s(d,Ol),s(d,ss),s(ss,Pl),s(ss,Bt),s(Bt,Cl),s(ss,Il),s(ss,Wt),s(Wt,Al),s(ss,Dl),s(d,Sl),s(d,Ds),s(Ds,Hl),s(Ds,Gt),s(Gt,jl),s(Ds,Rl),s(d,Ml),s(d,qt),s(qt,Nl),s(d,Ll),s(d,Ss),s(Ss,Vt),s(Vt,Bl),s(Ss,Wl),s(Ss,$t),s($t,Gl),s(d,ql),s(d,Ft),s(Ft,Vl),s(d,$l),s(d,$e),$e.innerHTML=yu,s(d,Fl),s(d,Fe),Fe.innerHTML=vu,s(d,Yl),s(d,Hs),s(Hs,zl),s(Hs,Ye),s(Ye,Kl),s(Hs,Jl),s(d,Ul),s(d,S),s(S,Ql),s(S,ze),s(ze,Zl),s(S,Xl),s(S,Ke),s(Ke,si),s(S,ei),s(S,Je),s(Je,oi),s(S,ti),s(S,Ue),s(Ue,ai),s(S,ni),m(c,Za,h),m(c,u,h),s(u,Yt),s(Yt,js),s(js,ri),s(u,li),s(u,Qe),s(Qe,zt),s(zt,ii),s(Qe,pi),s(u,ci),s(u,Rs),s(Rs,hi),s(Rs,Ze),s(Ze,ki),s(Rs,di),s(u,yi),s(u,Kt),s(Kt,Jt),s(Jt,vi),s(u,ui),s(u,Ut),s(Ut,fi),s(u,mi),s(u,Ms),s(Ms,cs),s(cs,gi),s(cs,Xe),s(Xe,xi),s(cs,wi),s(cs,so),s(so,bi),s(Ms,_i),s(Ms,hs),s(hs,Ei),s(hs,eo),s(eo,Ti),s(hs,Oi),s(hs,oo),s(oo,Pi),s(u,Ci),s(u,es),s(es,Ii),s(es,Ns),s(Ns,Ai),s(es,Di),s(es,Ls),s(Ls,to),s(to,Si),s(es,Hi),s(u,ji),s(u,H),s(H,Ri),s(H,ao),s(ao,Mi),s(H,Ni),s(H,Bs),s(Bs,Li),s(H,Bi),s(H,no),s(no,Wi),s(H,Gi),s(H,Qt),s(Qt,qi),s(u,Vi),s(u,Zt),s(Zt,Xt),s(Xt,$i),s(u,Fi),s(u,sa),s(sa,Yi),s(u,zi),s(u,G),s(G,Ki),s(G,ro),s(ro,Ji),s(G,Ui),s(G,Ws),s(Ws,Qi),s(G,Zi),s(G,lo),s(lo,Xi),s(G,sp),m(c,Xa,h),m(c,I,h),s(I,ea),s(ea,Gs),s(Gs,ep),s(I,op),s(I,os),s(os,tp),s(os,qs),s(qs,ap),s(os,np),s(os,Vs),s(Vs,rp),s(os,lp),s(I,ip),s(I,io),s(io,oa),s(oa,pp),s(io,cp),s(I,hp),s(I,ta),s(ta,kp),s(I,dp),s(I,aa),s(aa,yp),m(c,sn,h),m(c,$,h),s($,na),s(na,$s),s($s,vp),s($,up),s($,ra),s(ra,fp),s($,mp),s($,la),s(la,gp),m(c,en,h),m(c,v,h),s(v,ia),s(ia,Fs),s(Fs,xp),s(v,wp),s(v,ts),s(ts,bp),s(ts,po),s(po,_p),s(ts,Ep),s(ts,co),s(co,Tp),s(ts,Op),s(v,Pp),s(v,ho),ho.innerHTML=uu,s(v,Cp),s(v,O),s(O,Ip),s(O,ko),s(ko,Ap),s(O,Dp),s(O,yo),s(yo,Sp),s(O,Hp),s(O,vo),s(vo,jp),s(O,Rp),s(O,uo),s(uo,Mp),s(O,Np),s(O,fo),s(fo,Lp),s(O,Bp),s(O,mo),s(mo,Wp),s(O,Gp),s(v,qp),s(v,pa),s(pa,Vp),s(v,$p),s(v,ca),s(ca,ha),s(ha,Fp),s(v,Yp),s(v,go),go.innerHTML=fu,s(v,zp),s(v,ka),s(ka,da),s(da,Kp),s(v,Jp),s(v,xo),xo.innerHTML=mu,s(v,Up),s(v,as),s(as,Qp),s(as,Ys),s(Ys,Zp),s(as,Xp),s(as,wo),s(wo,sc),s(as,ec),s(v,oc),s(v,bo),bo.innerHTML=gu,s(v,tc),s(v,ya),s(ya,ac),s(v,nc),s(v,_o),_o.innerHTML=xu,m(c,on,h),m(c,j,h),s(j,va),s(va,zs),s(zs,rc),s(j,lc),s(j,ns),s(ns,ic),s(ns,Eo),s(Eo,pc),s(ns,cc),s(ns,To),s(To,hc),s(ns,kc),s(j,dc),s(j,Oo),s(Oo,Po),s(Po,yc),s(Oo,vc),s(j,uc),s(j,Co),Co.innerHTML=wu,m(c,tn,h),m(c,w,h),s(w,ua),s(ua,Ks),s(Ks,fc),s(w,mc),s(w,fa),s(fa,gc),s(w,xc),s(w,ma),s(ma,wc),s(w,bc),s(w,ga),s(ga,_c),s(w,Ec),s(w,xa),s(xa,Tc),s(w,Oc),s(w,wa),s(wa,Pc),s(w,Cc),s(w,Js),s(Js,Ic),s(Js,Us),s(Us,Ac),s(Js,Dc),s(w,Sc),s(w,ba),s(ba,Hc),s(w,jc),s(w,_a),s(_a,Rc),s(w,Mc),s(w,Io),Io.innerHTML=bu,m(c,an,h),m(c,Ao,h),s(Ao,Ea),s(Ea,Qs),s(Qs,Nc),m(c,nn,h),m(c,P,h),s(P,Ta),s(Ta,Zs),s(Zs,Lc),s(P,Bc),s(P,q),s(q,Wc),s(q,Do),s(Do,Gc),s(q,qc),s(q,Xs),s(Xs,Vc),s(q,$c),s(q,se),s(se,Fc),s(q,Yc),s(P,zc),s(P,ee),s(ee,Kc),s(ee,oe),s(oe,Jc),s(ee,Uc),s(P,Qc),s(P,So),So.innerHTML=_u,s(P,Zc),s(P,Ho),s(Ho,Xc),s(Ho,te),s(te,sh),s(P,eh),s(P,jo),jo.innerHTML=Eu,m(c,rn,h),m(c,b,h),s(b,Oa),s(Oa,ae),s(ae,oh),s(b,th),s(b,Pa),s(Pa,rs),s(rs,ah),s(rs,ne),s(ne,nh),s(rs,rh),s(rs,re),s(re,lh),s(rs,ih),s(b,ph),s(b,Ca),s(Ca,ch),s(b,hh),s(b,Ia),s(Ia,kh),s(b,dh),s(b,le),s(le,Aa),s(Aa,ie),s(ie,Da),s(Da,yh),s(ie,vh),s(ie,Sa),s(Sa,uh),s(le,fh),s(le,pe),s(pe,ce),s(ce,Ha),s(Ha,mh),s(ce,gh),s(ce,ja),s(ja,xh),s(pe,wh),s(pe,he),s(he,Ra),s(Ra,bh),s(he,_h),s(he,Ma),s(Ma,Eh),s(b,Th),s(b,ke),s(ke,Oh),s(ke,Ro),s(Ro,Ph),s(ke,Ch),s(b,Ih),s(b,V),s(V,Na),s(Na,Mo),s(Mo,Ah),s(V,Dh),s(V,No),s(No,Lo),s(Lo,Sh),s(No,Hh),s(V,jh),s(V,ks),s(ks,Bo),s(Bo,Rh),s(ks,Mh),s(ks,Wo),s(Wo,Nh),s(ks,Lh),s(V,Bh),s(V,ds),s(ds,Go),s(Go,Wh),s(ds,Gh),s(ds,qo),s(qo,qh),s(ds,Vh),s(b,$h),s(b,ls),s(ls,Fh),s(ls,Vo),s(Vo,Yh),s(ls,zh),s(ls,de),s(de,$o),s($o,Kh),s(ls,Jh),s(b,Uh),s(b,La),s(La,ys),s(ys,Qh),s(ys,Fo),s(Fo,Zh),s(ys,Xh),s(ys,ye),s(ye,sk),s(b,ek),s(b,C),s(C,ok),s(C,ve),s(ve,tk),s(C,ak),s(C,Yo),s(Yo,nk),s(C,rk),s(C,zo),s(zo,lk),s(C,ik),s(C,Ko),s(Ko,pk),s(C,ck),s(C,ue),s(ue,hk),s(C,kk),m(c,ln,h),m(c,F,h),s(F,Ba),s(Ba,fe),s(fe,dk),s(F,yk),s(F,Wa),s(Wa,vk),s(F,uk),s(F,Ga),s(Ga,fk),m(c,pn,h),m(c,vs,h),s(vs,qa),s(qa,me),s(me,mk),s(vs,gk),s(vs,is),s(is,Va),s(Va,ge),s(ge,xk),s(is,wk),s(is,$a),s($a,xe),s(xe,bk),s(is,_k),s(is,Fa),s(Fa,we),s(we,Ek),cn=!0},p:Ju,i(c){cn||(tu(g.$$.fragment,c),cn=!0)},o(c){au(g.$$.fragment,c),cn=!1},d(c){nu(g,c),c&&e(N),c&&e(k),c&&e(Qa),c&&e(d),c&&e(Za),c&&e(u),c&&e(Xa),c&&e(I),c&&e(sn),c&&e($),c&&e(en),c&&e(v),c&&e(on),c&&e(j),c&&e(tn),c&&e(w),c&&e(an),c&&e(Ao),c&&e(nn),c&&e(P),c&&e(rn),c&&e(b),c&&e(ln),c&&e(F),c&&e(pn),c&&e(vs)}}}function sf(be){let g,N;const k=[be[0],Xv];let J={$$slots:{default:[Xu]},$$scope:{ctx:be}};for(let x=0;x<k.length;x+=1)J=Ak(J,k[x]);return g=new Uu({props:J}),{c(){su(g.$$.fragment)},l(x){eu(g.$$.fragment,x)},m(x,L){ou(g,x,L),N=!0},p(x,[L]){const _e=L&1?zu(k,[L&1&&Qv(x[0]),L&0&&Qv(Xv)]):{};L&2&&(_e.$$scope={dirty:L,ctx:x}),g.$set(_e)},i(x){N||(tu(g.$$.fragment,x),N=!0)},o(x){au(g.$$.fragment,x),N=!1},d(x){nu(g,x)}}}const Xv={title:"Reduce minified code size by property mangling",date:"2020-08-08T08:00:00Z",tags:["JavaScript","Terser"],label:"blog"};function ef(be,g,N){return Ku("blog",{image:Zu}),be.$$set=k=>{N(0,g=Ak(Ak({},g),Zv(k)))},g=Zv(g),[g]}class pf extends $u{constructor(g){super();Fu(this,g,ef,sf,Yu,{})}}export{pf as default,Xv as metadata};
