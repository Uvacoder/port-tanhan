import{S as To,i as jo,s as Po,C as us,w as fo,x as mo,y as _o,z as Oo,A as co,q as go,o as bo,B as wo,r as Go,R as ho,k as h,e as o,t as a,m as d,c as r,a as l,h as s,d as t,b as n,Q as uo,f as m,g,F as e,O as So}from"../../chunks/vendor-569a3c5c.js";import{B as Co}from"../../chunks/BlogLayout-17b76cb2.js";import{T as Do}from"../../chunks/TableOfContent-dbc18cb8.js";import{_ as $o}from"../../chunks/twitter-card-image-a57df29d.js";import"../../chunks/stores-ee936cd4.js";import"../../chunks/WebMentions-968cc380.js";/* empty css                                */var qo="/_app/assets/inverted_emojis-da2061e8.webp",Ro="/_app/assets/inverted_emojis-4957b0b6.webp",Bo="/_app/assets/inverted_emojis-a39d7f6d.png",vo="/_app/assets/inverted_emojis-d65cf6e1.png",Mo="/_app/assets/github-pages-7d962960.webp",No="/_app/assets/github-pages-e62f381e.webp",Wo="/_app/assets/github-pages-a4f3e932.png",yo="/_app/assets/github-pages-c8603eb5.png";function Lo(ce){let v,A,k,N,y,T,he,W,kt,ft,de,mt,_t,$e,gt,Ke,D,bt,L,wt,xt,Ye,$,Et,qe,It,At,et,q,Re,H,Tt,jt,z,Pt,U,Ot,Gt,tt,f,Be,F,St,Ct,Q,Dt,V,$t,qt,Rt,Me,O,ue,Ne,b,vs,Bt,G,Mt,ve,Nt,Wt,ye,Lt,Ht,zt,X,Ut,Z,Ft,Qt,Vt,j,Xt,ke,Zt,Jt,fe,Kt,Yt,me,ea,ta,at,p,We,J,aa,sa,R,K,oa,ra,Y,la,na,ia,ee,pa,te,ca,ha,da,ae,ua,_e,va,ya,ka,ge,xo=`<div class="filename">theme-mode.css</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">div#___gatsby</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)">:after &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  content</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  position</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> fixed;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  top</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  bottom</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  left</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  right</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  pointer</span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)">events</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> none;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  background</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> white;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  mix</span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)">blend</span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)">mode</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> difference;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,fa,Le,ma,_a,He,S,be,ze,w,ys,ga,_,ba,we,wa,xa,xe,Ea,Ia,se,Aa,Ta,Ee,ja,Pa,Ie,Oa,Ga,Sa,Ue,Ca,Da,B,oe,$a,qa,re,Ra,Ba,Ma,Ae,Eo=`<div class="filename">remark-emoji.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">visit</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;unist-util-visit&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">emojiRegex</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;emoji-regex&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-constant)">module</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">exports</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)">(&#123; markdownAST &#125;) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">visit</span><span style="color: var(--shiki-color-text)">(markdownAST</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;text&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> node </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">node</span><span style="color: var(--shiki-color-text)">.type </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;html&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">node</span><span style="color: var(--shiki-color-text)">.value </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">node</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">value</span><span style="color: var(--shiki-token-function)">.replace</span><span style="color: var(--shiki-color-text)">(</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-function)">emojiRegex</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      val </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#96;&lt;span class=&quot;emoji&quot;&gt;</span><span style="color: var(--shiki-token-keyword)">$&#123;</span><span style="color: var(--shiki-color-text)">val</span><span style="color: var(--shiki-token-keyword)">&#125;</span><span style="color: var(--shiki-token-string-expression)">&lt;/span&gt;&#96;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    );</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;;</span></span></code></pre>`,Na,Fe,Te,Wa,st,La,Qe,Ha,za,Ve,Ua,Fa,le,Qa,je,Va,Xa,ot,P,Xe,ne,Za,Ja,x,Ka,Pe,Ya,es,Oe,ts,as,Ge,ss,os,ie,rs,ls,pe,ns,Se,is,ps,rt;return v=new Do({props:{data:[{link:"the-boilerplate",title:"The boilerplate"},{link:"the-deployment",title:"The deployment"},{link:"the-light-dark-mode",title:"The light & dark mode"},{link:"the-restructure",title:"The Restructure"}]}}),{c(){fo(v.$$.fragment),A=h(),k=o("p"),N=a("After reading Dan's "),y=o("a"),T=a("Overreacted"),he=a(" & Wei's "),W=o("a"),kt=a("A Work in Progress"),ft=a(" a while ago, I decided to have my "),de=o("a"),mt=a("own blog"),_t=a(" as well! "),$e=o("em"),gt=a("(In case you still don't know, it's the very one you are reading right now!)"),Ke=h(),D=o("p"),bt=a("I took it as an opportunity to learn "),L=o("a"),wt=a("Gatsby"),xt=a(", I've heard about it for a while, so I guess it's to know how it works."),Ye=h(),$=o("p"),Et=a("This article is "),qe=o("strong"),It=a("NOT about how to build a Gatsby site"),At=a(", there a lot resources about that you can go for. But I am here to share some of my customisations that I've added to my Gatsby site, and hopefully you would share yours too."),et=h(),q=o("section"),Re=o("h2"),H=o("a"),Tt=a("The boilerplate"),jt=h(),z=o("p"),Pt=a("I used the exact same Gatsby starter pack as Dan's "),U=o("a"),Ot=a("Overreacted"),Gt=a(", because why not \xAF_(\u30C4)_/\xAF. It looks sleek and simple and I like it."),tt=h(),f=o("section"),Be=o("h2"),F=o("a"),St=a("The deployment"),Ct=h(),Q=o("p"),Dt=a("I use "),V=o("a"),$t=a("Github Pages"),qt=a(" to host this blog."),Rt=h(),Me=o("p"),O=o("span"),ue=o("picture"),Ne=o("source"),b=o("img"),Bt=h(),G=o("p"),Mt=a("According to the settings, I am required to use "),ve=o("code"),Nt=a("master"),Wt=a(" branch to serve the content, that's why I am writing and developing in "),ye=o("code"),Lt=a("dev"),Ht=a(" branch instead."),zt=h(),X=o("p"),Ut=a("To deploy, I added a "),Z=o("a"),Ft=a("publish.js"),Qt=a(" script. The script will clone the repo in a temporary folder, copy all the built files into the folder, make a commit and push it to the master branch."),Vt=h(),j=o("p"),Xt=a("Lastly, I added the script to the "),ke=o("code"),Zt=a("pre-push"),Jt=a(" git hook, so that every time when I am pushing changes to the "),fe=o("code"),Kt=a("dev"),Yt=a(' branch, it will also build and "deploy" changes to the '),me=o("code"),ea=a("master"),ta=a(" branch."),at=h(),p=o("section"),We=o("h2"),J=o("a"),aa=a("The light & dark mode"),sa=h(),R=o("p"),K=o("a"),oa=a("Wei"),ra=a(" did a sharing on how mix blend mode works and how she "),Y=o("a"),la=a("added night mode using mix-blend-mode"),na=a(" on her site."),ia=h(),ee=o("p"),pa=a("So I decided to add my own "),te=o("a"),ca=a("Dark Mode Switch"),ha=a(" as well."),da=h(),ae=o("p"),ua=a("The Dark Mode Switch was relatively easy. I added a pseudo-element "),_e=o("code"),va=a("div#___gatsby::after"),ya=a(" to cover over my entire Gatsby blog, so I don't have to create another div element."),ka=h(),ge=o("div"),fa=h(),Le=o("p"),ma=a("It's easy and it looks great, except, all my images and emojis are inverted. \u{1F622}"),_a=h(),He=o("p"),S=o("span"),be=o("picture"),ze=o("source"),w=o("img"),ga=h(),_=o("p"),ba=a("I need to wrap all my emojis around a "),we=o("code"),wa=a("<span>"),xa=a(" so I can apply some css like "),xe=o("code"),Ea=a("isolation: isolate"),Ia=a(" to exclude them from being blended. "),se=o("a"),Aa=a("Inspiration credits to huijing \u{1F44F}\u{1F44F}"),Ta=a(". But I am lazy to wrap all my emojis with "),Ee=o("code"),ja=a("<span>"),Pa=a(", I want to use them anytime I want, without bothering much of the "),Ie=o("code"),Oa=a("<span>"),Ga=a(", so I decided to write a gatsby remark plugin to do that for me. \u{1F60E}"),Sa=h(),Ue=o("p"),Ca=a("Well, it turns out it's not that hard."),Da=h(),B=o("p"),oe=o("a"),$a=a("Remark"),qa=a(" provides a friendly api to tap into the AST and "),re=o("a"),Ra=a("does transformation"),Ba=a("."),Ma=h(),Ae=o("div"),Na=h(),Fe=o("p"),Te=o("em"),Wa=a("using emoji-regex find emojis and wrap them with a "),st=o("span"),La=h(),Qe=o("p"),Ha=a("...and it works!"),za=h(),Ve=o("p"),Ua=a("Although somewhere when I started writing the gatsby plugin, a weird error popped up, and after some digging, I noticed that"),Fa=h(),le=o("p"),Qa=a("I had to include "),je=o("code"),Va=a("package.json"),Xa=a(" into the plugin folder, or else it will yell at me."),ot=h(),P=o("section"),Xe=o("h2"),ne=o("a"),Za=a("The Restructure"),Ja=h(),x=o("p"),Ka=a("A while ago, I decided to add more categories to my blog, ie, "),Pe=o("a"),Ya=a("my blogs"),es=a(", "),Oe=o("a"),ts=a("my talks"),as=a(" and "),Ge=o("a"),ss=a("my notes"),os=a(". So I created different folders for them and "),ie=o("a"),rs=a("rewrote the GraphQL query"),ls=h(),pe=o("p"),ns=a("The Graphql Editor in "),Se=o("code"),is=a("http://localhost:8000/___graphql"),ps=a(" is really helpful for me to understand how Gatsby and Gatsby plugins are creating all the objects."),this.h()},l(i){mo(v.$$.fragment,i),A=d(i),k=r(i,"P",{});var u=l(k);N=s(u,"After reading Dan's "),y=r(u,"A",{href:!0,rel:!0});var ks=l(y);T=s(ks,"Overreacted"),ks.forEach(t),he=s(u," & Wei's "),W=r(u,"A",{href:!0,rel:!0});var fs=l(W);kt=s(fs,"A Work in Progress"),fs.forEach(t),ft=s(u," a while ago, I decided to have my "),de=r(u,"A",{href:!0});var ms=l(de);mt=s(ms,"own blog"),ms.forEach(t),_t=s(u," as well! "),$e=r(u,"EM",{});var _s=l($e);gt=s(_s,"(In case you still don't know, it's the very one you are reading right now!)"),_s.forEach(t),u.forEach(t),Ke=d(i),D=r(i,"P",{});var lt=l(D);bt=s(lt,"I took it as an opportunity to learn "),L=r(lt,"A",{href:!0,rel:!0});var gs=l(L);wt=s(gs,"Gatsby"),gs.forEach(t),xt=s(lt,", I've heard about it for a while, so I guess it's to know how it works."),lt.forEach(t),Ye=d(i),$=r(i,"P",{});var nt=l($);Et=s(nt,"This article is "),qe=r(nt,"STRONG",{});var bs=l(qe);It=s(bs,"NOT about how to build a Gatsby site"),bs.forEach(t),At=s(nt,", there a lot resources about that you can go for. But I am here to share some of my customisations that I've added to my Gatsby site, and hopefully you would share yours too."),nt.forEach(t),et=d(i),q=r(i,"SECTION",{});var it=l(q);Re=r(it,"H2",{});var ws=l(Re);H=r(ws,"A",{href:!0,id:!0});var xs=l(H);Tt=s(xs,"The boilerplate"),xs.forEach(t),ws.forEach(t),jt=d(it),z=r(it,"P",{});var pt=l(z);Pt=s(pt,"I used the exact same Gatsby starter pack as Dan's "),U=r(pt,"A",{href:!0,rel:!0});var Es=l(U);Ot=s(Es,"Overreacted"),Es.forEach(t),Gt=s(pt,", because why not \xAF_(\u30C4)_/\xAF. It looks sleek and simple and I like it."),pt.forEach(t),it.forEach(t),tt=d(i),f=r(i,"SECTION",{});var E=l(f);Be=r(E,"H2",{});var Is=l(Be);F=r(Is,"A",{href:!0,id:!0});var As=l(F);St=s(As,"The deployment"),As.forEach(t),Is.forEach(t),Ct=d(E),Q=r(E,"P",{});var ct=l(Q);Dt=s(ct,"I use "),V=r(ct,"A",{href:!0,rel:!0});var Ts=l(V);$t=s(Ts,"Github Pages"),Ts.forEach(t),qt=s(ct," to host this blog."),ct.forEach(t),Rt=d(E),Me=r(E,"P",{});var js=l(Me);O=r(js,"SPAN",{style:!0});var Ps=l(O);ue=r(Ps,"PICTURE",{});var cs=l(ue);Ne=r(cs,"SOURCE",{type:!0,srcset:!0}),b=r(cs,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0,title:!0}),cs.forEach(t),Ps.forEach(t),js.forEach(t),Bt=d(E),G=r(E,"P",{});var Ce=l(G);Mt=s(Ce,"According to the settings, I am required to use "),ve=r(Ce,"CODE",{class:!0});var Os=l(ve);Nt=s(Os,"master"),Os.forEach(t),Wt=s(Ce," branch to serve the content, that's why I am writing and developing in "),ye=r(Ce,"CODE",{class:!0});var Gs=l(ye);Lt=s(Gs,"dev"),Gs.forEach(t),Ht=s(Ce," branch instead."),Ce.forEach(t),zt=d(E),X=r(E,"P",{});var ht=l(X);Ut=s(ht,"To deploy, I added a "),Z=r(ht,"A",{href:!0,rel:!0});var Ss=l(Z);Ft=s(Ss,"publish.js"),Ss.forEach(t),Qt=s(ht," script. The script will clone the repo in a temporary folder, copy all the built files into the folder, make a commit and push it to the master branch."),ht.forEach(t),Vt=d(E),j=r(E,"P",{});var M=l(j);Xt=s(M,"Lastly, I added the script to the "),ke=r(M,"CODE",{class:!0});var Cs=l(ke);Zt=s(Cs,"pre-push"),Cs.forEach(t),Jt=s(M," git hook, so that every time when I am pushing changes to the "),fe=r(M,"CODE",{class:!0});var Ds=l(fe);Kt=s(Ds,"dev"),Ds.forEach(t),Yt=s(M,' branch, it will also build and "deploy" changes to the '),me=r(M,"CODE",{class:!0});var $s=l(me);ea=s($s,"master"),$s.forEach(t),ta=s(M," branch."),M.forEach(t),E.forEach(t),at=d(i),p=r(i,"SECTION",{});var c=l(p);We=r(c,"H2",{});var qs=l(We);J=r(qs,"A",{href:!0,id:!0});var Rs=l(J);aa=s(Rs,"The light & dark mode"),Rs.forEach(t),qs.forEach(t),sa=d(c),R=r(c,"P",{});var Ze=l(R);K=r(Ze,"A",{href:!0,rel:!0});var Bs=l(K);oa=s(Bs,"Wei"),Bs.forEach(t),ra=s(Ze," did a sharing on how mix blend mode works and how she "),Y=r(Ze,"A",{href:!0,rel:!0});var Ms=l(Y);la=s(Ms,"added night mode using mix-blend-mode"),Ms.forEach(t),na=s(Ze," on her site."),Ze.forEach(t),ia=d(c),ee=r(c,"P",{});var dt=l(ee);pa=s(dt,"So I decided to add my own "),te=r(dt,"A",{href:!0,rel:!0});var Ns=l(te);ca=s(Ns,"Dark Mode Switch"),Ns.forEach(t),ha=s(dt," as well."),dt.forEach(t),da=d(c),ae=r(c,"P",{});var ut=l(ae);ua=s(ut,"The Dark Mode Switch was relatively easy. I added a pseudo-element "),_e=r(ut,"CODE",{class:!0});var Ws=l(_e);va=s(Ws,"div#___gatsby::after"),Ws.forEach(t),ya=s(ut," to cover over my entire Gatsby blog, so I don't have to create another div element."),ut.forEach(t),ka=d(c),ge=r(c,"DIV",{class:!0});var Io=l(ge);Io.forEach(t),fa=d(c),Le=r(c,"P",{});var Ls=l(Le);ma=s(Ls,"It's easy and it looks great, except, all my images and emojis are inverted. \u{1F622}"),Ls.forEach(t),_a=d(c),He=r(c,"P",{});var Hs=l(He);S=r(Hs,"SPAN",{style:!0});var zs=l(S);be=r(zs,"PICTURE",{});var hs=l(be);ze=r(hs,"SOURCE",{type:!0,srcset:!0}),w=r(hs,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0,title:!0}),hs.forEach(t),zs.forEach(t),Hs.forEach(t),ga=d(c),_=r(c,"P",{});var I=l(_);ba=s(I,"I need to wrap all my emojis around a "),we=r(I,"CODE",{class:!0});var Us=l(we);wa=s(Us,"<span>"),Us.forEach(t),xa=s(I," so I can apply some css like "),xe=r(I,"CODE",{class:!0});var Fs=l(xe);Ea=s(Fs,"isolation: isolate"),Fs.forEach(t),Ia=s(I," to exclude them from being blended. "),se=r(I,"A",{href:!0,rel:!0});var Qs=l(se);Aa=s(Qs,"Inspiration credits to huijing \u{1F44F}\u{1F44F}"),Qs.forEach(t),Ta=s(I,". But I am lazy to wrap all my emojis with "),Ee=r(I,"CODE",{class:!0});var Vs=l(Ee);ja=s(Vs,"<span>"),Vs.forEach(t),Pa=s(I,", I want to use them anytime I want, without bothering much of the "),Ie=r(I,"CODE",{class:!0});var Xs=l(Ie);Oa=s(Xs,"<span>"),Xs.forEach(t),Ga=s(I,", so I decided to write a gatsby remark plugin to do that for me. \u{1F60E}"),I.forEach(t),Sa=d(c),Ue=r(c,"P",{});var Zs=l(Ue);Ca=s(Zs,"Well, it turns out it's not that hard."),Zs.forEach(t),Da=d(c),B=r(c,"P",{});var Je=l(B);oe=r(Je,"A",{href:!0,rel:!0});var Js=l(oe);$a=s(Js,"Remark"),Js.forEach(t),qa=s(Je," provides a friendly api to tap into the AST and "),re=r(Je,"A",{href:!0,rel:!0});var Ks=l(re);Ra=s(Ks,"does transformation"),Ks.forEach(t),Ba=s(Je,"."),Je.forEach(t),Ma=d(c),Ae=r(c,"DIV",{class:!0});var Ao=l(Ae);Ao.forEach(t),Na=d(c),Fe=r(c,"P",{});var Ys=l(Fe);Te=r(Ys,"EM",{});var ds=l(Te);Wa=s(ds,"using emoji-regex find emojis and wrap them with a "),st=r(ds,"SPAN",{}),l(st).forEach(t),ds.forEach(t),Ys.forEach(t),La=d(c),Qe=r(c,"P",{});var eo=l(Qe);Ha=s(eo,"...and it works!"),eo.forEach(t),za=d(c),Ve=r(c,"P",{});var to=l(Ve);Ua=s(to,"Although somewhere when I started writing the gatsby plugin, a weird error popped up, and after some digging, I noticed that"),to.forEach(t),Fa=d(c),le=r(c,"P",{});var vt=l(le);Qa=s(vt,"I had to include "),je=r(vt,"CODE",{class:!0});var ao=l(je);Va=s(ao,"package.json"),ao.forEach(t),Xa=s(vt," into the plugin folder, or else it will yell at me."),vt.forEach(t),c.forEach(t),ot=d(i),P=r(i,"SECTION",{});var De=l(P);Xe=r(De,"H2",{});var so=l(Xe);ne=r(so,"A",{href:!0,id:!0});var oo=l(ne);Za=s(oo,"The Restructure"),oo.forEach(t),so.forEach(t),Ja=d(De),x=r(De,"P",{});var C=l(x);Ka=s(C,"A while ago, I decided to add more categories to my blog, ie, "),Pe=r(C,"A",{href:!0});var ro=l(Pe);Ya=s(ro,"my blogs"),ro.forEach(t),es=s(C,", "),Oe=r(C,"A",{href:!0});var lo=l(Oe);ts=s(lo,"my talks"),lo.forEach(t),as=s(C," and "),Ge=r(C,"A",{href:!0});var no=l(Ge);ss=s(no,"my notes"),no.forEach(t),os=s(C,". So I created different folders for them and "),ie=r(C,"A",{href:!0,rel:!0});var io=l(ie);rs=s(io,"rewrote the GraphQL query"),io.forEach(t),C.forEach(t),ls=d(De),pe=r(De,"P",{});var yt=l(pe);ns=s(yt,"The Graphql Editor in "),Se=r(yt,"CODE",{class:!0});var po=l(Se);is=s(po,"http://localhost:8000/___graphql"),po.forEach(t),ps=s(yt," is really helpful for me to understand how Gatsby and Gatsby plugins are creating all the objects."),yt.forEach(t),De.forEach(t),this.h()},h(){n(y,"href","https://overreacted.io"),n(y,"rel","nofollow"),n(W,"href","https://dev.wgao19.cc/"),n(W,"rel","nofollow"),n(de,"href","/blogs/"),n(L,"href","https://www.gatsbyjs.org/"),n(L,"rel","nofollow"),n(H,"href","#the-boilerplate"),n(H,"id","the-boilerplate"),n(U,"href","https://overreacted.io"),n(U,"rel","nofollow"),n(F,"href","#the-deployment"),n(F,"id","the-deployment"),n(V,"href","https://pages.github.com/"),n(V,"rel","nofollow"),n(Ne,"type","image/webp"),n(Ne,"srcset",No+", "+Mo+" 2x"),uo(b.src,vs=yo)||n(b,"src",vs),n(b,"srcset",yo+", "+Wo+" 2x"),n(b,"loading","lazy"),m(b,"position","absolute"),m(b,"top","0"),m(b,"width","100%"),m(b,"height","100%"),n(b,"alt","github pages settings"),n(b,"title","Github Pages Settings"),m(O,"display","block"),m(O,"position","relative"),m(O,"padding-top","80.214%"),m(O,"width","100%"),n(ve,"class","inline"),n(ye,"class","inline"),n(Z,"href","https://github.com/tanhauhau/tanhauhau.github.io/blob/dev/scripts/publish.js"),n(Z,"rel","nofollow"),n(ke,"class","inline"),n(fe,"class","inline"),n(me,"class","inline"),n(J,"href","#the-light-dark-mode"),n(J,"id","the-light-dark-mode"),n(K,"href","https://twitter.com/wgao19"),n(K,"rel","nofollow"),n(Y,"href","https://dev.wgao19.cc/2019-05-04__sun-moon-blending-mode/"),n(Y,"rel","nofollow"),n(te,"href","https://github.com/tanhauhau/tanhauhau.github.io/commit/291663d10cc7838d67392acb6a28a04a655603a6#diff-4e34e842430a5e2977417f28e477e14d"),n(te,"rel","nofollow"),n(_e,"class","inline"),n(ge,"class","code-section"),n(ze,"type","image/webp"),n(ze,"srcset",Ro+", "+qo+" 2x"),uo(w.src,ys=vo)||n(w,"src",ys),n(w,"srcset",vo+", "+Bo+" 2x"),n(w,"loading","lazy"),m(w,"position","absolute"),m(w,"top","0"),m(w,"width","100%"),m(w,"height","100%"),n(w,"alt","inverted emojis"),n(w,"title","It looked like emojis going through X-Rays.. \u{1F622}"),m(S,"display","block"),m(S,"position","relative"),m(S,"padding-top","55.677%"),m(S,"width","100%"),n(we,"class","inline"),n(xe,"class","inline"),n(se,"href","https://www.chenhuijing.com/blog/friends-dont-let-friends-implement-dark-mode-alone/#%F0%9F%92%BB"),n(se,"rel","nofollow"),n(Ee,"class","inline"),n(Ie,"class","inline"),n(oe,"href","https://github.com/remarkjs/remark"),n(oe,"rel","nofollow"),n(re,"href","https://github.com/tanhauhau/tanhauhau.github.io/commit/291663d10cc7838d67392acb6a28a04a655603a6#diff-1be49bbded0fd920136646bdb37f5b91"),n(re,"rel","nofollow"),n(Ae,"class","code-section"),n(je,"class","inline"),n(ne,"href","#the-restructure"),n(ne,"id","the-restructure"),n(Pe,"href","/blogs/"),n(Oe,"href","/talks/"),n(Ge,"href","/notes"),n(ie,"href","https://github.com/tanhauhau/tanhauhau.github.io/commit/50c82259749f7608d1c81062eac1f357b9437485"),n(ie,"rel","nofollow"),n(Se,"class","inline")},m(i,u){_o(v,i,u),g(i,A,u),g(i,k,u),e(k,N),e(k,y),e(y,T),e(k,he),e(k,W),e(W,kt),e(k,ft),e(k,de),e(de,mt),e(k,_t),e(k,$e),e($e,gt),g(i,Ke,u),g(i,D,u),e(D,bt),e(D,L),e(L,wt),e(D,xt),g(i,Ye,u),g(i,$,u),e($,Et),e($,qe),e(qe,It),e($,At),g(i,et,u),g(i,q,u),e(q,Re),e(Re,H),e(H,Tt),e(q,jt),e(q,z),e(z,Pt),e(z,U),e(U,Ot),e(z,Gt),g(i,tt,u),g(i,f,u),e(f,Be),e(Be,F),e(F,St),e(f,Ct),e(f,Q),e(Q,Dt),e(Q,V),e(V,$t),e(Q,qt),e(f,Rt),e(f,Me),e(Me,O),e(O,ue),e(ue,Ne),e(ue,b),e(f,Bt),e(f,G),e(G,Mt),e(G,ve),e(ve,Nt),e(G,Wt),e(G,ye),e(ye,Lt),e(G,Ht),e(f,zt),e(f,X),e(X,Ut),e(X,Z),e(Z,Ft),e(X,Qt),e(f,Vt),e(f,j),e(j,Xt),e(j,ke),e(ke,Zt),e(j,Jt),e(j,fe),e(fe,Kt),e(j,Yt),e(j,me),e(me,ea),e(j,ta),g(i,at,u),g(i,p,u),e(p,We),e(We,J),e(J,aa),e(p,sa),e(p,R),e(R,K),e(K,oa),e(R,ra),e(R,Y),e(Y,la),e(R,na),e(p,ia),e(p,ee),e(ee,pa),e(ee,te),e(te,ca),e(ee,ha),e(p,da),e(p,ae),e(ae,ua),e(ae,_e),e(_e,va),e(ae,ya),e(p,ka),e(p,ge),ge.innerHTML=xo,e(p,fa),e(p,Le),e(Le,ma),e(p,_a),e(p,He),e(He,S),e(S,be),e(be,ze),e(be,w),e(p,ga),e(p,_),e(_,ba),e(_,we),e(we,wa),e(_,xa),e(_,xe),e(xe,Ea),e(_,Ia),e(_,se),e(se,Aa),e(_,Ta),e(_,Ee),e(Ee,ja),e(_,Pa),e(_,Ie),e(Ie,Oa),e(_,Ga),e(p,Sa),e(p,Ue),e(Ue,Ca),e(p,Da),e(p,B),e(B,oe),e(oe,$a),e(B,qa),e(B,re),e(re,Ra),e(B,Ba),e(p,Ma),e(p,Ae),Ae.innerHTML=Eo,e(p,Na),e(p,Fe),e(Fe,Te),e(Te,Wa),e(Te,st),e(p,La),e(p,Qe),e(Qe,Ha),e(p,za),e(p,Ve),e(Ve,Ua),e(p,Fa),e(p,le),e(le,Qa),e(le,je),e(je,Va),e(le,Xa),g(i,ot,u),g(i,P,u),e(P,Xe),e(Xe,ne),e(ne,Za),e(P,Ja),e(P,x),e(x,Ka),e(x,Pe),e(Pe,Ya),e(x,es),e(x,Oe),e(Oe,ts),e(x,as),e(x,Ge),e(Ge,ss),e(x,os),e(x,ie),e(ie,rs),e(P,ls),e(P,pe),e(pe,ns),e(pe,Se),e(Se,is),e(pe,ps),rt=!0},p:So,i(i){rt||(go(v.$$.fragment,i),rt=!0)},o(i){bo(v.$$.fragment,i),rt=!1},d(i){wo(v,i),i&&t(A),i&&t(k),i&&t(Ke),i&&t(D),i&&t(Ye),i&&t($),i&&t(et),i&&t(q),i&&t(tt),i&&t(f),i&&t(at),i&&t(p),i&&t(ot),i&&t(P)}}}function Ho(ce){let v,A;const k=[ce[0],ko];let N={$$slots:{default:[Lo]},$$scope:{ctx:ce}};for(let y=0;y<k.length;y+=1)N=us(N,k[y]);return v=new Co({props:N}),{c(){fo(v.$$.fragment)},l(y){mo(v.$$.fragment,y)},m(y,T){_o(v,y,T),A=!0},p(y,[T]){const he=T&1?Oo(k,[T&1&&co(y[0]),T&0&&co(ko)]):{};T&2&&(he.$$scope={dirty:T,ctx:y}),v.$set(he)},i(y){A||(go(v.$$.fragment,y),A=!0)},o(y){bo(v.$$.fragment,y),A=!1},d(y){wo(v,y)}}}const ko={title:"Building my Gatsby site",date:"2019-07-02T08:00:00Z",description:"A work in progress",wip:!0,label:"blog"};function zo(ce,v,A){return Go("blog",{image:$o}),ce.$$set=k=>{A(0,v=us(us({},v),ho(k)))},v=ho(v),[v]}class Ko extends To{constructor(v){super();jo(this,v,zo,Ho,Po,{})}}export{Ko as default,ko as metadata};
