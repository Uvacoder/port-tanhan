import{S as a2,i as r2,s as o2,C as uh,w as Wu,x as Uu,y as $u,z as l2,A as Du,q as Ju,o as Gu,B as Bu,r as n2,R as Lu,k as i,e as s,t as o,m as p,c as a,a as r,h as l,d as t,b as n,Q as lo,f as h,g as f,F as e,O as c2}from"../../chunks/vendor-569a3c5c.js";import{B as i2}from"../../chunks/BlogLayout-17b76cb2.js";import{T as p2}from"../../chunks/TableOfContent-dbc18cb8.js";import"../../chunks/stores-ee936cd4.js";import"../../chunks/WebMentions-968cc380.js";/* empty css                                */var d2="/_app/assets/step-4-6a79547d.webp",h2="/_app/assets/step-4-997f18e1.webp",f2="/_app/assets/step-4-c91b1333.png",Ru="/_app/assets/step-4-533a8fe0.png",v2="/_app/assets/step-3-272528bb.webp",u2="/_app/assets/step-3-faffd8b6.webp",_2="/_app/assets/step-3-14370199.png",Pu="/_app/assets/step-3-45c82f40.png",m2="/_app/assets/step-2-3ee1ae1e.webp",k2="/_app/assets/step-2-a5607e12.webp",b2="/_app/assets/step-2-9777da8f.png",ju="/_app/assets/step-2-09f9fb5b.png",E2="/_app/assets/step-1-1881d02d.webp",y2="/_app/assets/step-1-61461261.webp",g2="/_app/assets/step-1-f3360fc2.png",Mu="/_app/assets/step-1-e3e542b8.png",w2="/_app/assets/overview-3e214559.webp",S2="/_app/assets/overview-9793d290.webp",x2="/_app/assets/overview-e7425ff1.png",Hu="/_app/assets/overview-22f28dba.png",C2="/_app/assets/hero-twitter-87e98179.jpg";function T2(ds){let u,$,g,ne,_,J,hs,Za,Qo,Zo,ze,Ka,Ko,Xo,Xa,el,no,w,er,Ve,tl,sl,tr,ce,fs,sr,D,_h,al,ar,rl,ol,G,rr,ll,nl,or,cl,il,lr,pl,dl,nr,hl,fl,cr,vl,ul,vs,Fu=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">source</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.readFileSync</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;App.svelte&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// parse source code into AST</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ast</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">parse</span><span style="color: var(--shiki-color-text)">(source);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// tracking references and dependencies</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">component</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Component</span><span style="color: var(--shiki-color-text)">(ast);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// creating code blocks and fragments</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">renderer</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">options</span><span style="color: var(--shiki-color-text)">.generate </span><span style="color: var(--shiki-token-keyword)">===</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;ssr&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">?</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">SSRRenderer</span><span style="color: var(--shiki-color-text)">(component) </span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">DomRenderer</span><span style="color: var(--shiki-color-text)">(component);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// Generate code</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-constant)">js</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">css</span><span style="color: var(--shiki-color-text)"> &#125; </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">renderer</span><span style="color: var(--shiki-token-function)">.render</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.writeFileSync</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;App.js&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> js);</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.writeFileSync</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;App.css&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> css);</span></span></code></pre>`,co,v,ir,Ye,_l,ml,pr,ie,us,dr,L,mh,kl,_s,zu=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// parse source code into AST</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ast</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">parse</span><span style="color: var(--shiki-color-text)">(source);</span></span></code></pre>`,bl,hr,El,yl,pe,ms,gl,ks,wl,Sl,bs,xl,Es,Cl,Tl,ys,Al,gs,Ol,Il,de,Dl,ws,Ll,Rl,Ss,Pl,jl,Ml,O,Hl,xs,Nl,Wl,qe,Ul,$l,Cs,Jl,Gl,Qe,Bl,Fl,zl,he,Vl,Ts,Yl,ql,As,Ql,Zl,Kl,fr,Xl,en,Os,Vu=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  html</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &#123; type</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Fragment&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> children</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-keyword)">...</span><span style="color: var(--shiki-color-text)">] &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  css</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-keyword)">...</span><span style="color: var(--shiki-color-text)"> &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  instance</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &#123; context</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;default&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> content</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span><span style="color: var(--shiki-token-keyword)">...</span><span style="color: var(--shiki-color-text)">&#125; &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  module</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &#123; context</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;context&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> content</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span><span style="color: var(--shiki-token-keyword)">...</span><span style="color: var(--shiki-color-text)">&#125; &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,tn,fe,sn,Ze,an,rn,vr,on,ln,io,Ce,ur,Ke,nn,cn,ve,pn,Xe,dn,hn,et,fn,vn,po,Z,_r,tt,un,_n,st,mn,Is,kn,bn,En,mr,yn,ho,R,kr,at,gn,wn,br,ue,Ds,Er,P,kh,Sn,Ls,Yu=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// tracking references and dependencies</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">component</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Component</span><span style="color: var(--shiki-color-text)">(ast);</span></span></code></pre>`,xn,yr,Cn,fo,K,gr,_e,Tn,Rs,An,On,In,rt,Dn,Ps,Ln,Rn,Pn,b,js,jn,ot,Ms,Mn,Hn,Te,Nn,lt,Hs,Wn,Un,nt,Ns,$n,Jn,Ws,Gn,ct,Us,Bn,Fn,$s,zn,it,Js,Vn,Yn,Gs,qn,pt,Bs,Qn,Zn,Fs,dt,Kn,Xn,ec,ht,ft,tc,sc,vt,ac,rc,ut,_t,oc,lc,mt,nc,vo,X,wr,kt,cc,ic,Ae,zs,pc,dc,Sr,hc,fc,vc,bt,uc,Vs,_c,mc,uo,m,xr,Et,kc,bc,yt,Ec,gt,yc,gc,wc,Cr,Sc,xc,Tr,Ar,Cc,Tc,me,Ac,Ys,Oc,Ic,qs,Dc,Lc,Rc,Or,Ir,Pc,jc,ee,Qs,Mc,Hc,Zs,Nc,Wc,Ks,Uc,$c,Jc,Dr,Gc,Bc,B,C,wt,Fc,zc,St,Vc,Yc,xt,qc,Qc,Ct,Zc,Kc,Tt,Xc,ei,ti,Oe,At,si,ai,Xs,ri,oi,li,te,Ot,ni,ci,ea,ii,pi,ta,di,hi,fi,Lr,vi,_o,j,Rr,It,ui,_i,Pr,mi,ki,jr,bi,Ei,Dt,Lt,yi,sa,gi,wi,Si,Mr,xi,mo,se,Hr,Rt,Ci,Ti,Pt,Ai,aa,Oi,Ii,Di,Nr,Li,ko,Ie,Wr,jt,Ri,Pi,F,ji,Mt,Mi,Hi,ra,Ni,Wi,Ht,Ui,$i,bo,De,Ur,Nt,Ji,Gi,Wt,Bi,oa,Fi,zi,Eo,M,$r,Ut,Vi,Yi,Jr,ke,la,Gr,H,bh,qi,na,qu=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// creating code blocks and fragments</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">renderer</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">options</span><span style="color: var(--shiki-color-text)">.generate </span><span style="color: var(--shiki-token-keyword)">===</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;ssr&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">?</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">SSRRenderer</span><span style="color: var(--shiki-color-text)">(component) </span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">DomRenderer</span><span style="color: var(--shiki-color-text)">(component);</span></span></code></pre>`,Qi,z,Zi,ca,Ki,Xi,$t,ep,be,tp,ia,sp,ap,rp,op,pa,lp,np,yo,S,Br,Jt,cp,ip,Ee,pp,Gt,dp,hp,Bt,fp,vp,up,ye,_p,Ft,mp,kp,da,ha,bp,Ep,yp,ge,gp,fa,wp,Sp,va,xp,Cp,Tp,zt,Ap,Vt,Op,Ip,Dp,Yt,Lp,ua,Rp,Pp,go,Le,Fr,qt,jp,Mp,V,Hp,Qt,Np,Wp,Zt,_a,Up,$p,Kt,ma,Jp,Gp,wo,Re,zr,we,Bp,ka,Fp,zp,Vp,Se,Yp,Xt,qp,Qp,es,Zp,Kp,So,E,Vr,ts,Xp,ed,Yr,xe,ba,qr,N,Eh,td,Ea,Qu=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// Generate code</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-constant)">js</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">css</span><span style="color: var(--shiki-color-text)"> &#125; </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">renderer</span><span style="color: var(--shiki-token-function)">.render</span><span style="color: var(--shiki-color-text)">();</span></span></code></pre>`,sd,Qr,ad,rd,T,Zr,od,ld,ya,nd,cd,ga,id,pd,wa,dd,hd,Sa,fd,vd,ud,Pe,Kr,_d,md,ss,kd,bd,Ed,I,yd,xa,gd,wd,Ca,Sd,xd,as,Cd,Td,rs,Ad,Od,xo,ae,Xr,os,Id,Dd,ls,Ld,ns,Rd,Pd,jd,Y,re,Md,Ta,Hd,Nd,Aa,Wd,Ud,Oa,$d,Jd,je,Gd,Ia,Bd,Fd,Da,zd,Vd,Me,Yd,La,qd,Qd,Ra,Zd,Kd,Pa,Xd,ja,eh,Co;return u=new p2({props:{data:[{link:"who-is-this-for",title:"Who is this for?"},{link:"overview",title:"Overview"},{link:"1-parsing-source-code-into-ast",title:"1. Parsing source code into AST",nested:[{link:"where-can-i-find-the-parser-in-the-source-code",title:"Where can I find the parser in the source code?"},{link:"where-can-i-learn-about-parsing-in-javascript",title:"Where can I learn about parsing in JavaScript?"}]},{link:"2-tracking-references-and-dependencies",title:"2. Tracking references and dependencies",nested:[{link:"a-svelte-creates-a-component-instance",title:"a. Svelte creates a  `Component`  instance."},{link:"b-traverse-the-instance-script-and-module-script-ast",title:"b. Traverse the instance script and module script AST"},{link:"c-traverse-the-template",title:"c. Traverse the template"},{link:"d-traverse-the-instance-script-ast",title:"d. Traverse the instance script AST"},{link:"e-update-css-selectors-to-make-style-declarations-component-scope",title:"e. Update CSS selectors to make style declarations component scope"},{link:"where-can-i-find-this-in-the-source-code",title:"Where can I find this in the source code?"},{link:"where-can-i-learn-about-traversing-in-javascript",title:"Where can I learn about traversing in JavaScript?"}]},{link:"3-creating-code-blocks-and-fragments",title:"3. Creating code blocks and fragments",nested:[{link:"dom-renderer",title:"DOM Renderer"},{link:"ssr-renderer",title:"SSR Renderer"},{link:"where-can-i-find-the-renderer-in-the-source-code",title:"Where can I find the  `Renderer`  in the source code?"}]},{link:"4-generate-code",title:"4. Generate code"},{link:"svelte-runtime",title:"Svelte runtime"}]}}),{c(){Wu(u.$$.fragment),$=i(),g=s("section"),ne=s("h2"),_=s("a"),J=o("Who is this for?"),hs=i(),Za=s("p"),Qo=o("Anyone who"),Zo=i(),ze=s("ul"),Ka=s("li"),Ko=o("is interested in the Svelte compilation process"),Xo=i(),Xa=s("li"),el=o("wants to get started in reading Svelte source code"),no=i(),w=s("section"),er=s("h2"),Ve=s("a"),tl=o("Overview"),sl=i(),tr=s("p"),ce=s("span"),fs=s("picture"),sr=s("source"),D=s("img"),al=i(),ar=s("p"),rl=o("The Svelte compilation process can be broken down into 4-steps"),ol=i(),G=s("ul"),rr=s("li"),ll=o("Parsing source code into Abstract Syntax Tree (AST)"),nl=i(),or=s("li"),cl=o("Tracking references and dependencies"),il=i(),lr=s("li"),pl=o("Creating code blocks and fragments"),dl=i(),nr=s("li"),hl=o("Generate code"),fl=i(),cr=s("p"),vl=o("Which sums out by the following pseudocode:"),ul=i(),vs=s("div"),co=i(),v=s("section"),ir=s("h2"),Ye=s("a"),_l=o("1. Parsing source code into AST"),ml=i(),pr=s("p"),ie=s("span"),us=s("picture"),dr=s("source"),L=s("img"),kl=i(),_s=s("div"),bl=i(),hr=s("p"),El=o("The Svelte syntax is a superset of HTML. Svelte implements its own parser for the Svelte syntax, which handles:"),yl=i(),pe=s("ul"),ms=s("li"),gl=o("HTML syntax "),ks=s("code"),wl=o("<div>"),Sl=i(),bs=s("li"),xl=o("Curly brackets "),Es=s("code"),Cl=o("{ data }"),Tl=i(),ys=s("li"),Al=o("Logic blocks "),gs=s("code"),Ol=o("{#each list as item}"),Il=i(),de=s("p"),Dl=o("The Svelte parser handles specially for "),ws=s("code"),Ll=o("<script>"),Rl=o(" and "),Ss=s("code"),Pl=o("<style>"),jl=o(" tags."),Ml=i(),O=s("p"),Hl=o("When the parser encounters a "),xs=s("code"),Nl=o("<script>"),Wl=o(" tag, it uses "),qe=s("a"),Ul=o("acorn"),$l=o(" to parse the content within the tag. When the parser sees a "),Cs=s("code"),Jl=o("<style>"),Gl=o(" tag, it uses "),Qe=s("a"),Bl=o("css-tree"),Fl=o(" to parse the CSS content."),zl=i(),he=s("p"),Vl=o("Besides, the Svelte parser differentiates instance script, "),Ts=s("code"),Yl=o("<script>"),ql=o(", and module script, "),As=s("code"),Ql=o('<script context="module">'),Zl=o("."),Kl=i(),fr=s("p"),Xl=o("The Svelte AST look like:"),en=i(),Os=s("div"),tn=i(),fe=s("p"),sn=o("You can try out the Svelte parser in "),Ze=s("a"),an=o("ASTExplorer"),rn=o(". You can find the Svelte parser under "),vr=s("strong"),on=o("HTML > Svelte"),ln=o("."),io=i(),Ce=s("section"),ur=s("h3"),Ke=s("a"),nn=o("Where can I find the parser in the source code?"),cn=i(),ve=s("p"),pn=o("The parsing "),Xe=s("a"),dn=o("starts here"),hn=o(", which the parser is implemented in "),et=s("a"),fn=o("src/compiler/parse/index.ts"),vn=o("."),po=i(),Z=s("section"),_r=s("h3"),tt=s("a"),un=o("Where can I learn about parsing in JavaScript?"),_n=i(),st=s("p"),mn=o("My previous article, "),Is=s("a"),kn=o('"JSON Parser with JavaScript"'),bn=o(" introduces the terminology and guides you step-by-step on writing a parser for JSON in JavaScript."),En=i(),mr=s("p"),yn=o("If this is the your first time learning about parser, I highly recommend you to read that."),ho=i(),R=s("section"),kr=s("h2"),at=s("a"),gn=o("2. Tracking references and dependencies"),wn=i(),br=s("p"),ue=s("span"),Ds=s("picture"),Er=s("source"),P=s("img"),Sn=i(),Ls=s("div"),xn=i(),yr=s("p"),Cn=o("In this step, Svelte traverses through the AST to track all the variable declared and referenced and their depedencies."),fo=i(),K=s("section"),gr=s("h3"),_e=s("a"),Tn=o("a. Svelte creates a "),Rs=s("code"),An=o("Component"),On=o(" instance."),In=i(),rt=s("p"),Dn=o("The "),Ps=s("code"),Ln=o("Component"),Rn=o(" class stores information of the Svelte component, which includes:"),Pn=i(),b=s("ul"),js=s("li"),jn=o("HTML fragment, "),ot=s("a"),Ms=s("code"),Mn=o("fragment"),Hn=i(),Te=s("li"),Nn=o("instance script and module script AST and their lexical scopes, "),lt=s("a"),Hs=s("code"),Wn=o("instance_scope"),Un=o(" and "),nt=s("a"),Ns=s("code"),$n=o("module_scope"),Jn=i(),Ws=s("li"),Gn=o("instance variables, "),ct=s("a"),Us=s("code"),Bn=o("vars"),Fn=i(),$s=s("li"),zn=o("reactive variables, "),it=s("a"),Js=s("code"),Vn=o("reactive_declarations"),Yn=i(),Gs=s("li"),qn=o("slots, "),pt=s("a"),Bs=s("code"),Qn=o("slots"),Zn=i(),Fs=s("li"),dt=s("a"),Kn=o("used variable names"),Xn=o(" to prevent naming conflict when creating temporary variables"),ec=i(),ht=s("li"),ft=s("a"),tc=o("warnings"),sc=o(" and "),vt=s("a"),ac=o("errors"),rc=i(),ut=s("li"),_t=s("a"),oc=o("compile options"),lc=o(" and "),mt=s("a"),nc=o("ignored warnings"),vo=i(),X=s("section"),wr=s("h3"),kt=s("a"),cc=o("b. Traverse the instance script and module script AST"),ic=i(),Ae=s("p"),zs=s("code"),pc=o("Component"),dc=o(" traverses the instance script and module script AST to "),Sr=s("strong"),hc=o("find out all the variables declared, referenced, and updated"),fc=o(" within the instance script and module script."),vc=i(),bt=s("p"),uc=o("Svelte identifies all the variables available before traversing the template. When encountering the variable during template traversal, Svelte will mark the variable as "),Vs=s("code"),_c=o("referenced"),mc=o(" from template."),uo=i(),m=s("section"),xr=s("h3"),Et=s("a"),kc=o("c. Traverse the template"),bc=i(),yt=s("p"),Ec=o("Svelte traverses through the template AST and creates a "),gt=s("a"),yc=o("Fragment"),gc=o(" tree out of the template AST."),wc=i(),Cr=s("p"),Sc=o("Each fragment node contains information such as:"),xc=i(),Tr=s("p"),Ar=s("strong"),Cc=o("- expression and dependencies"),Tc=i(),me=s("p"),Ac=o("Logic blocks, "),Ys=s("code"),Oc=o("{#if}"),Ic=o(", and mustache tags, "),qs=s("code"),Dc=o("{ data }"),Lc=o(", contain expression and the dependencies of the expression."),Rc=i(),Or=s("p"),Ir=s("strong"),Pc=o("- scope"),jc=i(),ee=s("p"),Qs=s("code"),Mc=o("{#each}"),Hc=o(" and "),Zs=s("code"),Nc=o("{#await}"),Wc=o(" logic block and "),Ks=s("code"),Uc=o("let:"),$c=o(" binding create new variables for the children template."),Jc=i(),Dr=s("p"),Gc=o("Svelte creates a different Fragment node for each type of node in the AST, as different kind of Fragment node handles things differently:"),Bc=i(),B=s("ul"),C=s("li"),wt=s("a"),Fc=o("Element node"),zc=o(" validates the "),St=s("a"),Vc=o("attribute"),Yc=o(", "),xt=s("a"),qc=o("bindings"),Qc=o(", "),Ct=s("a"),Zc=o("content"),Kc=o(" and "),Tt=s("a"),Xc=o("event handlers"),ei=o("."),ti=i(),Oe=s("li"),At=s("a"),si=o("Slot node"),ai=o(" registers the slot name to the "),Xs=s("code"),ri=o("Component"),oi=o("."),li=i(),te=s("li"),Ot=s("a"),ni=o("EachBlock node"),ci=o(" creates a new scope and tracks the "),ea=s("code"),ii=o("key"),pi=o(", "),ta=s("code"),di=o("index"),hi=o(" and the name of the list to be iterated."),fi=i(),Lr=s("li"),vi=o("..."),_o=i(),j=s("section"),Rr=s("h3"),It=s("a"),ui=o("d. Traverse the instance script AST"),_i=i(),Pr=s("p"),mi=o("After traversing through the template, Svelte now knows whether a variable is ever being updated or referenced in the component."),ki=i(),jr=s("p"),bi=o("With this information, Svelte tries make preparations for optimising the output, for example:"),Ei=i(),Dt=s("ul"),Lt=s("li"),yi=o("determine which variables or functions can be safely hoisted out of the "),sa=s("code"),gi=o("instance"),wi=o(" function."),Si=i(),Mr=s("li"),xi=o("determine reactive declarations that does not need to be reactive"),mo=i(),se=s("section"),Hr=s("h3"),Rt=s("a"),Ci=o("e. Update CSS selectors to make style declarations component scope"),Ti=i(),Pt=s("p"),Ai=o("Svelte updates the CSS selectors, by adding "),aa=s("code"),Oi=o(".svelte-xxx"),Ii=o(" class to the selectors when necessary."),Di=i(),Nr=s("p"),Li=o("At the end of this step, Svelte has enough information to generate the compiled code, which brings us to the next step."),ko=i(),Ie=s("section"),Wr=s("h3"),jt=s("a"),Ri=o("Where can I find this in the source code?"),Pi=i(),F=s("p"),ji=o("You can start reading "),Mt=s("a"),Mi=o("from here"),Hi=o(", which the "),ra=s("code"),Ni=o("Component"),Wi=o(" is implemented in "),Ht=s("a"),Ui=o("src/compiler/compile/Component.ts"),$i=o("."),bo=i(),De=s("section"),Ur=s("h3"),Nt=s("a"),Ji=o("Where can I learn about traversing in JavaScript?"),Gi=i(),Wt=s("p"),Bi=o("Bear with my shameless plug, my previous article, "),oa=s("a"),Fi=o('"Manipulating AST with JavaScript"'),zi=o(" covers relevant knowledge you need to know about traversing AST in JavaScript."),Eo=i(),M=s("section"),$r=s("h2"),Ut=s("a"),Vi=o("3. Creating code blocks and fragments"),Yi=i(),Jr=s("p"),ke=s("span"),la=s("picture"),Gr=s("source"),H=s("img"),qi=i(),na=s("div"),Qi=i(),z=s("p"),Zi=o("In this step, Svelte creates a "),ca=s("code"),Ki=o("Renderer"),Xi=o(" instance which keeps track necessary information required to generate the compiled output. Depending on the whether to output DOM or SSR code "),$t=s("em"),ep=o("("),be=s("a"),tp=o("see "),ia=s("code"),sp=o("generate"),ap=o(" in compile options"),rp=o(")"),op=o(", Svelte instantiates different "),pa=s("code"),lp=o("Renderer"),np=o(" respectively."),yo=i(),S=s("section"),Br=s("h3"),Jt=s("a"),cp=o("DOM Renderer"),ip=i(),Ee=s("p"),pp=o("DOM Renderer keeps track of "),Gt=s("a"),dp=o("a list of blocks"),hp=o(" and "),Bt=s("a"),fp=o("context"),vp=o("."),up=i(),ye=s("p"),_p=o("A "),Ft=s("a"),mp=o("Block"),kp=o(" contains code fragments for generate the "),da=s("a"),ha=s("code"),bp=o("create_fragment"),Ep=o(" function."),yp=i(),ge=s("p"),gp=o("Context tracks a list of "),fa=s("a"),wp=o("instance variables"),Sp=o(" which will be presented in the "),va=s("code"),xp=o("$$.ctx"),Cp=o(" in the compiled output."),Tp=i(),zt=s("p"),Ap=o("In the renderer, Svelte creates a "),Vt=s("a"),Op=o("render tree"),Ip=o(" out of the Fragment tree."),Dp=i(),Yt=s("p"),Lp=o("Each node in the render tree implements the "),ua=s("code"),Rp=o("render"),Pp=o(" function which generate codes that create and update the DOM for the node."),go=i(),Le=s("section"),Fr=s("h3"),qt=s("a"),jp=o("SSR Renderer"),Mp=i(),V=s("p"),Hp=o("SSR Renderer provide helpers to generate "),Qt=s("a"),Np=o("template literals"),Wp=o(" in the compiled output, such as "),Zt=s("a"),_a=s("code"),Up=o("add_string(str)"),$p=o(" and "),Kt=s("a"),ma=s("code"),Jp=o("add_expression(node)"),Gp=o("."),wo=i(),Re=s("section"),zr=s("h3"),we=s("a"),Bp=o("Where can I find the "),ka=s("code"),Fp=o("Renderer"),zp=o(" in the source code?"),Vp=i(),Se=s("p"),Yp=o("The DOM Renderer is implemented in "),Xt=s("a"),qp=o("src/compiler/compile/render_dom/Renderer.ts"),Qp=o(", and you can check out the SSR Renderer code in "),es=s("a"),Zp=o("src/compiler/compile/render_ssr/Renderer.ts"),Kp=o("."),So=i(),E=s("section"),Vr=s("h2"),ts=s("a"),Xp=o("4. Generate code"),ed=i(),Yr=s("p"),xe=s("span"),ba=s("picture"),qr=s("source"),N=s("img"),td=i(),Ea=s("div"),sd=i(),Qr=s("p"),ad=o("Different renderer renders differently."),rd=i(),T=s("p"),Zr=s("strong"),od=o("The DOM Renderer"),ld=o(" traverses through the render tree and calls the "),ya=s("code"),nd=o("render"),cd=o(" function of each node along the way. The "),ga=s("code"),id=o("Block"),pd=o(" instance is passed into the "),wa=s("code"),dd=o("render"),hd=o(" function, so that each node inserts the code into the appropriate "),Sa=s("code"),fd=o("create_fragment"),vd=o(" function."),ud=i(),Pe=s("p"),Kr=s("strong"),_d=o("The SSR Renderer"),md=o(", on the other hand, relies on different "),ss=s("a"),kd=o("node handlers"),bd=o(" to insert strings or expressions into the final template literal."),Ed=i(),I=s("p"),yd=o("The render function returns "),xa=s("code"),gd=o("js"),wd=o(" and "),Ca=s("code"),Sd=o("css"),xd=o(" which will be consumed by the bundler, via "),as=s("a"),Cd=o("rollup-plugin-svelte"),Td=o(" for rollup and "),rs=s("a"),Ad=o("svelte-loader"),Od=o(" for webpack respectively."),xo=i(),ae=s("section"),Xr=s("h2"),os=s("a"),Id=o("Svelte runtime"),Dd=i(),ls=s("p"),Ld=o("To remove duplicate code in the compiled output, Svelte provide util function which can be found in the "),ns=s("a"),Rd=o("src/runtime/internal"),Pd=o(", such as:"),jd=i(),Y=s("ul"),re=s("li"),Md=o("dom related utils, eg: "),Ta=s("code"),Hd=o("append"),Nd=o(", "),Aa=s("code"),Wd=o("insert"),Ud=o(", "),Oa=s("code"),$d=o("detach"),Jd=i(),je=s("li"),Gd=o("scheduling utils, eg: "),Ia=s("code"),Bd=o("schedule_update"),Fd=o(", "),Da=s("code"),zd=o("flush"),Vd=i(),Me=s("li"),Yd=o("lifecycle utils, eg: "),La=s("code"),qd=o("onMount"),Qd=o(", "),Ra=s("code"),Zd=o("beforeUpdate"),Kd=i(),Pa=s("li"),Xd=o("animation utils, eg: "),ja=s("code"),eh=o("create_animation"),this.h()},l(c){Uu(u.$$.fragment,c),$=p(c),g=a(c,"SECTION",{});var d=r(g);ne=a(d,"H2",{});var yh=r(ne);_=a(yh,"A",{href:!0,id:!0});var gh=r(_);J=l(gh,"Who is this for?"),gh.forEach(t),yh.forEach(t),hs=p(d),Za=a(d,"P",{});var wh=r(Za);Qo=l(wh,"Anyone who"),wh.forEach(t),Zo=p(d),ze=a(d,"UL",{});var To=r(ze);Ka=a(To,"LI",{});var Sh=r(Ka);Ko=l(Sh,"is interested in the Svelte compilation process"),Sh.forEach(t),Xo=p(To),Xa=a(To,"LI",{});var xh=r(Xa);el=l(xh,"wants to get started in reading Svelte source code"),xh.forEach(t),To.forEach(t),d.forEach(t),no=p(c),w=a(c,"SECTION",{});var W=r(w);er=a(W,"H2",{});var Ch=r(er);Ve=a(Ch,"A",{href:!0,id:!0});var Th=r(Ve);tl=l(Th,"Overview"),Th.forEach(t),Ch.forEach(t),sl=p(W),tr=a(W,"P",{});var Ah=r(tr);ce=a(Ah,"SPAN",{style:!0});var Oh=r(ce);fs=a(Oh,"PICTURE",{});var th=r(fs);sr=a(th,"SOURCE",{type:!0,srcset:!0}),D=a(th,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),th.forEach(t),Oh.forEach(t),Ah.forEach(t),al=p(W),ar=a(W,"P",{});var Ih=r(ar);rl=l(Ih,"The Svelte compilation process can be broken down into 4-steps"),Ih.forEach(t),ol=p(W),G=a(W,"UL",{});var He=r(G);rr=a(He,"LI",{});var Dh=r(rr);ll=l(Dh,"Parsing source code into Abstract Syntax Tree (AST)"),Dh.forEach(t),nl=p(He),or=a(He,"LI",{});var Lh=r(or);cl=l(Lh,"Tracking references and dependencies"),Lh.forEach(t),il=p(He),lr=a(He,"LI",{});var Rh=r(lr);pl=l(Rh,"Creating code blocks and fragments"),Rh.forEach(t),dl=p(He),nr=a(He,"LI",{});var Ph=r(nr);hl=l(Ph,"Generate code"),Ph.forEach(t),He.forEach(t),fl=p(W),cr=a(W,"P",{});var jh=r(cr);vl=l(jh,"Which sums out by the following pseudocode:"),jh.forEach(t),ul=p(W),vs=a(W,"DIV",{class:!0});var Zu=r(vs);Zu.forEach(t),W.forEach(t),co=p(c),v=a(c,"SECTION",{});var k=r(v);ir=a(k,"H2",{});var Mh=r(ir);Ye=a(Mh,"A",{href:!0,id:!0});var Hh=r(Ye);_l=l(Hh,"1. Parsing source code into AST"),Hh.forEach(t),Mh.forEach(t),ml=p(k),pr=a(k,"P",{});var Nh=r(pr);ie=a(Nh,"SPAN",{style:!0});var Wh=r(ie);us=a(Wh,"PICTURE",{});var sh=r(us);dr=a(sh,"SOURCE",{type:!0,srcset:!0}),L=a(sh,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),sh.forEach(t),Wh.forEach(t),Nh.forEach(t),kl=p(k),_s=a(k,"DIV",{class:!0});var Ku=r(_s);Ku.forEach(t),bl=p(k),hr=a(k,"P",{});var Uh=r(hr);El=l(Uh,"The Svelte syntax is a superset of HTML. Svelte implements its own parser for the Svelte syntax, which handles:"),Uh.forEach(t),yl=p(k),pe=a(k,"UL",{});var Ma=r(pe);ms=a(Ma,"LI",{});var ah=r(ms);gl=l(ah,"HTML syntax "),ks=a(ah,"CODE",{class:!0});var $h=r(ks);wl=l($h,"<div>"),$h.forEach(t),ah.forEach(t),Sl=p(Ma),bs=a(Ma,"LI",{});var rh=r(bs);xl=l(rh,"Curly brackets "),Es=a(rh,"CODE",{class:!0});var Jh=r(Es);Cl=l(Jh,"{ data }"),Jh.forEach(t),rh.forEach(t),Tl=p(Ma),ys=a(Ma,"LI",{});var oh=r(ys);Al=l(oh,"Logic blocks "),gs=a(oh,"CODE",{class:!0});var Gh=r(gs);Ol=l(Gh,"{#each list as item}"),Gh.forEach(t),oh.forEach(t),Ma.forEach(t),Il=p(k),de=a(k,"P",{});var Ha=r(de);Dl=l(Ha,"The Svelte parser handles specially for "),ws=a(Ha,"CODE",{class:!0});var Bh=r(ws);Ll=l(Bh,"<script>"),Bh.forEach(t),Rl=l(Ha," and "),Ss=a(Ha,"CODE",{class:!0});var Fh=r(Ss);Pl=l(Fh,"<style>"),Fh.forEach(t),jl=l(Ha," tags."),Ha.forEach(t),Ml=p(k),O=a(k,"P",{});var oe=r(O);Hl=l(oe,"When the parser encounters a "),xs=a(oe,"CODE",{class:!0});var zh=r(xs);Nl=l(zh,"<script>"),zh.forEach(t),Wl=l(oe," tag, it uses "),qe=a(oe,"A",{href:!0,rel:!0});var Vh=r(qe);Ul=l(Vh,"acorn"),Vh.forEach(t),$l=l(oe," to parse the content within the tag. When the parser sees a "),Cs=a(oe,"CODE",{class:!0});var Yh=r(Cs);Jl=l(Yh,"<style>"),Yh.forEach(t),Gl=l(oe," tag, it uses "),Qe=a(oe,"A",{href:!0,rel:!0});var qh=r(Qe);Bl=l(qh,"css-tree"),qh.forEach(t),Fl=l(oe," to parse the CSS content."),oe.forEach(t),zl=p(k),he=a(k,"P",{});var Na=r(he);Vl=l(Na,"Besides, the Svelte parser differentiates instance script, "),Ts=a(Na,"CODE",{class:!0});var Qh=r(Ts);Yl=l(Qh,"<script>"),Qh.forEach(t),ql=l(Na,", and module script, "),As=a(Na,"CODE",{class:!0});var Zh=r(As);Ql=l(Zh,'<script context="module">'),Zh.forEach(t),Zl=l(Na,"."),Na.forEach(t),Kl=p(k),fr=a(k,"P",{});var Kh=r(fr);Xl=l(Kh,"The Svelte AST look like:"),Kh.forEach(t),en=p(k),Os=a(k,"DIV",{class:!0});var Xu=r(Os);Xu.forEach(t),tn=p(k),fe=a(k,"P",{});var Wa=r(fe);sn=l(Wa,"You can try out the Svelte parser in "),Ze=a(Wa,"A",{href:!0,rel:!0});var Xh=r(Ze);an=l(Xh,"ASTExplorer"),Xh.forEach(t),rn=l(Wa,". You can find the Svelte parser under "),vr=a(Wa,"STRONG",{});var ef=r(vr);on=l(ef,"HTML > Svelte"),ef.forEach(t),ln=l(Wa,"."),Wa.forEach(t),k.forEach(t),io=p(c),Ce=a(c,"SECTION",{});var Ao=r(Ce);ur=a(Ao,"H3",{});var tf=r(ur);Ke=a(tf,"A",{href:!0,id:!0});var sf=r(Ke);nn=l(sf,"Where can I find the parser in the source code?"),sf.forEach(t),tf.forEach(t),cn=p(Ao),ve=a(Ao,"P",{});var Ua=r(ve);pn=l(Ua,"The parsing "),Xe=a(Ua,"A",{href:!0,rel:!0});var af=r(Xe);dn=l(af,"starts here"),af.forEach(t),hn=l(Ua,", which the parser is implemented in "),et=a(Ua,"A",{href:!0,rel:!0});var rf=r(et);fn=l(rf,"src/compiler/parse/index.ts"),rf.forEach(t),vn=l(Ua,"."),Ua.forEach(t),Ao.forEach(t),po=p(c),Z=a(c,"SECTION",{});var $a=r(Z);_r=a($a,"H3",{});var of=r(_r);tt=a(of,"A",{href:!0,id:!0});var lf=r(tt);un=l(lf,"Where can I learn about parsing in JavaScript?"),lf.forEach(t),of.forEach(t),_n=p($a),st=a($a,"P",{});var Oo=r(st);mn=l(Oo,"My previous article, "),Is=a(Oo,"A",{href:!0});var nf=r(Is);kn=l(nf,'"JSON Parser with JavaScript"'),nf.forEach(t),bn=l(Oo," introduces the terminology and guides you step-by-step on writing a parser for JSON in JavaScript."),Oo.forEach(t),En=p($a),mr=a($a,"P",{});var cf=r(mr);yn=l(cf,"If this is the your first time learning about parser, I highly recommend you to read that."),cf.forEach(t),$a.forEach(t),ho=p(c),R=a(c,"SECTION",{});var Ne=r(R);kr=a(Ne,"H2",{});var pf=r(kr);at=a(pf,"A",{href:!0,id:!0});var df=r(at);gn=l(df,"2. Tracking references and dependencies"),df.forEach(t),pf.forEach(t),wn=p(Ne),br=a(Ne,"P",{});var hf=r(br);ue=a(hf,"SPAN",{style:!0});var ff=r(ue);Ds=a(ff,"PICTURE",{});var lh=r(Ds);Er=a(lh,"SOURCE",{type:!0,srcset:!0}),P=a(lh,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),lh.forEach(t),ff.forEach(t),hf.forEach(t),Sn=p(Ne),Ls=a(Ne,"DIV",{class:!0});var e2=r(Ls);e2.forEach(t),xn=p(Ne),yr=a(Ne,"P",{});var vf=r(yr);Cn=l(vf,"In this step, Svelte traverses through the AST to track all the variable declared and referenced and their depedencies."),vf.forEach(t),Ne.forEach(t),fo=p(c),K=a(c,"SECTION",{});var Ja=r(K);gr=a(Ja,"H3",{});var uf=r(gr);_e=a(uf,"A",{href:!0,id:!0});var Io=r(_e);Tn=l(Io,"a. Svelte creates a "),Rs=a(Io,"CODE",{class:!0});var _f=r(Rs);An=l(_f,"Component"),_f.forEach(t),On=l(Io," instance."),Io.forEach(t),uf.forEach(t),In=p(Ja),rt=a(Ja,"P",{});var Do=r(rt);Dn=l(Do,"The "),Ps=a(Do,"CODE",{class:!0});var mf=r(Ps);Ln=l(mf,"Component"),mf.forEach(t),Rn=l(Do," class stores information of the Svelte component, which includes:"),Do.forEach(t),Pn=p(Ja),b=a(Ja,"UL",{});var x=r(b);js=a(x,"LI",{});var nh=r(js);jn=l(nh,"HTML fragment, "),ot=a(nh,"A",{href:!0,rel:!0});var kf=r(ot);Ms=a(kf,"CODE",{class:!0});var bf=r(Ms);Mn=l(bf,"fragment"),bf.forEach(t),kf.forEach(t),nh.forEach(t),Hn=p(x),Te=a(x,"LI",{});var eo=r(Te);Nn=l(eo,"instance script and module script AST and their lexical scopes, "),lt=a(eo,"A",{href:!0,rel:!0});var Ef=r(lt);Hs=a(Ef,"CODE",{class:!0});var yf=r(Hs);Wn=l(yf,"instance_scope"),yf.forEach(t),Ef.forEach(t),Un=l(eo," and "),nt=a(eo,"A",{href:!0,rel:!0});var gf=r(nt);Ns=a(gf,"CODE",{class:!0});var wf=r(Ns);$n=l(wf,"module_scope"),wf.forEach(t),gf.forEach(t),eo.forEach(t),Jn=p(x),Ws=a(x,"LI",{});var ch=r(Ws);Gn=l(ch,"instance variables, "),ct=a(ch,"A",{href:!0,rel:!0});var Sf=r(ct);Us=a(Sf,"CODE",{class:!0});var xf=r(Us);Bn=l(xf,"vars"),xf.forEach(t),Sf.forEach(t),ch.forEach(t),Fn=p(x),$s=a(x,"LI",{});var ih=r($s);zn=l(ih,"reactive variables, "),it=a(ih,"A",{href:!0,rel:!0});var Cf=r(it);Js=a(Cf,"CODE",{class:!0});var Tf=r(Js);Vn=l(Tf,"reactive_declarations"),Tf.forEach(t),Cf.forEach(t),ih.forEach(t),Yn=p(x),Gs=a(x,"LI",{});var ph=r(Gs);qn=l(ph,"slots, "),pt=a(ph,"A",{href:!0,rel:!0});var Af=r(pt);Bs=a(Af,"CODE",{class:!0});var Of=r(Bs);Qn=l(Of,"slots"),Of.forEach(t),Af.forEach(t),ph.forEach(t),Zn=p(x),Fs=a(x,"LI",{});var dh=r(Fs);dt=a(dh,"A",{href:!0,rel:!0});var If=r(dt);Kn=l(If,"used variable names"),If.forEach(t),Xn=l(dh," to prevent naming conflict when creating temporary variables"),dh.forEach(t),ec=p(x),ht=a(x,"LI",{});var Lo=r(ht);ft=a(Lo,"A",{href:!0,rel:!0});var Df=r(ft);tc=l(Df,"warnings"),Df.forEach(t),sc=l(Lo," and "),vt=a(Lo,"A",{href:!0,rel:!0});var Lf=r(vt);ac=l(Lf,"errors"),Lf.forEach(t),Lo.forEach(t),rc=p(x),ut=a(x,"LI",{});var Ro=r(ut);_t=a(Ro,"A",{href:!0,rel:!0});var Rf=r(_t);oc=l(Rf,"compile options"),Rf.forEach(t),lc=l(Ro," and "),mt=a(Ro,"A",{href:!0,rel:!0});var Pf=r(mt);nc=l(Pf,"ignored warnings"),Pf.forEach(t),Ro.forEach(t),x.forEach(t),Ja.forEach(t),vo=p(c),X=a(c,"SECTION",{});var Ga=r(X);wr=a(Ga,"H3",{});var jf=r(wr);kt=a(jf,"A",{href:!0,id:!0});var Mf=r(kt);cc=l(Mf,"b. Traverse the instance script and module script AST"),Mf.forEach(t),jf.forEach(t),ic=p(Ga),Ae=a(Ga,"P",{});var to=r(Ae);zs=a(to,"CODE",{class:!0});var Hf=r(zs);pc=l(Hf,"Component"),Hf.forEach(t),dc=l(to," traverses the instance script and module script AST to "),Sr=a(to,"STRONG",{});var Nf=r(Sr);hc=l(Nf,"find out all the variables declared, referenced, and updated"),Nf.forEach(t),fc=l(to," within the instance script and module script."),to.forEach(t),vc=p(Ga),bt=a(Ga,"P",{});var Po=r(bt);uc=l(Po,"Svelte identifies all the variables available before traversing the template. When encountering the variable during template traversal, Svelte will mark the variable as "),Vs=a(Po,"CODE",{class:!0});var Wf=r(Vs);_c=l(Wf,"referenced"),Wf.forEach(t),mc=l(Po," from template."),Po.forEach(t),Ga.forEach(t),uo=p(c),m=a(c,"SECTION",{});var y=r(m);xr=a(y,"H3",{});var Uf=r(xr);Et=a(Uf,"A",{href:!0,id:!0});var $f=r(Et);kc=l($f,"c. Traverse the template"),$f.forEach(t),Uf.forEach(t),bc=p(y),yt=a(y,"P",{});var jo=r(yt);Ec=l(jo,"Svelte traverses through the template AST and creates a "),gt=a(jo,"A",{href:!0,rel:!0});var Jf=r(gt);yc=l(Jf,"Fragment"),Jf.forEach(t),gc=l(jo," tree out of the template AST."),jo.forEach(t),wc=p(y),Cr=a(y,"P",{});var Gf=r(Cr);Sc=l(Gf,"Each fragment node contains information such as:"),Gf.forEach(t),xc=p(y),Tr=a(y,"P",{});var Bf=r(Tr);Ar=a(Bf,"STRONG",{});var Ff=r(Ar);Cc=l(Ff,"- expression and dependencies"),Ff.forEach(t),Bf.forEach(t),Tc=p(y),me=a(y,"P",{});var Ba=r(me);Ac=l(Ba,"Logic blocks, "),Ys=a(Ba,"CODE",{class:!0});var zf=r(Ys);Oc=l(zf,"{#if}"),zf.forEach(t),Ic=l(Ba,", and mustache tags, "),qs=a(Ba,"CODE",{class:!0});var Vf=r(qs);Dc=l(Vf,"{ data }"),Vf.forEach(t),Lc=l(Ba,", contain expression and the dependencies of the expression."),Ba.forEach(t),Rc=p(y),Or=a(y,"P",{});var Yf=r(Or);Ir=a(Yf,"STRONG",{});var qf=r(Ir);Pc=l(qf,"- scope"),qf.forEach(t),Yf.forEach(t),jc=p(y),ee=a(y,"P",{});var cs=r(ee);Qs=a(cs,"CODE",{class:!0});var Qf=r(Qs);Mc=l(Qf,"{#each}"),Qf.forEach(t),Hc=l(cs," and "),Zs=a(cs,"CODE",{class:!0});var Zf=r(Zs);Nc=l(Zf,"{#await}"),Zf.forEach(t),Wc=l(cs," logic block and "),Ks=a(cs,"CODE",{class:!0});var Kf=r(Ks);Uc=l(Kf,"let:"),Kf.forEach(t),$c=l(cs," binding create new variables for the children template."),cs.forEach(t),Jc=p(y),Dr=a(y,"P",{});var Xf=r(Dr);Gc=l(Xf,"Svelte creates a different Fragment node for each type of node in the AST, as different kind of Fragment node handles things differently:"),Xf.forEach(t),Bc=p(y),B=a(y,"UL",{});var We=r(B);C=a(We,"LI",{});var q=r(C);wt=a(q,"A",{href:!0,rel:!0});var ev=r(wt);Fc=l(ev,"Element node"),ev.forEach(t),zc=l(q," validates the "),St=a(q,"A",{href:!0,rel:!0});var tv=r(St);Vc=l(tv,"attribute"),tv.forEach(t),Yc=l(q,", "),xt=a(q,"A",{href:!0,rel:!0});var sv=r(xt);qc=l(sv,"bindings"),sv.forEach(t),Qc=l(q,", "),Ct=a(q,"A",{href:!0,rel:!0});var av=r(Ct);Zc=l(av,"content"),av.forEach(t),Kc=l(q," and "),Tt=a(q,"A",{href:!0,rel:!0});var rv=r(Tt);Xc=l(rv,"event handlers"),rv.forEach(t),ei=l(q,"."),q.forEach(t),ti=p(We),Oe=a(We,"LI",{});var so=r(Oe);At=a(so,"A",{href:!0,rel:!0});var ov=r(At);si=l(ov,"Slot node"),ov.forEach(t),ai=l(so," registers the slot name to the "),Xs=a(so,"CODE",{class:!0});var lv=r(Xs);ri=l(lv,"Component"),lv.forEach(t),oi=l(so,"."),so.forEach(t),li=p(We),te=a(We,"LI",{});var is=r(te);Ot=a(is,"A",{href:!0,rel:!0});var nv=r(Ot);ni=l(nv,"EachBlock node"),nv.forEach(t),ci=l(is," creates a new scope and tracks the "),ea=a(is,"CODE",{class:!0});var cv=r(ea);ii=l(cv,"key"),cv.forEach(t),pi=l(is,", "),ta=a(is,"CODE",{class:!0});var iv=r(ta);di=l(iv,"index"),iv.forEach(t),hi=l(is," and the name of the list to be iterated."),is.forEach(t),fi=p(We),Lr=a(We,"LI",{});var pv=r(Lr);vi=l(pv,"..."),pv.forEach(t),We.forEach(t),y.forEach(t),_o=p(c),j=a(c,"SECTION",{});var Ue=r(j);Rr=a(Ue,"H3",{});var dv=r(Rr);It=a(dv,"A",{href:!0,id:!0});var hv=r(It);ui=l(hv,"d. Traverse the instance script AST"),hv.forEach(t),dv.forEach(t),_i=p(Ue),Pr=a(Ue,"P",{});var fv=r(Pr);mi=l(fv,"After traversing through the template, Svelte now knows whether a variable is ever being updated or referenced in the component."),fv.forEach(t),ki=p(Ue),jr=a(Ue,"P",{});var vv=r(jr);bi=l(vv,"With this information, Svelte tries make preparations for optimising the output, for example:"),vv.forEach(t),Ei=p(Ue),Dt=a(Ue,"UL",{});var Mo=r(Dt);Lt=a(Mo,"LI",{});var Ho=r(Lt);yi=l(Ho,"determine which variables or functions can be safely hoisted out of the "),sa=a(Ho,"CODE",{class:!0});var uv=r(sa);gi=l(uv,"instance"),uv.forEach(t),wi=l(Ho," function."),Ho.forEach(t),Si=p(Mo),Mr=a(Mo,"LI",{});var _v=r(Mr);xi=l(_v,"determine reactive declarations that does not need to be reactive"),_v.forEach(t),Mo.forEach(t),Ue.forEach(t),mo=p(c),se=a(c,"SECTION",{});var Fa=r(se);Hr=a(Fa,"H3",{});var mv=r(Hr);Rt=a(mv,"A",{href:!0,id:!0});var kv=r(Rt);Ci=l(kv,"e. Update CSS selectors to make style declarations component scope"),kv.forEach(t),mv.forEach(t),Ti=p(Fa),Pt=a(Fa,"P",{});var No=r(Pt);Ai=l(No,"Svelte updates the CSS selectors, by adding "),aa=a(No,"CODE",{class:!0});var bv=r(aa);Oi=l(bv,".svelte-xxx"),bv.forEach(t),Ii=l(No," class to the selectors when necessary."),No.forEach(t),Di=p(Fa),Nr=a(Fa,"P",{});var Ev=r(Nr);Li=l(Ev,"At the end of this step, Svelte has enough information to generate the compiled code, which brings us to the next step."),Ev.forEach(t),Fa.forEach(t),ko=p(c),Ie=a(c,"SECTION",{});var Wo=r(Ie);Wr=a(Wo,"H3",{});var yv=r(Wr);jt=a(yv,"A",{href:!0,id:!0});var gv=r(jt);Ri=l(gv,"Where can I find this in the source code?"),gv.forEach(t),yv.forEach(t),Pi=p(Wo),F=a(Wo,"P",{});var $e=r(F);ji=l($e,"You can start reading "),Mt=a($e,"A",{href:!0,rel:!0});var wv=r(Mt);Mi=l(wv,"from here"),wv.forEach(t),Hi=l($e,", which the "),ra=a($e,"CODE",{class:!0});var Sv=r(ra);Ni=l(Sv,"Component"),Sv.forEach(t),Wi=l($e," is implemented in "),Ht=a($e,"A",{href:!0,rel:!0});var xv=r(Ht);Ui=l(xv,"src/compiler/compile/Component.ts"),xv.forEach(t),$i=l($e,"."),$e.forEach(t),Wo.forEach(t),bo=p(c),De=a(c,"SECTION",{});var Uo=r(De);Ur=a(Uo,"H3",{});var Cv=r(Ur);Nt=a(Cv,"A",{href:!0,id:!0});var Tv=r(Nt);Ji=l(Tv,"Where can I learn about traversing in JavaScript?"),Tv.forEach(t),Cv.forEach(t),Gi=p(Uo),Wt=a(Uo,"P",{});var $o=r(Wt);Bi=l($o,"Bear with my shameless plug, my previous article, "),oa=a($o,"A",{href:!0});var Av=r(oa);Fi=l(Av,'"Manipulating AST with JavaScript"'),Av.forEach(t),zi=l($o," covers relevant knowledge you need to know about traversing AST in JavaScript."),$o.forEach(t),Uo.forEach(t),Eo=p(c),M=a(c,"SECTION",{});var Je=r(M);$r=a(Je,"H2",{});var Ov=r($r);Ut=a(Ov,"A",{href:!0,id:!0});var Iv=r(Ut);Vi=l(Iv,"3. Creating code blocks and fragments"),Iv.forEach(t),Ov.forEach(t),Yi=p(Je),Jr=a(Je,"P",{});var Dv=r(Jr);ke=a(Dv,"SPAN",{style:!0});var Lv=r(ke);la=a(Lv,"PICTURE",{});var hh=r(la);Gr=a(hh,"SOURCE",{type:!0,srcset:!0}),H=a(hh,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),hh.forEach(t),Lv.forEach(t),Dv.forEach(t),qi=p(Je),na=a(Je,"DIV",{class:!0});var t2=r(na);t2.forEach(t),Qi=p(Je),z=a(Je,"P",{});var Ge=r(z);Zi=l(Ge,"In this step, Svelte creates a "),ca=a(Ge,"CODE",{class:!0});var Rv=r(ca);Ki=l(Rv,"Renderer"),Rv.forEach(t),Xi=l(Ge," instance which keeps track necessary information required to generate the compiled output. Depending on the whether to output DOM or SSR code "),$t=a(Ge,"EM",{});var Jo=r($t);ep=l(Jo,"("),be=a(Jo,"A",{href:!0,rel:!0});var Go=r(be);tp=l(Go,"see "),ia=a(Go,"CODE",{class:!0});var Pv=r(ia);sp=l(Pv,"generate"),Pv.forEach(t),ap=l(Go," in compile options"),Go.forEach(t),rp=l(Jo,")"),Jo.forEach(t),op=l(Ge,", Svelte instantiates different "),pa=a(Ge,"CODE",{class:!0});var jv=r(pa);lp=l(jv,"Renderer"),jv.forEach(t),np=l(Ge," respectively."),Ge.forEach(t),Je.forEach(t),yo=p(c),S=a(c,"SECTION",{});var U=r(S);Br=a(U,"H3",{});var Mv=r(Br);Jt=a(Mv,"A",{href:!0,id:!0});var Hv=r(Jt);cp=l(Hv,"DOM Renderer"),Hv.forEach(t),Mv.forEach(t),ip=p(U),Ee=a(U,"P",{});var za=r(Ee);pp=l(za,"DOM Renderer keeps track of "),Gt=a(za,"A",{href:!0,rel:!0});var Nv=r(Gt);dp=l(Nv,"a list of blocks"),Nv.forEach(t),hp=l(za," and "),Bt=a(za,"A",{href:!0,rel:!0});var Wv=r(Bt);fp=l(Wv,"context"),Wv.forEach(t),vp=l(za,"."),za.forEach(t),up=p(U),ye=a(U,"P",{});var Va=r(ye);_p=l(Va,"A "),Ft=a(Va,"A",{href:!0,rel:!0});var Uv=r(Ft);mp=l(Uv,"Block"),Uv.forEach(t),kp=l(Va," contains code fragments for generate the "),da=a(Va,"A",{href:!0});var $v=r(da);ha=a($v,"CODE",{class:!0});var Jv=r(ha);bp=l(Jv,"create_fragment"),Jv.forEach(t),$v.forEach(t),Ep=l(Va," function."),Va.forEach(t),yp=p(U),ge=a(U,"P",{});var Ya=r(ge);gp=l(Ya,"Context tracks a list of "),fa=a(Ya,"A",{href:!0});var Gv=r(fa);wp=l(Gv,"instance variables"),Gv.forEach(t),Sp=l(Ya," which will be presented in the "),va=a(Ya,"CODE",{class:!0});var Bv=r(va);xp=l(Bv,"$$.ctx"),Bv.forEach(t),Cp=l(Ya," in the compiled output."),Ya.forEach(t),Tp=p(U),zt=a(U,"P",{});var Bo=r(zt);Ap=l(Bo,"In the renderer, Svelte creates a "),Vt=a(Bo,"A",{href:!0,rel:!0});var Fv=r(Vt);Op=l(Fv,"render tree"),Fv.forEach(t),Ip=l(Bo," out of the Fragment tree."),Bo.forEach(t),Dp=p(U),Yt=a(U,"P",{});var Fo=r(Yt);Lp=l(Fo,"Each node in the render tree implements the "),ua=a(Fo,"CODE",{class:!0});var zv=r(ua);Rp=l(zv,"render"),zv.forEach(t),Pp=l(Fo," function which generate codes that create and update the DOM for the node."),Fo.forEach(t),U.forEach(t),go=p(c),Le=a(c,"SECTION",{});var zo=r(Le);Fr=a(zo,"H3",{});var Vv=r(Fr);qt=a(Vv,"A",{href:!0,id:!0});var Yv=r(qt);jp=l(Yv,"SSR Renderer"),Yv.forEach(t),Vv.forEach(t),Mp=p(zo),V=a(zo,"P",{});var Be=r(V);Hp=l(Be,"SSR Renderer provide helpers to generate "),Qt=a(Be,"A",{href:!0,rel:!0});var qv=r(Qt);Np=l(qv,"template literals"),qv.forEach(t),Wp=l(Be," in the compiled output, such as "),Zt=a(Be,"A",{href:!0,rel:!0});var Qv=r(Zt);_a=a(Qv,"CODE",{class:!0});var Zv=r(_a);Up=l(Zv,"add_string(str)"),Zv.forEach(t),Qv.forEach(t),$p=l(Be," and "),Kt=a(Be,"A",{href:!0,rel:!0});var Kv=r(Kt);ma=a(Kv,"CODE",{class:!0});var Xv=r(ma);Jp=l(Xv,"add_expression(node)"),Xv.forEach(t),Kv.forEach(t),Gp=l(Be,"."),Be.forEach(t),zo.forEach(t),wo=p(c),Re=a(c,"SECTION",{});var Vo=r(Re);zr=a(Vo,"H3",{});var eu=r(zr);we=a(eu,"A",{href:!0,id:!0});var Yo=r(we);Bp=l(Yo,"Where can I find the "),ka=a(Yo,"CODE",{class:!0});var tu=r(ka);Fp=l(tu,"Renderer"),tu.forEach(t),zp=l(Yo," in the source code?"),Yo.forEach(t),eu.forEach(t),Vp=p(Vo),Se=a(Vo,"P",{});var qa=r(Se);Yp=l(qa,"The DOM Renderer is implemented in "),Xt=a(qa,"A",{href:!0,rel:!0});var su=r(Xt);qp=l(su,"src/compiler/compile/render_dom/Renderer.ts"),su.forEach(t),Qp=l(qa,", and you can check out the SSR Renderer code in "),es=a(qa,"A",{href:!0,rel:!0});var au=r(es);Zp=l(au,"src/compiler/compile/render_ssr/Renderer.ts"),au.forEach(t),Kp=l(qa,"."),qa.forEach(t),Vo.forEach(t),So=p(c),E=a(c,"SECTION",{});var A=r(E);Vr=a(A,"H2",{});var ru=r(Vr);ts=a(ru,"A",{href:!0,id:!0});var ou=r(ts);Xp=l(ou,"4. Generate code"),ou.forEach(t),ru.forEach(t),ed=p(A),Yr=a(A,"P",{});var lu=r(Yr);xe=a(lu,"SPAN",{style:!0});var nu=r(xe);ba=a(nu,"PICTURE",{});var fh=r(ba);qr=a(fh,"SOURCE",{type:!0,srcset:!0}),N=a(fh,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),fh.forEach(t),nu.forEach(t),lu.forEach(t),td=p(A),Ea=a(A,"DIV",{class:!0});var s2=r(Ea);s2.forEach(t),sd=p(A),Qr=a(A,"P",{});var cu=r(Qr);ad=l(cu,"Different renderer renders differently."),cu.forEach(t),rd=p(A),T=a(A,"P",{});var Q=r(T);Zr=a(Q,"STRONG",{});var iu=r(Zr);od=l(iu,"The DOM Renderer"),iu.forEach(t),ld=l(Q," traverses through the render tree and calls the "),ya=a(Q,"CODE",{class:!0});var pu=r(ya);nd=l(pu,"render"),pu.forEach(t),cd=l(Q," function of each node along the way. The "),ga=a(Q,"CODE",{class:!0});var du=r(ga);id=l(du,"Block"),du.forEach(t),pd=l(Q," instance is passed into the "),wa=a(Q,"CODE",{class:!0});var hu=r(wa);dd=l(hu,"render"),hu.forEach(t),hd=l(Q," function, so that each node inserts the code into the appropriate "),Sa=a(Q,"CODE",{class:!0});var fu=r(Sa);fd=l(fu,"create_fragment"),fu.forEach(t),vd=l(Q," function."),Q.forEach(t),ud=p(A),Pe=a(A,"P",{});var ao=r(Pe);Kr=a(ao,"STRONG",{});var vu=r(Kr);_d=l(vu,"The SSR Renderer"),vu.forEach(t),md=l(ao,", on the other hand, relies on different "),ss=a(ao,"A",{href:!0,rel:!0});var uu=r(ss);kd=l(uu,"node handlers"),uu.forEach(t),bd=l(ao," to insert strings or expressions into the final template literal."),ao.forEach(t),Ed=p(A),I=a(A,"P",{});var le=r(I);yd=l(le,"The render function returns "),xa=a(le,"CODE",{class:!0});var _u=r(xa);gd=l(_u,"js"),_u.forEach(t),wd=l(le," and "),Ca=a(le,"CODE",{class:!0});var mu=r(Ca);Sd=l(mu,"css"),mu.forEach(t),xd=l(le," which will be consumed by the bundler, via "),as=a(le,"A",{href:!0,rel:!0});var ku=r(as);Cd=l(ku,"rollup-plugin-svelte"),ku.forEach(t),Td=l(le," for rollup and "),rs=a(le,"A",{href:!0,rel:!0});var bu=r(rs);Ad=l(bu,"svelte-loader"),bu.forEach(t),Od=l(le," for webpack respectively."),le.forEach(t),A.forEach(t),xo=p(c),ae=a(c,"SECTION",{});var Qa=r(ae);Xr=a(Qa,"H2",{});var Eu=r(Xr);os=a(Eu,"A",{href:!0,id:!0});var yu=r(os);Id=l(yu,"Svelte runtime"),yu.forEach(t),Eu.forEach(t),Dd=p(Qa),ls=a(Qa,"P",{});var qo=r(ls);Ld=l(qo,"To remove duplicate code in the compiled output, Svelte provide util function which can be found in the "),ns=a(qo,"A",{href:!0,rel:!0});var gu=r(ns);Rd=l(gu,"src/runtime/internal"),gu.forEach(t),Pd=l(qo,", such as:"),qo.forEach(t),jd=p(Qa),Y=a(Qa,"UL",{});var Fe=r(Y);re=a(Fe,"LI",{});var ps=r(re);Md=l(ps,"dom related utils, eg: "),Ta=a(ps,"CODE",{class:!0});var wu=r(Ta);Hd=l(wu,"append"),wu.forEach(t),Nd=l(ps,", "),Aa=a(ps,"CODE",{class:!0});var Su=r(Aa);Wd=l(Su,"insert"),Su.forEach(t),Ud=l(ps,", "),Oa=a(ps,"CODE",{class:!0});var xu=r(Oa);$d=l(xu,"detach"),xu.forEach(t),ps.forEach(t),Jd=p(Fe),je=a(Fe,"LI",{});var ro=r(je);Gd=l(ro,"scheduling utils, eg: "),Ia=a(ro,"CODE",{class:!0});var Cu=r(Ia);Bd=l(Cu,"schedule_update"),Cu.forEach(t),Fd=l(ro,", "),Da=a(ro,"CODE",{class:!0});var Tu=r(Da);zd=l(Tu,"flush"),Tu.forEach(t),ro.forEach(t),Vd=p(Fe),Me=a(Fe,"LI",{});var oo=r(Me);Yd=l(oo,"lifecycle utils, eg: "),La=a(oo,"CODE",{class:!0});var Au=r(La);qd=l(Au,"onMount"),Au.forEach(t),Qd=l(oo,", "),Ra=a(oo,"CODE",{class:!0});var Ou=r(Ra);Zd=l(Ou,"beforeUpdate"),Ou.forEach(t),oo.forEach(t),Kd=p(Fe),Pa=a(Fe,"LI",{});var vh=r(Pa);Xd=l(vh,"animation utils, eg: "),ja=a(vh,"CODE",{class:!0});var Iu=r(ja);eh=l(Iu,"create_animation"),Iu.forEach(t),vh.forEach(t),Fe.forEach(t),Qa.forEach(t),this.h()},h(){n(_,"href","#who-is-this-for"),n(_,"id","who-is-this-for"),n(Ve,"href","#overview"),n(Ve,"id","overview"),n(sr,"type","image/webp"),n(sr,"srcset",S2+", "+w2+" 2x"),lo(D.src,_h=Hu)||n(D,"src",_h),n(D,"srcset",Hu+", "+x2+" 2x"),n(D,"loading","lazy"),h(D,"position","absolute"),h(D,"top","0"),h(D,"width","100%"),h(D,"height","100%"),n(D,"alt","Overview"),h(ce,"display","block"),h(ce,"position","relative"),h(ce,"padding-top","17.512%"),h(ce,"width","100%"),n(vs,"class","code-section"),n(Ye,"href","#1-parsing-source-code-into-ast"),n(Ye,"id","1-parsing-source-code-into-ast"),n(dr,"type","image/webp"),n(dr,"srcset",y2+", "+E2+" 2x"),lo(L.src,mh=Mu)||n(L,"src",mh),n(L,"srcset",Mu+", "+g2+" 2x"),n(L,"loading","lazy"),h(L,"position","absolute"),h(L,"top","0"),h(L,"width","100%"),h(L,"height","100%"),n(L,"alt","Step 1"),h(ie,"display","block"),h(ie,"position","relative"),h(ie,"padding-top","45.065%"),h(ie,"width","100%"),n(_s,"class","code-section"),n(ks,"class","inline"),n(Es,"class","inline"),n(gs,"class","inline"),n(ws,"class","inline"),n(Ss,"class","inline"),n(xs,"class","inline"),n(qe,"href","https://www.npmjs.com/package/acorn"),n(qe,"rel","nofollow"),n(Cs,"class","inline"),n(Qe,"href","https://www.npmjs.com/package/css-tree"),n(Qe,"rel","nofollow"),n(Ts,"class","inline"),n(As,"class","inline"),n(Os,"class","code-section"),n(Ze,"href","https://astexplorer.net/#/gist/828907dd1600c208a4e315962c635b4a/e1c895d49e8899a3be849a137fc557ba66eb2423"),n(Ze,"rel","nofollow"),n(Ke,"href","#where-can-i-find-the-parser-in-the-source-code"),n(Ke,"id","where-can-i-find-the-parser-in-the-source-code"),n(Xe,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/index.ts#L79"),n(Xe,"rel","nofollow"),n(et,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/parse/index.ts"),n(et,"rel","nofollow"),n(tt,"href","#where-can-i-learn-about-parsing-in-javascript"),n(tt,"id","where-can-i-learn-about-parsing-in-javascript"),n(Is,"href","/json-parser-with-javascript"),n(at,"href","#2-tracking-references-and-dependencies"),n(at,"id","2-tracking-references-and-dependencies"),n(Er,"type","image/webp"),n(Er,"srcset",k2+", "+m2+" 2x"),lo(P.src,kh=ju)||n(P,"src",kh),n(P,"srcset",ju+", "+b2+" 2x"),n(P,"loading","lazy"),h(P,"position","absolute"),h(P,"top","0"),h(P,"width","100%"),h(P,"height","100%"),n(P,"alt","Step 2"),h(ue,"display","block"),h(ue,"position","relative"),h(ue,"padding-top","42.219%"),h(ue,"width","100%"),n(Ls,"class","code-section"),n(Rs,"class","inline"),n(_e,"href","#a-svelte-creates-a-component-instance"),n(_e,"id","a-svelte-creates-a-component-instance"),n(Ps,"class","inline"),n(Ms,"class","inline"),n(ot,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L52"),n(ot,"rel","nofollow"),n(Hs,"class","inline"),n(lt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L54"),n(lt,"rel","nofollow"),n(Ns,"class","inline"),n(nt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L53"),n(nt,"rel","nofollow"),n(Us,"class","inline"),n(ct,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L62"),n(ct,"rel","nofollow"),n(Js,"class","inline"),n(it,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L71"),n(it,"rel","nofollow"),n(Bs,"class","inline"),n(pt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L94"),n(pt,"rel","nofollow"),n(dt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L351"),n(dt,"rel","nofollow"),n(ft,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L43"),n(ft,"rel","nofollow"),n(vt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L396"),n(vt,"rel","nofollow"),n(_t,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L51"),n(_t,"rel","nofollow"),n(mt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L44"),n(mt,"rel","nofollow"),n(kt,"href","#b-traverse-the-instance-script-and-module-script-ast"),n(kt,"id","b-traverse-the-instance-script-and-module-script-ast"),n(zs,"class","inline"),n(Vs,"class","inline"),n(Et,"href","#c-traverse-the-template"),n(Et,"id","c-traverse-the-template"),n(gt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/Fragment.ts"),n(gt,"rel","nofollow"),n(Ys,"class","inline"),n(qs,"class","inline"),n(Qs,"class","inline"),n(Zs,"class","inline"),n(Ks,"class","inline"),n(wt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/Element.ts"),n(wt,"rel","nofollow"),n(St,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/Element.ts#L280"),n(St,"rel","nofollow"),n(xt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/Element.ts#L461"),n(xt,"rel","nofollow"),n(Ct,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/Element.ts#L647"),n(Ct,"rel","nofollow"),n(Tt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/Element.ts#L658"),n(Tt,"rel","nofollow"),n(At,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/Slot.ts"),n(At,"rel","nofollow"),n(Xs,"class","inline"),n(Ot,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/EachBlock.ts"),n(Ot,"rel","nofollow"),n(ea,"class","inline"),n(ta,"class","inline"),n(It,"href","#d-traverse-the-instance-script-ast"),n(It,"id","d-traverse-the-instance-script-ast"),n(sa,"class","inline"),n(Rt,"href","#e-update-css-selectors-to-make-style-declarations-component-scope"),n(Rt,"id","e-update-css-selectors-to-make-style-declarations-component-scope"),n(aa,"class","inline"),n(jt,"href","#where-can-i-find-this-in-the-source-code"),n(jt,"id","where-can-i-find-this-in-the-source-code"),n(Mt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/index.ts#L83-L90"),n(Mt,"rel","nofollow"),n(ra,"class","inline"),n(Ht,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts"),n(Ht,"rel","nofollow"),n(Nt,"href","#where-can-i-learn-about-traversing-in-javascript"),n(Nt,"id","where-can-i-learn-about-traversing-in-javascript"),n(oa,"href","/manipulating-ast-with-javascript#traversing-an-ast"),n(Ut,"href","#3-creating-code-blocks-and-fragments"),n(Ut,"id","3-creating-code-blocks-and-fragments"),n(Gr,"type","image/webp"),n(Gr,"srcset",u2+", "+v2+" 2x"),lo(H.src,bh=Pu)||n(H,"src",bh),n(H,"srcset",Pu+", "+_2+" 2x"),n(H,"loading","lazy"),h(H,"position","absolute"),h(H,"top","0"),h(H,"width","100%"),h(H,"height","100%"),n(H,"alt","Step 3"),h(ke,"display","block"),h(ke,"position","relative"),h(ke,"padding-top","44.490%"),h(ke,"width","100%"),n(na,"class","code-section"),n(ca,"class","inline"),n(ia,"class","inline"),n(be,"href","https://svelte.dev/docs#svelte_compile"),n(be,"rel","nofollow"),n(pa,"class","inline"),n(Jt,"href","#dom-renderer"),n(Jt,"id","dom-renderer"),n(Gt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_dom/Renderer.ts#L31"),n(Gt,"rel","nofollow"),n(Bt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_dom/Renderer.ts#L28"),n(Bt,"rel","nofollow"),n(Ft,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_dom/Block.ts"),n(Ft,"rel","nofollow"),n(ha,"class","inline"),n(da,"href","/compile-svelte-in-your-head-part-1/#create_fragment"),n(fa,"href","/compile-svelte-in-your-head-part-2/#ctx"),n(va,"class","inline"),n(Vt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_dom/wrappers/Fragment.ts"),n(Vt,"rel","nofollow"),n(ua,"class","inline"),n(qt,"href","#ssr-renderer"),n(qt,"id","ssr-renderer"),n(Qt,"href","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals"),n(Qt,"rel","nofollow"),n(_a,"class","inline"),n(Zt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_ssr/Renderer.ts#L63"),n(Zt,"rel","nofollow"),n(ma,"class","inline"),n(Kt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_ssr/Renderer.ts#L67"),n(Kt,"rel","nofollow"),n(ka,"class","inline"),n(we,"href","#where-can-i-find-the-renderer-in-the-source-code"),n(we,"id","where-can-i-find-the-renderer-in-the-source-code"),n(Xt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_dom/Renderer.ts"),n(Xt,"rel","nofollow"),n(es,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_ssr/Renderer.ts"),n(es,"rel","nofollow"),n(ts,"href","#4-generate-code"),n(ts,"id","4-generate-code"),n(qr,"type","image/webp"),n(qr,"srcset",h2+", "+d2+" 2x"),lo(N.src,Eh=Ru)||n(N,"src",Eh),n(N,"srcset",Ru+", "+f2+" 2x"),n(N,"loading","lazy"),h(N,"position","absolute"),h(N,"top","0"),h(N,"width","100%"),h(N,"height","100%"),n(N,"alt","Step 4"),h(xe,"display","block"),h(xe,"position","relative"),h(xe,"padding-top","46.890%"),h(xe,"width","100%"),n(Ea,"class","code-section"),n(ya,"class","inline"),n(ga,"class","inline"),n(wa,"class","inline"),n(Sa,"class","inline"),n(ss,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_ssr/Renderer.ts#L23-L40"),n(ss,"rel","nofollow"),n(xa,"class","inline"),n(Ca,"class","inline"),n(as,"href","https://github.com/sveltejs/rollup-plugin-svelte"),n(as,"rel","nofollow"),n(rs,"href","https://github.com/sveltejs/svelte-loader"),n(rs,"rel","nofollow"),n(os,"href","#svelte-runtime"),n(os,"id","svelte-runtime"),n(ns,"href","https://github.com/sveltejs/svelte/tree/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/runtime/internal"),n(ns,"rel","nofollow"),n(Ta,"class","inline"),n(Aa,"class","inline"),n(Oa,"class","inline"),n(Ia,"class","inline"),n(Da,"class","inline"),n(La,"class","inline"),n(Ra,"class","inline"),n(ja,"class","inline")},m(c,d){$u(u,c,d),f(c,$,d),f(c,g,d),e(g,ne),e(ne,_),e(_,J),e(g,hs),e(g,Za),e(Za,Qo),e(g,Zo),e(g,ze),e(ze,Ka),e(Ka,Ko),e(ze,Xo),e(ze,Xa),e(Xa,el),f(c,no,d),f(c,w,d),e(w,er),e(er,Ve),e(Ve,tl),e(w,sl),e(w,tr),e(tr,ce),e(ce,fs),e(fs,sr),e(fs,D),e(w,al),e(w,ar),e(ar,rl),e(w,ol),e(w,G),e(G,rr),e(rr,ll),e(G,nl),e(G,or),e(or,cl),e(G,il),e(G,lr),e(lr,pl),e(G,dl),e(G,nr),e(nr,hl),e(w,fl),e(w,cr),e(cr,vl),e(w,ul),e(w,vs),vs.innerHTML=Fu,f(c,co,d),f(c,v,d),e(v,ir),e(ir,Ye),e(Ye,_l),e(v,ml),e(v,pr),e(pr,ie),e(ie,us),e(us,dr),e(us,L),e(v,kl),e(v,_s),_s.innerHTML=zu,e(v,bl),e(v,hr),e(hr,El),e(v,yl),e(v,pe),e(pe,ms),e(ms,gl),e(ms,ks),e(ks,wl),e(pe,Sl),e(pe,bs),e(bs,xl),e(bs,Es),e(Es,Cl),e(pe,Tl),e(pe,ys),e(ys,Al),e(ys,gs),e(gs,Ol),e(v,Il),e(v,de),e(de,Dl),e(de,ws),e(ws,Ll),e(de,Rl),e(de,Ss),e(Ss,Pl),e(de,jl),e(v,Ml),e(v,O),e(O,Hl),e(O,xs),e(xs,Nl),e(O,Wl),e(O,qe),e(qe,Ul),e(O,$l),e(O,Cs),e(Cs,Jl),e(O,Gl),e(O,Qe),e(Qe,Bl),e(O,Fl),e(v,zl),e(v,he),e(he,Vl),e(he,Ts),e(Ts,Yl),e(he,ql),e(he,As),e(As,Ql),e(he,Zl),e(v,Kl),e(v,fr),e(fr,Xl),e(v,en),e(v,Os),Os.innerHTML=Vu,e(v,tn),e(v,fe),e(fe,sn),e(fe,Ze),e(Ze,an),e(fe,rn),e(fe,vr),e(vr,on),e(fe,ln),f(c,io,d),f(c,Ce,d),e(Ce,ur),e(ur,Ke),e(Ke,nn),e(Ce,cn),e(Ce,ve),e(ve,pn),e(ve,Xe),e(Xe,dn),e(ve,hn),e(ve,et),e(et,fn),e(ve,vn),f(c,po,d),f(c,Z,d),e(Z,_r),e(_r,tt),e(tt,un),e(Z,_n),e(Z,st),e(st,mn),e(st,Is),e(Is,kn),e(st,bn),e(Z,En),e(Z,mr),e(mr,yn),f(c,ho,d),f(c,R,d),e(R,kr),e(kr,at),e(at,gn),e(R,wn),e(R,br),e(br,ue),e(ue,Ds),e(Ds,Er),e(Ds,P),e(R,Sn),e(R,Ls),Ls.innerHTML=Yu,e(R,xn),e(R,yr),e(yr,Cn),f(c,fo,d),f(c,K,d),e(K,gr),e(gr,_e),e(_e,Tn),e(_e,Rs),e(Rs,An),e(_e,On),e(K,In),e(K,rt),e(rt,Dn),e(rt,Ps),e(Ps,Ln),e(rt,Rn),e(K,Pn),e(K,b),e(b,js),e(js,jn),e(js,ot),e(ot,Ms),e(Ms,Mn),e(b,Hn),e(b,Te),e(Te,Nn),e(Te,lt),e(lt,Hs),e(Hs,Wn),e(Te,Un),e(Te,nt),e(nt,Ns),e(Ns,$n),e(b,Jn),e(b,Ws),e(Ws,Gn),e(Ws,ct),e(ct,Us),e(Us,Bn),e(b,Fn),e(b,$s),e($s,zn),e($s,it),e(it,Js),e(Js,Vn),e(b,Yn),e(b,Gs),e(Gs,qn),e(Gs,pt),e(pt,Bs),e(Bs,Qn),e(b,Zn),e(b,Fs),e(Fs,dt),e(dt,Kn),e(Fs,Xn),e(b,ec),e(b,ht),e(ht,ft),e(ft,tc),e(ht,sc),e(ht,vt),e(vt,ac),e(b,rc),e(b,ut),e(ut,_t),e(_t,oc),e(ut,lc),e(ut,mt),e(mt,nc),f(c,vo,d),f(c,X,d),e(X,wr),e(wr,kt),e(kt,cc),e(X,ic),e(X,Ae),e(Ae,zs),e(zs,pc),e(Ae,dc),e(Ae,Sr),e(Sr,hc),e(Ae,fc),e(X,vc),e(X,bt),e(bt,uc),e(bt,Vs),e(Vs,_c),e(bt,mc),f(c,uo,d),f(c,m,d),e(m,xr),e(xr,Et),e(Et,kc),e(m,bc),e(m,yt),e(yt,Ec),e(yt,gt),e(gt,yc),e(yt,gc),e(m,wc),e(m,Cr),e(Cr,Sc),e(m,xc),e(m,Tr),e(Tr,Ar),e(Ar,Cc),e(m,Tc),e(m,me),e(me,Ac),e(me,Ys),e(Ys,Oc),e(me,Ic),e(me,qs),e(qs,Dc),e(me,Lc),e(m,Rc),e(m,Or),e(Or,Ir),e(Ir,Pc),e(m,jc),e(m,ee),e(ee,Qs),e(Qs,Mc),e(ee,Hc),e(ee,Zs),e(Zs,Nc),e(ee,Wc),e(ee,Ks),e(Ks,Uc),e(ee,$c),e(m,Jc),e(m,Dr),e(Dr,Gc),e(m,Bc),e(m,B),e(B,C),e(C,wt),e(wt,Fc),e(C,zc),e(C,St),e(St,Vc),e(C,Yc),e(C,xt),e(xt,qc),e(C,Qc),e(C,Ct),e(Ct,Zc),e(C,Kc),e(C,Tt),e(Tt,Xc),e(C,ei),e(B,ti),e(B,Oe),e(Oe,At),e(At,si),e(Oe,ai),e(Oe,Xs),e(Xs,ri),e(Oe,oi),e(B,li),e(B,te),e(te,Ot),e(Ot,ni),e(te,ci),e(te,ea),e(ea,ii),e(te,pi),e(te,ta),e(ta,di),e(te,hi),e(B,fi),e(B,Lr),e(Lr,vi),f(c,_o,d),f(c,j,d),e(j,Rr),e(Rr,It),e(It,ui),e(j,_i),e(j,Pr),e(Pr,mi),e(j,ki),e(j,jr),e(jr,bi),e(j,Ei),e(j,Dt),e(Dt,Lt),e(Lt,yi),e(Lt,sa),e(sa,gi),e(Lt,wi),e(Dt,Si),e(Dt,Mr),e(Mr,xi),f(c,mo,d),f(c,se,d),e(se,Hr),e(Hr,Rt),e(Rt,Ci),e(se,Ti),e(se,Pt),e(Pt,Ai),e(Pt,aa),e(aa,Oi),e(Pt,Ii),e(se,Di),e(se,Nr),e(Nr,Li),f(c,ko,d),f(c,Ie,d),e(Ie,Wr),e(Wr,jt),e(jt,Ri),e(Ie,Pi),e(Ie,F),e(F,ji),e(F,Mt),e(Mt,Mi),e(F,Hi),e(F,ra),e(ra,Ni),e(F,Wi),e(F,Ht),e(Ht,Ui),e(F,$i),f(c,bo,d),f(c,De,d),e(De,Ur),e(Ur,Nt),e(Nt,Ji),e(De,Gi),e(De,Wt),e(Wt,Bi),e(Wt,oa),e(oa,Fi),e(Wt,zi),f(c,Eo,d),f(c,M,d),e(M,$r),e($r,Ut),e(Ut,Vi),e(M,Yi),e(M,Jr),e(Jr,ke),e(ke,la),e(la,Gr),e(la,H),e(M,qi),e(M,na),na.innerHTML=qu,e(M,Qi),e(M,z),e(z,Zi),e(z,ca),e(ca,Ki),e(z,Xi),e(z,$t),e($t,ep),e($t,be),e(be,tp),e(be,ia),e(ia,sp),e(be,ap),e($t,rp),e(z,op),e(z,pa),e(pa,lp),e(z,np),f(c,yo,d),f(c,S,d),e(S,Br),e(Br,Jt),e(Jt,cp),e(S,ip),e(S,Ee),e(Ee,pp),e(Ee,Gt),e(Gt,dp),e(Ee,hp),e(Ee,Bt),e(Bt,fp),e(Ee,vp),e(S,up),e(S,ye),e(ye,_p),e(ye,Ft),e(Ft,mp),e(ye,kp),e(ye,da),e(da,ha),e(ha,bp),e(ye,Ep),e(S,yp),e(S,ge),e(ge,gp),e(ge,fa),e(fa,wp),e(ge,Sp),e(ge,va),e(va,xp),e(ge,Cp),e(S,Tp),e(S,zt),e(zt,Ap),e(zt,Vt),e(Vt,Op),e(zt,Ip),e(S,Dp),e(S,Yt),e(Yt,Lp),e(Yt,ua),e(ua,Rp),e(Yt,Pp),f(c,go,d),f(c,Le,d),e(Le,Fr),e(Fr,qt),e(qt,jp),e(Le,Mp),e(Le,V),e(V,Hp),e(V,Qt),e(Qt,Np),e(V,Wp),e(V,Zt),e(Zt,_a),e(_a,Up),e(V,$p),e(V,Kt),e(Kt,ma),e(ma,Jp),e(V,Gp),f(c,wo,d),f(c,Re,d),e(Re,zr),e(zr,we),e(we,Bp),e(we,ka),e(ka,Fp),e(we,zp),e(Re,Vp),e(Re,Se),e(Se,Yp),e(Se,Xt),e(Xt,qp),e(Se,Qp),e(Se,es),e(es,Zp),e(Se,Kp),f(c,So,d),f(c,E,d),e(E,Vr),e(Vr,ts),e(ts,Xp),e(E,ed),e(E,Yr),e(Yr,xe),e(xe,ba),e(ba,qr),e(ba,N),e(E,td),e(E,Ea),Ea.innerHTML=Qu,e(E,sd),e(E,Qr),e(Qr,ad),e(E,rd),e(E,T),e(T,Zr),e(Zr,od),e(T,ld),e(T,ya),e(ya,nd),e(T,cd),e(T,ga),e(ga,id),e(T,pd),e(T,wa),e(wa,dd),e(T,hd),e(T,Sa),e(Sa,fd),e(T,vd),e(E,ud),e(E,Pe),e(Pe,Kr),e(Kr,_d),e(Pe,md),e(Pe,ss),e(ss,kd),e(Pe,bd),e(E,Ed),e(E,I),e(I,yd),e(I,xa),e(xa,gd),e(I,wd),e(I,Ca),e(Ca,Sd),e(I,xd),e(I,as),e(as,Cd),e(I,Td),e(I,rs),e(rs,Ad),e(I,Od),f(c,xo,d),f(c,ae,d),e(ae,Xr),e(Xr,os),e(os,Id),e(ae,Dd),e(ae,ls),e(ls,Ld),e(ls,ns),e(ns,Rd),e(ls,Pd),e(ae,jd),e(ae,Y),e(Y,re),e(re,Md),e(re,Ta),e(Ta,Hd),e(re,Nd),e(re,Aa),e(Aa,Wd),e(re,Ud),e(re,Oa),e(Oa,$d),e(Y,Jd),e(Y,je),e(je,Gd),e(je,Ia),e(Ia,Bd),e(je,Fd),e(je,Da),e(Da,zd),e(Y,Vd),e(Y,Me),e(Me,Yd),e(Me,La),e(La,qd),e(Me,Qd),e(Me,Ra),e(Ra,Zd),e(Y,Kd),e(Y,Pa),e(Pa,Xd),e(Pa,ja),e(ja,eh),Co=!0},p:c2,i(c){Co||(Ju(u.$$.fragment,c),Co=!0)},o(c){Gu(u.$$.fragment,c),Co=!1},d(c){Bu(u,c),c&&t($),c&&t(g),c&&t(no),c&&t(w),c&&t(co),c&&t(v),c&&t(io),c&&t(Ce),c&&t(po),c&&t(Z),c&&t(ho),c&&t(R),c&&t(fo),c&&t(K),c&&t(vo),c&&t(X),c&&t(uo),c&&t(m),c&&t(_o),c&&t(j),c&&t(mo),c&&t(se),c&&t(ko),c&&t(Ie),c&&t(bo),c&&t(De),c&&t(Eo),c&&t(M),c&&t(yo),c&&t(S),c&&t(go),c&&t(Le),c&&t(wo),c&&t(Re),c&&t(So),c&&t(E),c&&t(xo),c&&t(ae)}}}function A2(ds){let u,$;const g=[ds[0],Nu];let ne={$$slots:{default:[T2]},$$scope:{ctx:ds}};for(let _=0;_<g.length;_+=1)ne=uh(ne,g[_]);return u=new i2({props:ne}),{c(){Wu(u.$$.fragment)},l(_){Uu(u.$$.fragment,_)},m(_,J){$u(u,_,J),$=!0},p(_,[J]){const hs=J&1?l2(g,[J&1&&Du(_[0]),J&0&&Du(Nu)]):{};J&2&&(hs.$$scope={dirty:J,ctx:_}),u.$set(hs)},i(_){$||(Ju(u.$$.fragment,_),$=!0)},o(_){Gu(u.$$.fragment,_),$=!1},d(_){Bu(u,_)}}}const Nu={title:"The Svelte Compiler Handbook",date:"2020-04-05T08:00:00Z",tags:["Svelte","JavaScript","compiler"],description:"The Svelte compilation process can be broken down into 4-steps, 1) parsing source code into AST, 2) tracking references and dependencies, 3) creating code blocks and fragments, and 4) generate code.",label:"blog"};function O2(ds,u,$){return n2("blog",{image:C2}),ds.$$set=g=>{$(0,u=uh(uh({},u),Lu(g)))},u=Lu(u),[u]}class M2 extends a2{constructor(u){super();r2(this,u,O2,A2,o2,{})}}export{M2 as default,Nu as metadata};
