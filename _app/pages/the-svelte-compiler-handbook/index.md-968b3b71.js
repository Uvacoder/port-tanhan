import{S as Zu,i as Ku,s as Xu,C as vh,w as Ru,x as Pu,y as ju,z as e2,A as xu,q as Mu,o as Hu,B as Nu,r as t2,R as Cu,k as i,e as s,t as o,m as p,c as r,a,h as l,d as t,b as n,Q as oo,g as h,F as e,O as s2}from"../../chunks/vendor-6bf294e3.js";import{B as r2}from"../../chunks/BlogLayout-152f599b.js";import{T as a2}from"../../chunks/TableOfContent-1b9e4572.js";import"../../chunks/stores-e20b7872.js";import"../../chunks/WebMentions-745413ea.js";/* empty css                                */var o2="/_app/assets/step-4-997f18e1.webp",Tu="/_app/assets/step-4-533a8fe0.png",l2="/_app/assets/step-3-faffd8b6.webp",Au="/_app/assets/step-3-45c82f40.png",n2="/_app/assets/step-2-a5607e12.webp",Ou="/_app/assets/step-2-09f9fb5b.png",c2="/_app/assets/step-1-61461261.webp",Iu="/_app/assets/step-1-d9984fea.png",i2="/_app/assets/overview-9793d290.webp",Du="/_app/assets/overview-6ca5bb24.png",p2="/_app/assets/hero-twitter-87e98179.jpg";function d2(ps){let v,j,y,te,u,M,ds,Fr,el,tl,je,zr,sl,rl,Vr,al,lo,g,Yr,Me,ol,ll,qr,He,Qr,Zr,Ne,uh,nl,Kr,cl,il,H,Xr,pl,dl,ea,hl,fl,ta,vl,ul,sa,ml,kl,ra,_l,El,hs,Wu=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">source</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.readFileSync</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;App.svelte&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// parse source code into AST</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ast</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">parse</span><span style="color: var(--shiki-color-text)">(source);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// tracking references and dependencies</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">component</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Component</span><span style="color: var(--shiki-color-text)">(ast);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// creating code blocks and fragments</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">renderer</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">options</span><span style="color: var(--shiki-color-text)">.generate </span><span style="color: var(--shiki-token-keyword)">===</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;ssr&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">?</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">SSRRenderer</span><span style="color: var(--shiki-color-text)">(component) </span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">DomRenderer</span><span style="color: var(--shiki-color-text)">(component);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// Generate code</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-constant)">js</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">css</span><span style="color: var(--shiki-color-text)"> &#125; </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">renderer</span><span style="color: var(--shiki-token-function)">.render</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.writeFileSync</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;App.js&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> js);</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.writeFileSync</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;App.css&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> css);</span></span></code></pre>`,no,f,aa,We,bl,yl,oa,Ue,la,na,$e,mh,gl,fs,Uu=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// parse source code into AST</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ast</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">parse</span><span style="color: var(--shiki-color-text)">(source);</span></span></code></pre>`,wl,ca,Sl,xl,se,vs,Cl,us,Tl,Al,ms,Ol,ks,Il,Dl,_s,Ll,Es,Rl,Pl,re,jl,bs,Ml,Hl,ys,Nl,Wl,Ul,A,$l,gs,Jl,Gl,Je,Bl,Fl,ws,zl,Vl,Ge,Yl,ql,Ql,ae,Zl,Ss,Kl,Xl,xs,en,tn,sn,ia,rn,an,Cs,$u=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  html</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &#123; type</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Fragment&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> children</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-keyword)">...</span><span style="color: var(--shiki-color-text)">] &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  css</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-keyword)">...</span><span style="color: var(--shiki-color-text)"> &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  instance</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &#123; context</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;default&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> content</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span><span style="color: var(--shiki-token-keyword)">...</span><span style="color: var(--shiki-color-text)">&#125; &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  module</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &#123; context</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;context&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> content</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> &#123;</span><span style="color: var(--shiki-token-keyword)">...</span><span style="color: var(--shiki-color-text)">&#125; &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,on,oe,ln,Be,nn,cn,pa,pn,dn,co,ue,da,Fe,hn,fn,le,vn,ze,un,mn,Ve,kn,_n,io,F,ha,Ye,En,bn,qe,yn,Ts,gn,wn,Sn,fa,xn,po,I,va,Qe,Cn,Tn,ua,Ze,ma,ka,Ke,kh,An,As,Ju=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// tracking references and dependencies</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">component</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Component</span><span style="color: var(--shiki-color-text)">(ast);</span></span></code></pre>`,On,_a,In,ho,z,Ea,ne,Dn,Os,Ln,Rn,Pn,Xe,jn,Is,Mn,Hn,Nn,_,Ds,Wn,et,Ls,Un,$n,me,Jn,tt,Rs,Gn,Bn,st,Ps,Fn,zn,js,Vn,rt,Ms,Yn,qn,Hs,Qn,at,Ns,Zn,Kn,Ws,Xn,ot,Us,ec,tc,$s,lt,sc,rc,ac,nt,ct,oc,lc,it,nc,cc,pt,dt,ic,pc,ht,dc,fo,V,ba,ft,hc,fc,ke,Js,vc,uc,ya,mc,kc,_c,vt,Ec,Gs,bc,yc,vo,m,ga,ut,gc,wc,mt,Sc,kt,xc,Cc,Tc,wa,Ac,Oc,Sa,xa,Ic,Dc,ce,Lc,Bs,Rc,Pc,Fs,jc,Mc,Hc,Ca,Ta,Nc,Wc,Y,zs,Uc,$c,Vs,Jc,Gc,Ys,Bc,Fc,zc,Aa,Vc,Yc,N,x,_t,qc,Qc,Et,Zc,Kc,bt,Xc,ei,yt,ti,si,gt,ri,ai,oi,_e,wt,li,ni,qs,ci,ii,pi,q,St,di,hi,Qs,fi,vi,Zs,ui,mi,ki,Oa,_i,uo,D,Ia,xt,Ei,bi,Da,yi,gi,La,wi,Si,Ct,Tt,xi,Ks,Ci,Ti,Ai,Ra,Oi,mo,Q,Pa,At,Ii,Di,Ot,Li,Xs,Ri,Pi,ji,ja,Mi,ko,Ee,Ma,It,Hi,Ni,W,Wi,Dt,Ui,$i,er,Ji,Gi,Lt,Bi,Fi,_o,be,Ha,Rt,zi,Vi,Pt,Yi,tr,qi,Qi,Eo,L,Na,jt,Zi,Ki,Wa,Mt,Ua,$a,Ht,_h,Xi,sr,Gu=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// creating code blocks and fragments</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">renderer</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">options</span><span style="color: var(--shiki-color-text)">.generate </span><span style="color: var(--shiki-token-keyword)">===</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;ssr&#39;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">?</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">SSRRenderer</span><span style="color: var(--shiki-color-text)">(component) </span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">DomRenderer</span><span style="color: var(--shiki-color-text)">(component);</span></span></code></pre>`,ep,U,tp,rr,sp,rp,Nt,ap,ie,op,ar,lp,np,cp,ip,or,pp,dp,bo,w,Ja,Wt,hp,fp,pe,vp,Ut,up,mp,$t,kp,_p,Ep,de,bp,Jt,yp,gp,lr,nr,wp,Sp,xp,he,Cp,cr,Tp,Ap,ir,Op,Ip,Dp,Gt,Lp,Bt,Rp,Pp,jp,Ft,Mp,pr,Hp,Np,yo,ye,Ga,zt,Wp,Up,$,$p,Vt,Jp,Gp,Yt,dr,Bp,Fp,qt,hr,zp,Vp,go,ge,Ba,fe,Yp,fr,qp,Qp,Zp,ve,Kp,Qt,Xp,ed,Zt,td,sd,wo,E,Fa,Kt,rd,ad,za,Xt,Va,Ya,es,Eh,od,vr,Bu=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// Generate code</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-constant)">js</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">css</span><span style="color: var(--shiki-color-text)"> &#125; </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">renderer</span><span style="color: var(--shiki-token-function)">.render</span><span style="color: var(--shiki-color-text)">();</span></span></code></pre>`,ld,qa,nd,cd,C,Qa,id,pd,ur,dd,hd,mr,fd,vd,kr,ud,md,_r,kd,_d,Ed,we,Za,bd,yd,ts,gd,wd,Sd,O,xd,Er,Cd,Td,br,Ad,Od,ss,Id,Dd,rs,Ld,Rd,So,Z,Ka,as,Pd,jd,os,Md,ls,Hd,Nd,Wd,J,K,Ud,yr,$d,Jd,gr,Gd,Bd,wr,Fd,zd,Se,Vd,Sr,Yd,qd,xr,Qd,Zd,xe,Kd,Cr,Xd,eh,Tr,th,sh,Ar,rh,Or,ah,xo;return v=new a2({props:{data:[{link:"who-is-this-for",title:"Who is this for?"},{link:"overview",title:"Overview"},{link:"parsing-source-code-into-ast",title:"1. Parsing source code into AST",nested:[{link:"where-can-i-find-the-parser-in-the-source-code",title:"Where can I find the parser in the source code?"},{link:"where-can-i-learn-about-parsing-in-javascript",title:"Where can I learn about parsing in JavaScript?"}]},{link:"tracking-references-and-dependencies",title:"2. Tracking references and dependencies",nested:[{link:"a-svelte-creates-a-component-instance",title:"a. Svelte creates a  `Component`  instance."},{link:"b-traverse-the-instance-script-and-module-script-ast",title:"b. Traverse the instance script and module script AST"},{link:"c-traverse-the-template",title:"c. Traverse the template"},{link:"d-traverse-the-instance-script-ast",title:"d. Traverse the instance script AST"},{link:"e-update-css-selectors-to-make-style-declarations-component-scope",title:"e. Update CSS selectors to make style declarations component scope"},{link:"where-can-i-find-this-in-the-source-code",title:"Where can I find this in the source code?"},{link:"where-can-i-learn-about-traversing-in-javascript",title:"Where can I learn about traversing in JavaScript?"}]},{link:"creating-code-blocks-and-fragments",title:"3. Creating code blocks and fragments",nested:[{link:"dom-renderer",title:"DOM Renderer"},{link:"ssr-renderer",title:"SSR Renderer"},{link:"where-can-i-find-the-renderer-in-the-source-code",title:"Where can I find the  `Renderer`  in the source code?"}]},{link:"generate-code",title:"4. Generate code"},{link:"svelte-runtime",title:"Svelte runtime"}]}}),{c(){Ru(v.$$.fragment),j=i(),y=s("section"),te=s("h2"),u=s("a"),M=o("Who is this for?"),ds=i(),Fr=s("p"),el=o("Anyone who"),tl=i(),je=s("ul"),zr=s("li"),sl=o("is interested in the Svelte compilation process"),rl=i(),Vr=s("li"),al=o("wants to get started in reading Svelte source code"),lo=i(),g=s("section"),Yr=s("h2"),Me=s("a"),ol=o("Overview"),ll=i(),qr=s("p"),He=s("picture"),Qr=s("source"),Zr=s("source"),Ne=s("img"),nl=i(),Kr=s("p"),cl=o("The Svelte compilation process can be broken down into 4-steps"),il=i(),H=s("ul"),Xr=s("li"),pl=o("Parsing source code into Abstract Syntax Tree (AST)"),dl=i(),ea=s("li"),hl=o("Tracking references and dependencies"),fl=i(),ta=s("li"),vl=o("Creating code blocks and fragments"),ul=i(),sa=s("li"),ml=o("Generate code"),kl=i(),ra=s("p"),_l=o("Which sums out by the following pseudocode:"),El=i(),hs=s("div"),no=i(),f=s("section"),aa=s("h2"),We=s("a"),bl=o("1. Parsing source code into AST"),yl=i(),oa=s("p"),Ue=s("picture"),la=s("source"),na=s("source"),$e=s("img"),gl=i(),fs=s("div"),wl=i(),ca=s("p"),Sl=o("The Svelte syntax is a superset of HTML. Svelte implements its own parser for the Svelte syntax, which handles:"),xl=i(),se=s("ul"),vs=s("li"),Cl=o("HTML syntax "),us=s("code"),Tl=o("<div>"),Al=i(),ms=s("li"),Ol=o("Curly brackets "),ks=s("code"),Il=o("{ data }"),Dl=i(),_s=s("li"),Ll=o("Logic blocks "),Es=s("code"),Rl=o("{#each list as item}"),Pl=i(),re=s("p"),jl=o("The Svelte parser handles specially for "),bs=s("code"),Ml=o("<script>"),Hl=o(" and "),ys=s("code"),Nl=o("<style>"),Wl=o(" tags."),Ul=i(),A=s("p"),$l=o("When the parser encounters a "),gs=s("code"),Jl=o("<script>"),Gl=o(" tag, it uses "),Je=s("a"),Bl=o("acorn"),Fl=o(" to parse the content within the tag. When the parser sees a "),ws=s("code"),zl=o("<style>"),Vl=o(" tag, it uses "),Ge=s("a"),Yl=o("css-tree"),ql=o(" to parse the CSS content."),Ql=i(),ae=s("p"),Zl=o("Besides, the Svelte parser differentiates instance script, "),Ss=s("code"),Kl=o("<script>"),Xl=o(", and module script, "),xs=s("code"),en=o('<script context="module">'),tn=o("."),sn=i(),ia=s("p"),rn=o("The Svelte AST look like:"),an=i(),Cs=s("div"),on=i(),oe=s("p"),ln=o("You can try out the Svelte parser in "),Be=s("a"),nn=o("ASTExplorer"),cn=o(". You can find the Svelte parser under "),pa=s("strong"),pn=o("HTML > Svelte"),dn=o("."),co=i(),ue=s("section"),da=s("h3"),Fe=s("a"),hn=o("Where can I find the parser in the source code?"),fn=i(),le=s("p"),vn=o("The parsing "),ze=s("a"),un=o("starts here"),mn=o(", which the parser is implemented in "),Ve=s("a"),kn=o("src/compiler/parse/index.ts"),_n=o("."),io=i(),F=s("section"),ha=s("h3"),Ye=s("a"),En=o("Where can I learn about parsing in JavaScript?"),bn=i(),qe=s("p"),yn=o("My previous article, "),Ts=s("a"),gn=o('"JSON Parser with JavaScript"'),wn=o(" introduces the terminology and guides you step-by-step on writing a parser for JSON in JavaScript."),Sn=i(),fa=s("p"),xn=o("If this is the your first time learning about parser, I highly recommend you to read that."),po=i(),I=s("section"),va=s("h2"),Qe=s("a"),Cn=o("2. Tracking references and dependencies"),Tn=i(),ua=s("p"),Ze=s("picture"),ma=s("source"),ka=s("source"),Ke=s("img"),An=i(),As=s("div"),On=i(),_a=s("p"),In=o("In this step, Svelte traverses through the AST to track all the variable declared and referenced and their depedencies."),ho=i(),z=s("section"),Ea=s("h3"),ne=s("a"),Dn=o("a. Svelte creates a "),Os=s("code"),Ln=o("Component"),Rn=o(" instance."),Pn=i(),Xe=s("p"),jn=o("The "),Is=s("code"),Mn=o("Component"),Hn=o(" class stores information of the Svelte component, which includes:"),Nn=i(),_=s("ul"),Ds=s("li"),Wn=o("HTML fragment, "),et=s("a"),Ls=s("code"),Un=o("fragment"),$n=i(),me=s("li"),Jn=o("instance script and module script AST and their lexical scopes, "),tt=s("a"),Rs=s("code"),Gn=o("instance_scope"),Bn=o(" and "),st=s("a"),Ps=s("code"),Fn=o("module_scope"),zn=i(),js=s("li"),Vn=o("instance variables, "),rt=s("a"),Ms=s("code"),Yn=o("vars"),qn=i(),Hs=s("li"),Qn=o("reactive variables, "),at=s("a"),Ns=s("code"),Zn=o("reactive_declarations"),Kn=i(),Ws=s("li"),Xn=o("slots, "),ot=s("a"),Us=s("code"),ec=o("slots"),tc=i(),$s=s("li"),lt=s("a"),sc=o("used variable names"),rc=o(" to prevent naming conflict when creating temporary variables"),ac=i(),nt=s("li"),ct=s("a"),oc=o("warnings"),lc=o(" and "),it=s("a"),nc=o("errors"),cc=i(),pt=s("li"),dt=s("a"),ic=o("compile options"),pc=o(" and "),ht=s("a"),dc=o("ignored warnings"),fo=i(),V=s("section"),ba=s("h3"),ft=s("a"),hc=o("b. Traverse the instance script and module script AST"),fc=i(),ke=s("p"),Js=s("code"),vc=o("Component"),uc=o(" traverses the instance script and module script AST to "),ya=s("strong"),mc=o("find out all the variables declared, referenced, and updated"),kc=o(" within the instance script and module script."),_c=i(),vt=s("p"),Ec=o("Svelte identifies all the variables available before traversing the template. When encountering the variable during template traversal, Svelte will mark the variable as "),Gs=s("code"),bc=o("referenced"),yc=o(" from template."),vo=i(),m=s("section"),ga=s("h3"),ut=s("a"),gc=o("c. Traverse the template"),wc=i(),mt=s("p"),Sc=o("Svelte traverses through the template AST and creates a "),kt=s("a"),xc=o("Fragment"),Cc=o(" tree out of the template AST."),Tc=i(),wa=s("p"),Ac=o("Each fragment node contains information such as:"),Oc=i(),Sa=s("p"),xa=s("strong"),Ic=o("- expression and dependencies"),Dc=i(),ce=s("p"),Lc=o("Logic blocks, "),Bs=s("code"),Rc=o("{#if}"),Pc=o(", and mustache tags, "),Fs=s("code"),jc=o("{ data }"),Mc=o(", contain expression and the dependencies of the expression."),Hc=i(),Ca=s("p"),Ta=s("strong"),Nc=o("- scope"),Wc=i(),Y=s("p"),zs=s("code"),Uc=o("{#each}"),$c=o(" and "),Vs=s("code"),Jc=o("{#await}"),Gc=o(" logic block and "),Ys=s("code"),Bc=o("let:"),Fc=o(" binding create new variables for the children template."),zc=i(),Aa=s("p"),Vc=o("Svelte creates a different Fragment node for each type of node in the AST, as different kind of Fragment node handles things differently:"),Yc=i(),N=s("ul"),x=s("li"),_t=s("a"),qc=o("Element node"),Qc=o(" validates the "),Et=s("a"),Zc=o("attribute"),Kc=o(", "),bt=s("a"),Xc=o("bindings"),ei=o(", "),yt=s("a"),ti=o("content"),si=o(" and "),gt=s("a"),ri=o("event handlers"),ai=o("."),oi=i(),_e=s("li"),wt=s("a"),li=o("Slot node"),ni=o(" registers the slot name to the "),qs=s("code"),ci=o("Component"),ii=o("."),pi=i(),q=s("li"),St=s("a"),di=o("EachBlock node"),hi=o(" creates a new scope and tracks the "),Qs=s("code"),fi=o("key"),vi=o(", "),Zs=s("code"),ui=o("index"),mi=o(" and the name of the list to be iterated."),ki=i(),Oa=s("li"),_i=o("..."),uo=i(),D=s("section"),Ia=s("h3"),xt=s("a"),Ei=o("d. Traverse the instance script AST"),bi=i(),Da=s("p"),yi=o("After traversing through the template, Svelte now knows whether a variable is ever being updated or referenced in the component."),gi=i(),La=s("p"),wi=o("With this information, Svelte tries make preparations for optimising the output, for example:"),Si=i(),Ct=s("ul"),Tt=s("li"),xi=o("determine which variables or functions can be safely hoisted out of the "),Ks=s("code"),Ci=o("instance"),Ti=o(" function."),Ai=i(),Ra=s("li"),Oi=o("determine reactive declarations that does not need to be reactive"),mo=i(),Q=s("section"),Pa=s("h3"),At=s("a"),Ii=o("e. Update CSS selectors to make style declarations component scope"),Di=i(),Ot=s("p"),Li=o("Svelte updates the CSS selectors, by adding "),Xs=s("code"),Ri=o(".svelte-xxx"),Pi=o(" class to the selectors when necessary."),ji=i(),ja=s("p"),Mi=o("At the end of this step, Svelte has enough information to generate the compiled code, which brings us to the next step."),ko=i(),Ee=s("section"),Ma=s("h3"),It=s("a"),Hi=o("Where can I find this in the source code?"),Ni=i(),W=s("p"),Wi=o("You can start reading "),Dt=s("a"),Ui=o("from here"),$i=o(", which the "),er=s("code"),Ji=o("Component"),Gi=o(" is implemented in "),Lt=s("a"),Bi=o("src/compiler/compile/Component.ts"),Fi=o("."),_o=i(),be=s("section"),Ha=s("h3"),Rt=s("a"),zi=o("Where can I learn about traversing in JavaScript?"),Vi=i(),Pt=s("p"),Yi=o("Bear with my shameless plug, my previous article, "),tr=s("a"),qi=o('"Manipulating AST with JavaScript"'),Qi=o(" covers relevant knowledge you need to know about traversing AST in JavaScript."),Eo=i(),L=s("section"),Na=s("h2"),jt=s("a"),Zi=o("3. Creating code blocks and fragments"),Ki=i(),Wa=s("p"),Mt=s("picture"),Ua=s("source"),$a=s("source"),Ht=s("img"),Xi=i(),sr=s("div"),ep=i(),U=s("p"),tp=o("In this step, Svelte creates a "),rr=s("code"),sp=o("Renderer"),rp=o(" instance which keeps track necessary information required to generate the compiled output. Depending on the whether to output DOM or SSR code "),Nt=s("em"),ap=o("("),ie=s("a"),op=o("see "),ar=s("code"),lp=o("generate"),np=o(" in compile options"),cp=o(")"),ip=o(", Svelte instantiates different "),or=s("code"),pp=o("Renderer"),dp=o(" respectively."),bo=i(),w=s("section"),Ja=s("h3"),Wt=s("a"),hp=o("DOM Renderer"),fp=i(),pe=s("p"),vp=o("DOM Renderer keeps track of "),Ut=s("a"),up=o("a list of blocks"),mp=o(" and "),$t=s("a"),kp=o("context"),_p=o("."),Ep=i(),de=s("p"),bp=o("A "),Jt=s("a"),yp=o("Block"),gp=o(" contains code fragments for generate the "),lr=s("a"),nr=s("code"),wp=o("create_fragment"),Sp=o(" function."),xp=i(),he=s("p"),Cp=o("Context tracks a list of "),cr=s("a"),Tp=o("instance variables"),Ap=o(" which will be presented in the "),ir=s("code"),Op=o("$$.ctx"),Ip=o(" in the compiled output."),Dp=i(),Gt=s("p"),Lp=o("In the renderer, Svelte creates a "),Bt=s("a"),Rp=o("render tree"),Pp=o(" out of the Fragment tree."),jp=i(),Ft=s("p"),Mp=o("Each node in the render tree implements the "),pr=s("code"),Hp=o("render"),Np=o(" function which generate codes that create and update the DOM for the node."),yo=i(),ye=s("section"),Ga=s("h3"),zt=s("a"),Wp=o("SSR Renderer"),Up=i(),$=s("p"),$p=o("SSR Renderer provide helpers to generate "),Vt=s("a"),Jp=o("template literals"),Gp=o(" in the compiled output, such as "),Yt=s("a"),dr=s("code"),Bp=o("add_string(str)"),Fp=o(" and "),qt=s("a"),hr=s("code"),zp=o("add_expression(node)"),Vp=o("."),go=i(),ge=s("section"),Ba=s("h3"),fe=s("a"),Yp=o("Where can I find the "),fr=s("code"),qp=o("Renderer"),Qp=o(" in the source code?"),Zp=i(),ve=s("p"),Kp=o("The DOM Renderer is implemented in "),Qt=s("a"),Xp=o("src/compiler/compile/render_dom/Renderer.ts"),ed=o(", and you can check out the SSR Renderer code in "),Zt=s("a"),td=o("src/compiler/compile/render_ssr/Renderer.ts"),sd=o("."),wo=i(),E=s("section"),Fa=s("h2"),Kt=s("a"),rd=o("4. Generate code"),ad=i(),za=s("p"),Xt=s("picture"),Va=s("source"),Ya=s("source"),es=s("img"),od=i(),vr=s("div"),ld=i(),qa=s("p"),nd=o("Different renderer renders differently."),cd=i(),C=s("p"),Qa=s("strong"),id=o("The DOM Renderer"),pd=o(" traverses through the render tree and calls the "),ur=s("code"),dd=o("render"),hd=o(" function of each node along the way. The "),mr=s("code"),fd=o("Block"),vd=o(" instance is passed into the "),kr=s("code"),ud=o("render"),md=o(" function, so that each node inserts the code into the appropriate "),_r=s("code"),kd=o("create_fragment"),_d=o(" function."),Ed=i(),we=s("p"),Za=s("strong"),bd=o("The SSR Renderer"),yd=o(", on the other hand, relies on different "),ts=s("a"),gd=o("node handlers"),wd=o(" to insert strings or expressions into the final template literal."),Sd=i(),O=s("p"),xd=o("The render function returns "),Er=s("code"),Cd=o("js"),Td=o(" and "),br=s("code"),Ad=o("css"),Od=o(" which will be consumed by the bundler, via "),ss=s("a"),Id=o("rollup-plugin-svelte"),Dd=o(" for rollup and "),rs=s("a"),Ld=o("svelte-loader"),Rd=o(" for webpack respectively."),So=i(),Z=s("section"),Ka=s("h2"),as=s("a"),Pd=o("Svelte runtime"),jd=i(),os=s("p"),Md=o("To remove duplicate code in the compiled output, Svelte provide util function which can be found in the "),ls=s("a"),Hd=o("src/runtime/internal"),Nd=o(", such as:"),Wd=i(),J=s("ul"),K=s("li"),Ud=o("dom related utils, eg: "),yr=s("code"),$d=o("append"),Jd=o(", "),gr=s("code"),Gd=o("insert"),Bd=o(", "),wr=s("code"),Fd=o("detach"),zd=i(),Se=s("li"),Vd=o("scheduling utils, eg: "),Sr=s("code"),Yd=o("schedule_update"),qd=o(", "),xr=s("code"),Qd=o("flush"),Zd=i(),xe=s("li"),Kd=o("lifecycle utils, eg: "),Cr=s("code"),Xd=o("onMount"),eh=o(", "),Tr=s("code"),th=o("beforeUpdate"),sh=i(),Ar=s("li"),rh=o("animation utils, eg: "),Or=s("code"),ah=o("create_animation"),this.h()},l(c){Pu(v.$$.fragment,c),j=p(c),y=r(c,"SECTION",{});var d=a(y);te=r(d,"H2",{});var bh=a(te);u=r(bh,"A",{href:!0,id:!0});var yh=a(u);M=l(yh,"Who is this for?"),yh.forEach(t),bh.forEach(t),ds=p(d),Fr=r(d,"P",{});var gh=a(Fr);el=l(gh,"Anyone who"),gh.forEach(t),tl=p(d),je=r(d,"UL",{});var Co=a(je);zr=r(Co,"LI",{});var wh=a(zr);sl=l(wh,"is interested in the Svelte compilation process"),wh.forEach(t),rl=p(Co),Vr=r(Co,"LI",{});var Sh=a(Vr);al=l(Sh,"wants to get started in reading Svelte source code"),Sh.forEach(t),Co.forEach(t),d.forEach(t),lo=p(c),g=r(c,"SECTION",{});var R=a(g);Yr=r(R,"H2",{});var xh=a(Yr);Me=r(xh,"A",{href:!0,id:!0});var Ch=a(Me);ol=l(Ch,"Overview"),Ch.forEach(t),xh.forEach(t),ll=p(R),qr=r(R,"P",{});var Th=a(qr);He=r(Th,"PICTURE",{});var To=a(He);Qr=r(To,"SOURCE",{type:!0,srcset:!0}),Zr=r(To,"SOURCE",{type:!0,srcset:!0}),Ne=r(To,"IMG",{src:!0,loading:!0,alt:!0}),To.forEach(t),Th.forEach(t),nl=p(R),Kr=r(R,"P",{});var Ah=a(Kr);cl=l(Ah,"The Svelte compilation process can be broken down into 4-steps"),Ah.forEach(t),il=p(R),H=r(R,"UL",{});var Ce=a(H);Xr=r(Ce,"LI",{});var Oh=a(Xr);pl=l(Oh,"Parsing source code into Abstract Syntax Tree (AST)"),Oh.forEach(t),dl=p(Ce),ea=r(Ce,"LI",{});var Ih=a(ea);hl=l(Ih,"Tracking references and dependencies"),Ih.forEach(t),fl=p(Ce),ta=r(Ce,"LI",{});var Dh=a(ta);vl=l(Dh,"Creating code blocks and fragments"),Dh.forEach(t),ul=p(Ce),sa=r(Ce,"LI",{});var Lh=a(sa);ml=l(Lh,"Generate code"),Lh.forEach(t),Ce.forEach(t),kl=p(R),ra=r(R,"P",{});var Rh=a(ra);_l=l(Rh,"Which sums out by the following pseudocode:"),Rh.forEach(t),El=p(R),hs=r(R,"DIV",{class:!0});var Fu=a(hs);Fu.forEach(t),R.forEach(t),no=p(c),f=r(c,"SECTION",{});var k=a(f);aa=r(k,"H2",{});var Ph=a(aa);We=r(Ph,"A",{href:!0,id:!0});var jh=a(We);bl=l(jh,"1. Parsing source code into AST"),jh.forEach(t),Ph.forEach(t),yl=p(k),oa=r(k,"P",{});var Mh=a(oa);Ue=r(Mh,"PICTURE",{});var Ao=a(Ue);la=r(Ao,"SOURCE",{type:!0,srcset:!0}),na=r(Ao,"SOURCE",{type:!0,srcset:!0}),$e=r(Ao,"IMG",{src:!0,loading:!0,alt:!0}),Ao.forEach(t),Mh.forEach(t),gl=p(k),fs=r(k,"DIV",{class:!0});var zu=a(fs);zu.forEach(t),wl=p(k),ca=r(k,"P",{});var Hh=a(ca);Sl=l(Hh,"The Svelte syntax is a superset of HTML. Svelte implements its own parser for the Svelte syntax, which handles:"),Hh.forEach(t),xl=p(k),se=r(k,"UL",{});var Ir=a(se);vs=r(Ir,"LI",{});var oh=a(vs);Cl=l(oh,"HTML syntax "),us=r(oh,"CODE",{class:!0});var Nh=a(us);Tl=l(Nh,"<div>"),Nh.forEach(t),oh.forEach(t),Al=p(Ir),ms=r(Ir,"LI",{});var lh=a(ms);Ol=l(lh,"Curly brackets "),ks=r(lh,"CODE",{class:!0});var Wh=a(ks);Il=l(Wh,"{ data }"),Wh.forEach(t),lh.forEach(t),Dl=p(Ir),_s=r(Ir,"LI",{});var nh=a(_s);Ll=l(nh,"Logic blocks "),Es=r(nh,"CODE",{class:!0});var Uh=a(Es);Rl=l(Uh,"{#each list as item}"),Uh.forEach(t),nh.forEach(t),Ir.forEach(t),Pl=p(k),re=r(k,"P",{});var Dr=a(re);jl=l(Dr,"The Svelte parser handles specially for "),bs=r(Dr,"CODE",{class:!0});var $h=a(bs);Ml=l($h,"<script>"),$h.forEach(t),Hl=l(Dr," and "),ys=r(Dr,"CODE",{class:!0});var Jh=a(ys);Nl=l(Jh,"<style>"),Jh.forEach(t),Wl=l(Dr," tags."),Dr.forEach(t),Ul=p(k),A=r(k,"P",{});var X=a(A);$l=l(X,"When the parser encounters a "),gs=r(X,"CODE",{class:!0});var Gh=a(gs);Jl=l(Gh,"<script>"),Gh.forEach(t),Gl=l(X," tag, it uses "),Je=r(X,"A",{href:!0,rel:!0});var Bh=a(Je);Bl=l(Bh,"acorn"),Bh.forEach(t),Fl=l(X," to parse the content within the tag. When the parser sees a "),ws=r(X,"CODE",{class:!0});var Fh=a(ws);zl=l(Fh,"<style>"),Fh.forEach(t),Vl=l(X," tag, it uses "),Ge=r(X,"A",{href:!0,rel:!0});var zh=a(Ge);Yl=l(zh,"css-tree"),zh.forEach(t),ql=l(X," to parse the CSS content."),X.forEach(t),Ql=p(k),ae=r(k,"P",{});var Lr=a(ae);Zl=l(Lr,"Besides, the Svelte parser differentiates instance script, "),Ss=r(Lr,"CODE",{class:!0});var Vh=a(Ss);Kl=l(Vh,"<script>"),Vh.forEach(t),Xl=l(Lr,", and module script, "),xs=r(Lr,"CODE",{class:!0});var Yh=a(xs);en=l(Yh,'<script context="module">'),Yh.forEach(t),tn=l(Lr,"."),Lr.forEach(t),sn=p(k),ia=r(k,"P",{});var qh=a(ia);rn=l(qh,"The Svelte AST look like:"),qh.forEach(t),an=p(k),Cs=r(k,"DIV",{class:!0});var Vu=a(Cs);Vu.forEach(t),on=p(k),oe=r(k,"P",{});var Rr=a(oe);ln=l(Rr,"You can try out the Svelte parser in "),Be=r(Rr,"A",{href:!0,rel:!0});var Qh=a(Be);nn=l(Qh,"ASTExplorer"),Qh.forEach(t),cn=l(Rr,". You can find the Svelte parser under "),pa=r(Rr,"STRONG",{});var Zh=a(pa);pn=l(Zh,"HTML > Svelte"),Zh.forEach(t),dn=l(Rr,"."),Rr.forEach(t),k.forEach(t),co=p(c),ue=r(c,"SECTION",{});var Oo=a(ue);da=r(Oo,"H3",{});var Kh=a(da);Fe=r(Kh,"A",{href:!0,id:!0});var Xh=a(Fe);hn=l(Xh,"Where can I find the parser in the source code?"),Xh.forEach(t),Kh.forEach(t),fn=p(Oo),le=r(Oo,"P",{});var Pr=a(le);vn=l(Pr,"The parsing "),ze=r(Pr,"A",{href:!0,rel:!0});var ef=a(ze);un=l(ef,"starts here"),ef.forEach(t),mn=l(Pr,", which the parser is implemented in "),Ve=r(Pr,"A",{href:!0,rel:!0});var tf=a(Ve);kn=l(tf,"src/compiler/parse/index.ts"),tf.forEach(t),_n=l(Pr,"."),Pr.forEach(t),Oo.forEach(t),io=p(c),F=r(c,"SECTION",{});var jr=a(F);ha=r(jr,"H3",{});var sf=a(ha);Ye=r(sf,"A",{href:!0,id:!0});var rf=a(Ye);En=l(rf,"Where can I learn about parsing in JavaScript?"),rf.forEach(t),sf.forEach(t),bn=p(jr),qe=r(jr,"P",{});var Io=a(qe);yn=l(Io,"My previous article, "),Ts=r(Io,"A",{href:!0});var af=a(Ts);gn=l(af,'"JSON Parser with JavaScript"'),af.forEach(t),wn=l(Io," introduces the terminology and guides you step-by-step on writing a parser for JSON in JavaScript."),Io.forEach(t),Sn=p(jr),fa=r(jr,"P",{});var of=a(fa);xn=l(of,"If this is the your first time learning about parser, I highly recommend you to read that."),of.forEach(t),jr.forEach(t),po=p(c),I=r(c,"SECTION",{});var Te=a(I);va=r(Te,"H2",{});var lf=a(va);Qe=r(lf,"A",{href:!0,id:!0});var nf=a(Qe);Cn=l(nf,"2. Tracking references and dependencies"),nf.forEach(t),lf.forEach(t),Tn=p(Te),ua=r(Te,"P",{});var cf=a(ua);Ze=r(cf,"PICTURE",{});var Do=a(Ze);ma=r(Do,"SOURCE",{type:!0,srcset:!0}),ka=r(Do,"SOURCE",{type:!0,srcset:!0}),Ke=r(Do,"IMG",{src:!0,loading:!0,alt:!0}),Do.forEach(t),cf.forEach(t),An=p(Te),As=r(Te,"DIV",{class:!0});var Yu=a(As);Yu.forEach(t),On=p(Te),_a=r(Te,"P",{});var pf=a(_a);In=l(pf,"In this step, Svelte traverses through the AST to track all the variable declared and referenced and their depedencies."),pf.forEach(t),Te.forEach(t),ho=p(c),z=r(c,"SECTION",{});var Mr=a(z);Ea=r(Mr,"H3",{});var df=a(Ea);ne=r(df,"A",{href:!0,id:!0});var Lo=a(ne);Dn=l(Lo,"a. Svelte creates a "),Os=r(Lo,"CODE",{class:!0});var hf=a(Os);Ln=l(hf,"Component"),hf.forEach(t),Rn=l(Lo," instance."),Lo.forEach(t),df.forEach(t),Pn=p(Mr),Xe=r(Mr,"P",{});var Ro=a(Xe);jn=l(Ro,"The "),Is=r(Ro,"CODE",{class:!0});var ff=a(Is);Mn=l(ff,"Component"),ff.forEach(t),Hn=l(Ro," class stores information of the Svelte component, which includes:"),Ro.forEach(t),Nn=p(Mr),_=r(Mr,"UL",{});var S=a(_);Ds=r(S,"LI",{});var ch=a(Ds);Wn=l(ch,"HTML fragment, "),et=r(ch,"A",{href:!0,rel:!0});var vf=a(et);Ls=r(vf,"CODE",{class:!0});var uf=a(Ls);Un=l(uf,"fragment"),uf.forEach(t),vf.forEach(t),ch.forEach(t),$n=p(S),me=r(S,"LI",{});var Xa=a(me);Jn=l(Xa,"instance script and module script AST and their lexical scopes, "),tt=r(Xa,"A",{href:!0,rel:!0});var mf=a(tt);Rs=r(mf,"CODE",{class:!0});var kf=a(Rs);Gn=l(kf,"instance_scope"),kf.forEach(t),mf.forEach(t),Bn=l(Xa," and "),st=r(Xa,"A",{href:!0,rel:!0});var _f=a(st);Ps=r(_f,"CODE",{class:!0});var Ef=a(Ps);Fn=l(Ef,"module_scope"),Ef.forEach(t),_f.forEach(t),Xa.forEach(t),zn=p(S),js=r(S,"LI",{});var ih=a(js);Vn=l(ih,"instance variables, "),rt=r(ih,"A",{href:!0,rel:!0});var bf=a(rt);Ms=r(bf,"CODE",{class:!0});var yf=a(Ms);Yn=l(yf,"vars"),yf.forEach(t),bf.forEach(t),ih.forEach(t),qn=p(S),Hs=r(S,"LI",{});var ph=a(Hs);Qn=l(ph,"reactive variables, "),at=r(ph,"A",{href:!0,rel:!0});var gf=a(at);Ns=r(gf,"CODE",{class:!0});var wf=a(Ns);Zn=l(wf,"reactive_declarations"),wf.forEach(t),gf.forEach(t),ph.forEach(t),Kn=p(S),Ws=r(S,"LI",{});var dh=a(Ws);Xn=l(dh,"slots, "),ot=r(dh,"A",{href:!0,rel:!0});var Sf=a(ot);Us=r(Sf,"CODE",{class:!0});var xf=a(Us);ec=l(xf,"slots"),xf.forEach(t),Sf.forEach(t),dh.forEach(t),tc=p(S),$s=r(S,"LI",{});var hh=a($s);lt=r(hh,"A",{href:!0,rel:!0});var Cf=a(lt);sc=l(Cf,"used variable names"),Cf.forEach(t),rc=l(hh," to prevent naming conflict when creating temporary variables"),hh.forEach(t),ac=p(S),nt=r(S,"LI",{});var Po=a(nt);ct=r(Po,"A",{href:!0,rel:!0});var Tf=a(ct);oc=l(Tf,"warnings"),Tf.forEach(t),lc=l(Po," and "),it=r(Po,"A",{href:!0,rel:!0});var Af=a(it);nc=l(Af,"errors"),Af.forEach(t),Po.forEach(t),cc=p(S),pt=r(S,"LI",{});var jo=a(pt);dt=r(jo,"A",{href:!0,rel:!0});var Of=a(dt);ic=l(Of,"compile options"),Of.forEach(t),pc=l(jo," and "),ht=r(jo,"A",{href:!0,rel:!0});var If=a(ht);dc=l(If,"ignored warnings"),If.forEach(t),jo.forEach(t),S.forEach(t),Mr.forEach(t),fo=p(c),V=r(c,"SECTION",{});var Hr=a(V);ba=r(Hr,"H3",{});var Df=a(ba);ft=r(Df,"A",{href:!0,id:!0});var Lf=a(ft);hc=l(Lf,"b. Traverse the instance script and module script AST"),Lf.forEach(t),Df.forEach(t),fc=p(Hr),ke=r(Hr,"P",{});var eo=a(ke);Js=r(eo,"CODE",{class:!0});var Rf=a(Js);vc=l(Rf,"Component"),Rf.forEach(t),uc=l(eo," traverses the instance script and module script AST to "),ya=r(eo,"STRONG",{});var Pf=a(ya);mc=l(Pf,"find out all the variables declared, referenced, and updated"),Pf.forEach(t),kc=l(eo," within the instance script and module script."),eo.forEach(t),_c=p(Hr),vt=r(Hr,"P",{});var Mo=a(vt);Ec=l(Mo,"Svelte identifies all the variables available before traversing the template. When encountering the variable during template traversal, Svelte will mark the variable as "),Gs=r(Mo,"CODE",{class:!0});var jf=a(Gs);bc=l(jf,"referenced"),jf.forEach(t),yc=l(Mo," from template."),Mo.forEach(t),Hr.forEach(t),vo=p(c),m=r(c,"SECTION",{});var b=a(m);ga=r(b,"H3",{});var Mf=a(ga);ut=r(Mf,"A",{href:!0,id:!0});var Hf=a(ut);gc=l(Hf,"c. Traverse the template"),Hf.forEach(t),Mf.forEach(t),wc=p(b),mt=r(b,"P",{});var Ho=a(mt);Sc=l(Ho,"Svelte traverses through the template AST and creates a "),kt=r(Ho,"A",{href:!0,rel:!0});var Nf=a(kt);xc=l(Nf,"Fragment"),Nf.forEach(t),Cc=l(Ho," tree out of the template AST."),Ho.forEach(t),Tc=p(b),wa=r(b,"P",{});var Wf=a(wa);Ac=l(Wf,"Each fragment node contains information such as:"),Wf.forEach(t),Oc=p(b),Sa=r(b,"P",{});var Uf=a(Sa);xa=r(Uf,"STRONG",{});var $f=a(xa);Ic=l($f,"- expression and dependencies"),$f.forEach(t),Uf.forEach(t),Dc=p(b),ce=r(b,"P",{});var Nr=a(ce);Lc=l(Nr,"Logic blocks, "),Bs=r(Nr,"CODE",{class:!0});var Jf=a(Bs);Rc=l(Jf,"{#if}"),Jf.forEach(t),Pc=l(Nr,", and mustache tags, "),Fs=r(Nr,"CODE",{class:!0});var Gf=a(Fs);jc=l(Gf,"{ data }"),Gf.forEach(t),Mc=l(Nr,", contain expression and the dependencies of the expression."),Nr.forEach(t),Hc=p(b),Ca=r(b,"P",{});var Bf=a(Ca);Ta=r(Bf,"STRONG",{});var Ff=a(Ta);Nc=l(Ff,"- scope"),Ff.forEach(t),Bf.forEach(t),Wc=p(b),Y=r(b,"P",{});var ns=a(Y);zs=r(ns,"CODE",{class:!0});var zf=a(zs);Uc=l(zf,"{#each}"),zf.forEach(t),$c=l(ns," and "),Vs=r(ns,"CODE",{class:!0});var Vf=a(Vs);Jc=l(Vf,"{#await}"),Vf.forEach(t),Gc=l(ns," logic block and "),Ys=r(ns,"CODE",{class:!0});var Yf=a(Ys);Bc=l(Yf,"let:"),Yf.forEach(t),Fc=l(ns," binding create new variables for the children template."),ns.forEach(t),zc=p(b),Aa=r(b,"P",{});var qf=a(Aa);Vc=l(qf,"Svelte creates a different Fragment node for each type of node in the AST, as different kind of Fragment node handles things differently:"),qf.forEach(t),Yc=p(b),N=r(b,"UL",{});var Ae=a(N);x=r(Ae,"LI",{});var G=a(x);_t=r(G,"A",{href:!0,rel:!0});var Qf=a(_t);qc=l(Qf,"Element node"),Qf.forEach(t),Qc=l(G," validates the "),Et=r(G,"A",{href:!0,rel:!0});var Zf=a(Et);Zc=l(Zf,"attribute"),Zf.forEach(t),Kc=l(G,", "),bt=r(G,"A",{href:!0,rel:!0});var Kf=a(bt);Xc=l(Kf,"bindings"),Kf.forEach(t),ei=l(G,", "),yt=r(G,"A",{href:!0,rel:!0});var Xf=a(yt);ti=l(Xf,"content"),Xf.forEach(t),si=l(G," and "),gt=r(G,"A",{href:!0,rel:!0});var ev=a(gt);ri=l(ev,"event handlers"),ev.forEach(t),ai=l(G,"."),G.forEach(t),oi=p(Ae),_e=r(Ae,"LI",{});var to=a(_e);wt=r(to,"A",{href:!0,rel:!0});var tv=a(wt);li=l(tv,"Slot node"),tv.forEach(t),ni=l(to," registers the slot name to the "),qs=r(to,"CODE",{class:!0});var sv=a(qs);ci=l(sv,"Component"),sv.forEach(t),ii=l(to,"."),to.forEach(t),pi=p(Ae),q=r(Ae,"LI",{});var cs=a(q);St=r(cs,"A",{href:!0,rel:!0});var rv=a(St);di=l(rv,"EachBlock node"),rv.forEach(t),hi=l(cs," creates a new scope and tracks the "),Qs=r(cs,"CODE",{class:!0});var av=a(Qs);fi=l(av,"key"),av.forEach(t),vi=l(cs,", "),Zs=r(cs,"CODE",{class:!0});var ov=a(Zs);ui=l(ov,"index"),ov.forEach(t),mi=l(cs," and the name of the list to be iterated."),cs.forEach(t),ki=p(Ae),Oa=r(Ae,"LI",{});var lv=a(Oa);_i=l(lv,"..."),lv.forEach(t),Ae.forEach(t),b.forEach(t),uo=p(c),D=r(c,"SECTION",{});var Oe=a(D);Ia=r(Oe,"H3",{});var nv=a(Ia);xt=r(nv,"A",{href:!0,id:!0});var cv=a(xt);Ei=l(cv,"d. Traverse the instance script AST"),cv.forEach(t),nv.forEach(t),bi=p(Oe),Da=r(Oe,"P",{});var iv=a(Da);yi=l(iv,"After traversing through the template, Svelte now knows whether a variable is ever being updated or referenced in the component."),iv.forEach(t),gi=p(Oe),La=r(Oe,"P",{});var pv=a(La);wi=l(pv,"With this information, Svelte tries make preparations for optimising the output, for example:"),pv.forEach(t),Si=p(Oe),Ct=r(Oe,"UL",{});var No=a(Ct);Tt=r(No,"LI",{});var Wo=a(Tt);xi=l(Wo,"determine which variables or functions can be safely hoisted out of the "),Ks=r(Wo,"CODE",{class:!0});var dv=a(Ks);Ci=l(dv,"instance"),dv.forEach(t),Ti=l(Wo," function."),Wo.forEach(t),Ai=p(No),Ra=r(No,"LI",{});var hv=a(Ra);Oi=l(hv,"determine reactive declarations that does not need to be reactive"),hv.forEach(t),No.forEach(t),Oe.forEach(t),mo=p(c),Q=r(c,"SECTION",{});var Wr=a(Q);Pa=r(Wr,"H3",{});var fv=a(Pa);At=r(fv,"A",{href:!0,id:!0});var vv=a(At);Ii=l(vv,"e. Update CSS selectors to make style declarations component scope"),vv.forEach(t),fv.forEach(t),Di=p(Wr),Ot=r(Wr,"P",{});var Uo=a(Ot);Li=l(Uo,"Svelte updates the CSS selectors, by adding "),Xs=r(Uo,"CODE",{class:!0});var uv=a(Xs);Ri=l(uv,".svelte-xxx"),uv.forEach(t),Pi=l(Uo," class to the selectors when necessary."),Uo.forEach(t),ji=p(Wr),ja=r(Wr,"P",{});var mv=a(ja);Mi=l(mv,"At the end of this step, Svelte has enough information to generate the compiled code, which brings us to the next step."),mv.forEach(t),Wr.forEach(t),ko=p(c),Ee=r(c,"SECTION",{});var $o=a(Ee);Ma=r($o,"H3",{});var kv=a(Ma);It=r(kv,"A",{href:!0,id:!0});var _v=a(It);Hi=l(_v,"Where can I find this in the source code?"),_v.forEach(t),kv.forEach(t),Ni=p($o),W=r($o,"P",{});var Ie=a(W);Wi=l(Ie,"You can start reading "),Dt=r(Ie,"A",{href:!0,rel:!0});var Ev=a(Dt);Ui=l(Ev,"from here"),Ev.forEach(t),$i=l(Ie,", which the "),er=r(Ie,"CODE",{class:!0});var bv=a(er);Ji=l(bv,"Component"),bv.forEach(t),Gi=l(Ie," is implemented in "),Lt=r(Ie,"A",{href:!0,rel:!0});var yv=a(Lt);Bi=l(yv,"src/compiler/compile/Component.ts"),yv.forEach(t),Fi=l(Ie,"."),Ie.forEach(t),$o.forEach(t),_o=p(c),be=r(c,"SECTION",{});var Jo=a(be);Ha=r(Jo,"H3",{});var gv=a(Ha);Rt=r(gv,"A",{href:!0,id:!0});var wv=a(Rt);zi=l(wv,"Where can I learn about traversing in JavaScript?"),wv.forEach(t),gv.forEach(t),Vi=p(Jo),Pt=r(Jo,"P",{});var Go=a(Pt);Yi=l(Go,"Bear with my shameless plug, my previous article, "),tr=r(Go,"A",{href:!0});var Sv=a(tr);qi=l(Sv,'"Manipulating AST with JavaScript"'),Sv.forEach(t),Qi=l(Go," covers relevant knowledge you need to know about traversing AST in JavaScript."),Go.forEach(t),Jo.forEach(t),Eo=p(c),L=r(c,"SECTION",{});var De=a(L);Na=r(De,"H2",{});var xv=a(Na);jt=r(xv,"A",{href:!0,id:!0});var Cv=a(jt);Zi=l(Cv,"3. Creating code blocks and fragments"),Cv.forEach(t),xv.forEach(t),Ki=p(De),Wa=r(De,"P",{});var Tv=a(Wa);Mt=r(Tv,"PICTURE",{});var Bo=a(Mt);Ua=r(Bo,"SOURCE",{type:!0,srcset:!0}),$a=r(Bo,"SOURCE",{type:!0,srcset:!0}),Ht=r(Bo,"IMG",{src:!0,loading:!0,alt:!0}),Bo.forEach(t),Tv.forEach(t),Xi=p(De),sr=r(De,"DIV",{class:!0});var qu=a(sr);qu.forEach(t),ep=p(De),U=r(De,"P",{});var Le=a(U);tp=l(Le,"In this step, Svelte creates a "),rr=r(Le,"CODE",{class:!0});var Av=a(rr);sp=l(Av,"Renderer"),Av.forEach(t),rp=l(Le," instance which keeps track necessary information required to generate the compiled output. Depending on the whether to output DOM or SSR code "),Nt=r(Le,"EM",{});var Fo=a(Nt);ap=l(Fo,"("),ie=r(Fo,"A",{href:!0,rel:!0});var zo=a(ie);op=l(zo,"see "),ar=r(zo,"CODE",{class:!0});var Ov=a(ar);lp=l(Ov,"generate"),Ov.forEach(t),np=l(zo," in compile options"),zo.forEach(t),cp=l(Fo,")"),Fo.forEach(t),ip=l(Le,", Svelte instantiates different "),or=r(Le,"CODE",{class:!0});var Iv=a(or);pp=l(Iv,"Renderer"),Iv.forEach(t),dp=l(Le," respectively."),Le.forEach(t),De.forEach(t),bo=p(c),w=r(c,"SECTION",{});var P=a(w);Ja=r(P,"H3",{});var Dv=a(Ja);Wt=r(Dv,"A",{href:!0,id:!0});var Lv=a(Wt);hp=l(Lv,"DOM Renderer"),Lv.forEach(t),Dv.forEach(t),fp=p(P),pe=r(P,"P",{});var Ur=a(pe);vp=l(Ur,"DOM Renderer keeps track of "),Ut=r(Ur,"A",{href:!0,rel:!0});var Rv=a(Ut);up=l(Rv,"a list of blocks"),Rv.forEach(t),mp=l(Ur," and "),$t=r(Ur,"A",{href:!0,rel:!0});var Pv=a($t);kp=l(Pv,"context"),Pv.forEach(t),_p=l(Ur,"."),Ur.forEach(t),Ep=p(P),de=r(P,"P",{});var $r=a(de);bp=l($r,"A "),Jt=r($r,"A",{href:!0,rel:!0});var jv=a(Jt);yp=l(jv,"Block"),jv.forEach(t),gp=l($r," contains code fragments for generate the "),lr=r($r,"A",{href:!0});var Mv=a(lr);nr=r(Mv,"CODE",{class:!0});var Hv=a(nr);wp=l(Hv,"create_fragment"),Hv.forEach(t),Mv.forEach(t),Sp=l($r," function."),$r.forEach(t),xp=p(P),he=r(P,"P",{});var Jr=a(he);Cp=l(Jr,"Context tracks a list of "),cr=r(Jr,"A",{href:!0});var Nv=a(cr);Tp=l(Nv,"instance variables"),Nv.forEach(t),Ap=l(Jr," which will be presented in the "),ir=r(Jr,"CODE",{class:!0});var Wv=a(ir);Op=l(Wv,"$$.ctx"),Wv.forEach(t),Ip=l(Jr," in the compiled output."),Jr.forEach(t),Dp=p(P),Gt=r(P,"P",{});var Vo=a(Gt);Lp=l(Vo,"In the renderer, Svelte creates a "),Bt=r(Vo,"A",{href:!0,rel:!0});var Uv=a(Bt);Rp=l(Uv,"render tree"),Uv.forEach(t),Pp=l(Vo," out of the Fragment tree."),Vo.forEach(t),jp=p(P),Ft=r(P,"P",{});var Yo=a(Ft);Mp=l(Yo,"Each node in the render tree implements the "),pr=r(Yo,"CODE",{class:!0});var $v=a(pr);Hp=l($v,"render"),$v.forEach(t),Np=l(Yo," function which generate codes that create and update the DOM for the node."),Yo.forEach(t),P.forEach(t),yo=p(c),ye=r(c,"SECTION",{});var qo=a(ye);Ga=r(qo,"H3",{});var Jv=a(Ga);zt=r(Jv,"A",{href:!0,id:!0});var Gv=a(zt);Wp=l(Gv,"SSR Renderer"),Gv.forEach(t),Jv.forEach(t),Up=p(qo),$=r(qo,"P",{});var Re=a($);$p=l(Re,"SSR Renderer provide helpers to generate "),Vt=r(Re,"A",{href:!0,rel:!0});var Bv=a(Vt);Jp=l(Bv,"template literals"),Bv.forEach(t),Gp=l(Re," in the compiled output, such as "),Yt=r(Re,"A",{href:!0,rel:!0});var Fv=a(Yt);dr=r(Fv,"CODE",{class:!0});var zv=a(dr);Bp=l(zv,"add_string(str)"),zv.forEach(t),Fv.forEach(t),Fp=l(Re," and "),qt=r(Re,"A",{href:!0,rel:!0});var Vv=a(qt);hr=r(Vv,"CODE",{class:!0});var Yv=a(hr);zp=l(Yv,"add_expression(node)"),Yv.forEach(t),Vv.forEach(t),Vp=l(Re,"."),Re.forEach(t),qo.forEach(t),go=p(c),ge=r(c,"SECTION",{});var Qo=a(ge);Ba=r(Qo,"H3",{});var qv=a(Ba);fe=r(qv,"A",{href:!0,id:!0});var Zo=a(fe);Yp=l(Zo,"Where can I find the "),fr=r(Zo,"CODE",{class:!0});var Qv=a(fr);qp=l(Qv,"Renderer"),Qv.forEach(t),Qp=l(Zo," in the source code?"),Zo.forEach(t),qv.forEach(t),Zp=p(Qo),ve=r(Qo,"P",{});var Gr=a(ve);Kp=l(Gr,"The DOM Renderer is implemented in "),Qt=r(Gr,"A",{href:!0,rel:!0});var Zv=a(Qt);Xp=l(Zv,"src/compiler/compile/render_dom/Renderer.ts"),Zv.forEach(t),ed=l(Gr,", and you can check out the SSR Renderer code in "),Zt=r(Gr,"A",{href:!0,rel:!0});var Kv=a(Zt);td=l(Kv,"src/compiler/compile/render_ssr/Renderer.ts"),Kv.forEach(t),sd=l(Gr,"."),Gr.forEach(t),Qo.forEach(t),wo=p(c),E=r(c,"SECTION",{});var T=a(E);Fa=r(T,"H2",{});var Xv=a(Fa);Kt=r(Xv,"A",{href:!0,id:!0});var eu=a(Kt);rd=l(eu,"4. Generate code"),eu.forEach(t),Xv.forEach(t),ad=p(T),za=r(T,"P",{});var tu=a(za);Xt=r(tu,"PICTURE",{});var Ko=a(Xt);Va=r(Ko,"SOURCE",{type:!0,srcset:!0}),Ya=r(Ko,"SOURCE",{type:!0,srcset:!0}),es=r(Ko,"IMG",{src:!0,loading:!0,alt:!0}),Ko.forEach(t),tu.forEach(t),od=p(T),vr=r(T,"DIV",{class:!0});var Qu=a(vr);Qu.forEach(t),ld=p(T),qa=r(T,"P",{});var su=a(qa);nd=l(su,"Different renderer renders differently."),su.forEach(t),cd=p(T),C=r(T,"P",{});var B=a(C);Qa=r(B,"STRONG",{});var ru=a(Qa);id=l(ru,"The DOM Renderer"),ru.forEach(t),pd=l(B," traverses through the render tree and calls the "),ur=r(B,"CODE",{class:!0});var au=a(ur);dd=l(au,"render"),au.forEach(t),hd=l(B," function of each node along the way. The "),mr=r(B,"CODE",{class:!0});var ou=a(mr);fd=l(ou,"Block"),ou.forEach(t),vd=l(B," instance is passed into the "),kr=r(B,"CODE",{class:!0});var lu=a(kr);ud=l(lu,"render"),lu.forEach(t),md=l(B," function, so that each node inserts the code into the appropriate "),_r=r(B,"CODE",{class:!0});var nu=a(_r);kd=l(nu,"create_fragment"),nu.forEach(t),_d=l(B," function."),B.forEach(t),Ed=p(T),we=r(T,"P",{});var so=a(we);Za=r(so,"STRONG",{});var cu=a(Za);bd=l(cu,"The SSR Renderer"),cu.forEach(t),yd=l(so,", on the other hand, relies on different "),ts=r(so,"A",{href:!0,rel:!0});var iu=a(ts);gd=l(iu,"node handlers"),iu.forEach(t),wd=l(so," to insert strings or expressions into the final template literal."),so.forEach(t),Sd=p(T),O=r(T,"P",{});var ee=a(O);xd=l(ee,"The render function returns "),Er=r(ee,"CODE",{class:!0});var pu=a(Er);Cd=l(pu,"js"),pu.forEach(t),Td=l(ee," and "),br=r(ee,"CODE",{class:!0});var du=a(br);Ad=l(du,"css"),du.forEach(t),Od=l(ee," which will be consumed by the bundler, via "),ss=r(ee,"A",{href:!0,rel:!0});var hu=a(ss);Id=l(hu,"rollup-plugin-svelte"),hu.forEach(t),Dd=l(ee," for rollup and "),rs=r(ee,"A",{href:!0,rel:!0});var fu=a(rs);Ld=l(fu,"svelte-loader"),fu.forEach(t),Rd=l(ee," for webpack respectively."),ee.forEach(t),T.forEach(t),So=p(c),Z=r(c,"SECTION",{});var Br=a(Z);Ka=r(Br,"H2",{});var vu=a(Ka);as=r(vu,"A",{href:!0,id:!0});var uu=a(as);Pd=l(uu,"Svelte runtime"),uu.forEach(t),vu.forEach(t),jd=p(Br),os=r(Br,"P",{});var Xo=a(os);Md=l(Xo,"To remove duplicate code in the compiled output, Svelte provide util function which can be found in the "),ls=r(Xo,"A",{href:!0,rel:!0});var mu=a(ls);Hd=l(mu,"src/runtime/internal"),mu.forEach(t),Nd=l(Xo,", such as:"),Xo.forEach(t),Wd=p(Br),J=r(Br,"UL",{});var Pe=a(J);K=r(Pe,"LI",{});var is=a(K);Ud=l(is,"dom related utils, eg: "),yr=r(is,"CODE",{class:!0});var ku=a(yr);$d=l(ku,"append"),ku.forEach(t),Jd=l(is,", "),gr=r(is,"CODE",{class:!0});var _u=a(gr);Gd=l(_u,"insert"),_u.forEach(t),Bd=l(is,", "),wr=r(is,"CODE",{class:!0});var Eu=a(wr);Fd=l(Eu,"detach"),Eu.forEach(t),is.forEach(t),zd=p(Pe),Se=r(Pe,"LI",{});var ro=a(Se);Vd=l(ro,"scheduling utils, eg: "),Sr=r(ro,"CODE",{class:!0});var bu=a(Sr);Yd=l(bu,"schedule_update"),bu.forEach(t),qd=l(ro,", "),xr=r(ro,"CODE",{class:!0});var yu=a(xr);Qd=l(yu,"flush"),yu.forEach(t),ro.forEach(t),Zd=p(Pe),xe=r(Pe,"LI",{});var ao=a(xe);Kd=l(ao,"lifecycle utils, eg: "),Cr=r(ao,"CODE",{class:!0});var gu=a(Cr);Xd=l(gu,"onMount"),gu.forEach(t),eh=l(ao,", "),Tr=r(ao,"CODE",{class:!0});var wu=a(Tr);th=l(wu,"beforeUpdate"),wu.forEach(t),ao.forEach(t),sh=p(Pe),Ar=r(Pe,"LI",{});var fh=a(Ar);rh=l(fh,"animation utils, eg: "),Or=r(fh,"CODE",{class:!0});var Su=a(Or);ah=l(Su,"create_animation"),Su.forEach(t),fh.forEach(t),Pe.forEach(t),Br.forEach(t),this.h()},h(){n(u,"href","#who-is-this-for"),n(u,"id","who-is-this-for"),n(Me,"href","#overview"),n(Me,"id","overview"),n(Qr,"type","image/webp"),n(Qr,"srcset",i2),n(Zr,"type","image/png"),n(Zr,"srcset",Du),oo(Ne.src,uh=Du)||n(Ne,"src",uh),n(Ne,"loading","lazy"),n(Ne,"alt","Overview"),n(hs,"class","code-section"),n(We,"href","#parsing-source-code-into-ast"),n(We,"id","parsing-source-code-into-ast"),n(la,"type","image/webp"),n(la,"srcset",c2),n(na,"type","image/png"),n(na,"srcset",Iu),oo($e.src,mh=Iu)||n($e,"src",mh),n($e,"loading","lazy"),n($e,"alt","Step 1"),n(fs,"class","code-section"),n(us,"class","inline"),n(ks,"class","inline"),n(Es,"class","inline"),n(bs,"class","inline"),n(ys,"class","inline"),n(gs,"class","inline"),n(Je,"href","https://www.npmjs.com/package/acorn"),n(Je,"rel","nofollow"),n(ws,"class","inline"),n(Ge,"href","https://www.npmjs.com/package/css-tree"),n(Ge,"rel","nofollow"),n(Ss,"class","inline"),n(xs,"class","inline"),n(Cs,"class","code-section"),n(Be,"href","https://astexplorer.net/#/gist/828907dd1600c208a4e315962c635b4a/e1c895d49e8899a3be849a137fc557ba66eb2423"),n(Be,"rel","nofollow"),n(Fe,"href","#where-can-i-find-the-parser-in-the-source-code"),n(Fe,"id","where-can-i-find-the-parser-in-the-source-code"),n(ze,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/index.ts#L79"),n(ze,"rel","nofollow"),n(Ve,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/parse/index.ts"),n(Ve,"rel","nofollow"),n(Ye,"href","#where-can-i-learn-about-parsing-in-javascript"),n(Ye,"id","where-can-i-learn-about-parsing-in-javascript"),n(Ts,"href","/json-parser-with-javascript"),n(Qe,"href","#tracking-references-and-dependencies"),n(Qe,"id","tracking-references-and-dependencies"),n(ma,"type","image/webp"),n(ma,"srcset",n2),n(ka,"type","image/png"),n(ka,"srcset",Ou),oo(Ke.src,kh=Ou)||n(Ke,"src",kh),n(Ke,"loading","lazy"),n(Ke,"alt","Step 2"),n(As,"class","code-section"),n(Os,"class","inline"),n(ne,"href","#a-svelte-creates-a-component-instance"),n(ne,"id","a-svelte-creates-a-component-instance"),n(Is,"class","inline"),n(Ls,"class","inline"),n(et,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L52"),n(et,"rel","nofollow"),n(Rs,"class","inline"),n(tt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L54"),n(tt,"rel","nofollow"),n(Ps,"class","inline"),n(st,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L53"),n(st,"rel","nofollow"),n(Ms,"class","inline"),n(rt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L62"),n(rt,"rel","nofollow"),n(Ns,"class","inline"),n(at,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L71"),n(at,"rel","nofollow"),n(Us,"class","inline"),n(ot,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L94"),n(ot,"rel","nofollow"),n(lt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L351"),n(lt,"rel","nofollow"),n(ct,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L43"),n(ct,"rel","nofollow"),n(it,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L396"),n(it,"rel","nofollow"),n(dt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L51"),n(dt,"rel","nofollow"),n(ht,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts#L44"),n(ht,"rel","nofollow"),n(ft,"href","#b-traverse-the-instance-script-and-module-script-ast"),n(ft,"id","b-traverse-the-instance-script-and-module-script-ast"),n(Js,"class","inline"),n(Gs,"class","inline"),n(ut,"href","#c-traverse-the-template"),n(ut,"id","c-traverse-the-template"),n(kt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/Fragment.ts"),n(kt,"rel","nofollow"),n(Bs,"class","inline"),n(Fs,"class","inline"),n(zs,"class","inline"),n(Vs,"class","inline"),n(Ys,"class","inline"),n(_t,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/Element.ts"),n(_t,"rel","nofollow"),n(Et,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/Element.ts#L280"),n(Et,"rel","nofollow"),n(bt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/Element.ts#L461"),n(bt,"rel","nofollow"),n(yt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/Element.ts#L647"),n(yt,"rel","nofollow"),n(gt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/Element.ts#L658"),n(gt,"rel","nofollow"),n(wt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/Slot.ts"),n(wt,"rel","nofollow"),n(qs,"class","inline"),n(St,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/nodes/EachBlock.ts"),n(St,"rel","nofollow"),n(Qs,"class","inline"),n(Zs,"class","inline"),n(xt,"href","#d-traverse-the-instance-script-ast"),n(xt,"id","d-traverse-the-instance-script-ast"),n(Ks,"class","inline"),n(At,"href","#e-update-css-selectors-to-make-style-declarations-component-scope"),n(At,"id","e-update-css-selectors-to-make-style-declarations-component-scope"),n(Xs,"class","inline"),n(It,"href","#where-can-i-find-this-in-the-source-code"),n(It,"id","where-can-i-find-this-in-the-source-code"),n(Dt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/index.ts#L83-L90"),n(Dt,"rel","nofollow"),n(er,"class","inline"),n(Lt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/Component.ts"),n(Lt,"rel","nofollow"),n(Rt,"href","#where-can-i-learn-about-traversing-in-javascript"),n(Rt,"id","where-can-i-learn-about-traversing-in-javascript"),n(tr,"href","/manipulating-ast-with-javascript#traversing-an-ast"),n(jt,"href","#creating-code-blocks-and-fragments"),n(jt,"id","creating-code-blocks-and-fragments"),n(Ua,"type","image/webp"),n(Ua,"srcset",l2),n($a,"type","image/png"),n($a,"srcset",Au),oo(Ht.src,_h=Au)||n(Ht,"src",_h),n(Ht,"loading","lazy"),n(Ht,"alt","Step 3"),n(sr,"class","code-section"),n(rr,"class","inline"),n(ar,"class","inline"),n(ie,"href","https://svelte.dev/docs#svelte_compile"),n(ie,"rel","nofollow"),n(or,"class","inline"),n(Wt,"href","#dom-renderer"),n(Wt,"id","dom-renderer"),n(Ut,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_dom/Renderer.ts#L31"),n(Ut,"rel","nofollow"),n($t,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_dom/Renderer.ts#L28"),n($t,"rel","nofollow"),n(Jt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_dom/Block.ts"),n(Jt,"rel","nofollow"),n(nr,"class","inline"),n(lr,"href","/compile-svelte-in-your-head-part-1/#create_fragment"),n(cr,"href","/compile-svelte-in-your-head-part-2/#ctx"),n(ir,"class","inline"),n(Bt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_dom/wrappers/Fragment.ts"),n(Bt,"rel","nofollow"),n(pr,"class","inline"),n(zt,"href","#ssr-renderer"),n(zt,"id","ssr-renderer"),n(Vt,"href","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals"),n(Vt,"rel","nofollow"),n(dr,"class","inline"),n(Yt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_ssr/Renderer.ts#L63"),n(Yt,"rel","nofollow"),n(hr,"class","inline"),n(qt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_ssr/Renderer.ts#L67"),n(qt,"rel","nofollow"),n(fr,"class","inline"),n(fe,"href","#where-can-i-find-the-renderer-in-the-source-code"),n(fe,"id","where-can-i-find-the-renderer-in-the-source-code"),n(Qt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_dom/Renderer.ts"),n(Qt,"rel","nofollow"),n(Zt,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_ssr/Renderer.ts"),n(Zt,"rel","nofollow"),n(Kt,"href","#generate-code"),n(Kt,"id","generate-code"),n(Va,"type","image/webp"),n(Va,"srcset",o2),n(Ya,"type","image/png"),n(Ya,"srcset",Tu),oo(es.src,Eh=Tu)||n(es,"src",Eh),n(es,"loading","lazy"),n(es,"alt","Step 4"),n(vr,"class","code-section"),n(ur,"class","inline"),n(mr,"class","inline"),n(kr,"class","inline"),n(_r,"class","inline"),n(ts,"href","https://github.com/sveltejs/svelte/blob/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/compiler/compile/render_ssr/Renderer.ts#L23-L40"),n(ts,"rel","nofollow"),n(Er,"class","inline"),n(br,"class","inline"),n(ss,"href","https://github.com/sveltejs/rollup-plugin-svelte"),n(ss,"rel","nofollow"),n(rs,"href","https://github.com/sveltejs/svelte-loader"),n(rs,"rel","nofollow"),n(as,"href","#svelte-runtime"),n(as,"id","svelte-runtime"),n(ls,"href","https://github.com/sveltejs/svelte/tree/aa3dcc06d6b0fcb079ccd993fa6e3455242a2a96/src/runtime/internal"),n(ls,"rel","nofollow"),n(yr,"class","inline"),n(gr,"class","inline"),n(wr,"class","inline"),n(Sr,"class","inline"),n(xr,"class","inline"),n(Cr,"class","inline"),n(Tr,"class","inline"),n(Or,"class","inline")},m(c,d){ju(v,c,d),h(c,j,d),h(c,y,d),e(y,te),e(te,u),e(u,M),e(y,ds),e(y,Fr),e(Fr,el),e(y,tl),e(y,je),e(je,zr),e(zr,sl),e(je,rl),e(je,Vr),e(Vr,al),h(c,lo,d),h(c,g,d),e(g,Yr),e(Yr,Me),e(Me,ol),e(g,ll),e(g,qr),e(qr,He),e(He,Qr),e(He,Zr),e(He,Ne),e(g,nl),e(g,Kr),e(Kr,cl),e(g,il),e(g,H),e(H,Xr),e(Xr,pl),e(H,dl),e(H,ea),e(ea,hl),e(H,fl),e(H,ta),e(ta,vl),e(H,ul),e(H,sa),e(sa,ml),e(g,kl),e(g,ra),e(ra,_l),e(g,El),e(g,hs),hs.innerHTML=Wu,h(c,no,d),h(c,f,d),e(f,aa),e(aa,We),e(We,bl),e(f,yl),e(f,oa),e(oa,Ue),e(Ue,la),e(Ue,na),e(Ue,$e),e(f,gl),e(f,fs),fs.innerHTML=Uu,e(f,wl),e(f,ca),e(ca,Sl),e(f,xl),e(f,se),e(se,vs),e(vs,Cl),e(vs,us),e(us,Tl),e(se,Al),e(se,ms),e(ms,Ol),e(ms,ks),e(ks,Il),e(se,Dl),e(se,_s),e(_s,Ll),e(_s,Es),e(Es,Rl),e(f,Pl),e(f,re),e(re,jl),e(re,bs),e(bs,Ml),e(re,Hl),e(re,ys),e(ys,Nl),e(re,Wl),e(f,Ul),e(f,A),e(A,$l),e(A,gs),e(gs,Jl),e(A,Gl),e(A,Je),e(Je,Bl),e(A,Fl),e(A,ws),e(ws,zl),e(A,Vl),e(A,Ge),e(Ge,Yl),e(A,ql),e(f,Ql),e(f,ae),e(ae,Zl),e(ae,Ss),e(Ss,Kl),e(ae,Xl),e(ae,xs),e(xs,en),e(ae,tn),e(f,sn),e(f,ia),e(ia,rn),e(f,an),e(f,Cs),Cs.innerHTML=$u,e(f,on),e(f,oe),e(oe,ln),e(oe,Be),e(Be,nn),e(oe,cn),e(oe,pa),e(pa,pn),e(oe,dn),h(c,co,d),h(c,ue,d),e(ue,da),e(da,Fe),e(Fe,hn),e(ue,fn),e(ue,le),e(le,vn),e(le,ze),e(ze,un),e(le,mn),e(le,Ve),e(Ve,kn),e(le,_n),h(c,io,d),h(c,F,d),e(F,ha),e(ha,Ye),e(Ye,En),e(F,bn),e(F,qe),e(qe,yn),e(qe,Ts),e(Ts,gn),e(qe,wn),e(F,Sn),e(F,fa),e(fa,xn),h(c,po,d),h(c,I,d),e(I,va),e(va,Qe),e(Qe,Cn),e(I,Tn),e(I,ua),e(ua,Ze),e(Ze,ma),e(Ze,ka),e(Ze,Ke),e(I,An),e(I,As),As.innerHTML=Ju,e(I,On),e(I,_a),e(_a,In),h(c,ho,d),h(c,z,d),e(z,Ea),e(Ea,ne),e(ne,Dn),e(ne,Os),e(Os,Ln),e(ne,Rn),e(z,Pn),e(z,Xe),e(Xe,jn),e(Xe,Is),e(Is,Mn),e(Xe,Hn),e(z,Nn),e(z,_),e(_,Ds),e(Ds,Wn),e(Ds,et),e(et,Ls),e(Ls,Un),e(_,$n),e(_,me),e(me,Jn),e(me,tt),e(tt,Rs),e(Rs,Gn),e(me,Bn),e(me,st),e(st,Ps),e(Ps,Fn),e(_,zn),e(_,js),e(js,Vn),e(js,rt),e(rt,Ms),e(Ms,Yn),e(_,qn),e(_,Hs),e(Hs,Qn),e(Hs,at),e(at,Ns),e(Ns,Zn),e(_,Kn),e(_,Ws),e(Ws,Xn),e(Ws,ot),e(ot,Us),e(Us,ec),e(_,tc),e(_,$s),e($s,lt),e(lt,sc),e($s,rc),e(_,ac),e(_,nt),e(nt,ct),e(ct,oc),e(nt,lc),e(nt,it),e(it,nc),e(_,cc),e(_,pt),e(pt,dt),e(dt,ic),e(pt,pc),e(pt,ht),e(ht,dc),h(c,fo,d),h(c,V,d),e(V,ba),e(ba,ft),e(ft,hc),e(V,fc),e(V,ke),e(ke,Js),e(Js,vc),e(ke,uc),e(ke,ya),e(ya,mc),e(ke,kc),e(V,_c),e(V,vt),e(vt,Ec),e(vt,Gs),e(Gs,bc),e(vt,yc),h(c,vo,d),h(c,m,d),e(m,ga),e(ga,ut),e(ut,gc),e(m,wc),e(m,mt),e(mt,Sc),e(mt,kt),e(kt,xc),e(mt,Cc),e(m,Tc),e(m,wa),e(wa,Ac),e(m,Oc),e(m,Sa),e(Sa,xa),e(xa,Ic),e(m,Dc),e(m,ce),e(ce,Lc),e(ce,Bs),e(Bs,Rc),e(ce,Pc),e(ce,Fs),e(Fs,jc),e(ce,Mc),e(m,Hc),e(m,Ca),e(Ca,Ta),e(Ta,Nc),e(m,Wc),e(m,Y),e(Y,zs),e(zs,Uc),e(Y,$c),e(Y,Vs),e(Vs,Jc),e(Y,Gc),e(Y,Ys),e(Ys,Bc),e(Y,Fc),e(m,zc),e(m,Aa),e(Aa,Vc),e(m,Yc),e(m,N),e(N,x),e(x,_t),e(_t,qc),e(x,Qc),e(x,Et),e(Et,Zc),e(x,Kc),e(x,bt),e(bt,Xc),e(x,ei),e(x,yt),e(yt,ti),e(x,si),e(x,gt),e(gt,ri),e(x,ai),e(N,oi),e(N,_e),e(_e,wt),e(wt,li),e(_e,ni),e(_e,qs),e(qs,ci),e(_e,ii),e(N,pi),e(N,q),e(q,St),e(St,di),e(q,hi),e(q,Qs),e(Qs,fi),e(q,vi),e(q,Zs),e(Zs,ui),e(q,mi),e(N,ki),e(N,Oa),e(Oa,_i),h(c,uo,d),h(c,D,d),e(D,Ia),e(Ia,xt),e(xt,Ei),e(D,bi),e(D,Da),e(Da,yi),e(D,gi),e(D,La),e(La,wi),e(D,Si),e(D,Ct),e(Ct,Tt),e(Tt,xi),e(Tt,Ks),e(Ks,Ci),e(Tt,Ti),e(Ct,Ai),e(Ct,Ra),e(Ra,Oi),h(c,mo,d),h(c,Q,d),e(Q,Pa),e(Pa,At),e(At,Ii),e(Q,Di),e(Q,Ot),e(Ot,Li),e(Ot,Xs),e(Xs,Ri),e(Ot,Pi),e(Q,ji),e(Q,ja),e(ja,Mi),h(c,ko,d),h(c,Ee,d),e(Ee,Ma),e(Ma,It),e(It,Hi),e(Ee,Ni),e(Ee,W),e(W,Wi),e(W,Dt),e(Dt,Ui),e(W,$i),e(W,er),e(er,Ji),e(W,Gi),e(W,Lt),e(Lt,Bi),e(W,Fi),h(c,_o,d),h(c,be,d),e(be,Ha),e(Ha,Rt),e(Rt,zi),e(be,Vi),e(be,Pt),e(Pt,Yi),e(Pt,tr),e(tr,qi),e(Pt,Qi),h(c,Eo,d),h(c,L,d),e(L,Na),e(Na,jt),e(jt,Zi),e(L,Ki),e(L,Wa),e(Wa,Mt),e(Mt,Ua),e(Mt,$a),e(Mt,Ht),e(L,Xi),e(L,sr),sr.innerHTML=Gu,e(L,ep),e(L,U),e(U,tp),e(U,rr),e(rr,sp),e(U,rp),e(U,Nt),e(Nt,ap),e(Nt,ie),e(ie,op),e(ie,ar),e(ar,lp),e(ie,np),e(Nt,cp),e(U,ip),e(U,or),e(or,pp),e(U,dp),h(c,bo,d),h(c,w,d),e(w,Ja),e(Ja,Wt),e(Wt,hp),e(w,fp),e(w,pe),e(pe,vp),e(pe,Ut),e(Ut,up),e(pe,mp),e(pe,$t),e($t,kp),e(pe,_p),e(w,Ep),e(w,de),e(de,bp),e(de,Jt),e(Jt,yp),e(de,gp),e(de,lr),e(lr,nr),e(nr,wp),e(de,Sp),e(w,xp),e(w,he),e(he,Cp),e(he,cr),e(cr,Tp),e(he,Ap),e(he,ir),e(ir,Op),e(he,Ip),e(w,Dp),e(w,Gt),e(Gt,Lp),e(Gt,Bt),e(Bt,Rp),e(Gt,Pp),e(w,jp),e(w,Ft),e(Ft,Mp),e(Ft,pr),e(pr,Hp),e(Ft,Np),h(c,yo,d),h(c,ye,d),e(ye,Ga),e(Ga,zt),e(zt,Wp),e(ye,Up),e(ye,$),e($,$p),e($,Vt),e(Vt,Jp),e($,Gp),e($,Yt),e(Yt,dr),e(dr,Bp),e($,Fp),e($,qt),e(qt,hr),e(hr,zp),e($,Vp),h(c,go,d),h(c,ge,d),e(ge,Ba),e(Ba,fe),e(fe,Yp),e(fe,fr),e(fr,qp),e(fe,Qp),e(ge,Zp),e(ge,ve),e(ve,Kp),e(ve,Qt),e(Qt,Xp),e(ve,ed),e(ve,Zt),e(Zt,td),e(ve,sd),h(c,wo,d),h(c,E,d),e(E,Fa),e(Fa,Kt),e(Kt,rd),e(E,ad),e(E,za),e(za,Xt),e(Xt,Va),e(Xt,Ya),e(Xt,es),e(E,od),e(E,vr),vr.innerHTML=Bu,e(E,ld),e(E,qa),e(qa,nd),e(E,cd),e(E,C),e(C,Qa),e(Qa,id),e(C,pd),e(C,ur),e(ur,dd),e(C,hd),e(C,mr),e(mr,fd),e(C,vd),e(C,kr),e(kr,ud),e(C,md),e(C,_r),e(_r,kd),e(C,_d),e(E,Ed),e(E,we),e(we,Za),e(Za,bd),e(we,yd),e(we,ts),e(ts,gd),e(we,wd),e(E,Sd),e(E,O),e(O,xd),e(O,Er),e(Er,Cd),e(O,Td),e(O,br),e(br,Ad),e(O,Od),e(O,ss),e(ss,Id),e(O,Dd),e(O,rs),e(rs,Ld),e(O,Rd),h(c,So,d),h(c,Z,d),e(Z,Ka),e(Ka,as),e(as,Pd),e(Z,jd),e(Z,os),e(os,Md),e(os,ls),e(ls,Hd),e(os,Nd),e(Z,Wd),e(Z,J),e(J,K),e(K,Ud),e(K,yr),e(yr,$d),e(K,Jd),e(K,gr),e(gr,Gd),e(K,Bd),e(K,wr),e(wr,Fd),e(J,zd),e(J,Se),e(Se,Vd),e(Se,Sr),e(Sr,Yd),e(Se,qd),e(Se,xr),e(xr,Qd),e(J,Zd),e(J,xe),e(xe,Kd),e(xe,Cr),e(Cr,Xd),e(xe,eh),e(xe,Tr),e(Tr,th),e(J,sh),e(J,Ar),e(Ar,rh),e(Ar,Or),e(Or,ah),xo=!0},p:s2,i(c){xo||(Mu(v.$$.fragment,c),xo=!0)},o(c){Hu(v.$$.fragment,c),xo=!1},d(c){Nu(v,c),c&&t(j),c&&t(y),c&&t(lo),c&&t(g),c&&t(no),c&&t(f),c&&t(co),c&&t(ue),c&&t(io),c&&t(F),c&&t(po),c&&t(I),c&&t(ho),c&&t(z),c&&t(fo),c&&t(V),c&&t(vo),c&&t(m),c&&t(uo),c&&t(D),c&&t(mo),c&&t(Q),c&&t(ko),c&&t(Ee),c&&t(_o),c&&t(be),c&&t(Eo),c&&t(L),c&&t(bo),c&&t(w),c&&t(yo),c&&t(ye),c&&t(go),c&&t(ge),c&&t(wo),c&&t(E),c&&t(So),c&&t(Z)}}}function h2(ps){let v,j;const y=[ps[0],Lu];let te={$$slots:{default:[d2]},$$scope:{ctx:ps}};for(let u=0;u<y.length;u+=1)te=vh(te,y[u]);return v=new r2({props:te}),{c(){Ru(v.$$.fragment)},l(u){Pu(v.$$.fragment,u)},m(u,M){ju(v,u,M),j=!0},p(u,[M]){const ds=M&1?e2(y,[M&1&&xu(u[0]),M&0&&xu(Lu)]):{};M&2&&(ds.$$scope={dirty:M,ctx:u}),v.$set(ds)},i(u){j||(Mu(v.$$.fragment,u),j=!0)},o(u){Hu(v.$$.fragment,u),j=!1},d(u){Nu(v,u)}}}const Lu={title:"The Svelte Compiler Handbook",date:"2020-04-05T08:00:00Z",tags:["Svelte","JavaScript","compiler"],description:"The Svelte compilation process can be broken down into 4-steps, 1) parsing source code into AST, 2) tracking references and dependencies, 3) creating code blocks and fragments, and 4) generate code.",label:"blog"};function f2(ps,v,j){return t2("blog",{image:p2}),ps.$$set=y=>{j(0,v=vh(vh({},v),Cu(y)))},v=Cu(v),[v]}class b2 extends Zu{constructor(v){super();Ku(this,v,f2,h2,Xu,{})}}export{b2 as default,Lu as metadata};
