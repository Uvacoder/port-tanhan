import{S as fy,i as my,s as _y,C as _c,w as uv,x as xv,y as fv,z as wy,A as ev,q as mv,o as _v,B as wv,r as gy,R as nv,k as p,e as t,t as n,m as c,c as a,a as e,h as l,d as o,b as r,Q as ys,f as k,g as y,F as s,O as by}from"../../chunks/vendor-569a3c5c.js";import{B as Ey}from"../../chunks/BlogLayout-17b76cb2.js";import{T as Iy}from"../../chunks/TableOfContent-dbc18cb8.js";import{_ as Sy}from"../../chunks/twitter-card-image-a57df29d.js";import"../../chunks/stores-ee936cd4.js";import"../../chunks/WebMentions-968cc380.js";/* empty css                                */var Ty="/_app/assets/refresh-ffb22e75.webp",Cy="/_app/assets/refresh-e4c3db8e.webp",Py="/_app/assets/refresh-5b7fb572.png",lv="/_app/assets/refresh-1fef66a8.png",qy="/_app/assets/hate-c64ff38c.webp",Dy="/_app/assets/hate-7cdd16bc.webp",Ay="/_app/assets/hate-c015abe2.png",rv="/_app/assets/hate-98e9d0be.png",Oy="/_app/assets/eat-sprite-c89cd866.webp",Hy="/_app/assets/eat-sprite-4786f77b.webp",My="/_app/assets/eat-sprite-eec47e23.png",iv="/_app/assets/eat-sprite-8b5fd122.png",Ly="/_app/assets/shift-left-b7cb0118.gif",pv="/_app/assets/shift-left-8ec24bd2.gif",Ny="/_app/assets/rest-sprite-3eb61bb5.webp",Vy="/_app/assets/rest-sprite-1308274b.webp",Ry="/_app/assets/rest-sprite-6c5105de.png",cv="/_app/assets/rest-sprite-81836e69.png",Gy="/_app/assets/annihilate-b8db90fb.gif",kv="/_app/assets/annihilate-558f6241.gif",Uy="/_app/assets/eat-866b6cc8.gif",hv="/_app/assets/eat-3f80164a.gif",jy="/_app/assets/evade-4286c505.gif",vv="/_app/assets/evade-17865bae.gif",By="/_app/assets/rest-f29bd04f.gif",yv="/_app/assets/rest-209c2a25.gif";function zy(To){let _,B,C,Ss,w,z,Co,ie,K,ds,yn,Po,dn,un,qo,xn,pe,us,fn,Ts,mn,_n,ce,Do,Y,M,wc,ke,xs,Kt,Cs,wn,gn,Ps,bn,qs,En,In,he,Ao,Yt,Ds,Sn,ve,fs,Zt,As,Tn,Cn,sa,Z,L,gc,ye,ms,oa,Os,Pn,qn,ta,ss,N,bc,de,_s,aa,Hs,Dn,An,ea,os,V,Ec,ue,Oo,na,Ms,On,xe,E,la,Ls,Hn,Mn,Ns,Ln,Vs,Nn,Vn,Rn,Rs,Gn,Ho,Un,jn,Bn,Mo,gv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;manifest_version&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;name&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;Super Silly Hackathon&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;description&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;Super Silly Hackathon&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;version&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;1.0.0&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;content_scripts&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> [</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">&quot;matches&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&quot;&lt;all_urls&gt;&quot;</span><span style="color: var(--shiki-color-text)">]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">&quot;js&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&quot;content.js&quot;</span><span style="color: var(--shiki-color-text)">]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">&quot;css&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&quot;content-ext.css&quot;</span><span style="color: var(--shiki-color-text)">]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">&quot;run_at&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;document_start&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">&quot;all_frames&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  ]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,zn,Gs,$n,Lo,Xn,Fn,Qn,No,bv=`<div class="filename">content.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">onload</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">document</span><span style="color: var(--shiki-token-function)">.createElement</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;div&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">updatePosition</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">100</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">100</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">classList</span><span style="color: var(--shiki-token-function)">.add</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;ssh-pet&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">document</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">body</span><span style="color: var(--shiki-token-function)">.appendChild</span><span style="color: var(--shiki-color-text)">(pet);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">window</span><span style="color: var(--shiki-token-function)">.addEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;load&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> onload);</span></span></code></pre>`,Wn,Vo,Ev=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">/* filename: content.css */</span></span>
<span class="line"><span style="color: var(--shiki-token-function)">.ssh-pet</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">height</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">30</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">width</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">30</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fixed</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">z-index</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1000</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-image</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">url</span><span style="color: var(--shiki-token-constant)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;/images/rest.png&#39;</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-size</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">30</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)"> 30</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-position</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0 0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Jn,Us,Kn,Ro,Yn,Zn,fe,ws,ra,X,sl,Go,ol,tl,Uo,al,el,jo,Iv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// ...</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;web_accessible_resources&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&quot;images/*&quot;</span><span style="color: var(--shiki-color-text)">]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,me,gs,ia,ts,nl,Bo,ll,rl,il,zo,Sv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">.ssh-pet</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">/* ... */</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-image</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">url</span><span style="color: var(--shiki-token-constant)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;chrome-extension://__MSG_@@extension_id__/images/rest.png&#39;</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,_e,x,pa,js,pl,cl,ca,kl,hl,Bs,vl,ka,yl,dl,ul,ha,va,xl,fl,zs,ml,$s,_l,wl,gl,ya,as,$o,da,A,Ic,bl,Xo,Tv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">@keyframes</span><span style="color: var(--shiki-color-text)"> ssh-pet-rest &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  0% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">background-position-x</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  100% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">background-position-x</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">-90</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-function)">.ssh-pet.rest</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-image</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">url</span><span style="color: var(--shiki-token-constant)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;chrome-extension://__MSG_@@extension_id__/images/rest-sprite.png&#39;</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-repeat</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">repeat-x</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-size</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">90</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)"> 30</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-position</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0 0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">animation</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ssh-pet-rest 0.2</span><span style="color: var(--shiki-token-keyword)">s</span><span style="color: var(--shiki-token-constant)"> </span><span style="color: var(--shiki-token-function)">steps</span><span style="color: var(--shiki-token-constant)">(3)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,El,Xs,Il,Fo,Sl,Tl,Cl,Qo,Cv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">classList</span><span style="color: var(--shiki-token-function)">.add</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;rest&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// when the animation finished, remove the class</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">onanimationend</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.removeEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;animationend&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> onanimationend);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">classList</span><span style="color: var(--shiki-token-function)">.remove</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;rest&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;;</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.addEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;animationend&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> onanimationend);</span></span></code></pre>`,Pl,ua,ql,Dl,Wo,Pv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">doSomething</span><span style="color: var(--shiki-color-text)">(random) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">switch</span><span style="color: var(--shiki-color-text)"> (random) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">case</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">:</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// ...</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">default</span><span style="color: var(--shiki-color-text)">:</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateRest</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">scheduleSomething</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">setTimeout</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">choices</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">10</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// cheat to do Math.floor</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">random</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">~~</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.random</span><span style="color: var(--shiki-color-text)">() </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> choices);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">doSomething</span><span style="color: var(--shiki-color-text)">(random);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">scheduleSomething</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">800</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.random</span><span style="color: var(--shiki-color-text)">() </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1000</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// make animation promise based</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateRest</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;rest&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(cls) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-color-text)">(resolve </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">classList</span><span style="color: var(--shiki-token-function)">.add</span><span style="color: var(--shiki-color-text)">(cls);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">onanimationend</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.removeEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;animationend&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> onanimationend);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">classList</span><span style="color: var(--shiki-token-function)">.remove</span><span style="color: var(--shiki-color-text)">(cls);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.addEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;animationend&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> onanimationend);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Al,Fs,Ol,Jo,Hl,Ml,we,u,xa,Qs,Ll,Nl,fa,Vl,Rl,ma,es,R,Sc,Gl,Ws,Ul,Ko,jl,Bl,zl,Yo,qv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line dim"><span style="color: var(--shiki-token-keyword)">@keyframes</span><span style="color: var(--shiki-color-text)"> ssh-pet-shift-left &#123;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  0% &#123;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">background-position-x</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(0)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  100% &#123;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">background-position-x</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">-240</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(-30</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line dim"></span>
<span class="line dim"><span style="color: var(--shiki-token-function)">.ssh-pet.shift-left</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-image</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">url</span><span style="color: var(--shiki-token-constant)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;/images/shift-left-sprite.png&#39;</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-repeat</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">repeat-x</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-size</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">240</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)"> 30</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-position</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0 0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">animation</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ssh-pet-shift-left 0.8</span><span style="color: var(--shiki-token-keyword)">s</span><span style="color: var(--shiki-token-constant)"> </span><span style="color: var(--shiki-token-function)">steps</span><span style="color: var(--shiki-token-constant)">(8)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,$l,_a,Xl,Fl,Zo,Dv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> &#123; x</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> y; </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> &#125;;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">offsetPosition</span><span style="color: var(--shiki-color-text)">(x</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> y) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">updatePosition</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-color-text)">.x </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> x</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-color-text)">.y </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> y);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">updatePosition</span><span style="color: var(--shiki-color-text)">(x</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> y) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">style</span><span style="color: var(--shiki-color-text)">.left </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-color-text)">.x </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> x) </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;px&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">style</span><span style="color: var(--shiki-color-text)">.top </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-color-text)">.y </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> y) </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;px&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Ql,wa,Wl,Jl,st,Av=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateShiftLeft</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#96;shift-left&#96;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">offsetPosition</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-token-constant)">30</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Kl,O,Yl,ot,Zl,sr,tt,or,tr,at,ar,er,et,nr,lr,rr,Js,ir,nt,pr,cr,kr,lt,Ov=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.addEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;mousemove&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> event </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-keyword)">!</span><span style="color: var(--shiki-color-text)">animating) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    animating </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">shiftAway</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    animating </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// edge avoidance shifting</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">shiftAway</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-color-text)">.x </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">40</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateShiftRight</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-color-text)">.x </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">window</span><span style="color: var(--shiki-color-text)">.innerWidth </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">40</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateShiftLeft</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.random</span><span style="color: var(--shiki-color-text)">() </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateShiftLeft</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateShiftRight</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,hr,Ks,vr,rt,yr,dr,ur,ga,xr,ge,v,ba,Ys,fr,mr,ns,_r,it,wr,gr,pt,br,Er,Ir,ct,Hv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-constant)">document</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">body</span><span style="color: var(--shiki-token-function)">.addEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;input&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> event </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">debounceByElement</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">event</span><span style="color: var(--shiki-color-text)">.target</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> eatInputValue</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1000</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;);</span></span></code></pre>`,Sr,ls,Tr,kt,Cr,Pr,ht,qr,Dr,Ar,Ea,Or,Hr,vt,Mv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">eatInputValue</span><span style="color: var(--shiki-color-text)">(elem) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.value </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">value</span><span style="color: var(--shiki-token-function)">.slice</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">debounceByElement</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">event</span><span style="color: var(--shiki-color-text)">.target</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> eatInputValue</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1000</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Mr,Ia,Lr,Nr,yt,Lv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line dim"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">eatInputValue</span><span style="color: var(--shiki-color-text)">(elem) &#123;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// remember selection position</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">start</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.selectionStart</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">end</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.selectionEnd;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.value </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">value</span><span style="color: var(--shiki-token-function)">.slice</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// restore selection position</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-token-function)">.setSelectionRange</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.max</span><span style="color: var(--shiki-color-text)">(start </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.max</span><span style="color: var(--shiki-color-text)">(end </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">));</span></span>
<span class="line dim"></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">debounceByElement</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">event</span><span style="color: var(--shiki-color-text)">.target</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> eatInputValue</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1000</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Vr,Sa,Rr,Gr,Ta,rs,dt,Ca,H,Tc,Ur,$,jr,Pa,Br,zr,qa,$r,Xr,Da,Fr,Qr,Wr,ut,Nv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line dim"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">eatInputValue</span><span style="color: var(--shiki-color-text)">(elem) &#123;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;eat&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line dim"></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">start</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.selectionStart</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">end</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.selectionEnd;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.value </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">value</span><span style="color: var(--shiki-token-function)">.slice</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-token-function)">.setSelectionRange</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.max</span><span style="color: var(--shiki-color-text)">(start </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.max</span><span style="color: var(--shiki-color-text)">(end </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">));</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;digest&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line dim"></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">debounceByElement</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">event</span><span style="color: var(--shiki-color-text)">.target</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> eatInputValue</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1000</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Jr,Aa,Kr,Yr,xt,Vv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">@keyframes</span><span style="color: var(--shiki-color-text)"> ssh-pet-eat-move &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  0%,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  30% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(0)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  50% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(4</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  100% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(0)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Zr,Oa,si,oi,Ha,ti,ai,Zs,ei,Ma,ni,li,ri,ft,Rv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateTeleport</span><span style="color: var(--shiki-color-text)">(x</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> y) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;disappear&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">style</span><span style="color: var(--shiki-color-text)">.opacity </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">updatePosition</span><span style="color: var(--shiki-color-text)">(x</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> y);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">style</span><span style="color: var(--shiki-color-text)">.opacity </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">100</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;reappear&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,ii,so,pi,oo,ci,ki,hi,mt,Gv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">leftSideOf</span><span style="color: var(--shiki-color-text)">(elem) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-constant)">x</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">y</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">height</span><span style="color: var(--shiki-color-text)"> &#125; </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-token-function)">.getBoundingClientRect</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">to_x</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> x </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">size</span><span style="color: var(--shiki-color-text)">.width </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">paddingLeft</span><span style="color: var(--shiki-color-text)">(elem);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">to_y</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> y </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> height </span><span style="color: var(--shiki-token-keyword)">/</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">size</span><span style="color: var(--shiki-color-text)">.height </span><span style="color: var(--shiki-token-keyword)">/</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> [to_x</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> to_y];</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">paddingLeft</span><span style="color: var(--shiki-color-text)">(elem) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> (</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">Number</span><span style="color: var(--shiki-color-text)">(</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      window</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-function)">.getComputedStyle</span><span style="color: var(--shiki-color-text)">(elem)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-function)">.getPropertyValue</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;padding-left&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-function)">.replace</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">/px</span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-token-string-expression)">r</span><span style="color: var(--shiki-token-keyword)">?</span><span style="color: var(--shiki-token-string-expression)">em/</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    ) </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  );</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,vi,La,yi,be,f,Na,to,di,ui,Va,xi,fi,Ra,is,_t,Ga,G,Cc,mi,ao,_i,eo,wi,gi,bi,wt,Uv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">buttons</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">document</span><span style="color: var(--shiki-token-function)">.querySelectorAll</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;button, input[type=&quot;submit&quot;], [role=&quot;button&quot;]&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">buttons</span><span style="color: var(--shiki-token-function)">.forEach</span><span style="color: var(--shiki-color-text)">(button </span><span style="color: var(--shiki-token-keyword)">=&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">button</span><span style="color: var(--shiki-token-function)">.addEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;mousemove&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> mouseMove)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">);</span></span></code></pre>`,Ei,Ua,Ii,Si,gt,jv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">removeTheElement</span><span style="color: var(--shiki-color-text)">(elem) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (animating) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">  animating </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">classList</span><span style="color: var(--shiki-token-function)">.add</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;hate&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">timeout</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">400</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-token-function)">.removeEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;mousemove&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> mouseMove);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;item-disappearing&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> elem);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">style</span><span style="color: var(--shiki-color-text)">.visibility </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;hidden&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">classList</span><span style="color: var(--shiki-token-function)">.remove</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;hate&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  animating </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Ti,ps,Ci,bt,Pi,qi,Et,Di,Ai,Oi,ja,Hi,Mi,It,Bv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">@keyframes</span><span style="color: var(--shiki-color-text)"> hating &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  0% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">scale</span><span style="color: var(--shiki-token-constant)">(1.1) </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(-2</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  50% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">scale</span><span style="color: var(--shiki-token-constant)">(1.1) </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(2</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  100% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">scale</span><span style="color: var(--shiki-token-constant)">(1.1) </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(-2</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Li,no,Ni,St,Vi,Ri,Gi,Tt,zv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">@keyframes</span><span style="color: var(--shiki-color-text)"> item-disappearing &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  0% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">filter</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">blur</span><span style="color: var(--shiki-token-constant)">(0</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  80% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">opacity</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  100% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">filter</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">blur</span><span style="color: var(--shiki-token-constant)">(8</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">scale</span><span style="color: var(--shiki-token-constant)">(1.5)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">opacity</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Ee,Ct,Ba,lo,Ui,Ie,F,za,ro,ji,Bi,cs,zi,Pt,$i,Xi,qt,Fi,Qi,Wi,io,$a,Ji,Ki,Xa,Yi,Se,P,Fa,po,Zi,sp,co,op,Dt,tp,ap,ep,Qa,ks,At,Wa,U,Pc,np,Ja,lp,rp,Ot,$v=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">html</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">link</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">rel</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;stylesheet&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;text/css&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">href</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;content.css&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">body</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">script</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">src</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;content.js&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">script</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">body</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">html</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,Te,I,Ka,ko,ip,pp,ho,cp,Ht,kp,hp,vp,vo,yp,Mt,dp,up,xp,hs,fp,Lt,mp,_p,Nt,wp,gp,bp,yo,Ep,uo,Ip,Sp,Tp,Vt,Xv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;fs&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">path</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;path&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">postcss</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;postcss&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">input</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">path</span><span style="color: var(--shiki-token-function)">.join</span><span style="color: var(--shiki-color-text)">(__dirname</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;../content.css&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">output</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">path</span><span style="color: var(--shiki-token-function)">.join</span><span style="color: var(--shiki-color-text)">(__dirname</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;../content-ext.css&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// watch when file change</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.watchFile</span><span style="color: var(--shiki-color-text)">(input</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">css</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.readFileSync</span><span style="color: var(--shiki-color-text)">(input</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;utf-8&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// NOTE: &#96;from: undefined&#96; to stop PostCSS complain about sourcemap</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">postcss</span><span style="color: var(--shiki-color-text)">([replaceUrl])</span><span style="color: var(--shiki-token-function)">.process</span><span style="color: var(--shiki-color-text)">(css</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> &#123; from</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">undefined</span><span style="color: var(--shiki-color-text)"> &#125;)</span><span style="color: var(--shiki-token-function)">.then</span><span style="color: var(--shiki-color-text)">((result) </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.writeFileSync</span><span style="color: var(--shiki-color-text)">(output</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">result</span><span style="color: var(--shiki-color-text)">.css</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;utf-8&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">replaceUrl</span><span style="color: var(--shiki-color-text)">(root) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">root</span><span style="color: var(--shiki-token-function)">.walkDecls</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;background-image&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> decl </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">decl</span><span style="color: var(--shiki-color-text)">.value </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">decl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">value</span><span style="color: var(--shiki-token-function)">.replace</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">/url(&#39;(.</span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-token-string-expression)">)&#39;)/</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;url(&#39;chrome-extension://__MSG_@@extension_id__$1&#39;)&quot;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Cp,vs,Pp,Rt,qp,Dp,Gt,Ap,Op,Ce,j,Ya,xo,Hp,Mp,fo,Lp,Za,Np,Vp,Rp,mo,Gp,_o,Up,jp,Bp,wo,zp,go,$p,Xp,Pe,S,se,bo,Fp,Qp,oe,Wp,Jp,bs,Q,Kp,Ut,Yp,Zp,jt,sc,oc,Bt,tc,ac,te,ec,nc,ae,lc,rc,Eo,ee,ic,pc,ne,cc,kc,Io,hc,So,vc,yc,qe;return _=new Iy({props:{data:[{link:"inspiration",title:"Inspiration?"},{link:"what-can-it-do",title:"What can it do?",nested:[{link:"1-it-runs-away-from-mouse-cursor",title:"1. It runs away from mouse cursor"},{link:"2-it-eats-whatever-you-try-to-type-into-an-input",title:"2. It eats whatever you try to type into an input"},{link:"3-it-annihilates-the-buttons-you-hover-onto",title:"3. It annihilates the buttons you hover onto"}]},{link:"implementation",title:"Implementation",nested:[{link:"chrome-extension",title:"Chrome Extension",nested:[{link:"1-add-web-accessible-resources-into-the-manifest-json",title:"1. Add  `web_accessible_resources`  into the  `manifest.json`"},{link:"2-prepend-chrome-extension-msg-extension-id-for-the-url",title:"2. Prepend  `chrome-extension://__MSG_@@extension_id__/`  for the URL"}]},{link:"make-it-look-alive",title:"Make it look alive"},{link:"avoid-the-cursor",title:"Avoid the cursor"},{link:"eating-the-characters",title:"Eating the characters"},{link:"annihilate-the-buttons",title:"Annihilate the buttons"}]},{link:"difficulties",title:"Difficulties",nested:[{link:"synchronising-interactions",title:"Synchronising interactions"},{link:"developing-locally",title:"Developing locally",nested:[{link:"postcss-script",title:"PostCSS script"}]}]},{link:"demo",title:"Demo"},{link:"summary",title:"Summary"}]}}),{c(){uv(_.$$.fragment),B=p(),C=t("p"),Ss=n("I just came back from the "),w=t("a"),z=n("Super Silly Hackathon 2019"),Co=n(". It was my second time to participate in this Super Silly Hackathon."),ie=p(),K=t("blockquote"),ds=t("p"),yn=n("Hello everybody we are ready for this year, are you?? "),Po=t("a"),dn=n("pic.twitter.com/lem52qHO6Q"),un=n("\u2014 Super Silly Hackathon \u2014 14 Dec 2019 (@supersillyhack) "),qo=t("a"),xn=n("December 14, 2019"),pe=p(),us=t("p"),fn=n("This year, my silly hackathon idea is to build "),Ts=t("a"),mn=n("a little pet in the browser"),_n=n("!"),ce=p(),Do=t("p"),Y=t("span"),M=t("img"),ke=p(),xs=t("section"),Kt=t("h2"),Cs=t("a"),wn=n("Inspiration?"),gn=p(),Ps=t("p"),bn=n("I saw the "),qs=t("a"),En=n("tamagotchi"),In=n(" on touchbar a while ago, I don't have a touchbar, but I have a browser. So why not create a pet in the browser through Chrome Extension?"),he=p(),Ao=t("section"),Yt=t("h2"),Ds=t("a"),Sn=n("What can it do?"),ve=p(),fs=t("section"),Zt=t("h3"),As=t("a"),Tn=n("1. It runs away from mouse cursor"),Cn=p(),sa=t("p"),Z=t("span"),L=t("img"),ye=p(),ms=t("section"),oa=t("h3"),Os=t("a"),Pn=n("2. It eats whatever you try to type into an input"),qn=p(),ta=t("p"),ss=t("span"),N=t("img"),de=p(),_s=t("section"),aa=t("h3"),Hs=t("a"),Dn=n("3. It annihilates the buttons you hover onto"),An=p(),ea=t("p"),os=t("span"),V=t("img"),ue=p(),Oo=t("section"),na=t("h2"),Ms=t("a"),On=n("Implementation"),xe=p(),E=t("section"),la=t("h3"),Ls=t("a"),Hn=n("Chrome Extension"),Mn=p(),Ns=t("p"),Ln=n("Firstly, it is a Chrome Extension. I used "),Vs=t("a"),Nn=n("Content Scripts"),Vn=n(", so that I have access to the DOM of the pages I am visiting."),Rn=p(),Rs=t("p"),Gn=n("Here is my "),Ho=t("code"),Un=n("manifest.json"),jn=n(" for my extension:"),Bn=p(),Mo=t("div"),zn=p(),Gs=t("p"),$n=n("To start, I added an "),Lo=t("code"),Xn=n("onload"),Fn=n(" event, to add my pet into the browser:"),Qn=p(),No=t("div"),Wn=p(),Vo=t("div"),Jn=p(),Us=t("p"),Kn=n("The first problem I encountered, is that I couldn't access the "),Ro=t("code"),Yn=n("/images/rest.png"),Zn=n(". After some googling, I need to:"),fe=p(),ws=t("section"),ra=t("h4"),X=t("a"),sl=n("1. Add "),Go=t("code"),ol=n("web_accessible_resources"),tl=n(" into the "),Uo=t("code"),al=n("manifest.json"),el=p(),jo=t("div"),me=p(),gs=t("section"),ia=t("h4"),ts=t("a"),nl=n("2. Prepend "),Bo=t("code"),ll=n("chrome-extension://__MSG_@@extension_id__/"),rl=n(" for the URL"),il=p(),zo=t("div"),_e=p(),x=t("section"),pa=t("h3"),js=t("a"),pl=n("Make it look alive"),cl=p(),ca=t("p"),kl=n("A static image will look fake."),hl=p(),Bs=t("p"),vl=n("As the quote says, "),ka=t("strong"),yl=n('"eyes is the window to the soul"'),dl=n(", to make the pet look real, we need to make the eye blink."),ul=p(),ha=t("p"),va=t("em"),xl=n("(That's how you judge a person is dead or alive in movies right? Dead body will just stare blankly to nowhere)"),fl=p(),zs=t("p"),ml=n("To make the pet blink, I found some "),$s=t("a"),_l=n("useful tutorials"),wl=n(" on how to create CSS sprite sheet animations."),gl=p(),ya=t("p"),as=t("span"),$o=t("picture"),da=t("source"),A=t("img"),bl=p(),Xo=t("div"),El=p(),Xs=t("p"),Il=n("To animate it, I added the "),Fo=t("code"),Sl=n("rest"),Tl=n(" class to the pet, and removed it when it's done animating."),Cl=p(),Qo=t("div"),Pl=p(),ua=t("p"),ql=n("At the beginning, I thought I would add more other micro expressions to the pet, so I wrote a scheduler, to schedule expressions randomly:"),Dl=p(),Wo=t("div"),Al=p(),Fs=t("p"),Ol=n("I used "),Jo=t("code"),Hl=n("await"),Ml=n(" to wait for animation to finish, before schedule the next action again, so that it will not have 2 actions running in parallel."),we=p(),u=t("section"),xa=t("h3"),Qs=t("a"),Ll=n("Avoid the cursor"),Nl=p(),fa=t("p"),Vl=n("I drew a sprite sheet that make the pet looks like it is squiggling away,"),Rl=p(),ma=t("p"),es=t("span"),R=t("img"),Gl=p(),Ws=t("p"),Ul=n("while at the same time set the "),Ko=t("code"),jl=n("transform: translateX()"),Bl=n(" to actually move it:"),zl=p(),Yo=t("div"),$l=p(),_a=t("p"),Xl=n("In JavaScript, I tried to keep the position state inside an object:"),Fl=p(),Zo=t("div"),Ql=p(),wa=t("p"),Wl=n("So, to shift away from the cursor would be:"),Jl=p(),st=t("div"),Kl=p(),O=t("p"),Yl=n("So, when the animation ends, the "),ot=t("code"),Zl=n("transform: translateX()"),sr=n(" will go from "),tt=t("code"),or=n("-30px"),tr=n(" back to "),at=t("code"),ar=n("0"),er=n(", and at the same time, I moved the position of the pet "),et=t("code"),nr=n("-30px"),lr=n(" in x-axis."),rr=p(),Js=t("p"),ir=n("To know when the cursor is on top of the pet, I used "),nt=t("code"),pr=n("mousemove"),cr=n(" event:"),kr=p(),lt=t("div"),hr=p(),Ks=t("p"),vr=n("To avoid reanimate while still animate, I added a "),rt=t("code"),yr=n("animating"),dr=n(" flag, as an mutex."),ur=p(),ga=t("p"),xr=n("Besides, it would be weird to see the pet shifting pass through the browser window, because that way, you would never be able to interact with it anymore \u{1F622}"),ge=p(),v=t("section"),ba=t("h3"),Ys=t("a"),fr=n("Eating the characters"),mr=p(),ns=t("p"),_r=n("To know when someone is typing into any of the input box, I attach an "),it=t("code"),wr=n("input"),gr=n(" event listener on to the "),pt=t("code"),br=n("document.body"),Er=n(":"),Ir=p(),ct=t("div"),Sr=p(),ls=t("p"),Tr=n("There maybe multiple "),kt=t("code"),Cr=n("<input />"),Pr=n(" on the page, so I created a debounce function for each "),ht=t("code"),qr=n("<input />"),Dr=n("."),Ar=p(),Ea=t("p"),Or=n("To make the eating simple, I will always eat from the left, consuming characters from left to right:"),Hr=p(),vt=t("div"),Mr=p(),Ia=t("p"),Lr=n(`However naively eating the characters this way, will screw up your cursor position / selection.
So I googled and pasted the code snippet to improve it:`),Nr=p(),yt=t("div"),Vr=p(),Sa=t("p"),Rr=n('After able to "eat" the characters, I need to animate the pet eating the characters'),Gr=p(),Ta=t("p"),rs=t("span"),dt=t("picture"),Ca=t("source"),H=t("img"),Ur=p(),$=t("p"),jr=n("To align the eating with the removing of a character, I split the animation into 2 parts, "),Pa=t("strong"),Br=n("the eating"),zr=n(" and "),qa=t("strong"),$r=n("the chewing"),Xr=p(),Da=t("em"),Fr=n("(I named it digesting during the hackathon)"),Qr=n("."),Wr=p(),ut=t("div"),Jr=p(),Aa=t("p"),Kr=n("To make it more realistic, I tried to make the pet tilt forward, while consuming the character:"),Yr=p(),xt=t("div"),Zr=p(),Oa=t("p"),si=n("The pixel values had been tuned to make the movement subtle, yet natural."),oi=p(),Ha=t("p"),ti=n("Now, how do I place my pet to the left of the input?"),ai=p(),Zs=t("p"),ei=n("Instead of squiggle to the right position, I made the pet "),Ma=t("strong"),ni=n("teleport"),li=n("!"),ri=p(),ft=t("div"),ii=p(),so=t("p"),pi=n("To calculate the teleport destination, I used "),oo=t("a"),ci=n("getBoundingClientRect()"),ki=n(":"),hi=p(),mt=t("div"),vi=p(),La=t("p"),yi=n("The padding of the input is important. It brings the pet closer to the character it is going to eat. \u{1F924}"),be=p(),f=t("section"),Na=t("h3"),to=t("a"),di=n("Annihilate the buttons"),ui=p(),Va=t("p"),xi=n("Pet don't like buttons because buttons take away your concentration from your pet."),fi=p(),Ra=t("p"),is=t("span"),_t=t("picture"),Ga=t("source"),G=t("img"),mi=p(),ao=t("p"),_i=n("To get a list of buttons, I use "),eo=t("a"),wi=n("document.querySelectorAll()"),gi=n(":"),bi=p(),wt=t("div"),Ei=p(),Ua=t("p"),Ii=n("To annihilate the buttons, I animated the pet with a pair of dead red eyes, and shake it for 400 milli-seconds, before annihilating the elements into vapor:"),Si=p(),gt=t("div"),Ti=p(),ps=t("p"),Ci=n("I used "),bt=t("code"),Pi=n("visibility: hidden"),qi=n(", so that I dont disrupt the DOM structure, yet making it disappear and unclickable, unlike "),Et=t("code"),Di=n("opacity: none"),Ai=n("."),Oi=p(),ja=t("p"),Hi=n("The pet with hatred is slightly bigger and agitated than the normal pet:"),Mi=p(),It=t("div"),Li=p(),no=t("p"),Ni=n("To turn the button annihilated into vapor, I used "),St=t("code"),Vi=n("filter: blur()"),Ri=n(":"),Gi=p(),Tt=t("div"),Ee=p(),Ct=t("section"),Ba=t("h2"),lo=t("a"),Ui=n("Difficulties"),Ie=p(),F=t("section"),za=t("h3"),ro=t("a"),ji=n("Synchronising interactions"),Bi=p(),cs=t("p"),zi=n("A lot edge cases has been found and fixed by using the "),Pt=t("code"),$i=n("animating"),Xi=n(", or "),qt=t("code"),Fi=n("eating"),Qi=n(" flag:"),Wi=p(),io=t("ul"),$a=t("li"),Ji=n("where to avoid cursor, while eating the characters"),Ki=p(),Xa=t("li"),Yi=n(`to annihilate or to eat?
There's an heuristic to choose which one to do, when both get scheduled at the same time.`),Se=p(),P=t("section"),Fa=t("h3"),po=t("a"),Zi=n("Developing locally"),sp=p(),co=t("p"),op=n("Everytime when the content script is updated, I need to click refresh in the "),Dt=t("code"),tp=n("chrome://extensions"),ap=n(" page:"),ep=p(),Qa=t("p"),ks=t("span"),At=t("picture"),Wa=t("source"),U=t("img"),np=p(),Ja=t("p"),lp=n("In order to developed faster, I created a simple HTML, and test it locally."),rp=p(),Ot=t("div"),Te=p(),I=t("section"),Ka=t("h4"),ko=t("a"),ip=n("PostCSS script"),pp=p(),ho=t("p"),cp=n("Remember I mentioned that, for resource to be accessible from the Chrome Extension, I would have to prepend the url with "),Ht=t("code"),kp=n("chrome-extension://__MSG_@@extension_id__/"),hp=n("?"),vp=p(),vo=t("p"),yp=n("But that does not work if I developed in standalone HTML, because I can't access the assets from "),Mt=t("code"),dp=n("chrome-extension://"),up=n(" protocol in my localhost."),xp=p(),hs=t("p"),fp=n("I would have to write "),Lt=t("code"),mp=n("/images/rest.png"),_p=n(", and replaced it to "),Nt=t("code"),wp=n("chrome-extension://__MSG_@@extension_id__/images/rest.png"),gp=n(" when I test it on my extension."),bp=p(),yo=t("p"),Ep=n("So, I wrote a simple script with "),uo=t("a"),Ip=n("PostCSS"),Sp=n(" to automatically do it:"),Tp=p(),Vt=t("div"),Cp=p(),vs=t("p"),Pp=n("I used "),Rt=t("code"),qp=n("content.css"),Dp=n(" for my local development, and automatically built "),Gt=t("code"),Ap=n("content-ext.css"),Op=n(" for the extension with all the URL replaced."),Ce=p(),j=t("section"),Ya=t("h2"),xo=t("a"),Hp=n("Demo"),Mp=p(),fo=t("p"),Lp=n("I did a super quick demo, which went quite well, "),Za=t("em"),Np=n("I think."),Vp=n(" \u{1F914}"),Rp=p(),mo=t("p"),Gp=n("For those who are curious, and want to try out, you can visit "),_o=t("a"),Up=n("here for the demo"),jp=n("."),Bp=p(),wo=t("p"),zp=n("For those who are curious about the source code, can visit "),go=t("a"),$p=n("the Github repo"),Xp=n("."),Pe=p(),S=t("section"),se=t("h2"),bo=t("a"),Fp=n("Summary"),Qp=p(),oe=t("p"),Wp=n("It has been a fruitful event."),Jp=p(),bs=t("blockquote"),Q=t("p"),Kp=n("And "),Ut=t("a"),Yp=n("@lihautan"),Zp=n(" wins a bag of tropical fruits "),jt=t("a"),sc=n("pic.twitter.com/CtQUBGOI7h"),oc=n("\u2014 Yishu See (@yishusee) "),Bt=t("a"),tc=n("December 14, 2019"),ac=p(),te=t("p"),ec=n("Appreciate the organisers time and effort to make the Hackathon goes as smoothly as possible."),nc=p(),ae=t("p"),lc=n("I managed to do something that I never really done before:"),rc=p(),Eo=t("ul"),ee=t("li"),ic=n("CSS sprite sheet animation"),pc=p(),ne=t("li"),cc=n("Chrome Extension that interacts with the user and manipulates the DOM"),kc=p(),Io=t("p"),hc=n("Hopefully I will partcipate the "),So=t("a"),vc=n("Super Silly Hackathon"),yc=n(" again next year."),this.h()},l(i){xv(_.$$.fragment,i),B=c(i),C=a(i,"P",{});var h=e(C);Ss=l(h,"I just came back from the "),w=a(h,"A",{href:!0,rel:!0});var qc=e(w);z=l(qc,"Super Silly Hackathon 2019"),qc.forEach(o),Co=l(h,". It was my second time to participate in this Super Silly Hackathon."),h.forEach(o),ie=c(i),K=a(i,"BLOCKQUOTE",{class:!0});var De=e(K);ds=a(De,"P",{lang:!0,dir:!0});var dc=e(ds);yn=l(dc,"Hello everybody we are ready for this year, are you?? "),Po=a(dc,"A",{href:!0});var Dc=e(Po);dn=l(Dc,"pic.twitter.com/lem52qHO6Q"),Dc.forEach(o),dc.forEach(o),un=l(De,"\u2014 Super Silly Hackathon \u2014 14 Dec 2019 (@supersillyhack) "),qo=a(De,"A",{href:!0});var Ac=e(qo);xn=l(Ac,"December 14, 2019"),Ac.forEach(o),De.forEach(o),pe=c(i),us=a(i,"P",{});var Ae=e(us);fn=l(Ae,"This year, my silly hackathon idea is to build "),Ts=a(Ae,"A",{href:!0,rel:!0});var Oc=e(Ts);mn=l(Oc,"a little pet in the browser"),Oc.forEach(o),_n=l(Ae,"!"),Ae.forEach(o),ce=c(i),Do=a(i,"P",{});var Hc=e(Do);Y=a(Hc,"SPAN",{style:!0});var Mc=e(Y);M=a(Mc,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Mc.forEach(o),Hc.forEach(o),ke=c(i),xs=a(i,"SECTION",{});var Oe=e(xs);Kt=a(Oe,"H2",{});var Lc=e(Kt);Cs=a(Lc,"A",{href:!0,id:!0});var Nc=e(Cs);wn=l(Nc,"Inspiration?"),Nc.forEach(o),Lc.forEach(o),gn=c(Oe),Ps=a(Oe,"P",{});var He=e(Ps);bn=l(He,"I saw the "),qs=a(He,"A",{href:!0,rel:!0});var Vc=e(qs);En=l(Vc,"tamagotchi"),Vc.forEach(o),In=l(He," on touchbar a while ago, I don't have a touchbar, but I have a browser. So why not create a pet in the browser through Chrome Extension?"),He.forEach(o),Oe.forEach(o),he=c(i),Ao=a(i,"SECTION",{});var Rc=e(Ao);Yt=a(Rc,"H2",{});var Gc=e(Yt);Ds=a(Gc,"A",{href:!0,id:!0});var Uc=e(Ds);Sn=l(Uc,"What can it do?"),Uc.forEach(o),Gc.forEach(o),Rc.forEach(o),ve=c(i),fs=a(i,"SECTION",{});var Me=e(fs);Zt=a(Me,"H3",{});var jc=e(Zt);As=a(jc,"A",{href:!0,id:!0});var Bc=e(As);Tn=l(Bc,"1. It runs away from mouse cursor"),Bc.forEach(o),jc.forEach(o),Cn=c(Me),sa=a(Me,"P",{});var zc=e(sa);Z=a(zc,"SPAN",{style:!0});var $c=e(Z);L=a($c,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),$c.forEach(o),zc.forEach(o),Me.forEach(o),ye=c(i),ms=a(i,"SECTION",{});var Le=e(ms);oa=a(Le,"H3",{});var Xc=e(oa);Os=a(Xc,"A",{href:!0,id:!0});var Fc=e(Os);Pn=l(Fc,"2. It eats whatever you try to type into an input"),Fc.forEach(o),Xc.forEach(o),qn=c(Le),ta=a(Le,"P",{});var Qc=e(ta);ss=a(Qc,"SPAN",{style:!0});var Wc=e(ss);N=a(Wc,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Wc.forEach(o),Qc.forEach(o),Le.forEach(o),de=c(i),_s=a(i,"SECTION",{});var Ne=e(_s);aa=a(Ne,"H3",{});var Jc=e(aa);Hs=a(Jc,"A",{href:!0,id:!0});var Kc=e(Hs);Dn=l(Kc,"3. It annihilates the buttons you hover onto"),Kc.forEach(o),Jc.forEach(o),An=c(Ne),ea=a(Ne,"P",{});var Yc=e(ea);os=a(Yc,"SPAN",{style:!0});var Zc=e(os);V=a(Zc,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),Zc.forEach(o),Yc.forEach(o),Ne.forEach(o),ue=c(i),Oo=a(i,"SECTION",{});var sk=e(Oo);na=a(sk,"H2",{});var ok=e(na);Ms=a(ok,"A",{href:!0,id:!0});var tk=e(Ms);On=l(tk,"Implementation"),tk.forEach(o),ok.forEach(o),sk.forEach(o),xe=c(i),E=a(i,"SECTION",{});var T=e(E);la=a(T,"H3",{});var ak=e(la);Ls=a(ak,"A",{href:!0,id:!0});var ek=e(Ls);Hn=l(ek,"Chrome Extension"),ek.forEach(o),ak.forEach(o),Mn=c(T),Ns=a(T,"P",{});var Ve=e(Ns);Ln=l(Ve,"Firstly, it is a Chrome Extension. I used "),Vs=a(Ve,"A",{href:!0,rel:!0});var nk=e(Vs);Nn=l(nk,"Content Scripts"),nk.forEach(o),Vn=l(Ve,", so that I have access to the DOM of the pages I am visiting."),Ve.forEach(o),Rn=c(T),Rs=a(T,"P",{});var Re=e(Rs);Gn=l(Re,"Here is my "),Ho=a(Re,"CODE",{class:!0});var lk=e(Ho);Un=l(lk,"manifest.json"),lk.forEach(o),jn=l(Re," for my extension:"),Re.forEach(o),Bn=c(T),Mo=a(T,"DIV",{class:!0});var Fv=e(Mo);Fv.forEach(o),zn=c(T),Gs=a(T,"P",{});var Ge=e(Gs);$n=l(Ge,"To start, I added an "),Lo=a(Ge,"CODE",{class:!0});var rk=e(Lo);Xn=l(rk,"onload"),rk.forEach(o),Fn=l(Ge," event, to add my pet into the browser:"),Ge.forEach(o),Qn=c(T),No=a(T,"DIV",{class:!0});var Qv=e(No);Qv.forEach(o),Wn=c(T),Vo=a(T,"DIV",{class:!0});var Wv=e(Vo);Wv.forEach(o),Jn=c(T),Us=a(T,"P",{});var Ue=e(Us);Kn=l(Ue,"The first problem I encountered, is that I couldn't access the "),Ro=a(Ue,"CODE",{class:!0});var ik=e(Ro);Yn=l(ik,"/images/rest.png"),ik.forEach(o),Zn=l(Ue,". After some googling, I need to:"),Ue.forEach(o),T.forEach(o),fe=c(i),ws=a(i,"SECTION",{});var je=e(ws);ra=a(je,"H4",{});var pk=e(ra);X=a(pk,"A",{href:!0,id:!0});var le=e(X);sl=l(le,"1. Add "),Go=a(le,"CODE",{class:!0});var ck=e(Go);ol=l(ck,"web_accessible_resources"),ck.forEach(o),tl=l(le," into the "),Uo=a(le,"CODE",{class:!0});var kk=e(Uo);al=l(kk,"manifest.json"),kk.forEach(o),le.forEach(o),pk.forEach(o),el=c(je),jo=a(je,"DIV",{class:!0});var Jv=e(jo);Jv.forEach(o),je.forEach(o),me=c(i),gs=a(i,"SECTION",{});var Be=e(gs);ia=a(Be,"H4",{});var hk=e(ia);ts=a(hk,"A",{href:!0,id:!0});var ze=e(ts);nl=l(ze,"2. Prepend "),Bo=a(ze,"CODE",{class:!0});var vk=e(Bo);ll=l(vk,"chrome-extension://__MSG_@@extension_id__/"),vk.forEach(o),rl=l(ze," for the URL"),ze.forEach(o),hk.forEach(o),il=c(Be),zo=a(Be,"DIV",{class:!0});var Kv=e(zo);Kv.forEach(o),Be.forEach(o),_e=c(i),x=a(i,"SECTION",{});var g=e(x);pa=a(g,"H3",{});var yk=e(pa);js=a(yk,"A",{href:!0,id:!0});var dk=e(js);pl=l(dk,"Make it look alive"),dk.forEach(o),yk.forEach(o),cl=c(g),ca=a(g,"P",{});var uk=e(ca);kl=l(uk,"A static image will look fake."),uk.forEach(o),hl=c(g),Bs=a(g,"P",{});var $e=e(Bs);vl=l($e,"As the quote says, "),ka=a($e,"STRONG",{});var xk=e(ka);yl=l(xk,'"eyes is the window to the soul"'),xk.forEach(o),dl=l($e,", to make the pet look real, we need to make the eye blink."),$e.forEach(o),ul=c(g),ha=a(g,"P",{});var fk=e(ha);va=a(fk,"EM",{});var mk=e(va);xl=l(mk,"(That's how you judge a person is dead or alive in movies right? Dead body will just stare blankly to nowhere)"),mk.forEach(o),fk.forEach(o),fl=c(g),zs=a(g,"P",{});var Xe=e(zs);ml=l(Xe,"To make the pet blink, I found some "),$s=a(Xe,"A",{href:!0,rel:!0});var _k=e($s);_l=l(_k,"useful tutorials"),_k.forEach(o),wl=l(Xe," on how to create CSS sprite sheet animations."),Xe.forEach(o),gl=c(g),ya=a(g,"P",{});var wk=e(ya);as=a(wk,"SPAN",{style:!0});var gk=e(as);$o=a(gk,"PICTURE",{});var uc=e($o);da=a(uc,"SOURCE",{type:!0,srcset:!0}),A=a(uc,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0,title:!0}),uc.forEach(o),gk.forEach(o),wk.forEach(o),bl=c(g),Xo=a(g,"DIV",{class:!0});var Yv=e(Xo);Yv.forEach(o),El=c(g),Xs=a(g,"P",{});var Fe=e(Xs);Il=l(Fe,"To animate it, I added the "),Fo=a(Fe,"CODE",{class:!0});var bk=e(Fo);Sl=l(bk,"rest"),bk.forEach(o),Tl=l(Fe," class to the pet, and removed it when it's done animating."),Fe.forEach(o),Cl=c(g),Qo=a(g,"DIV",{class:!0});var Zv=e(Qo);Zv.forEach(o),Pl=c(g),ua=a(g,"P",{});var Ek=e(ua);ql=l(Ek,"At the beginning, I thought I would add more other micro expressions to the pet, so I wrote a scheduler, to schedule expressions randomly:"),Ek.forEach(o),Dl=c(g),Wo=a(g,"DIV",{class:!0});var sy=e(Wo);sy.forEach(o),Al=c(g),Fs=a(g,"P",{});var Qe=e(Fs);Ol=l(Qe,"I used "),Jo=a(Qe,"CODE",{class:!0});var Ik=e(Jo);Hl=l(Ik,"await"),Ik.forEach(o),Ml=l(Qe," to wait for animation to finish, before schedule the next action again, so that it will not have 2 actions running in parallel."),Qe.forEach(o),g.forEach(o),we=c(i),u=a(i,"SECTION",{});var m=e(u);xa=a(m,"H3",{});var Sk=e(xa);Qs=a(Sk,"A",{href:!0,id:!0});var Tk=e(Qs);Ll=l(Tk,"Avoid the cursor"),Tk.forEach(o),Sk.forEach(o),Nl=c(m),fa=a(m,"P",{});var Ck=e(fa);Vl=l(Ck,"I drew a sprite sheet that make the pet looks like it is squiggling away,"),Ck.forEach(o),Rl=c(m),ma=a(m,"P",{});var Pk=e(ma);es=a(Pk,"SPAN",{style:!0});var qk=e(es);R=a(qk,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),qk.forEach(o),Pk.forEach(o),Gl=c(m),Ws=a(m,"P",{});var We=e(Ws);Ul=l(We,"while at the same time set the "),Ko=a(We,"CODE",{class:!0});var Dk=e(Ko);jl=l(Dk,"transform: translateX()"),Dk.forEach(o),Bl=l(We," to actually move it:"),We.forEach(o),zl=c(m),Yo=a(m,"DIV",{class:!0});var oy=e(Yo);oy.forEach(o),$l=c(m),_a=a(m,"P",{});var Ak=e(_a);Xl=l(Ak,"In JavaScript, I tried to keep the position state inside an object:"),Ak.forEach(o),Fl=c(m),Zo=a(m,"DIV",{class:!0});var ty=e(Zo);ty.forEach(o),Ql=c(m),wa=a(m,"P",{});var Ok=e(wa);Wl=l(Ok,"So, to shift away from the cursor would be:"),Ok.forEach(o),Jl=c(m),st=a(m,"DIV",{class:!0});var ay=e(st);ay.forEach(o),Kl=c(m),O=a(m,"P",{});var W=e(O);Yl=l(W,"So, when the animation ends, the "),ot=a(W,"CODE",{class:!0});var Hk=e(ot);Zl=l(Hk,"transform: translateX()"),Hk.forEach(o),sr=l(W," will go from "),tt=a(W,"CODE",{class:!0});var Mk=e(tt);or=l(Mk,"-30px"),Mk.forEach(o),tr=l(W," back to "),at=a(W,"CODE",{class:!0});var Lk=e(at);ar=l(Lk,"0"),Lk.forEach(o),er=l(W,", and at the same time, I moved the position of the pet "),et=a(W,"CODE",{class:!0});var Nk=e(et);nr=l(Nk,"-30px"),Nk.forEach(o),lr=l(W," in x-axis."),W.forEach(o),rr=c(m),Js=a(m,"P",{});var Je=e(Js);ir=l(Je,"To know when the cursor is on top of the pet, I used "),nt=a(Je,"CODE",{class:!0});var Vk=e(nt);pr=l(Vk,"mousemove"),Vk.forEach(o),cr=l(Je," event:"),Je.forEach(o),kr=c(m),lt=a(m,"DIV",{class:!0});var ey=e(lt);ey.forEach(o),hr=c(m),Ks=a(m,"P",{});var Ke=e(Ks);vr=l(Ke,"To avoid reanimate while still animate, I added a "),rt=a(Ke,"CODE",{class:!0});var Rk=e(rt);yr=l(Rk,"animating"),Rk.forEach(o),dr=l(Ke," flag, as an mutex."),Ke.forEach(o),ur=c(m),ga=a(m,"P",{});var Gk=e(ga);xr=l(Gk,"Besides, it would be weird to see the pet shifting pass through the browser window, because that way, you would never be able to interact with it anymore \u{1F622}"),Gk.forEach(o),m.forEach(o),ge=c(i),v=a(i,"SECTION",{});var d=e(v);ba=a(d,"H3",{});var Uk=e(ba);Ys=a(Uk,"A",{href:!0,id:!0});var jk=e(Ys);fr=l(jk,"Eating the characters"),jk.forEach(o),Uk.forEach(o),mr=c(d),ns=a(d,"P",{});var zt=e(ns);_r=l(zt,"To know when someone is typing into any of the input box, I attach an "),it=a(zt,"CODE",{class:!0});var Bk=e(it);wr=l(Bk,"input"),Bk.forEach(o),gr=l(zt," event listener on to the "),pt=a(zt,"CODE",{class:!0});var zk=e(pt);br=l(zk,"document.body"),zk.forEach(o),Er=l(zt,":"),zt.forEach(o),Ir=c(d),ct=a(d,"DIV",{class:!0});var ny=e(ct);ny.forEach(o),Sr=c(d),ls=a(d,"P",{});var $t=e(ls);Tr=l($t,"There maybe multiple "),kt=a($t,"CODE",{class:!0});var $k=e(kt);Cr=l($k,"<input />"),$k.forEach(o),Pr=l($t," on the page, so I created a debounce function for each "),ht=a($t,"CODE",{class:!0});var Xk=e(ht);qr=l(Xk,"<input />"),Xk.forEach(o),Dr=l($t,"."),$t.forEach(o),Ar=c(d),Ea=a(d,"P",{});var Fk=e(Ea);Or=l(Fk,"To make the eating simple, I will always eat from the left, consuming characters from left to right:"),Fk.forEach(o),Hr=c(d),vt=a(d,"DIV",{class:!0});var ly=e(vt);ly.forEach(o),Mr=c(d),Ia=a(d,"P",{});var Qk=e(Ia);Lr=l(Qk,`However naively eating the characters this way, will screw up your cursor position / selection.
So I googled and pasted the code snippet to improve it:`),Qk.forEach(o),Nr=c(d),yt=a(d,"DIV",{class:!0});var ry=e(yt);ry.forEach(o),Vr=c(d),Sa=a(d,"P",{});var Wk=e(Sa);Rr=l(Wk,'After able to "eat" the characters, I need to animate the pet eating the characters'),Wk.forEach(o),Gr=c(d),Ta=a(d,"P",{});var Jk=e(Ta);rs=a(Jk,"SPAN",{style:!0});var Kk=e(rs);dt=a(Kk,"PICTURE",{});var xc=e(dt);Ca=a(xc,"SOURCE",{type:!0,srcset:!0}),H=a(xc,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0,title:!0}),xc.forEach(o),Kk.forEach(o),Jk.forEach(o),Ur=c(d),$=a(d,"P",{});var Es=e($);jr=l(Es,"To align the eating with the removing of a character, I split the animation into 2 parts, "),Pa=a(Es,"STRONG",{});var Yk=e(Pa);Br=l(Yk,"the eating"),Yk.forEach(o),zr=l(Es," and "),qa=a(Es,"STRONG",{});var Zk=e(qa);$r=l(Zk,"the chewing"),Zk.forEach(o),Xr=c(Es),Da=a(Es,"EM",{});var sh=e(Da);Fr=l(sh,"(I named it digesting during the hackathon)"),sh.forEach(o),Qr=l(Es,"."),Es.forEach(o),Wr=c(d),ut=a(d,"DIV",{class:!0});var iy=e(ut);iy.forEach(o),Jr=c(d),Aa=a(d,"P",{});var oh=e(Aa);Kr=l(oh,"To make it more realistic, I tried to make the pet tilt forward, while consuming the character:"),oh.forEach(o),Yr=c(d),xt=a(d,"DIV",{class:!0});var py=e(xt);py.forEach(o),Zr=c(d),Oa=a(d,"P",{});var th=e(Oa);si=l(th,"The pixel values had been tuned to make the movement subtle, yet natural."),th.forEach(o),oi=c(d),Ha=a(d,"P",{});var ah=e(Ha);ti=l(ah,"Now, how do I place my pet to the left of the input?"),ah.forEach(o),ai=c(d),Zs=a(d,"P",{});var Ye=e(Zs);ei=l(Ye,"Instead of squiggle to the right position, I made the pet "),Ma=a(Ye,"STRONG",{});var eh=e(Ma);ni=l(eh,"teleport"),eh.forEach(o),li=l(Ye,"!"),Ye.forEach(o),ri=c(d),ft=a(d,"DIV",{class:!0});var cy=e(ft);cy.forEach(o),ii=c(d),so=a(d,"P",{});var Ze=e(so);pi=l(Ze,"To calculate the teleport destination, I used "),oo=a(Ze,"A",{href:!0,rel:!0});var nh=e(oo);ci=l(nh,"getBoundingClientRect()"),nh.forEach(o),ki=l(Ze,":"),Ze.forEach(o),hi=c(d),mt=a(d,"DIV",{class:!0});var ky=e(mt);ky.forEach(o),vi=c(d),La=a(d,"P",{});var lh=e(La);yi=l(lh,"The padding of the input is important. It brings the pet closer to the character it is going to eat. \u{1F924}"),lh.forEach(o),d.forEach(o),be=c(i),f=a(i,"SECTION",{});var b=e(f);Na=a(b,"H3",{});var rh=e(Na);to=a(rh,"A",{href:!0,id:!0});var ih=e(to);di=l(ih,"Annihilate the buttons"),ih.forEach(o),rh.forEach(o),ui=c(b),Va=a(b,"P",{});var ph=e(Va);xi=l(ph,"Pet don't like buttons because buttons take away your concentration from your pet."),ph.forEach(o),fi=c(b),Ra=a(b,"P",{});var ch=e(Ra);is=a(ch,"SPAN",{style:!0});var kh=e(is);_t=a(kh,"PICTURE",{});var fc=e(_t);Ga=a(fc,"SOURCE",{type:!0,srcset:!0}),G=a(fc,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),fc.forEach(o),kh.forEach(o),ch.forEach(o),mi=c(b),ao=a(b,"P",{});var sn=e(ao);_i=l(sn,"To get a list of buttons, I use "),eo=a(sn,"A",{href:!0,rel:!0});var hh=e(eo);wi=l(hh,"document.querySelectorAll()"),hh.forEach(o),gi=l(sn,":"),sn.forEach(o),bi=c(b),wt=a(b,"DIV",{class:!0});var hy=e(wt);hy.forEach(o),Ei=c(b),Ua=a(b,"P",{});var vh=e(Ua);Ii=l(vh,"To annihilate the buttons, I animated the pet with a pair of dead red eyes, and shake it for 400 milli-seconds, before annihilating the elements into vapor:"),vh.forEach(o),Si=c(b),gt=a(b,"DIV",{class:!0});var vy=e(gt);vy.forEach(o),Ti=c(b),ps=a(b,"P",{});var Xt=e(ps);Ci=l(Xt,"I used "),bt=a(Xt,"CODE",{class:!0});var yh=e(bt);Pi=l(yh,"visibility: hidden"),yh.forEach(o),qi=l(Xt,", so that I dont disrupt the DOM structure, yet making it disappear and unclickable, unlike "),Et=a(Xt,"CODE",{class:!0});var dh=e(Et);Di=l(dh,"opacity: none"),dh.forEach(o),Ai=l(Xt,"."),Xt.forEach(o),Oi=c(b),ja=a(b,"P",{});var uh=e(ja);Hi=l(uh,"The pet with hatred is slightly bigger and agitated than the normal pet:"),uh.forEach(o),Mi=c(b),It=a(b,"DIV",{class:!0});var yy=e(It);yy.forEach(o),Li=c(b),no=a(b,"P",{});var on=e(no);Ni=l(on,"To turn the button annihilated into vapor, I used "),St=a(on,"CODE",{class:!0});var xh=e(St);Vi=l(xh,"filter: blur()"),xh.forEach(o),Ri=l(on,":"),on.forEach(o),Gi=c(b),Tt=a(b,"DIV",{class:!0});var dy=e(Tt);dy.forEach(o),b.forEach(o),Ee=c(i),Ct=a(i,"SECTION",{});var fh=e(Ct);Ba=a(fh,"H2",{});var mh=e(Ba);lo=a(mh,"A",{href:!0,id:!0});var _h=e(lo);Ui=l(_h,"Difficulties"),_h.forEach(o),mh.forEach(o),fh.forEach(o),Ie=c(i),F=a(i,"SECTION",{});var Ft=e(F);za=a(Ft,"H3",{});var wh=e(za);ro=a(wh,"A",{href:!0,id:!0});var gh=e(ro);ji=l(gh,"Synchronising interactions"),gh.forEach(o),wh.forEach(o),Bi=c(Ft),cs=a(Ft,"P",{});var Qt=e(cs);zi=l(Qt,"A lot edge cases has been found and fixed by using the "),Pt=a(Qt,"CODE",{class:!0});var bh=e(Pt);$i=l(bh,"animating"),bh.forEach(o),Xi=l(Qt,", or "),qt=a(Qt,"CODE",{class:!0});var Eh=e(qt);Fi=l(Eh,"eating"),Eh.forEach(o),Qi=l(Qt," flag:"),Qt.forEach(o),Wi=c(Ft),io=a(Ft,"UL",{});var tn=e(io);$a=a(tn,"LI",{});var Ih=e($a);Ji=l(Ih,"where to avoid cursor, while eating the characters"),Ih.forEach(o),Ki=c(tn),Xa=a(tn,"LI",{});var Sh=e(Xa);Yi=l(Sh,`to annihilate or to eat?
There's an heuristic to choose which one to do, when both get scheduled at the same time.`),Sh.forEach(o),tn.forEach(o),Ft.forEach(o),Se=c(i),P=a(i,"SECTION",{});var J=e(P);Fa=a(J,"H3",{});var Th=e(Fa);po=a(Th,"A",{href:!0,id:!0});var Ch=e(po);Zi=l(Ch,"Developing locally"),Ch.forEach(o),Th.forEach(o),sp=c(J),co=a(J,"P",{});var an=e(co);op=l(an,"Everytime when the content script is updated, I need to click refresh in the "),Dt=a(an,"CODE",{class:!0});var Ph=e(Dt);tp=l(Ph,"chrome://extensions"),Ph.forEach(o),ap=l(an," page:"),an.forEach(o),ep=c(J),Qa=a(J,"P",{});var qh=e(Qa);ks=a(qh,"SPAN",{style:!0});var Dh=e(ks);At=a(Dh,"PICTURE",{});var mc=e(At);Wa=a(mc,"SOURCE",{type:!0,srcset:!0}),U=a(mc,"IMG",{src:!0,srcset:!0,loading:!0,style:!0,alt:!0}),mc.forEach(o),Dh.forEach(o),qh.forEach(o),np=c(J),Ja=a(J,"P",{});var Ah=e(Ja);lp=l(Ah,"In order to developed faster, I created a simple HTML, and test it locally."),Ah.forEach(o),rp=c(J),Ot=a(J,"DIV",{class:!0});var uy=e(Ot);uy.forEach(o),J.forEach(o),Te=c(i),I=a(i,"SECTION",{});var q=e(I);Ka=a(q,"H4",{});var Oh=e(Ka);ko=a(Oh,"A",{href:!0,id:!0});var Hh=e(ko);ip=l(Hh,"PostCSS script"),Hh.forEach(o),Oh.forEach(o),pp=c(q),ho=a(q,"P",{});var en=e(ho);cp=l(en,"Remember I mentioned that, for resource to be accessible from the Chrome Extension, I would have to prepend the url with "),Ht=a(en,"CODE",{class:!0});var Mh=e(Ht);kp=l(Mh,"chrome-extension://__MSG_@@extension_id__/"),Mh.forEach(o),hp=l(en,"?"),en.forEach(o),vp=c(q),vo=a(q,"P",{});var nn=e(vo);yp=l(nn,"But that does not work if I developed in standalone HTML, because I can't access the assets from "),Mt=a(nn,"CODE",{class:!0});var Lh=e(Mt);dp=l(Lh,"chrome-extension://"),Lh.forEach(o),up=l(nn," protocol in my localhost."),nn.forEach(o),xp=c(q),hs=a(q,"P",{});var Wt=e(hs);fp=l(Wt,"I would have to write "),Lt=a(Wt,"CODE",{class:!0});var Nh=e(Lt);mp=l(Nh,"/images/rest.png"),Nh.forEach(o),_p=l(Wt,", and replaced it to "),Nt=a(Wt,"CODE",{class:!0});var Vh=e(Nt);wp=l(Vh,"chrome-extension://__MSG_@@extension_id__/images/rest.png"),Vh.forEach(o),gp=l(Wt," when I test it on my extension."),Wt.forEach(o),bp=c(q),yo=a(q,"P",{});var ln=e(yo);Ep=l(ln,"So, I wrote a simple script with "),uo=a(ln,"A",{href:!0,rel:!0});var Rh=e(uo);Ip=l(Rh,"PostCSS"),Rh.forEach(o),Sp=l(ln," to automatically do it:"),ln.forEach(o),Tp=c(q),Vt=a(q,"DIV",{class:!0});var xy=e(Vt);xy.forEach(o),Cp=c(q),vs=a(q,"P",{});var Jt=e(vs);Pp=l(Jt,"I used "),Rt=a(Jt,"CODE",{class:!0});var Gh=e(Rt);qp=l(Gh,"content.css"),Gh.forEach(o),Dp=l(Jt," for my local development, and automatically built "),Gt=a(Jt,"CODE",{class:!0});var Uh=e(Gt);Ap=l(Uh,"content-ext.css"),Uh.forEach(o),Op=l(Jt," for the extension with all the URL replaced."),Jt.forEach(o),q.forEach(o),Ce=c(i),j=a(i,"SECTION",{});var Is=e(j);Ya=a(Is,"H2",{});var jh=e(Ya);xo=a(jh,"A",{href:!0,id:!0});var Bh=e(xo);Hp=l(Bh,"Demo"),Bh.forEach(o),jh.forEach(o),Mp=c(Is),fo=a(Is,"P",{});var rn=e(fo);Lp=l(rn,"I did a super quick demo, which went quite well, "),Za=a(rn,"EM",{});var zh=e(Za);Np=l(zh,"I think."),zh.forEach(o),Vp=l(rn," \u{1F914}"),rn.forEach(o),Rp=c(Is),mo=a(Is,"P",{});var pn=e(mo);Gp=l(pn,"For those who are curious, and want to try out, you can visit "),_o=a(pn,"A",{href:!0,rel:!0});var $h=e(_o);Up=l($h,"here for the demo"),$h.forEach(o),jp=l(pn,"."),pn.forEach(o),Bp=c(Is),wo=a(Is,"P",{});var cn=e(wo);zp=l(cn,"For those who are curious about the source code, can visit "),go=a(cn,"A",{href:!0,rel:!0});var Xh=e(go);$p=l(Xh,"the Github repo"),Xh.forEach(o),Xp=l(cn,"."),cn.forEach(o),Is.forEach(o),Pe=c(i),S=a(i,"SECTION",{});var D=e(S);se=a(D,"H2",{});var Fh=e(se);bo=a(Fh,"A",{href:!0,id:!0});var Qh=e(bo);Fp=l(Qh,"Summary"),Qh.forEach(o),Fh.forEach(o),Qp=c(D),oe=a(D,"P",{});var Wh=e(oe);Wp=l(Wh,"It has been a fruitful event."),Wh.forEach(o),Jp=c(D),bs=a(D,"BLOCKQUOTE",{class:!0});var kn=e(bs);Q=a(kn,"P",{lang:!0,dir:!0});var re=e(Q);Kp=l(re,"And "),Ut=a(re,"A",{href:!0});var Jh=e(Ut);Yp=l(Jh,"@lihautan"),Jh.forEach(o),Zp=l(re," wins a bag of tropical fruits "),jt=a(re,"A",{href:!0});var Kh=e(jt);sc=l(Kh,"pic.twitter.com/CtQUBGOI7h"),Kh.forEach(o),re.forEach(o),oc=l(kn,"\u2014 Yishu See (@yishusee) "),Bt=a(kn,"A",{href:!0});var Yh=e(Bt);tc=l(Yh,"December 14, 2019"),Yh.forEach(o),kn.forEach(o),ac=c(D),te=a(D,"P",{});var Zh=e(te);ec=l(Zh,"Appreciate the organisers time and effort to make the Hackathon goes as smoothly as possible."),Zh.forEach(o),nc=c(D),ae=a(D,"P",{});var sv=e(ae);lc=l(sv,"I managed to do something that I never really done before:"),sv.forEach(o),rc=c(D),Eo=a(D,"UL",{});var hn=e(Eo);ee=a(hn,"LI",{});var ov=e(ee);ic=l(ov,"CSS sprite sheet animation"),ov.forEach(o),pc=c(hn),ne=a(hn,"LI",{});var tv=e(ne);cc=l(tv,"Chrome Extension that interacts with the user and manipulates the DOM"),tv.forEach(o),hn.forEach(o),kc=c(D),Io=a(D,"P",{});var vn=e(Io);hc=l(vn,"Hopefully I will partcipate the "),So=a(vn,"A",{href:!0,rel:!0});var av=e(So);vc=l(av,"Super Silly Hackathon"),av.forEach(o),yc=l(vn," again next year."),vn.forEach(o),D.forEach(o),this.h()},h(){r(w,"href","https://supersillyhackathon.sg/"),r(w,"rel","nofollow"),r(Po,"href","https://t.co/lem52qHO6Q"),r(ds,"lang","en"),r(ds,"dir","ltr"),r(qo,"href","https://twitter.com/supersillyhack/status/1205671402432450563?ref_src=twsrc%5Etfw"),r(K,"class","twitter-tweet"),r(Ts,"href","https://github.com/tanhauhau/browser-pet"),r(Ts,"rel","nofollow"),ys(M.src,wc=yv)||r(M,"src",wc),r(M,"srcset",yv+", "+By+" 2x"),r(M,"loading","lazy"),k(M,"position","absolute"),k(M,"top","0"),k(M,"width","100%"),k(M,"height","100%"),r(M,"alt","rest"),k(Y,"display","block"),k(Y,"position","relative"),k(Y,"padding-top","58.357%"),k(Y,"width","100%"),r(Cs,"href","#inspiration"),r(Cs,"id","inspiration"),r(qs,"href","https://github.com/graceavery/tamagotchiTemp"),r(qs,"rel","nofollow"),r(Ds,"href","#what-can-it-do"),r(Ds,"id","what-can-it-do"),r(As,"href","#1-it-runs-away-from-mouse-cursor"),r(As,"id","1-it-runs-away-from-mouse-cursor"),ys(L.src,gc=vv)||r(L,"src",gc),r(L,"srcset",vv+", "+jy+" 2x"),r(L,"loading","lazy"),k(L,"position","absolute"),k(L,"top","0"),k(L,"width","100%"),k(L,"height","100%"),r(L,"alt","evade"),k(Z,"display","block"),k(Z,"position","relative"),k(Z,"padding-top","56.857%"),k(Z,"width","100%"),r(Os,"href","#2-it-eats-whatever-you-try-to-type-into-an-input"),r(Os,"id","2-it-eats-whatever-you-try-to-type-into-an-input"),ys(N.src,bc=hv)||r(N,"src",bc),r(N,"srcset",hv+", "+Uy+" 2x"),r(N,"loading","lazy"),k(N,"position","absolute"),k(N,"top","0"),k(N,"width","100%"),k(N,"height","100%"),r(N,"alt","eat"),k(ss,"display","block"),k(ss,"position","relative"),k(ss,"padding-top","44.929%"),k(ss,"width","100%"),r(Hs,"href","#3-it-annihilates-the-buttons-you-hover-onto"),r(Hs,"id","3-it-annihilates-the-buttons-you-hover-onto"),ys(V.src,Ec=kv)||r(V,"src",Ec),r(V,"srcset",kv+", "+Gy+" 2x"),r(V,"loading","lazy"),k(V,"position","absolute"),k(V,"top","0"),k(V,"width","100%"),k(V,"height","100%"),r(V,"alt","annihilate"),k(os,"display","block"),k(os,"position","relative"),k(os,"padding-top","57.000%"),k(os,"width","100%"),r(Ms,"href","#implementation"),r(Ms,"id","implementation"),r(Ls,"href","#chrome-extension"),r(Ls,"id","chrome-extension"),r(Vs,"href","https://developer.chrome.com/extensions/content_scripts"),r(Vs,"rel","nofollow"),r(Ho,"class","inline"),r(Mo,"class","code-section"),r(Lo,"class","inline"),r(No,"class","code-section"),r(Vo,"class","code-section"),r(Ro,"class","inline"),r(Go,"class","inline"),r(Uo,"class","inline"),r(X,"href","#1-add-web-accessible-resources-into-the-manifest-json"),r(X,"id","1-add-web-accessible-resources-into-the-manifest-json"),r(jo,"class","code-section"),r(Bo,"class","inline"),r(ts,"href","#2-prepend-chrome-extension-msg-extension-id-for-the-url"),r(ts,"id","2-prepend-chrome-extension-msg-extension-id-for-the-url"),r(zo,"class","code-section"),r(js,"href","#make-it-look-alive"),r(js,"id","make-it-look-alive"),r($s,"href","https://blog.teamtreehouse.com/css-sprite-sheet-animations-steps"),r($s,"rel","nofollow"),r(da,"type","image/webp"),r(da,"srcset",Vy+", "+Ny+" 2x"),ys(A.src,Ic=cv)||r(A,"src",Ic),r(A,"srcset",cv+", "+Ry+" 2x"),r(A,"loading","lazy"),k(A,"position","absolute"),k(A,"top","0"),k(A,"width","100%"),k(A,"height","100%"),r(A,"alt","spritesheet for resting"),r(A,"title","Sprite Sheet for Resting"),k(as,"display","block"),k(as,"position","relative"),k(as,"padding-top","33.333%"),k(as,"width","100%"),r(Xo,"class","code-section"),r(Fo,"class","inline"),r(Qo,"class","code-section"),r(Wo,"class","code-section"),r(Jo,"class","inline"),r(Qs,"href","#avoid-the-cursor"),r(Qs,"id","avoid-the-cursor"),ys(R.src,Sc=pv)||r(R,"src",Sc),r(R,"srcset",pv+", "+Ly+" 2x"),r(R,"loading","lazy"),k(R,"position","absolute"),k(R,"top","0"),k(R,"width","100%"),k(R,"height","100%"),r(R,"alt","shift"),k(es,"display","block"),k(es,"position","relative"),k(es,"padding-top","84.643%"),k(es,"width","100%"),r(Ko,"class","inline"),r(Yo,"class","code-section"),r(Zo,"class","code-section"),r(st,"class","code-section"),r(ot,"class","inline"),r(tt,"class","inline"),r(at,"class","inline"),r(et,"class","inline"),r(nt,"class","inline"),r(lt,"class","code-section"),r(rt,"class","inline"),r(Ys,"href","#eating-the-characters"),r(Ys,"id","eating-the-characters"),r(it,"class","inline"),r(pt,"class","inline"),r(ct,"class","code-section"),r(kt,"class","inline"),r(ht,"class","inline"),r(vt,"class","code-section"),r(yt,"class","code-section"),r(Ca,"type","image/webp"),r(Ca,"srcset",Hy+", "+Oy+" 2x"),ys(H.src,Tc=iv)||r(H,"src",Tc),r(H,"srcset",iv+", "+My+" 2x"),r(H,"loading","lazy"),k(H,"position","absolute"),k(H,"top","0"),k(H,"width","100%"),k(H,"height","100%"),r(H,"alt","spritesheet for eating"),r(H,"title","Sprite Sheet for Eating"),k(rs,"display","block"),k(rs,"position","relative"),k(rs,"padding-top","12.500%"),k(rs,"width","100%"),r(ut,"class","code-section"),r(xt,"class","code-section"),r(ft,"class","code-section"),r(oo,"href","https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect"),r(oo,"rel","nofollow"),r(mt,"class","code-section"),r(to,"href","#annihilate-the-buttons"),r(to,"id","annihilate-the-buttons"),r(Ga,"type","image/webp"),r(Ga,"srcset",Dy+", "+qy+" 2x"),ys(G.src,Cc=rv)||r(G,"src",Cc),r(G,"srcset",rv+", "+Ay+" 2x"),r(G,"loading","lazy"),k(G,"position","absolute"),k(G,"top","0"),k(G,"width","100%"),k(G,"height","100%"),r(G,"alt","Eys full of hatred"),k(is,"display","block"),k(is,"position","relative"),k(is,"padding-top","100.000%"),k(is,"width","100%"),r(eo,"href","https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll"),r(eo,"rel","nofollow"),r(wt,"class","code-section"),r(gt,"class","code-section"),r(bt,"class","inline"),r(Et,"class","inline"),r(It,"class","code-section"),r(St,"class","inline"),r(Tt,"class","code-section"),r(lo,"href","#difficulties"),r(lo,"id","difficulties"),r(ro,"href","#synchronising-interactions"),r(ro,"id","synchronising-interactions"),r(Pt,"class","inline"),r(qt,"class","inline"),r(po,"href","#developing-locally"),r(po,"id","developing-locally"),r(Dt,"class","inline"),r(Wa,"type","image/webp"),r(Wa,"srcset",Cy+", "+Ty+" 2x"),ys(U.src,Pc=lv)||r(U,"src",Pc),r(U,"srcset",lv+", "+Py+" 2x"),r(U,"loading","lazy"),k(U,"position","absolute"),k(U,"top","0"),k(U,"width","100%"),k(U,"height","100%"),r(U,"alt","click refresh"),k(ks,"display","block"),k(ks,"position","relative"),k(ks,"padding-top","53.571%"),k(ks,"width","100%"),r(Ot,"class","code-section"),r(ko,"href","#postcss-script"),r(ko,"id","postcss-script"),r(Ht,"class","inline"),r(Mt,"class","inline"),r(Lt,"class","inline"),r(Nt,"class","inline"),r(uo,"href","https://postcss.org/"),r(uo,"rel","nofollow"),r(Vt,"class","code-section"),r(Rt,"class","inline"),r(Gt,"class","inline"),r(xo,"href","#demo"),r(xo,"id","demo"),r(_o,"href","https://lihautan.com/browser-pet/"),r(_o,"rel","nofollow"),r(go,"href","https://github.com/tanhauhau/browser-pet"),r(go,"rel","nofollow"),r(bo,"href","#summary"),r(bo,"id","summary"),r(Ut,"href","https://twitter.com/lihautan?ref_src=twsrc%5Etfw"),r(jt,"href","https://t.co/CtQUBGOI7h"),r(Q,"lang","en"),r(Q,"dir","ltr"),r(Bt,"href","https://twitter.com/yishusee/status/1205828141194727430?ref_src=twsrc%5Etfw"),r(bs,"class","twitter-tweet"),r(So,"href","https://twitter.com/supersillyhack"),r(So,"rel","nofollow")},m(i,h){fv(_,i,h),y(i,B,h),y(i,C,h),s(C,Ss),s(C,w),s(w,z),s(C,Co),y(i,ie,h),y(i,K,h),s(K,ds),s(ds,yn),s(ds,Po),s(Po,dn),s(K,un),s(K,qo),s(qo,xn),y(i,pe,h),y(i,us,h),s(us,fn),s(us,Ts),s(Ts,mn),s(us,_n),y(i,ce,h),y(i,Do,h),s(Do,Y),s(Y,M),y(i,ke,h),y(i,xs,h),s(xs,Kt),s(Kt,Cs),s(Cs,wn),s(xs,gn),s(xs,Ps),s(Ps,bn),s(Ps,qs),s(qs,En),s(Ps,In),y(i,he,h),y(i,Ao,h),s(Ao,Yt),s(Yt,Ds),s(Ds,Sn),y(i,ve,h),y(i,fs,h),s(fs,Zt),s(Zt,As),s(As,Tn),s(fs,Cn),s(fs,sa),s(sa,Z),s(Z,L),y(i,ye,h),y(i,ms,h),s(ms,oa),s(oa,Os),s(Os,Pn),s(ms,qn),s(ms,ta),s(ta,ss),s(ss,N),y(i,de,h),y(i,_s,h),s(_s,aa),s(aa,Hs),s(Hs,Dn),s(_s,An),s(_s,ea),s(ea,os),s(os,V),y(i,ue,h),y(i,Oo,h),s(Oo,na),s(na,Ms),s(Ms,On),y(i,xe,h),y(i,E,h),s(E,la),s(la,Ls),s(Ls,Hn),s(E,Mn),s(E,Ns),s(Ns,Ln),s(Ns,Vs),s(Vs,Nn),s(Ns,Vn),s(E,Rn),s(E,Rs),s(Rs,Gn),s(Rs,Ho),s(Ho,Un),s(Rs,jn),s(E,Bn),s(E,Mo),Mo.innerHTML=gv,s(E,zn),s(E,Gs),s(Gs,$n),s(Gs,Lo),s(Lo,Xn),s(Gs,Fn),s(E,Qn),s(E,No),No.innerHTML=bv,s(E,Wn),s(E,Vo),Vo.innerHTML=Ev,s(E,Jn),s(E,Us),s(Us,Kn),s(Us,Ro),s(Ro,Yn),s(Us,Zn),y(i,fe,h),y(i,ws,h),s(ws,ra),s(ra,X),s(X,sl),s(X,Go),s(Go,ol),s(X,tl),s(X,Uo),s(Uo,al),s(ws,el),s(ws,jo),jo.innerHTML=Iv,y(i,me,h),y(i,gs,h),s(gs,ia),s(ia,ts),s(ts,nl),s(ts,Bo),s(Bo,ll),s(ts,rl),s(gs,il),s(gs,zo),zo.innerHTML=Sv,y(i,_e,h),y(i,x,h),s(x,pa),s(pa,js),s(js,pl),s(x,cl),s(x,ca),s(ca,kl),s(x,hl),s(x,Bs),s(Bs,vl),s(Bs,ka),s(ka,yl),s(Bs,dl),s(x,ul),s(x,ha),s(ha,va),s(va,xl),s(x,fl),s(x,zs),s(zs,ml),s(zs,$s),s($s,_l),s(zs,wl),s(x,gl),s(x,ya),s(ya,as),s(as,$o),s($o,da),s($o,A),s(x,bl),s(x,Xo),Xo.innerHTML=Tv,s(x,El),s(x,Xs),s(Xs,Il),s(Xs,Fo),s(Fo,Sl),s(Xs,Tl),s(x,Cl),s(x,Qo),Qo.innerHTML=Cv,s(x,Pl),s(x,ua),s(ua,ql),s(x,Dl),s(x,Wo),Wo.innerHTML=Pv,s(x,Al),s(x,Fs),s(Fs,Ol),s(Fs,Jo),s(Jo,Hl),s(Fs,Ml),y(i,we,h),y(i,u,h),s(u,xa),s(xa,Qs),s(Qs,Ll),s(u,Nl),s(u,fa),s(fa,Vl),s(u,Rl),s(u,ma),s(ma,es),s(es,R),s(u,Gl),s(u,Ws),s(Ws,Ul),s(Ws,Ko),s(Ko,jl),s(Ws,Bl),s(u,zl),s(u,Yo),Yo.innerHTML=qv,s(u,$l),s(u,_a),s(_a,Xl),s(u,Fl),s(u,Zo),Zo.innerHTML=Dv,s(u,Ql),s(u,wa),s(wa,Wl),s(u,Jl),s(u,st),st.innerHTML=Av,s(u,Kl),s(u,O),s(O,Yl),s(O,ot),s(ot,Zl),s(O,sr),s(O,tt),s(tt,or),s(O,tr),s(O,at),s(at,ar),s(O,er),s(O,et),s(et,nr),s(O,lr),s(u,rr),s(u,Js),s(Js,ir),s(Js,nt),s(nt,pr),s(Js,cr),s(u,kr),s(u,lt),lt.innerHTML=Ov,s(u,hr),s(u,Ks),s(Ks,vr),s(Ks,rt),s(rt,yr),s(Ks,dr),s(u,ur),s(u,ga),s(ga,xr),y(i,ge,h),y(i,v,h),s(v,ba),s(ba,Ys),s(Ys,fr),s(v,mr),s(v,ns),s(ns,_r),s(ns,it),s(it,wr),s(ns,gr),s(ns,pt),s(pt,br),s(ns,Er),s(v,Ir),s(v,ct),ct.innerHTML=Hv,s(v,Sr),s(v,ls),s(ls,Tr),s(ls,kt),s(kt,Cr),s(ls,Pr),s(ls,ht),s(ht,qr),s(ls,Dr),s(v,Ar),s(v,Ea),s(Ea,Or),s(v,Hr),s(v,vt),vt.innerHTML=Mv,s(v,Mr),s(v,Ia),s(Ia,Lr),s(v,Nr),s(v,yt),yt.innerHTML=Lv,s(v,Vr),s(v,Sa),s(Sa,Rr),s(v,Gr),s(v,Ta),s(Ta,rs),s(rs,dt),s(dt,Ca),s(dt,H),s(v,Ur),s(v,$),s($,jr),s($,Pa),s(Pa,Br),s($,zr),s($,qa),s(qa,$r),s($,Xr),s($,Da),s(Da,Fr),s($,Qr),s(v,Wr),s(v,ut),ut.innerHTML=Nv,s(v,Jr),s(v,Aa),s(Aa,Kr),s(v,Yr),s(v,xt),xt.innerHTML=Vv,s(v,Zr),s(v,Oa),s(Oa,si),s(v,oi),s(v,Ha),s(Ha,ti),s(v,ai),s(v,Zs),s(Zs,ei),s(Zs,Ma),s(Ma,ni),s(Zs,li),s(v,ri),s(v,ft),ft.innerHTML=Rv,s(v,ii),s(v,so),s(so,pi),s(so,oo),s(oo,ci),s(so,ki),s(v,hi),s(v,mt),mt.innerHTML=Gv,s(v,vi),s(v,La),s(La,yi),y(i,be,h),y(i,f,h),s(f,Na),s(Na,to),s(to,di),s(f,ui),s(f,Va),s(Va,xi),s(f,fi),s(f,Ra),s(Ra,is),s(is,_t),s(_t,Ga),s(_t,G),s(f,mi),s(f,ao),s(ao,_i),s(ao,eo),s(eo,wi),s(ao,gi),s(f,bi),s(f,wt),wt.innerHTML=Uv,s(f,Ei),s(f,Ua),s(Ua,Ii),s(f,Si),s(f,gt),gt.innerHTML=jv,s(f,Ti),s(f,ps),s(ps,Ci),s(ps,bt),s(bt,Pi),s(ps,qi),s(ps,Et),s(Et,Di),s(ps,Ai),s(f,Oi),s(f,ja),s(ja,Hi),s(f,Mi),s(f,It),It.innerHTML=Bv,s(f,Li),s(f,no),s(no,Ni),s(no,St),s(St,Vi),s(no,Ri),s(f,Gi),s(f,Tt),Tt.innerHTML=zv,y(i,Ee,h),y(i,Ct,h),s(Ct,Ba),s(Ba,lo),s(lo,Ui),y(i,Ie,h),y(i,F,h),s(F,za),s(za,ro),s(ro,ji),s(F,Bi),s(F,cs),s(cs,zi),s(cs,Pt),s(Pt,$i),s(cs,Xi),s(cs,qt),s(qt,Fi),s(cs,Qi),s(F,Wi),s(F,io),s(io,$a),s($a,Ji),s(io,Ki),s(io,Xa),s(Xa,Yi),y(i,Se,h),y(i,P,h),s(P,Fa),s(Fa,po),s(po,Zi),s(P,sp),s(P,co),s(co,op),s(co,Dt),s(Dt,tp),s(co,ap),s(P,ep),s(P,Qa),s(Qa,ks),s(ks,At),s(At,Wa),s(At,U),s(P,np),s(P,Ja),s(Ja,lp),s(P,rp),s(P,Ot),Ot.innerHTML=$v,y(i,Te,h),y(i,I,h),s(I,Ka),s(Ka,ko),s(ko,ip),s(I,pp),s(I,ho),s(ho,cp),s(ho,Ht),s(Ht,kp),s(ho,hp),s(I,vp),s(I,vo),s(vo,yp),s(vo,Mt),s(Mt,dp),s(vo,up),s(I,xp),s(I,hs),s(hs,fp),s(hs,Lt),s(Lt,mp),s(hs,_p),s(hs,Nt),s(Nt,wp),s(hs,gp),s(I,bp),s(I,yo),s(yo,Ep),s(yo,uo),s(uo,Ip),s(yo,Sp),s(I,Tp),s(I,Vt),Vt.innerHTML=Xv,s(I,Cp),s(I,vs),s(vs,Pp),s(vs,Rt),s(Rt,qp),s(vs,Dp),s(vs,Gt),s(Gt,Ap),s(vs,Op),y(i,Ce,h),y(i,j,h),s(j,Ya),s(Ya,xo),s(xo,Hp),s(j,Mp),s(j,fo),s(fo,Lp),s(fo,Za),s(Za,Np),s(fo,Vp),s(j,Rp),s(j,mo),s(mo,Gp),s(mo,_o),s(_o,Up),s(mo,jp),s(j,Bp),s(j,wo),s(wo,zp),s(wo,go),s(go,$p),s(wo,Xp),y(i,Pe,h),y(i,S,h),s(S,se),s(se,bo),s(bo,Fp),s(S,Qp),s(S,oe),s(oe,Wp),s(S,Jp),s(S,bs),s(bs,Q),s(Q,Kp),s(Q,Ut),s(Ut,Yp),s(Q,Zp),s(Q,jt),s(jt,sc),s(bs,oc),s(bs,Bt),s(Bt,tc),s(S,ac),s(S,te),s(te,ec),s(S,nc),s(S,ae),s(ae,lc),s(S,rc),s(S,Eo),s(Eo,ee),s(ee,ic),s(Eo,pc),s(Eo,ne),s(ne,cc),s(S,kc),s(S,Io),s(Io,hc),s(Io,So),s(So,vc),s(Io,yc),qe=!0},p:by,i(i){qe||(mv(_.$$.fragment,i),qe=!0)},o(i){_v(_.$$.fragment,i),qe=!1},d(i){wv(_,i),i&&o(B),i&&o(C),i&&o(ie),i&&o(K),i&&o(pe),i&&o(us),i&&o(ce),i&&o(Do),i&&o(ke),i&&o(xs),i&&o(he),i&&o(Ao),i&&o(ve),i&&o(fs),i&&o(ye),i&&o(ms),i&&o(de),i&&o(_s),i&&o(ue),i&&o(Oo),i&&o(xe),i&&o(E),i&&o(fe),i&&o(ws),i&&o(me),i&&o(gs),i&&o(_e),i&&o(x),i&&o(we),i&&o(u),i&&o(ge),i&&o(v),i&&o(be),i&&o(f),i&&o(Ee),i&&o(Ct),i&&o(Ie),i&&o(F),i&&o(Se),i&&o(P),i&&o(Te),i&&o(I),i&&o(Ce),i&&o(j),i&&o(Pe),i&&o(S)}}}function $y(To){let _,B;const C=[To[0],dv];let Ss={$$slots:{default:[zy]},$$scope:{ctx:To}};for(let w=0;w<C.length;w+=1)Ss=_c(Ss,C[w]);return _=new Ey({props:Ss}),{c(){uv(_.$$.fragment)},l(w){xv(_.$$.fragment,w)},m(w,z){fv(_,w,z),B=!0},p(w,[z]){const Co=z&1?wy(C,[z&1&&ev(w[0]),z&0&&ev(dv)]):{};z&2&&(Co.$$scope={dirty:z,ctx:w}),_.$set(Co)},i(w){B||(mv(_.$$.fragment,w),B=!0)},o(w){_v(_.$$.fragment,w),B=!1},d(w){wv(_,w)}}}const dv={title:"Super Silly Hackathon 2019",date:"2019-12-14T08:00:00Z",lastUpdated:"2019-12-15T15:19:00Z",description:"A quick walkthrough on how I created my pet in the browser for the Super Silly Hackathon 2019.",tags:["JavaScript","hackathon"],series:"Hackathon Projects",label:"blog"};function Xy(To,_,B){return gy("blog",{image:Sy}),To.$$set=C=>{B(0,_=_c(_c({},_),nv(C)))},_=nv(_),[_]}class sd extends fy{constructor(_){super();my(this,_,Xy,$y,_y,{})}}export{sd as default,dv as metadata};
