import{S as Yv,i as Zv,s as sy,C as yc,w as Jh,x as Kh,y as Yh,z as oy,A as Bh,q as Zh,o as sv,B as ov,r as ty,R as zh,k as p,e as t,t as e,m as c,c as a,a as n,h as l,d as o,b as r,Q as W,g as v,F as s,O as ay}from"../../chunks/vendor-6bf294e3.js";import{B as ny}from"../../chunks/BlogLayout-152f599b.js";import{T as ey}from"../../chunks/TableOfContent-1b9e4572.js";import{_ as ly}from"../../chunks/twitter-card-image-a57df29d.js";import"../../chunks/stores-e20b7872.js";import"../../chunks/WebMentions-745413ea.js";/* empty css                                */var ry="/_app/assets/refresh-e4c3db8e.webp",$h="/_app/assets/refresh-1fef66a8.png",iy="/_app/assets/hate-7cdd16bc.webp",Xh="/_app/assets/hate-1ca7c6ad.png",py="/_app/assets/eat-sprite-4786f77b.webp",Fh="/_app/assets/eat-sprite-8b5fd122.png",cy="/_app/assets/shift-left-8ec24bd2.gif",ky="/_app/assets/rest-sprite-1308274b.webp",Qh="/_app/assets/rest-sprite-81836e69.png",hy="/_app/assets/annihilate-06f9fae6.gif",vy="/_app/assets/eat-3f80164a.gif",yy="/_app/assets/evade-b00633db.gif",dy="/_app/assets/rest-f9f39938.gif";function uy(_o){let m,H,T,ps,w,A,go,tn,N,J,he,Eo,ve,ye,bo,de,an,K,ue,cs,xe,fe,nn,Io,ks,dc,en,Y,Nt,hs,me,we,vs,_e,ys,ge,Ee,ln,So,jt,ds,be,rn,Z,Bt,us,Ie,Se,zt,xs,uc,pn,ss,$t,fs,Te,Ce,Xt,ms,xc,cn,os,Ft,ws,Pe,qe,Qt,_s,fc,kn,To,Wt,gs,Oe,hn,E,Jt,Es,De,He,bs,Ae,Is,Me,Le,Re,Ss,Ve,Co,Ue,Ge,Ne,Po,tv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;manifest_version&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;name&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;Super Silly Hackathon&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;description&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;Super Silly Hackathon&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;version&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;1.0.0&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;content_scripts&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> [</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">&quot;matches&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&quot;&lt;all_urls&gt;&quot;</span><span style="color: var(--shiki-color-text)">]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">&quot;js&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&quot;content.js&quot;</span><span style="color: var(--shiki-color-text)">]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">&quot;css&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&quot;content-ext.css&quot;</span><span style="color: var(--shiki-color-text)">]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">&quot;run_at&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;document_start&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">&quot;all_frames&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  ]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,je,Ts,Be,qo,ze,$e,Xe,Oo,av=`<div class="filename">content.js</div><pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">onload</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">document</span><span style="color: var(--shiki-token-function)">.createElement</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;div&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">updatePosition</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">100</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">100</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">classList</span><span style="color: var(--shiki-token-function)">.add</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;ssh-pet&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">document</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">body</span><span style="color: var(--shiki-token-function)">.appendChild</span><span style="color: var(--shiki-color-text)">(pet);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">window</span><span style="color: var(--shiki-token-function)">.addEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;load&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> onload);</span></span></code></pre>`,Fe,Do,nv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">/* filename: content.css */</span></span>
<span class="line"><span style="color: var(--shiki-token-function)">.ssh-pet</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">height</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">30</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">width</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">30</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fixed</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">z-index</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1000</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-image</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">url</span><span style="color: var(--shiki-token-constant)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;/images/rest.png&#39;</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-size</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">30</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)"> 30</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-position</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0 0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Qe,Cs,We,Ho,Je,Ke,vn,ts,Kt,L,Ye,Ao,Ze,sl,Mo,ol,tl,Lo,ev=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// ...</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;web_accessible_resources&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> [</span><span style="color: var(--shiki-token-string-expression)">&quot;images/*&quot;</span><span style="color: var(--shiki-color-text)">]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,yn,as,Yt,j,al,Ro,nl,el,ll,Vo,lv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-function)">.ssh-pet</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">/* ... */</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-image</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">url</span><span style="color: var(--shiki-token-constant)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;chrome-extension://__MSG_@@extension_id__/images/rest.png&#39;</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,dn,u,Zt,Ps,rl,il,sa,pl,cl,qs,kl,oa,hl,vl,yl,ta,aa,dl,ul,Os,xl,Ds,fl,ml,wl,na,Hs,ea,la,ns,mc,_l,Uo,rv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">@keyframes</span><span style="color: var(--shiki-color-text)"> ssh-pet-rest &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  0% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">background-position-x</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  100% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">background-position-x</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">-90</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-function)">.ssh-pet.rest</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-image</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">url</span><span style="color: var(--shiki-token-constant)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;chrome-extension://__MSG_@@extension_id__/images/rest-sprite.png&#39;</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-repeat</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">repeat-x</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-size</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">90</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)"> 30</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-position</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0 0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">animation</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ssh-pet-rest 0.2</span><span style="color: var(--shiki-token-keyword)">s</span><span style="color: var(--shiki-token-constant)"> </span><span style="color: var(--shiki-token-function)">steps</span><span style="color: var(--shiki-token-constant)">(3)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,gl,As,El,Go,bl,Il,Sl,No,iv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">classList</span><span style="color: var(--shiki-token-function)">.add</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;rest&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// when the animation finished, remove the class</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">onanimationend</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.removeEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;animationend&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> onanimationend);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">classList</span><span style="color: var(--shiki-token-function)">.remove</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;rest&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;;</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.addEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;animationend&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> onanimationend);</span></span></code></pre>`,Tl,ra,Cl,Pl,jo,pv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">doSomething</span><span style="color: var(--shiki-color-text)">(random) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">switch</span><span style="color: var(--shiki-color-text)"> (random) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">case</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">:</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// ...</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">default</span><span style="color: var(--shiki-color-text)">:</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateRest</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">scheduleSomething</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">setTimeout</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">choices</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">10</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-comment)">// cheat to do Math.floor</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">random</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">~~</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.random</span><span style="color: var(--shiki-color-text)">() </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> choices);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">doSomething</span><span style="color: var(--shiki-color-text)">(random);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-function)">scheduleSomething</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">800</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.random</span><span style="color: var(--shiki-color-text)">() </span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1000</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// make animation promise based</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateRest</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;rest&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(cls) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">Promise</span><span style="color: var(--shiki-color-text)">(resolve </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">classList</span><span style="color: var(--shiki-token-function)">.add</span><span style="color: var(--shiki-color-text)">(cls);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">onanimationend</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.removeEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;animationend&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> onanimationend);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">classList</span><span style="color: var(--shiki-token-function)">.remove</span><span style="color: var(--shiki-color-text)">(cls);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &#125;;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.addEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;animationend&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> onanimationend);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,ql,Ms,Ol,Bo,Dl,Hl,un,d,ia,Ls,Al,Ml,pa,Ll,Rl,ca,Rs,wc,Vl,Vs,Ul,zo,Gl,Nl,jl,$o,cv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line dim"><span style="color: var(--shiki-token-keyword)">@keyframes</span><span style="color: var(--shiki-color-text)"> ssh-pet-shift-left &#123;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  0% &#123;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">background-position-x</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(0)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  100% &#123;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">background-position-x</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">-240</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(-30</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line dim"></span>
<span class="line dim"><span style="color: var(--shiki-token-function)">.ssh-pet.shift-left</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-image</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">url</span><span style="color: var(--shiki-token-constant)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;/images/shift-left-sprite.png&#39;</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-repeat</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">repeat-x</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-size</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">240</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)"> 30</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">background-position</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0 0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">animation</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">ssh-pet-shift-left 0.8</span><span style="color: var(--shiki-token-keyword)">s</span><span style="color: var(--shiki-token-constant)"> </span><span style="color: var(--shiki-token-function)">steps</span><span style="color: var(--shiki-token-constant)">(8)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Bl,ka,zl,$l,Xo,kv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> &#123; x</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> y; </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> &#125;;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">offsetPosition</span><span style="color: var(--shiki-color-text)">(x</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> y) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">updatePosition</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-color-text)">.x </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> x</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-color-text)">.y </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> y);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">updatePosition</span><span style="color: var(--shiki-color-text)">(x</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> y) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">style</span><span style="color: var(--shiki-color-text)">.left </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-color-text)">.x </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> x) </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;px&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">style</span><span style="color: var(--shiki-color-text)">.top </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-color-text)">.y </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> y) </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;px&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Xl,ha,Fl,Ql,Fo,hv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateShiftLeft</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#96;shift-left&#96;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">offsetPosition</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-token-constant)">30</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Wl,O,Jl,Qo,Kl,Yl,Wo,Zl,sr,Jo,or,tr,Ko,ar,nr,er,Us,lr,Yo,rr,ir,pr,Zo,vv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.addEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;mousemove&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> event </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-keyword)">!</span><span style="color: var(--shiki-color-text)">animating) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    animating </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">shiftAway</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    animating </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// edge avoidance shifting</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">shiftAway</span><span style="color: var(--shiki-color-text)">() &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-color-text)">.x </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">40</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateShiftRight</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">position</span><span style="color: var(--shiki-color-text)">.x </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">window</span><span style="color: var(--shiki-color-text)">.innerWidth </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">40</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateShiftLeft</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.random</span><span style="color: var(--shiki-color-text)">() </span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.5</span><span style="color: var(--shiki-color-text)">) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateShiftLeft</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125; </span><span style="color: var(--shiki-token-keyword)">else</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateShiftRight</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,cr,Gs,kr,st,hr,vr,yr,va,dr,xn,h,ya,Ns,ur,xr,B,fr,ot,mr,wr,tt,_r,gr,Er,at,yv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-constant)">document</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">body</span><span style="color: var(--shiki-token-function)">.addEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;input&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> event </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">debounceByElement</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">event</span><span style="color: var(--shiki-color-text)">.target</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> eatInputValue</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1000</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;);</span></span></code></pre>`,br,z,Ir,nt,Sr,Tr,et,Cr,Pr,qr,da,Or,Dr,lt,dv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">eatInputValue</span><span style="color: var(--shiki-color-text)">(elem) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.value </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">value</span><span style="color: var(--shiki-token-function)">.slice</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">debounceByElement</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">event</span><span style="color: var(--shiki-color-text)">.target</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> eatInputValue</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1000</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Hr,ua,Ar,Mr,rt,uv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line dim"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">eatInputValue</span><span style="color: var(--shiki-color-text)">(elem) &#123;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// remember selection position</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">start</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.selectionStart</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">end</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.selectionEnd;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.value </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">value</span><span style="color: var(--shiki-token-function)">.slice</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// restore selection position</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-token-function)">.setSelectionRange</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.max</span><span style="color: var(--shiki-color-text)">(start </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.max</span><span style="color: var(--shiki-color-text)">(end </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">));</span></span>
<span class="line dim"></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">debounceByElement</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">event</span><span style="color: var(--shiki-color-text)">.target</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> eatInputValue</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1000</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Lr,xa,Rr,Vr,fa,js,ma,wa,es,_c,Ur,M,Gr,_a,Nr,jr,ga,Br,zr,Ea,$r,Xr,Fr,it,xv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line dim"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">eatInputValue</span><span style="color: var(--shiki-color-text)">(elem) &#123;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;eat&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line dim"></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">start</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.selectionStart</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">end</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.selectionEnd;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.value </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">value</span><span style="color: var(--shiki-token-function)">.slice</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-token-function)">.setSelectionRange</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.max</span><span style="color: var(--shiki-color-text)">(start </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">Math</span><span style="color: var(--shiki-token-function)">.max</span><span style="color: var(--shiki-color-text)">(end </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">));</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;digest&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line dim"></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">debounceByElement</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">event</span><span style="color: var(--shiki-color-text)">.target</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> eatInputValue</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1000</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Qr,ba,Wr,Jr,pt,fv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">@keyframes</span><span style="color: var(--shiki-color-text)"> ssh-pet-eat-move &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  0%,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  30% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(0)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  50% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(4</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  100% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(0)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Kr,Ia,Yr,Zr,Sa,si,oi,Bs,ti,Ta,ai,ni,ei,ct,mv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateTeleport</span><span style="color: var(--shiki-color-text)">(x</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> y) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;disappear&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">style</span><span style="color: var(--shiki-color-text)">.opacity </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">updatePosition</span><span style="color: var(--shiki-color-text)">(x</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> y);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">style</span><span style="color: var(--shiki-color-text)">.opacity </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">100</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;reappear&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,li,zs,ri,$s,ii,pi,ci,kt,wv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">leftSideOf</span><span style="color: var(--shiki-color-text)">(elem) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> &#123; </span><span style="color: var(--shiki-token-constant)">x</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">y</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">height</span><span style="color: var(--shiki-color-text)"> &#125; </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-token-function)">.getBoundingClientRect</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">to_x</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> x </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">size</span><span style="color: var(--shiki-color-text)">.width </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">paddingLeft</span><span style="color: var(--shiki-color-text)">(elem);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">to_y</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> y </span><span style="color: var(--shiki-token-keyword)">+</span><span style="color: var(--shiki-color-text)"> height </span><span style="color: var(--shiki-token-keyword)">/</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">-</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">size</span><span style="color: var(--shiki-color-text)">.height </span><span style="color: var(--shiki-token-keyword)">/</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> [to_x</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> to_y];</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">paddingLeft</span><span style="color: var(--shiki-color-text)">(elem) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> (</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">Number</span><span style="color: var(--shiki-color-text)">(</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      window</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-function)">.getComputedStyle</span><span style="color: var(--shiki-color-text)">(elem)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-function)">.getPropertyValue</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;padding-left&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-function)">.replace</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">/px</span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-token-string-expression)">r</span><span style="color: var(--shiki-token-keyword)">?</span><span style="color: var(--shiki-token-string-expression)">em/</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    ) </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  );</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,ki,Ca,hi,fn,x,Pa,Xs,vi,yi,qa,di,ui,Oa,Fs,Da,Ha,Qs,gc,xi,Ws,fi,Js,mi,wi,_i,ht,_v=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">buttons</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">document</span><span style="color: var(--shiki-token-function)">.querySelectorAll</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;button, input[type=&quot;submit&quot;], [role=&quot;button&quot;]&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">buttons</span><span style="color: var(--shiki-token-function)">.forEach</span><span style="color: var(--shiki-color-text)">(button </span><span style="color: var(--shiki-token-keyword)">=&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">button</span><span style="color: var(--shiki-token-function)">.addEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;mousemove&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> mouseMove)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">);</span></span></code></pre>`,gi,Aa,Ei,bi,vt,gv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">removeTheElement</span><span style="color: var(--shiki-color-text)">(elem) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> (animating) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">  animating </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">classList</span><span style="color: var(--shiki-token-function)">.add</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;hate&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">timeout</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">400</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-token-function)">.removeEventListener</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;mousemove&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> mouseMove);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">animateClass</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;item-disappearing&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> elem);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">elem</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">style</span><span style="color: var(--shiki-color-text)">.visibility </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;hidden&#39;</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">pet</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">classList</span><span style="color: var(--shiki-token-function)">.remove</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;hate&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  animating </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">false</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Ii,$,Si,yt,Ti,Ci,dt,Pi,qi,Oi,Ma,Di,Hi,ut,Ev=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">@keyframes</span><span style="color: var(--shiki-color-text)"> hating &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  0% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">scale</span><span style="color: var(--shiki-token-constant)">(1.1) </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(-2</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  50% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">scale</span><span style="color: var(--shiki-token-constant)">(1.1) </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(2</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  100% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">scale</span><span style="color: var(--shiki-token-constant)">(1.1) </span><span style="color: var(--shiki-token-function)">translateX</span><span style="color: var(--shiki-token-constant)">(-2</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Ai,Ks,Mi,xt,Li,Ri,Vi,ft,bv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">@keyframes</span><span style="color: var(--shiki-color-text)"> item-disappearing &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  0% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">filter</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">blur</span><span style="color: var(--shiki-token-constant)">(0</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  80% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">opacity</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">1</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  100% &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">filter</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">blur</span><span style="color: var(--shiki-token-constant)">(8</span><span style="color: var(--shiki-token-keyword)">px</span><span style="color: var(--shiki-token-constant)">)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">transform</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">scale</span><span style="color: var(--shiki-token-constant)">(1.5)</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">opacity</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,mn,mt,La,Ys,Ui,wn,R,Ra,Zs,Gi,Ni,X,ji,wt,Bi,zi,_t,$i,Xi,Fi,so,Va,Qi,Wi,Ua,Ji,_n,C,Ga,oo,Ki,Yi,to,Zi,gt,sp,op,tp,Na,ao,ja,Ba,no,Ec,ap,za,np,ep,Et,Iv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">html</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">link</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">rel</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;stylesheet&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">type</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;text/css&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">href</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;content.css&quot;</span><span style="color: var(--shiki-color-text)"> /&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;</span><span style="color: var(--shiki-token-string-expression)">body</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">script</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">src</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;content.js&quot;</span><span style="color: var(--shiki-color-text)">&gt;&lt;/</span><span style="color: var(--shiki-token-string-expression)">script</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &lt;/</span><span style="color: var(--shiki-token-string-expression)">body</span><span style="color: var(--shiki-color-text)">&gt;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">html</span><span style="color: var(--shiki-color-text)">&gt;</span></span></code></pre>`,gn,b,$a,eo,lp,rp,lo,ip,bt,pp,cp,kp,ro,hp,It,vp,yp,dp,F,up,St,xp,fp,Tt,mp,wp,_p,io,gp,po,Ep,bp,Ip,Ct,Sv=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;fs&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">path</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;path&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">postcss</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;postcss&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">input</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">path</span><span style="color: var(--shiki-token-function)">.join</span><span style="color: var(--shiki-color-text)">(__dirname</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;../content.css&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">output</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">path</span><span style="color: var(--shiki-token-function)">.join</span><span style="color: var(--shiki-color-text)">(__dirname</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;../content-ext.css&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// watch when file change</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.watchFile</span><span style="color: var(--shiki-color-text)">(input</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">css</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.readFileSync</span><span style="color: var(--shiki-color-text)">(input</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;utf-8&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// NOTE: &#96;from: undefined&#96; to stop PostCSS complain about sourcemap</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">postcss</span><span style="color: var(--shiki-color-text)">([replaceUrl])</span><span style="color: var(--shiki-token-function)">.process</span><span style="color: var(--shiki-color-text)">(css</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> &#123; from</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">undefined</span><span style="color: var(--shiki-color-text)"> &#125;)</span><span style="color: var(--shiki-token-function)">.then</span><span style="color: var(--shiki-color-text)">((result) </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">fs</span><span style="color: var(--shiki-token-function)">.writeFileSync</span><span style="color: var(--shiki-color-text)">(output</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">result</span><span style="color: var(--shiki-color-text)">.css</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;utf-8&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;);</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">replaceUrl</span><span style="color: var(--shiki-color-text)">(root) &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">root</span><span style="color: var(--shiki-token-function)">.walkDecls</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;background-image&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> decl </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-constant)">decl</span><span style="color: var(--shiki-color-text)">.value </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">decl</span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-token-constant)">value</span><span style="color: var(--shiki-token-function)">.replace</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">/url(&#39;(.</span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-token-string-expression)">)&#39;)/</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;url(&#39;chrome-extension://__MSG_@@extension_id__$1&#39;)&quot;</span><span style="color: var(--shiki-color-text)">);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  &#125;);</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Sp,Q,Tp,Pt,Cp,Pp,qt,qp,Op,En,D,Xa,co,Dp,Hp,ko,Ap,Fa,Mp,Lp,Rp,ho,Vp,vo,Up,Gp,Np,yo,jp,uo,Bp,zp,bn,I,Qa,xo,$p,Xp,Wa,Fp,Qp,ls,V,Wp,Ot,Jp,Kp,Dt,Yp,Zp,Ht,sc,oc,Ja,tc,ac,Ka,nc,ec,fo,Ya,lc,rc,Za,ic,pc,mo,cc,wo,kc,hc,In;return m=new ey({props:{data:[{link:"inspiration",title:"Inspiration?"},{link:"what-can-it-do",title:"What can it do?",nested:[{link:"it-runs-away-from-mouse-cursor",title:"1. It runs away from mouse cursor"},{link:"it-eats-whatever-you-try-to-type-into-an-input",title:"2. It eats whatever you try to type into an input"},{link:"it-annihilates-the-buttons-you-hover-onto",title:"3. It annihilates the buttons you hover onto"}]},{link:"implementation",title:"Implementation",nested:[{link:"chrome-extension",title:"Chrome Extension",nested:[{link:"add-web-accessible-resources-into-the-manifest-json",title:"1. Add  `web_accessible_resources`  into the  `manifest.json`"},{link:"prepend-chrome-extension-msg-extension-id-for-the-url",title:"2. Prepend  `chrome-extension://__MSG_@@extension_id__/`  for the URL"}]},{link:"make-it-look-alive",title:"Make it look alive"},{link:"avoid-the-cursor",title:"Avoid the cursor"},{link:"eating-the-characters",title:"Eating the characters"},{link:"annihilate-the-buttons",title:"Annihilate the buttons"}]},{link:"difficulties",title:"Difficulties",nested:[{link:"synchronising-interactions",title:"Synchronising interactions"},{link:"developing-locally",title:"Developing locally",nested:[{link:"postcss-script",title:"PostCSS script"}]}]},{link:"demo",title:"Demo"},{link:"summary",title:"Summary"}]}}),{c(){Jh(m.$$.fragment),H=p(),T=t("p"),ps=e("I just came back from the "),w=t("a"),A=e("Super Silly Hackathon 2019"),go=e(". It was my second time to participate in this Super Silly Hackathon."),tn=p(),N=t("blockquote"),J=t("p"),he=e("Hello everybody we are ready for this year, are you?? "),Eo=t("a"),ve=e("pic.twitter.com/lem52qHO6Q"),ye=e("\u2014 Super Silly Hackathon \u2014 14 Dec 2019 (@supersillyhack) "),bo=t("a"),de=e("December 14, 2019"),an=p(),K=t("p"),ue=e("This year, my silly hackathon idea is to build "),cs=t("a"),xe=e("a little pet in the browser"),fe=e("!"),nn=p(),Io=t("p"),ks=t("img"),en=p(),Y=t("section"),Nt=t("h2"),hs=t("a"),me=e("Inspiration?"),we=p(),vs=t("p"),_e=e("I saw the "),ys=t("a"),ge=e("tamagotchi"),Ee=e(" on touchbar a while ago, I don't have a touchbar, but I have a browser. So why not create a pet in the browser through Chrome Extension?"),ln=p(),So=t("section"),jt=t("h2"),ds=t("a"),be=e("What can it do?"),rn=p(),Z=t("section"),Bt=t("h3"),us=t("a"),Ie=e("1. It runs away from mouse cursor"),Se=p(),zt=t("p"),xs=t("img"),pn=p(),ss=t("section"),$t=t("h3"),fs=t("a"),Te=e("2. It eats whatever you try to type into an input"),Ce=p(),Xt=t("p"),ms=t("img"),cn=p(),os=t("section"),Ft=t("h3"),ws=t("a"),Pe=e("3. It annihilates the buttons you hover onto"),qe=p(),Qt=t("p"),_s=t("img"),kn=p(),To=t("section"),Wt=t("h2"),gs=t("a"),Oe=e("Implementation"),hn=p(),E=t("section"),Jt=t("h3"),Es=t("a"),De=e("Chrome Extension"),He=p(),bs=t("p"),Ae=e("Firstly, it is a Chrome Extension. I used "),Is=t("a"),Me=e("Content Scripts"),Le=e(", so that I have access to the DOM of the pages I am visiting."),Re=p(),Ss=t("p"),Ve=e("Here is my "),Co=t("code"),Ue=e("manifest.json"),Ge=e(" for my extension:"),Ne=p(),Po=t("div"),je=p(),Ts=t("p"),Be=e("To start, I added an "),qo=t("code"),ze=e("onload"),$e=e(" event, to add my pet into the browser:"),Xe=p(),Oo=t("div"),Fe=p(),Do=t("div"),Qe=p(),Cs=t("p"),We=e("The first problem I encountered, is that I couldn't access the "),Ho=t("code"),Je=e("/images/rest.png"),Ke=e(". After some googling, I need to:"),vn=p(),ts=t("section"),Kt=t("h4"),L=t("a"),Ye=e("1. Add "),Ao=t("code"),Ze=e("web_accessible_resources"),sl=e(" into the "),Mo=t("code"),ol=e("manifest.json"),tl=p(),Lo=t("div"),yn=p(),as=t("section"),Yt=t("h4"),j=t("a"),al=e("2. Prepend "),Ro=t("code"),nl=e("chrome-extension://__MSG_@@extension_id__/"),el=e(" for the URL"),ll=p(),Vo=t("div"),dn=p(),u=t("section"),Zt=t("h3"),Ps=t("a"),rl=e("Make it look alive"),il=p(),sa=t("p"),pl=e("A static image will look fake."),cl=p(),qs=t("p"),kl=e("As the quote says, "),oa=t("strong"),hl=e('"eyes is the window to the soul"'),vl=e(", to make the pet look real, we need to make the eye blink."),yl=p(),ta=t("p"),aa=t("em"),dl=e("(That's how you judge a person is dead or alive in movies right? Dead body will just stare blankly to nowhere)"),ul=p(),Os=t("p"),xl=e("To make the pet blink, I found some "),Ds=t("a"),fl=e("useful tutorials"),ml=e(" on how to create CSS sprite sheet animations."),wl=p(),na=t("p"),Hs=t("picture"),ea=t("source"),la=t("source"),ns=t("img"),_l=p(),Uo=t("div"),gl=p(),As=t("p"),El=e("To animate it, I added the "),Go=t("code"),bl=e("rest"),Il=e(" class to the pet, and removed it when it's done animating."),Sl=p(),No=t("div"),Tl=p(),ra=t("p"),Cl=e("At the beginning, I thought I would add more other micro expressions to the pet, so I wrote a scheduler, to schedule expressions randomly:"),Pl=p(),jo=t("div"),ql=p(),Ms=t("p"),Ol=e("I used "),Bo=t("code"),Dl=e("await"),Hl=e(" to wait for animation to finish, before schedule the next action again, so that it will not have 2 actions running in parallel."),un=p(),d=t("section"),ia=t("h3"),Ls=t("a"),Al=e("Avoid the cursor"),Ml=p(),pa=t("p"),Ll=e("I drew a sprite sheet that make the pet looks like it is squiggling away,"),Rl=p(),ca=t("p"),Rs=t("img"),Vl=p(),Vs=t("p"),Ul=e("while at the same time set the "),zo=t("code"),Gl=e("transform: translateX()"),Nl=e(" to actually move it:"),jl=p(),$o=t("div"),Bl=p(),ka=t("p"),zl=e("In JavaScript, I tried to keep the position state inside an object:"),$l=p(),Xo=t("div"),Xl=p(),ha=t("p"),Fl=e("So, to shift away from the cursor would be:"),Ql=p(),Fo=t("div"),Wl=p(),O=t("p"),Jl=e("So, when the animation ends, the "),Qo=t("code"),Kl=e("transform: translateX()"),Yl=e(" will go from "),Wo=t("code"),Zl=e("-30px"),sr=e(" back to "),Jo=t("code"),or=e("0"),tr=e(", and at the same time, I moved the position of the pet "),Ko=t("code"),ar=e("-30px"),nr=e(" in x-axis."),er=p(),Us=t("p"),lr=e("To know when the cursor is on top of the pet, I used "),Yo=t("code"),rr=e("mousemove"),ir=e(" event:"),pr=p(),Zo=t("div"),cr=p(),Gs=t("p"),kr=e("To avoid reanimate while still animate, I added a "),st=t("code"),hr=e("animating"),vr=e(" flag, as an mutex."),yr=p(),va=t("p"),dr=e("Besides, it would be weird to see the pet shifting pass through the browser window, because that way, you would never be able to interact with it anymore \u{1F622}"),xn=p(),h=t("section"),ya=t("h3"),Ns=t("a"),ur=e("Eating the characters"),xr=p(),B=t("p"),fr=e("To know when someone is typing into any of the input box, I attach an "),ot=t("code"),mr=e("input"),wr=e(" event listener on to the "),tt=t("code"),_r=e("document.body"),gr=e(":"),Er=p(),at=t("div"),br=p(),z=t("p"),Ir=e("There maybe multiple "),nt=t("code"),Sr=e("<input />"),Tr=e(" on the page, so I created a debounce function for each "),et=t("code"),Cr=e("<input />"),Pr=e("."),qr=p(),da=t("p"),Or=e("To make the eating simple, I will always eat from the left, consuming characters from left to right:"),Dr=p(),lt=t("div"),Hr=p(),ua=t("p"),Ar=e(`However naively eating the characters this way, will screw up your cursor position / selection.
So I googled and pasted the code snippet to improve it:`),Mr=p(),rt=t("div"),Lr=p(),xa=t("p"),Rr=e('After able to "eat" the characters, I need to animate the pet eating the characters'),Vr=p(),fa=t("p"),js=t("picture"),ma=t("source"),wa=t("source"),es=t("img"),Ur=p(),M=t("p"),Gr=e("To align the eating with the removing of a character, I split the animation into 2 parts, "),_a=t("strong"),Nr=e("the eating"),jr=e(" and "),ga=t("strong"),Br=e("the chewing"),zr=p(),Ea=t("em"),$r=e("(I named it digesting during the hackathon)"),Xr=e("."),Fr=p(),it=t("div"),Qr=p(),ba=t("p"),Wr=e("To make it more realistic, I tried to make the pet tilt forward, while consuming the character:"),Jr=p(),pt=t("div"),Kr=p(),Ia=t("p"),Yr=e("The pixel values had been tuned to make the movement subtle, yet natural."),Zr=p(),Sa=t("p"),si=e("Now, how do I place my pet to the left of the input?"),oi=p(),Bs=t("p"),ti=e("Instead of squiggle to the right position, I made the pet "),Ta=t("strong"),ai=e("teleport"),ni=e("!"),ei=p(),ct=t("div"),li=p(),zs=t("p"),ri=e("To calculate the teleport destination, I used "),$s=t("a"),ii=e("getBoundingClientRect()"),pi=e(":"),ci=p(),kt=t("div"),ki=p(),Ca=t("p"),hi=e("The padding of the input is important. It brings the pet closer to the character it is going to eat. \u{1F924}"),fn=p(),x=t("section"),Pa=t("h3"),Xs=t("a"),vi=e("Annihilate the buttons"),yi=p(),qa=t("p"),di=e("Pet don't like buttons because buttons take away your concentration from your pet."),ui=p(),Oa=t("p"),Fs=t("picture"),Da=t("source"),Ha=t("source"),Qs=t("img"),xi=p(),Ws=t("p"),fi=e("To get a list of buttons, I use "),Js=t("a"),mi=e("document.querySelectorAll()"),wi=e(":"),_i=p(),ht=t("div"),gi=p(),Aa=t("p"),Ei=e("To annihilate the buttons, I animated the pet with a pair of dead red eyes, and shake it for 400 milli-seconds, before annihilating the elements into vapor:"),bi=p(),vt=t("div"),Ii=p(),$=t("p"),Si=e("I used "),yt=t("code"),Ti=e("visibility: hidden"),Ci=e(", so that I dont disrupt the DOM structure, yet making it disappear and unclickable, unlike "),dt=t("code"),Pi=e("opacity: none"),qi=e("."),Oi=p(),Ma=t("p"),Di=e("The pet with hatred is slightly bigger and agitated than the normal pet:"),Hi=p(),ut=t("div"),Ai=p(),Ks=t("p"),Mi=e("To turn the button annihilated into vapor, I used "),xt=t("code"),Li=e("filter: blur()"),Ri=e(":"),Vi=p(),ft=t("div"),mn=p(),mt=t("section"),La=t("h2"),Ys=t("a"),Ui=e("Difficulties"),wn=p(),R=t("section"),Ra=t("h3"),Zs=t("a"),Gi=e("Synchronising interactions"),Ni=p(),X=t("p"),ji=e("A lot edge cases has been found and fixed by using the "),wt=t("code"),Bi=e("animating"),zi=e(", or "),_t=t("code"),$i=e("eating"),Xi=e(" flag:"),Fi=p(),so=t("ul"),Va=t("li"),Qi=e("where to avoid cursor, while eating the characters"),Wi=p(),Ua=t("li"),Ji=e(`to annihilate or to eat?
There's an heuristic to choose which one to do, when both get scheduled at the same time.`),_n=p(),C=t("section"),Ga=t("h3"),oo=t("a"),Ki=e("Developing locally"),Yi=p(),to=t("p"),Zi=e("Everytime when the content script is updated, I need to click refresh in the "),gt=t("code"),sp=e("chrome://extensions"),op=e(" page:"),tp=p(),Na=t("p"),ao=t("picture"),ja=t("source"),Ba=t("source"),no=t("img"),ap=p(),za=t("p"),np=e("In order to developed faster, I created a simple HTML, and test it locally."),ep=p(),Et=t("div"),gn=p(),b=t("section"),$a=t("h4"),eo=t("a"),lp=e("PostCSS script"),rp=p(),lo=t("p"),ip=e("Remember I mentioned that, for resource to be accessible from the Chrome Extension, I would have to prepend the url with "),bt=t("code"),pp=e("chrome-extension://__MSG_@@extension_id__/"),cp=e("?"),kp=p(),ro=t("p"),hp=e("But that does not work if I developed in standalone HTML, because I can't access the assets from "),It=t("code"),vp=e("chrome-extension://"),yp=e(" protocol in my localhost."),dp=p(),F=t("p"),up=e("I would have to write "),St=t("code"),xp=e("/images/rest.png"),fp=e(", and replaced it to "),Tt=t("code"),mp=e("chrome-extension://__MSG_@@extension_id__/images/rest.png"),wp=e(" when I test it on my extension."),_p=p(),io=t("p"),gp=e("So, I wrote a simple script with "),po=t("a"),Ep=e("PostCSS"),bp=e(" to automatically do it:"),Ip=p(),Ct=t("div"),Sp=p(),Q=t("p"),Tp=e("I used "),Pt=t("code"),Cp=e("content.css"),Pp=e(" for my local development, and automatically built "),qt=t("code"),qp=e("content-ext.css"),Op=e(" for the extension with all the URL replaced."),En=p(),D=t("section"),Xa=t("h2"),co=t("a"),Dp=e("Demo"),Hp=p(),ko=t("p"),Ap=e("I did a super quick demo, which went quite well, "),Fa=t("em"),Mp=e("I think."),Lp=e(" \u{1F914}"),Rp=p(),ho=t("p"),Vp=e("For those who are curious, and want to try out, you can visit "),vo=t("a"),Up=e("here for the demo"),Gp=e("."),Np=p(),yo=t("p"),jp=e("For those who are curious about the source code, can visit "),uo=t("a"),Bp=e("the Github repo"),zp=e("."),bn=p(),I=t("section"),Qa=t("h2"),xo=t("a"),$p=e("Summary"),Xp=p(),Wa=t("p"),Fp=e("It has been a fruitful event."),Qp=p(),ls=t("blockquote"),V=t("p"),Wp=e("And "),Ot=t("a"),Jp=e("@lihautan"),Kp=e(" wins a bag of tropical fruits "),Dt=t("a"),Yp=e("pic.twitter.com/CtQUBGOI7h"),Zp=e("\u2014 Yishu See (@yishusee) "),Ht=t("a"),sc=e("December 14, 2019"),oc=p(),Ja=t("p"),tc=e("Appreciate the organisers time and effort to make the Hackathon goes as smoothly as possible."),ac=p(),Ka=t("p"),nc=e("I managed to do something that I never really done before:"),ec=p(),fo=t("ul"),Ya=t("li"),lc=e("CSS sprite sheet animation"),rc=p(),Za=t("li"),ic=e("Chrome Extension that interacts with the user and manipulates the DOM"),pc=p(),mo=t("p"),cc=e("Hopefully I will partcipate the "),wo=t("a"),kc=e("Super Silly Hackathon"),hc=e(" again next year."),this.h()},l(i){Kh(m.$$.fragment,i),H=c(i),T=a(i,"P",{});var k=n(T);ps=l(k,"I just came back from the "),w=a(k,"A",{href:!0,rel:!0});var bc=n(w);A=l(bc,"Super Silly Hackathon 2019"),bc.forEach(o),go=l(k,". It was my second time to participate in this Super Silly Hackathon."),k.forEach(o),tn=c(i),N=a(i,"BLOCKQUOTE",{class:!0});var Sn=n(N);J=a(Sn,"P",{lang:!0,dir:!0});var vc=n(J);he=l(vc,"Hello everybody we are ready for this year, are you?? "),Eo=a(vc,"A",{href:!0});var Ic=n(Eo);ve=l(Ic,"pic.twitter.com/lem52qHO6Q"),Ic.forEach(o),vc.forEach(o),ye=l(Sn,"\u2014 Super Silly Hackathon \u2014 14 Dec 2019 (@supersillyhack) "),bo=a(Sn,"A",{href:!0});var Sc=n(bo);de=l(Sc,"December 14, 2019"),Sc.forEach(o),Sn.forEach(o),an=c(i),K=a(i,"P",{});var Tn=n(K);ue=l(Tn,"This year, my silly hackathon idea is to build "),cs=a(Tn,"A",{href:!0,rel:!0});var Tc=n(cs);xe=l(Tc,"a little pet in the browser"),Tc.forEach(o),fe=l(Tn,"!"),Tn.forEach(o),nn=c(i),Io=a(i,"P",{});var Cc=n(Io);ks=a(Cc,"IMG",{src:!0,loading:!0,alt:!0}),Cc.forEach(o),en=c(i),Y=a(i,"SECTION",{});var Cn=n(Y);Nt=a(Cn,"H2",{});var Pc=n(Nt);hs=a(Pc,"A",{href:!0,id:!0});var qc=n(hs);me=l(qc,"Inspiration?"),qc.forEach(o),Pc.forEach(o),we=c(Cn),vs=a(Cn,"P",{});var Pn=n(vs);_e=l(Pn,"I saw the "),ys=a(Pn,"A",{href:!0,rel:!0});var Oc=n(ys);ge=l(Oc,"tamagotchi"),Oc.forEach(o),Ee=l(Pn," on touchbar a while ago, I don't have a touchbar, but I have a browser. So why not create a pet in the browser through Chrome Extension?"),Pn.forEach(o),Cn.forEach(o),ln=c(i),So=a(i,"SECTION",{});var Dc=n(So);jt=a(Dc,"H2",{});var Hc=n(jt);ds=a(Hc,"A",{href:!0,id:!0});var Ac=n(ds);be=l(Ac,"What can it do?"),Ac.forEach(o),Hc.forEach(o),Dc.forEach(o),rn=c(i),Z=a(i,"SECTION",{});var qn=n(Z);Bt=a(qn,"H3",{});var Mc=n(Bt);us=a(Mc,"A",{href:!0,id:!0});var Lc=n(us);Ie=l(Lc,"1. It runs away from mouse cursor"),Lc.forEach(o),Mc.forEach(o),Se=c(qn),zt=a(qn,"P",{});var Rc=n(zt);xs=a(Rc,"IMG",{src:!0,loading:!0,alt:!0}),Rc.forEach(o),qn.forEach(o),pn=c(i),ss=a(i,"SECTION",{});var On=n(ss);$t=a(On,"H3",{});var Vc=n($t);fs=a(Vc,"A",{href:!0,id:!0});var Uc=n(fs);Te=l(Uc,"2. It eats whatever you try to type into an input"),Uc.forEach(o),Vc.forEach(o),Ce=c(On),Xt=a(On,"P",{});var Gc=n(Xt);ms=a(Gc,"IMG",{src:!0,loading:!0,alt:!0}),Gc.forEach(o),On.forEach(o),cn=c(i),os=a(i,"SECTION",{});var Dn=n(os);Ft=a(Dn,"H3",{});var Nc=n(Ft);ws=a(Nc,"A",{href:!0,id:!0});var jc=n(ws);Pe=l(jc,"3. It annihilates the buttons you hover onto"),jc.forEach(o),Nc.forEach(o),qe=c(Dn),Qt=a(Dn,"P",{});var Bc=n(Qt);_s=a(Bc,"IMG",{src:!0,loading:!0,alt:!0}),Bc.forEach(o),Dn.forEach(o),kn=c(i),To=a(i,"SECTION",{});var zc=n(To);Wt=a(zc,"H2",{});var $c=n(Wt);gs=a($c,"A",{href:!0,id:!0});var Xc=n(gs);Oe=l(Xc,"Implementation"),Xc.forEach(o),$c.forEach(o),zc.forEach(o),hn=c(i),E=a(i,"SECTION",{});var S=n(E);Jt=a(S,"H3",{});var Fc=n(Jt);Es=a(Fc,"A",{href:!0,id:!0});var Qc=n(Es);De=l(Qc,"Chrome Extension"),Qc.forEach(o),Fc.forEach(o),He=c(S),bs=a(S,"P",{});var Hn=n(bs);Ae=l(Hn,"Firstly, it is a Chrome Extension. I used "),Is=a(Hn,"A",{href:!0,rel:!0});var Wc=n(Is);Me=l(Wc,"Content Scripts"),Wc.forEach(o),Le=l(Hn,", so that I have access to the DOM of the pages I am visiting."),Hn.forEach(o),Re=c(S),Ss=a(S,"P",{});var An=n(Ss);Ve=l(An,"Here is my "),Co=a(An,"CODE",{class:!0});var Jc=n(Co);Ue=l(Jc,"manifest.json"),Jc.forEach(o),Ge=l(An," for my extension:"),An.forEach(o),Ne=c(S),Po=a(S,"DIV",{class:!0});var Tv=n(Po);Tv.forEach(o),je=c(S),Ts=a(S,"P",{});var Mn=n(Ts);Be=l(Mn,"To start, I added an "),qo=a(Mn,"CODE",{class:!0});var Kc=n(qo);ze=l(Kc,"onload"),Kc.forEach(o),$e=l(Mn," event, to add my pet into the browser:"),Mn.forEach(o),Xe=c(S),Oo=a(S,"DIV",{class:!0});var Cv=n(Oo);Cv.forEach(o),Fe=c(S),Do=a(S,"DIV",{class:!0});var Pv=n(Do);Pv.forEach(o),Qe=c(S),Cs=a(S,"P",{});var Ln=n(Cs);We=l(Ln,"The first problem I encountered, is that I couldn't access the "),Ho=a(Ln,"CODE",{class:!0});var Yc=n(Ho);Je=l(Yc,"/images/rest.png"),Yc.forEach(o),Ke=l(Ln,". After some googling, I need to:"),Ln.forEach(o),S.forEach(o),vn=c(i),ts=a(i,"SECTION",{});var Rn=n(ts);Kt=a(Rn,"H4",{});var Zc=n(Kt);L=a(Zc,"A",{href:!0,id:!0});var sn=n(L);Ye=l(sn,"1. Add "),Ao=a(sn,"CODE",{class:!0});var sk=n(Ao);Ze=l(sk,"web_accessible_resources"),sk.forEach(o),sl=l(sn," into the "),Mo=a(sn,"CODE",{class:!0});var ok=n(Mo);ol=l(ok,"manifest.json"),ok.forEach(o),sn.forEach(o),Zc.forEach(o),tl=c(Rn),Lo=a(Rn,"DIV",{class:!0});var qv=n(Lo);qv.forEach(o),Rn.forEach(o),yn=c(i),as=a(i,"SECTION",{});var Vn=n(as);Yt=a(Vn,"H4",{});var tk=n(Yt);j=a(tk,"A",{href:!0,id:!0});var Un=n(j);al=l(Un,"2. Prepend "),Ro=a(Un,"CODE",{class:!0});var ak=n(Ro);nl=l(ak,"chrome-extension://__MSG_@@extension_id__/"),ak.forEach(o),el=l(Un," for the URL"),Un.forEach(o),tk.forEach(o),ll=c(Vn),Vo=a(Vn,"DIV",{class:!0});var Ov=n(Vo);Ov.forEach(o),Vn.forEach(o),dn=c(i),u=a(i,"SECTION",{});var _=n(u);Zt=a(_,"H3",{});var nk=n(Zt);Ps=a(nk,"A",{href:!0,id:!0});var ek=n(Ps);rl=l(ek,"Make it look alive"),ek.forEach(o),nk.forEach(o),il=c(_),sa=a(_,"P",{});var lk=n(sa);pl=l(lk,"A static image will look fake."),lk.forEach(o),cl=c(_),qs=a(_,"P",{});var Gn=n(qs);kl=l(Gn,"As the quote says, "),oa=a(Gn,"STRONG",{});var rk=n(oa);hl=l(rk,'"eyes is the window to the soul"'),rk.forEach(o),vl=l(Gn,", to make the pet look real, we need to make the eye blink."),Gn.forEach(o),yl=c(_),ta=a(_,"P",{});var ik=n(ta);aa=a(ik,"EM",{});var pk=n(aa);dl=l(pk,"(That's how you judge a person is dead or alive in movies right? Dead body will just stare blankly to nowhere)"),pk.forEach(o),ik.forEach(o),ul=c(_),Os=a(_,"P",{});var Nn=n(Os);xl=l(Nn,"To make the pet blink, I found some "),Ds=a(Nn,"A",{href:!0,rel:!0});var ck=n(Ds);fl=l(ck,"useful tutorials"),ck.forEach(o),ml=l(Nn," on how to create CSS sprite sheet animations."),Nn.forEach(o),wl=c(_),na=a(_,"P",{});var kk=n(na);Hs=a(kk,"PICTURE",{});var jn=n(Hs);ea=a(jn,"SOURCE",{type:!0,srcset:!0}),la=a(jn,"SOURCE",{type:!0,srcset:!0}),ns=a(jn,"IMG",{src:!0,loading:!0,alt:!0,title:!0}),jn.forEach(o),kk.forEach(o),_l=c(_),Uo=a(_,"DIV",{class:!0});var Dv=n(Uo);Dv.forEach(o),gl=c(_),As=a(_,"P",{});var Bn=n(As);El=l(Bn,"To animate it, I added the "),Go=a(Bn,"CODE",{class:!0});var hk=n(Go);bl=l(hk,"rest"),hk.forEach(o),Il=l(Bn," class to the pet, and removed it when it's done animating."),Bn.forEach(o),Sl=c(_),No=a(_,"DIV",{class:!0});var Hv=n(No);Hv.forEach(o),Tl=c(_),ra=a(_,"P",{});var vk=n(ra);Cl=l(vk,"At the beginning, I thought I would add more other micro expressions to the pet, so I wrote a scheduler, to schedule expressions randomly:"),vk.forEach(o),Pl=c(_),jo=a(_,"DIV",{class:!0});var Av=n(jo);Av.forEach(o),ql=c(_),Ms=a(_,"P",{});var zn=n(Ms);Ol=l(zn,"I used "),Bo=a(zn,"CODE",{class:!0});var yk=n(Bo);Dl=l(yk,"await"),yk.forEach(o),Hl=l(zn," to wait for animation to finish, before schedule the next action again, so that it will not have 2 actions running in parallel."),zn.forEach(o),_.forEach(o),un=c(i),d=a(i,"SECTION",{});var f=n(d);ia=a(f,"H3",{});var dk=n(ia);Ls=a(dk,"A",{href:!0,id:!0});var uk=n(Ls);Al=l(uk,"Avoid the cursor"),uk.forEach(o),dk.forEach(o),Ml=c(f),pa=a(f,"P",{});var xk=n(pa);Ll=l(xk,"I drew a sprite sheet that make the pet looks like it is squiggling away,"),xk.forEach(o),Rl=c(f),ca=a(f,"P",{});var fk=n(ca);Rs=a(fk,"IMG",{src:!0,loading:!0,alt:!0}),fk.forEach(o),Vl=c(f),Vs=a(f,"P",{});var $n=n(Vs);Ul=l($n,"while at the same time set the "),zo=a($n,"CODE",{class:!0});var mk=n(zo);Gl=l(mk,"transform: translateX()"),mk.forEach(o),Nl=l($n," to actually move it:"),$n.forEach(o),jl=c(f),$o=a(f,"DIV",{class:!0});var Mv=n($o);Mv.forEach(o),Bl=c(f),ka=a(f,"P",{});var wk=n(ka);zl=l(wk,"In JavaScript, I tried to keep the position state inside an object:"),wk.forEach(o),$l=c(f),Xo=a(f,"DIV",{class:!0});var Lv=n(Xo);Lv.forEach(o),Xl=c(f),ha=a(f,"P",{});var _k=n(ha);Fl=l(_k,"So, to shift away from the cursor would be:"),_k.forEach(o),Ql=c(f),Fo=a(f,"DIV",{class:!0});var Rv=n(Fo);Rv.forEach(o),Wl=c(f),O=a(f,"P",{});var U=n(O);Jl=l(U,"So, when the animation ends, the "),Qo=a(U,"CODE",{class:!0});var gk=n(Qo);Kl=l(gk,"transform: translateX()"),gk.forEach(o),Yl=l(U," will go from "),Wo=a(U,"CODE",{class:!0});var Ek=n(Wo);Zl=l(Ek,"-30px"),Ek.forEach(o),sr=l(U," back to "),Jo=a(U,"CODE",{class:!0});var bk=n(Jo);or=l(bk,"0"),bk.forEach(o),tr=l(U,", and at the same time, I moved the position of the pet "),Ko=a(U,"CODE",{class:!0});var Ik=n(Ko);ar=l(Ik,"-30px"),Ik.forEach(o),nr=l(U," in x-axis."),U.forEach(o),er=c(f),Us=a(f,"P",{});var Xn=n(Us);lr=l(Xn,"To know when the cursor is on top of the pet, I used "),Yo=a(Xn,"CODE",{class:!0});var Sk=n(Yo);rr=l(Sk,"mousemove"),Sk.forEach(o),ir=l(Xn," event:"),Xn.forEach(o),pr=c(f),Zo=a(f,"DIV",{class:!0});var Vv=n(Zo);Vv.forEach(o),cr=c(f),Gs=a(f,"P",{});var Fn=n(Gs);kr=l(Fn,"To avoid reanimate while still animate, I added a "),st=a(Fn,"CODE",{class:!0});var Tk=n(st);hr=l(Tk,"animating"),Tk.forEach(o),vr=l(Fn," flag, as an mutex."),Fn.forEach(o),yr=c(f),va=a(f,"P",{});var Ck=n(va);dr=l(Ck,"Besides, it would be weird to see the pet shifting pass through the browser window, because that way, you would never be able to interact with it anymore \u{1F622}"),Ck.forEach(o),f.forEach(o),xn=c(i),h=a(i,"SECTION",{});var y=n(h);ya=a(y,"H3",{});var Pk=n(ya);Ns=a(Pk,"A",{href:!0,id:!0});var qk=n(Ns);ur=l(qk,"Eating the characters"),qk.forEach(o),Pk.forEach(o),xr=c(y),B=a(y,"P",{});var At=n(B);fr=l(At,"To know when someone is typing into any of the input box, I attach an "),ot=a(At,"CODE",{class:!0});var Ok=n(ot);mr=l(Ok,"input"),Ok.forEach(o),wr=l(At," event listener on to the "),tt=a(At,"CODE",{class:!0});var Dk=n(tt);_r=l(Dk,"document.body"),Dk.forEach(o),gr=l(At,":"),At.forEach(o),Er=c(y),at=a(y,"DIV",{class:!0});var Uv=n(at);Uv.forEach(o),br=c(y),z=a(y,"P",{});var Mt=n(z);Ir=l(Mt,"There maybe multiple "),nt=a(Mt,"CODE",{class:!0});var Hk=n(nt);Sr=l(Hk,"<input />"),Hk.forEach(o),Tr=l(Mt," on the page, so I created a debounce function for each "),et=a(Mt,"CODE",{class:!0});var Ak=n(et);Cr=l(Ak,"<input />"),Ak.forEach(o),Pr=l(Mt,"."),Mt.forEach(o),qr=c(y),da=a(y,"P",{});var Mk=n(da);Or=l(Mk,"To make the eating simple, I will always eat from the left, consuming characters from left to right:"),Mk.forEach(o),Dr=c(y),lt=a(y,"DIV",{class:!0});var Gv=n(lt);Gv.forEach(o),Hr=c(y),ua=a(y,"P",{});var Lk=n(ua);Ar=l(Lk,`However naively eating the characters this way, will screw up your cursor position / selection.
So I googled and pasted the code snippet to improve it:`),Lk.forEach(o),Mr=c(y),rt=a(y,"DIV",{class:!0});var Nv=n(rt);Nv.forEach(o),Lr=c(y),xa=a(y,"P",{});var Rk=n(xa);Rr=l(Rk,'After able to "eat" the characters, I need to animate the pet eating the characters'),Rk.forEach(o),Vr=c(y),fa=a(y,"P",{});var Vk=n(fa);js=a(Vk,"PICTURE",{});var Qn=n(js);ma=a(Qn,"SOURCE",{type:!0,srcset:!0}),wa=a(Qn,"SOURCE",{type:!0,srcset:!0}),es=a(Qn,"IMG",{src:!0,loading:!0,alt:!0,title:!0}),Qn.forEach(o),Vk.forEach(o),Ur=c(y),M=a(y,"P",{});var rs=n(M);Gr=l(rs,"To align the eating with the removing of a character, I split the animation into 2 parts, "),_a=a(rs,"STRONG",{});var Uk=n(_a);Nr=l(Uk,"the eating"),Uk.forEach(o),jr=l(rs," and "),ga=a(rs,"STRONG",{});var Gk=n(ga);Br=l(Gk,"the chewing"),Gk.forEach(o),zr=c(rs),Ea=a(rs,"EM",{});var Nk=n(Ea);$r=l(Nk,"(I named it digesting during the hackathon)"),Nk.forEach(o),Xr=l(rs,"."),rs.forEach(o),Fr=c(y),it=a(y,"DIV",{class:!0});var jv=n(it);jv.forEach(o),Qr=c(y),ba=a(y,"P",{});var jk=n(ba);Wr=l(jk,"To make it more realistic, I tried to make the pet tilt forward, while consuming the character:"),jk.forEach(o),Jr=c(y),pt=a(y,"DIV",{class:!0});var Bv=n(pt);Bv.forEach(o),Kr=c(y),Ia=a(y,"P",{});var Bk=n(Ia);Yr=l(Bk,"The pixel values had been tuned to make the movement subtle, yet natural."),Bk.forEach(o),Zr=c(y),Sa=a(y,"P",{});var zk=n(Sa);si=l(zk,"Now, how do I place my pet to the left of the input?"),zk.forEach(o),oi=c(y),Bs=a(y,"P",{});var Wn=n(Bs);ti=l(Wn,"Instead of squiggle to the right position, I made the pet "),Ta=a(Wn,"STRONG",{});var $k=n(Ta);ai=l($k,"teleport"),$k.forEach(o),ni=l(Wn,"!"),Wn.forEach(o),ei=c(y),ct=a(y,"DIV",{class:!0});var zv=n(ct);zv.forEach(o),li=c(y),zs=a(y,"P",{});var Jn=n(zs);ri=l(Jn,"To calculate the teleport destination, I used "),$s=a(Jn,"A",{href:!0,rel:!0});var Xk=n($s);ii=l(Xk,"getBoundingClientRect()"),Xk.forEach(o),pi=l(Jn,":"),Jn.forEach(o),ci=c(y),kt=a(y,"DIV",{class:!0});var $v=n(kt);$v.forEach(o),ki=c(y),Ca=a(y,"P",{});var Fk=n(Ca);hi=l(Fk,"The padding of the input is important. It brings the pet closer to the character it is going to eat. \u{1F924}"),Fk.forEach(o),y.forEach(o),fn=c(i),x=a(i,"SECTION",{});var g=n(x);Pa=a(g,"H3",{});var Qk=n(Pa);Xs=a(Qk,"A",{href:!0,id:!0});var Wk=n(Xs);vi=l(Wk,"Annihilate the buttons"),Wk.forEach(o),Qk.forEach(o),yi=c(g),qa=a(g,"P",{});var Jk=n(qa);di=l(Jk,"Pet don't like buttons because buttons take away your concentration from your pet."),Jk.forEach(o),ui=c(g),Oa=a(g,"P",{});var Kk=n(Oa);Fs=a(Kk,"PICTURE",{});var Kn=n(Fs);Da=a(Kn,"SOURCE",{type:!0,srcset:!0}),Ha=a(Kn,"SOURCE",{type:!0,srcset:!0}),Qs=a(Kn,"IMG",{src:!0,loading:!0,alt:!0}),Kn.forEach(o),Kk.forEach(o),xi=c(g),Ws=a(g,"P",{});var Yn=n(Ws);fi=l(Yn,"To get a list of buttons, I use "),Js=a(Yn,"A",{href:!0,rel:!0});var Yk=n(Js);mi=l(Yk,"document.querySelectorAll()"),Yk.forEach(o),wi=l(Yn,":"),Yn.forEach(o),_i=c(g),ht=a(g,"DIV",{class:!0});var Xv=n(ht);Xv.forEach(o),gi=c(g),Aa=a(g,"P",{});var Zk=n(Aa);Ei=l(Zk,"To annihilate the buttons, I animated the pet with a pair of dead red eyes, and shake it for 400 milli-seconds, before annihilating the elements into vapor:"),Zk.forEach(o),bi=c(g),vt=a(g,"DIV",{class:!0});var Fv=n(vt);Fv.forEach(o),Ii=c(g),$=a(g,"P",{});var Lt=n($);Si=l(Lt,"I used "),yt=a(Lt,"CODE",{class:!0});var sh=n(yt);Ti=l(sh,"visibility: hidden"),sh.forEach(o),Ci=l(Lt,", so that I dont disrupt the DOM structure, yet making it disappear and unclickable, unlike "),dt=a(Lt,"CODE",{class:!0});var oh=n(dt);Pi=l(oh,"opacity: none"),oh.forEach(o),qi=l(Lt,"."),Lt.forEach(o),Oi=c(g),Ma=a(g,"P",{});var th=n(Ma);Di=l(th,"The pet with hatred is slightly bigger and agitated than the normal pet:"),th.forEach(o),Hi=c(g),ut=a(g,"DIV",{class:!0});var Qv=n(ut);Qv.forEach(o),Ai=c(g),Ks=a(g,"P",{});var Zn=n(Ks);Mi=l(Zn,"To turn the button annihilated into vapor, I used "),xt=a(Zn,"CODE",{class:!0});var ah=n(xt);Li=l(ah,"filter: blur()"),ah.forEach(o),Ri=l(Zn,":"),Zn.forEach(o),Vi=c(g),ft=a(g,"DIV",{class:!0});var Wv=n(ft);Wv.forEach(o),g.forEach(o),mn=c(i),mt=a(i,"SECTION",{});var nh=n(mt);La=a(nh,"H2",{});var eh=n(La);Ys=a(eh,"A",{href:!0,id:!0});var lh=n(Ys);Ui=l(lh,"Difficulties"),lh.forEach(o),eh.forEach(o),nh.forEach(o),wn=c(i),R=a(i,"SECTION",{});var Rt=n(R);Ra=a(Rt,"H3",{});var rh=n(Ra);Zs=a(rh,"A",{href:!0,id:!0});var ih=n(Zs);Gi=l(ih,"Synchronising interactions"),ih.forEach(o),rh.forEach(o),Ni=c(Rt),X=a(Rt,"P",{});var Vt=n(X);ji=l(Vt,"A lot edge cases has been found and fixed by using the "),wt=a(Vt,"CODE",{class:!0});var ph=n(wt);Bi=l(ph,"animating"),ph.forEach(o),zi=l(Vt,", or "),_t=a(Vt,"CODE",{class:!0});var ch=n(_t);$i=l(ch,"eating"),ch.forEach(o),Xi=l(Vt," flag:"),Vt.forEach(o),Fi=c(Rt),so=a(Rt,"UL",{});var se=n(so);Va=a(se,"LI",{});var kh=n(Va);Qi=l(kh,"where to avoid cursor, while eating the characters"),kh.forEach(o),Wi=c(se),Ua=a(se,"LI",{});var hh=n(Ua);Ji=l(hh,`to annihilate or to eat?
There's an heuristic to choose which one to do, when both get scheduled at the same time.`),hh.forEach(o),se.forEach(o),Rt.forEach(o),_n=c(i),C=a(i,"SECTION",{});var G=n(C);Ga=a(G,"H3",{});var vh=n(Ga);oo=a(vh,"A",{href:!0,id:!0});var yh=n(oo);Ki=l(yh,"Developing locally"),yh.forEach(o),vh.forEach(o),Yi=c(G),to=a(G,"P",{});var oe=n(to);Zi=l(oe,"Everytime when the content script is updated, I need to click refresh in the "),gt=a(oe,"CODE",{class:!0});var dh=n(gt);sp=l(dh,"chrome://extensions"),dh.forEach(o),op=l(oe," page:"),oe.forEach(o),tp=c(G),Na=a(G,"P",{});var uh=n(Na);ao=a(uh,"PICTURE",{});var te=n(ao);ja=a(te,"SOURCE",{type:!0,srcset:!0}),Ba=a(te,"SOURCE",{type:!0,srcset:!0}),no=a(te,"IMG",{src:!0,loading:!0,alt:!0}),te.forEach(o),uh.forEach(o),ap=c(G),za=a(G,"P",{});var xh=n(za);np=l(xh,"In order to developed faster, I created a simple HTML, and test it locally."),xh.forEach(o),ep=c(G),Et=a(G,"DIV",{class:!0});var Jv=n(Et);Jv.forEach(o),G.forEach(o),gn=c(i),b=a(i,"SECTION",{});var P=n(b);$a=a(P,"H4",{});var fh=n($a);eo=a(fh,"A",{href:!0,id:!0});var mh=n(eo);lp=l(mh,"PostCSS script"),mh.forEach(o),fh.forEach(o),rp=c(P),lo=a(P,"P",{});var ae=n(lo);ip=l(ae,"Remember I mentioned that, for resource to be accessible from the Chrome Extension, I would have to prepend the url with "),bt=a(ae,"CODE",{class:!0});var wh=n(bt);pp=l(wh,"chrome-extension://__MSG_@@extension_id__/"),wh.forEach(o),cp=l(ae,"?"),ae.forEach(o),kp=c(P),ro=a(P,"P",{});var ne=n(ro);hp=l(ne,"But that does not work if I developed in standalone HTML, because I can't access the assets from "),It=a(ne,"CODE",{class:!0});var _h=n(It);vp=l(_h,"chrome-extension://"),_h.forEach(o),yp=l(ne," protocol in my localhost."),ne.forEach(o),dp=c(P),F=a(P,"P",{});var Ut=n(F);up=l(Ut,"I would have to write "),St=a(Ut,"CODE",{class:!0});var gh=n(St);xp=l(gh,"/images/rest.png"),gh.forEach(o),fp=l(Ut,", and replaced it to "),Tt=a(Ut,"CODE",{class:!0});var Eh=n(Tt);mp=l(Eh,"chrome-extension://__MSG_@@extension_id__/images/rest.png"),Eh.forEach(o),wp=l(Ut," when I test it on my extension."),Ut.forEach(o),_p=c(P),io=a(P,"P",{});var ee=n(io);gp=l(ee,"So, I wrote a simple script with "),po=a(ee,"A",{href:!0,rel:!0});var bh=n(po);Ep=l(bh,"PostCSS"),bh.forEach(o),bp=l(ee," to automatically do it:"),ee.forEach(o),Ip=c(P),Ct=a(P,"DIV",{class:!0});var Kv=n(Ct);Kv.forEach(o),Sp=c(P),Q=a(P,"P",{});var Gt=n(Q);Tp=l(Gt,"I used "),Pt=a(Gt,"CODE",{class:!0});var Ih=n(Pt);Cp=l(Ih,"content.css"),Ih.forEach(o),Pp=l(Gt," for my local development, and automatically built "),qt=a(Gt,"CODE",{class:!0});var Sh=n(qt);qp=l(Sh,"content-ext.css"),Sh.forEach(o),Op=l(Gt," for the extension with all the URL replaced."),Gt.forEach(o),P.forEach(o),En=c(i),D=a(i,"SECTION",{});var is=n(D);Xa=a(is,"H2",{});var Th=n(Xa);co=a(Th,"A",{href:!0,id:!0});var Ch=n(co);Dp=l(Ch,"Demo"),Ch.forEach(o),Th.forEach(o),Hp=c(is),ko=a(is,"P",{});var le=n(ko);Ap=l(le,"I did a super quick demo, which went quite well, "),Fa=a(le,"EM",{});var Ph=n(Fa);Mp=l(Ph,"I think."),Ph.forEach(o),Lp=l(le," \u{1F914}"),le.forEach(o),Rp=c(is),ho=a(is,"P",{});var re=n(ho);Vp=l(re,"For those who are curious, and want to try out, you can visit "),vo=a(re,"A",{href:!0,rel:!0});var qh=n(vo);Up=l(qh,"here for the demo"),qh.forEach(o),Gp=l(re,"."),re.forEach(o),Np=c(is),yo=a(is,"P",{});var ie=n(yo);jp=l(ie,"For those who are curious about the source code, can visit "),uo=a(ie,"A",{href:!0,rel:!0});var Oh=n(uo);Bp=l(Oh,"the Github repo"),Oh.forEach(o),zp=l(ie,"."),ie.forEach(o),is.forEach(o),bn=c(i),I=a(i,"SECTION",{});var q=n(I);Qa=a(q,"H2",{});var Dh=n(Qa);xo=a(Dh,"A",{href:!0,id:!0});var Hh=n(xo);$p=l(Hh,"Summary"),Hh.forEach(o),Dh.forEach(o),Xp=c(q),Wa=a(q,"P",{});var Ah=n(Wa);Fp=l(Ah,"It has been a fruitful event."),Ah.forEach(o),Qp=c(q),ls=a(q,"BLOCKQUOTE",{class:!0});var pe=n(ls);V=a(pe,"P",{lang:!0,dir:!0});var on=n(V);Wp=l(on,"And "),Ot=a(on,"A",{href:!0});var Mh=n(Ot);Jp=l(Mh,"@lihautan"),Mh.forEach(o),Kp=l(on," wins a bag of tropical fruits "),Dt=a(on,"A",{href:!0});var Lh=n(Dt);Yp=l(Lh,"pic.twitter.com/CtQUBGOI7h"),Lh.forEach(o),on.forEach(o),Zp=l(pe,"\u2014 Yishu See (@yishusee) "),Ht=a(pe,"A",{href:!0});var Rh=n(Ht);sc=l(Rh,"December 14, 2019"),Rh.forEach(o),pe.forEach(o),oc=c(q),Ja=a(q,"P",{});var Vh=n(Ja);tc=l(Vh,"Appreciate the organisers time and effort to make the Hackathon goes as smoothly as possible."),Vh.forEach(o),ac=c(q),Ka=a(q,"P",{});var Uh=n(Ka);nc=l(Uh,"I managed to do something that I never really done before:"),Uh.forEach(o),ec=c(q),fo=a(q,"UL",{});var ce=n(fo);Ya=a(ce,"LI",{});var Gh=n(Ya);lc=l(Gh,"CSS sprite sheet animation"),Gh.forEach(o),rc=c(ce),Za=a(ce,"LI",{});var Nh=n(Za);ic=l(Nh,"Chrome Extension that interacts with the user and manipulates the DOM"),Nh.forEach(o),ce.forEach(o),pc=c(q),mo=a(q,"P",{});var ke=n(mo);cc=l(ke,"Hopefully I will partcipate the "),wo=a(ke,"A",{href:!0,rel:!0});var jh=n(wo);kc=l(jh,"Super Silly Hackathon"),jh.forEach(o),hc=l(ke," again next year."),ke.forEach(o),q.forEach(o),this.h()},h(){r(w,"href","https://supersillyhackathon.sg/"),r(w,"rel","nofollow"),r(Eo,"href","https://t.co/lem52qHO6Q"),r(J,"lang","en"),r(J,"dir","ltr"),r(bo,"href","https://twitter.com/supersillyhack/status/1205671402432450563?ref_src=twsrc%5Etfw"),r(N,"class","twitter-tweet"),r(cs,"href","https://github.com/tanhauhau/browser-pet"),r(cs,"rel","nofollow"),W(ks.src,dc=dy)||r(ks,"src",dc),r(ks,"loading","lazy"),r(ks,"alt","rest"),r(hs,"href","#inspiration"),r(hs,"id","inspiration"),r(ys,"href","https://github.com/graceavery/tamagotchiTemp"),r(ys,"rel","nofollow"),r(ds,"href","#what-can-it-do"),r(ds,"id","what-can-it-do"),r(us,"href","#it-runs-away-from-mouse-cursor"),r(us,"id","it-runs-away-from-mouse-cursor"),W(xs.src,uc=yy)||r(xs,"src",uc),r(xs,"loading","lazy"),r(xs,"alt","evade"),r(fs,"href","#it-eats-whatever-you-try-to-type-into-an-input"),r(fs,"id","it-eats-whatever-you-try-to-type-into-an-input"),W(ms.src,xc=vy)||r(ms,"src",xc),r(ms,"loading","lazy"),r(ms,"alt","eat"),r(ws,"href","#it-annihilates-the-buttons-you-hover-onto"),r(ws,"id","it-annihilates-the-buttons-you-hover-onto"),W(_s.src,fc=hy)||r(_s,"src",fc),r(_s,"loading","lazy"),r(_s,"alt","annihilate"),r(gs,"href","#implementation"),r(gs,"id","implementation"),r(Es,"href","#chrome-extension"),r(Es,"id","chrome-extension"),r(Is,"href","https://developer.chrome.com/extensions/content_scripts"),r(Is,"rel","nofollow"),r(Co,"class","inline"),r(Po,"class","code-section"),r(qo,"class","inline"),r(Oo,"class","code-section"),r(Do,"class","code-section"),r(Ho,"class","inline"),r(Ao,"class","inline"),r(Mo,"class","inline"),r(L,"href","#add-web-accessible-resources-into-the-manifest-json"),r(L,"id","add-web-accessible-resources-into-the-manifest-json"),r(Lo,"class","code-section"),r(Ro,"class","inline"),r(j,"href","#prepend-chrome-extension-msg-extension-id-for-the-url"),r(j,"id","prepend-chrome-extension-msg-extension-id-for-the-url"),r(Vo,"class","code-section"),r(Ps,"href","#make-it-look-alive"),r(Ps,"id","make-it-look-alive"),r(Ds,"href","https://blog.teamtreehouse.com/css-sprite-sheet-animations-steps"),r(Ds,"rel","nofollow"),r(ea,"type","image/webp"),r(ea,"srcset",ky),r(la,"type","image/png"),r(la,"srcset",Qh),W(ns.src,mc=Qh)||r(ns,"src",mc),r(ns,"loading","lazy"),r(ns,"alt","spritesheet for resting"),r(ns,"title","Sprite Sheet for Resting"),r(Uo,"class","code-section"),r(Go,"class","inline"),r(No,"class","code-section"),r(jo,"class","code-section"),r(Bo,"class","inline"),r(Ls,"href","#avoid-the-cursor"),r(Ls,"id","avoid-the-cursor"),W(Rs.src,wc=cy)||r(Rs,"src",wc),r(Rs,"loading","lazy"),r(Rs,"alt","shift"),r(zo,"class","inline"),r($o,"class","code-section"),r(Xo,"class","code-section"),r(Fo,"class","code-section"),r(Qo,"class","inline"),r(Wo,"class","inline"),r(Jo,"class","inline"),r(Ko,"class","inline"),r(Yo,"class","inline"),r(Zo,"class","code-section"),r(st,"class","inline"),r(Ns,"href","#eating-the-characters"),r(Ns,"id","eating-the-characters"),r(ot,"class","inline"),r(tt,"class","inline"),r(at,"class","code-section"),r(nt,"class","inline"),r(et,"class","inline"),r(lt,"class","code-section"),r(rt,"class","code-section"),r(ma,"type","image/webp"),r(ma,"srcset",py),r(wa,"type","image/png"),r(wa,"srcset",Fh),W(es.src,_c=Fh)||r(es,"src",_c),r(es,"loading","lazy"),r(es,"alt","spritesheet for eating"),r(es,"title","Sprite Sheet for Eating"),r(it,"class","code-section"),r(pt,"class","code-section"),r(ct,"class","code-section"),r($s,"href","https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect"),r($s,"rel","nofollow"),r(kt,"class","code-section"),r(Xs,"href","#annihilate-the-buttons"),r(Xs,"id","annihilate-the-buttons"),r(Da,"type","image/webp"),r(Da,"srcset",iy),r(Ha,"type","image/png"),r(Ha,"srcset",Xh),W(Qs.src,gc=Xh)||r(Qs,"src",gc),r(Qs,"loading","lazy"),r(Qs,"alt","Eys full of hatred"),r(Js,"href","https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll"),r(Js,"rel","nofollow"),r(ht,"class","code-section"),r(vt,"class","code-section"),r(yt,"class","inline"),r(dt,"class","inline"),r(ut,"class","code-section"),r(xt,"class","inline"),r(ft,"class","code-section"),r(Ys,"href","#difficulties"),r(Ys,"id","difficulties"),r(Zs,"href","#synchronising-interactions"),r(Zs,"id","synchronising-interactions"),r(wt,"class","inline"),r(_t,"class","inline"),r(oo,"href","#developing-locally"),r(oo,"id","developing-locally"),r(gt,"class","inline"),r(ja,"type","image/webp"),r(ja,"srcset",ry),r(Ba,"type","image/png"),r(Ba,"srcset",$h),W(no.src,Ec=$h)||r(no,"src",Ec),r(no,"loading","lazy"),r(no,"alt","click refresh"),r(Et,"class","code-section"),r(eo,"href","#postcss-script"),r(eo,"id","postcss-script"),r(bt,"class","inline"),r(It,"class","inline"),r(St,"class","inline"),r(Tt,"class","inline"),r(po,"href","https://postcss.org/"),r(po,"rel","nofollow"),r(Ct,"class","code-section"),r(Pt,"class","inline"),r(qt,"class","inline"),r(co,"href","#demo"),r(co,"id","demo"),r(vo,"href","https://lihautan.com/browser-pet/"),r(vo,"rel","nofollow"),r(uo,"href","https://github.com/tanhauhau/browser-pet"),r(uo,"rel","nofollow"),r(xo,"href","#summary"),r(xo,"id","summary"),r(Ot,"href","https://twitter.com/lihautan?ref_src=twsrc%5Etfw"),r(Dt,"href","https://t.co/CtQUBGOI7h"),r(V,"lang","en"),r(V,"dir","ltr"),r(Ht,"href","https://twitter.com/yishusee/status/1205828141194727430?ref_src=twsrc%5Etfw"),r(ls,"class","twitter-tweet"),r(wo,"href","https://twitter.com/supersillyhack"),r(wo,"rel","nofollow")},m(i,k){Yh(m,i,k),v(i,H,k),v(i,T,k),s(T,ps),s(T,w),s(w,A),s(T,go),v(i,tn,k),v(i,N,k),s(N,J),s(J,he),s(J,Eo),s(Eo,ve),s(N,ye),s(N,bo),s(bo,de),v(i,an,k),v(i,K,k),s(K,ue),s(K,cs),s(cs,xe),s(K,fe),v(i,nn,k),v(i,Io,k),s(Io,ks),v(i,en,k),v(i,Y,k),s(Y,Nt),s(Nt,hs),s(hs,me),s(Y,we),s(Y,vs),s(vs,_e),s(vs,ys),s(ys,ge),s(vs,Ee),v(i,ln,k),v(i,So,k),s(So,jt),s(jt,ds),s(ds,be),v(i,rn,k),v(i,Z,k),s(Z,Bt),s(Bt,us),s(us,Ie),s(Z,Se),s(Z,zt),s(zt,xs),v(i,pn,k),v(i,ss,k),s(ss,$t),s($t,fs),s(fs,Te),s(ss,Ce),s(ss,Xt),s(Xt,ms),v(i,cn,k),v(i,os,k),s(os,Ft),s(Ft,ws),s(ws,Pe),s(os,qe),s(os,Qt),s(Qt,_s),v(i,kn,k),v(i,To,k),s(To,Wt),s(Wt,gs),s(gs,Oe),v(i,hn,k),v(i,E,k),s(E,Jt),s(Jt,Es),s(Es,De),s(E,He),s(E,bs),s(bs,Ae),s(bs,Is),s(Is,Me),s(bs,Le),s(E,Re),s(E,Ss),s(Ss,Ve),s(Ss,Co),s(Co,Ue),s(Ss,Ge),s(E,Ne),s(E,Po),Po.innerHTML=tv,s(E,je),s(E,Ts),s(Ts,Be),s(Ts,qo),s(qo,ze),s(Ts,$e),s(E,Xe),s(E,Oo),Oo.innerHTML=av,s(E,Fe),s(E,Do),Do.innerHTML=nv,s(E,Qe),s(E,Cs),s(Cs,We),s(Cs,Ho),s(Ho,Je),s(Cs,Ke),v(i,vn,k),v(i,ts,k),s(ts,Kt),s(Kt,L),s(L,Ye),s(L,Ao),s(Ao,Ze),s(L,sl),s(L,Mo),s(Mo,ol),s(ts,tl),s(ts,Lo),Lo.innerHTML=ev,v(i,yn,k),v(i,as,k),s(as,Yt),s(Yt,j),s(j,al),s(j,Ro),s(Ro,nl),s(j,el),s(as,ll),s(as,Vo),Vo.innerHTML=lv,v(i,dn,k),v(i,u,k),s(u,Zt),s(Zt,Ps),s(Ps,rl),s(u,il),s(u,sa),s(sa,pl),s(u,cl),s(u,qs),s(qs,kl),s(qs,oa),s(oa,hl),s(qs,vl),s(u,yl),s(u,ta),s(ta,aa),s(aa,dl),s(u,ul),s(u,Os),s(Os,xl),s(Os,Ds),s(Ds,fl),s(Os,ml),s(u,wl),s(u,na),s(na,Hs),s(Hs,ea),s(Hs,la),s(Hs,ns),s(u,_l),s(u,Uo),Uo.innerHTML=rv,s(u,gl),s(u,As),s(As,El),s(As,Go),s(Go,bl),s(As,Il),s(u,Sl),s(u,No),No.innerHTML=iv,s(u,Tl),s(u,ra),s(ra,Cl),s(u,Pl),s(u,jo),jo.innerHTML=pv,s(u,ql),s(u,Ms),s(Ms,Ol),s(Ms,Bo),s(Bo,Dl),s(Ms,Hl),v(i,un,k),v(i,d,k),s(d,ia),s(ia,Ls),s(Ls,Al),s(d,Ml),s(d,pa),s(pa,Ll),s(d,Rl),s(d,ca),s(ca,Rs),s(d,Vl),s(d,Vs),s(Vs,Ul),s(Vs,zo),s(zo,Gl),s(Vs,Nl),s(d,jl),s(d,$o),$o.innerHTML=cv,s(d,Bl),s(d,ka),s(ka,zl),s(d,$l),s(d,Xo),Xo.innerHTML=kv,s(d,Xl),s(d,ha),s(ha,Fl),s(d,Ql),s(d,Fo),Fo.innerHTML=hv,s(d,Wl),s(d,O),s(O,Jl),s(O,Qo),s(Qo,Kl),s(O,Yl),s(O,Wo),s(Wo,Zl),s(O,sr),s(O,Jo),s(Jo,or),s(O,tr),s(O,Ko),s(Ko,ar),s(O,nr),s(d,er),s(d,Us),s(Us,lr),s(Us,Yo),s(Yo,rr),s(Us,ir),s(d,pr),s(d,Zo),Zo.innerHTML=vv,s(d,cr),s(d,Gs),s(Gs,kr),s(Gs,st),s(st,hr),s(Gs,vr),s(d,yr),s(d,va),s(va,dr),v(i,xn,k),v(i,h,k),s(h,ya),s(ya,Ns),s(Ns,ur),s(h,xr),s(h,B),s(B,fr),s(B,ot),s(ot,mr),s(B,wr),s(B,tt),s(tt,_r),s(B,gr),s(h,Er),s(h,at),at.innerHTML=yv,s(h,br),s(h,z),s(z,Ir),s(z,nt),s(nt,Sr),s(z,Tr),s(z,et),s(et,Cr),s(z,Pr),s(h,qr),s(h,da),s(da,Or),s(h,Dr),s(h,lt),lt.innerHTML=dv,s(h,Hr),s(h,ua),s(ua,Ar),s(h,Mr),s(h,rt),rt.innerHTML=uv,s(h,Lr),s(h,xa),s(xa,Rr),s(h,Vr),s(h,fa),s(fa,js),s(js,ma),s(js,wa),s(js,es),s(h,Ur),s(h,M),s(M,Gr),s(M,_a),s(_a,Nr),s(M,jr),s(M,ga),s(ga,Br),s(M,zr),s(M,Ea),s(Ea,$r),s(M,Xr),s(h,Fr),s(h,it),it.innerHTML=xv,s(h,Qr),s(h,ba),s(ba,Wr),s(h,Jr),s(h,pt),pt.innerHTML=fv,s(h,Kr),s(h,Ia),s(Ia,Yr),s(h,Zr),s(h,Sa),s(Sa,si),s(h,oi),s(h,Bs),s(Bs,ti),s(Bs,Ta),s(Ta,ai),s(Bs,ni),s(h,ei),s(h,ct),ct.innerHTML=mv,s(h,li),s(h,zs),s(zs,ri),s(zs,$s),s($s,ii),s(zs,pi),s(h,ci),s(h,kt),kt.innerHTML=wv,s(h,ki),s(h,Ca),s(Ca,hi),v(i,fn,k),v(i,x,k),s(x,Pa),s(Pa,Xs),s(Xs,vi),s(x,yi),s(x,qa),s(qa,di),s(x,ui),s(x,Oa),s(Oa,Fs),s(Fs,Da),s(Fs,Ha),s(Fs,Qs),s(x,xi),s(x,Ws),s(Ws,fi),s(Ws,Js),s(Js,mi),s(Ws,wi),s(x,_i),s(x,ht),ht.innerHTML=_v,s(x,gi),s(x,Aa),s(Aa,Ei),s(x,bi),s(x,vt),vt.innerHTML=gv,s(x,Ii),s(x,$),s($,Si),s($,yt),s(yt,Ti),s($,Ci),s($,dt),s(dt,Pi),s($,qi),s(x,Oi),s(x,Ma),s(Ma,Di),s(x,Hi),s(x,ut),ut.innerHTML=Ev,s(x,Ai),s(x,Ks),s(Ks,Mi),s(Ks,xt),s(xt,Li),s(Ks,Ri),s(x,Vi),s(x,ft),ft.innerHTML=bv,v(i,mn,k),v(i,mt,k),s(mt,La),s(La,Ys),s(Ys,Ui),v(i,wn,k),v(i,R,k),s(R,Ra),s(Ra,Zs),s(Zs,Gi),s(R,Ni),s(R,X),s(X,ji),s(X,wt),s(wt,Bi),s(X,zi),s(X,_t),s(_t,$i),s(X,Xi),s(R,Fi),s(R,so),s(so,Va),s(Va,Qi),s(so,Wi),s(so,Ua),s(Ua,Ji),v(i,_n,k),v(i,C,k),s(C,Ga),s(Ga,oo),s(oo,Ki),s(C,Yi),s(C,to),s(to,Zi),s(to,gt),s(gt,sp),s(to,op),s(C,tp),s(C,Na),s(Na,ao),s(ao,ja),s(ao,Ba),s(ao,no),s(C,ap),s(C,za),s(za,np),s(C,ep),s(C,Et),Et.innerHTML=Iv,v(i,gn,k),v(i,b,k),s(b,$a),s($a,eo),s(eo,lp),s(b,rp),s(b,lo),s(lo,ip),s(lo,bt),s(bt,pp),s(lo,cp),s(b,kp),s(b,ro),s(ro,hp),s(ro,It),s(It,vp),s(ro,yp),s(b,dp),s(b,F),s(F,up),s(F,St),s(St,xp),s(F,fp),s(F,Tt),s(Tt,mp),s(F,wp),s(b,_p),s(b,io),s(io,gp),s(io,po),s(po,Ep),s(io,bp),s(b,Ip),s(b,Ct),Ct.innerHTML=Sv,s(b,Sp),s(b,Q),s(Q,Tp),s(Q,Pt),s(Pt,Cp),s(Q,Pp),s(Q,qt),s(qt,qp),s(Q,Op),v(i,En,k),v(i,D,k),s(D,Xa),s(Xa,co),s(co,Dp),s(D,Hp),s(D,ko),s(ko,Ap),s(ko,Fa),s(Fa,Mp),s(ko,Lp),s(D,Rp),s(D,ho),s(ho,Vp),s(ho,vo),s(vo,Up),s(ho,Gp),s(D,Np),s(D,yo),s(yo,jp),s(yo,uo),s(uo,Bp),s(yo,zp),v(i,bn,k),v(i,I,k),s(I,Qa),s(Qa,xo),s(xo,$p),s(I,Xp),s(I,Wa),s(Wa,Fp),s(I,Qp),s(I,ls),s(ls,V),s(V,Wp),s(V,Ot),s(Ot,Jp),s(V,Kp),s(V,Dt),s(Dt,Yp),s(ls,Zp),s(ls,Ht),s(Ht,sc),s(I,oc),s(I,Ja),s(Ja,tc),s(I,ac),s(I,Ka),s(Ka,nc),s(I,ec),s(I,fo),s(fo,Ya),s(Ya,lc),s(fo,rc),s(fo,Za),s(Za,ic),s(I,pc),s(I,mo),s(mo,cc),s(mo,wo),s(wo,kc),s(mo,hc),In=!0},p:ay,i(i){In||(Zh(m.$$.fragment,i),In=!0)},o(i){sv(m.$$.fragment,i),In=!1},d(i){ov(m,i),i&&o(H),i&&o(T),i&&o(tn),i&&o(N),i&&o(an),i&&o(K),i&&o(nn),i&&o(Io),i&&o(en),i&&o(Y),i&&o(ln),i&&o(So),i&&o(rn),i&&o(Z),i&&o(pn),i&&o(ss),i&&o(cn),i&&o(os),i&&o(kn),i&&o(To),i&&o(hn),i&&o(E),i&&o(vn),i&&o(ts),i&&o(yn),i&&o(as),i&&o(dn),i&&o(u),i&&o(un),i&&o(d),i&&o(xn),i&&o(h),i&&o(fn),i&&o(x),i&&o(mn),i&&o(mt),i&&o(wn),i&&o(R),i&&o(_n),i&&o(C),i&&o(gn),i&&o(b),i&&o(En),i&&o(D),i&&o(bn),i&&o(I)}}}function xy(_o){let m,H;const T=[_o[0],Wh];let ps={$$slots:{default:[uy]},$$scope:{ctx:_o}};for(let w=0;w<T.length;w+=1)ps=yc(ps,T[w]);return m=new ny({props:ps}),{c(){Jh(m.$$.fragment)},l(w){Kh(m.$$.fragment,w)},m(w,A){Yh(m,w,A),H=!0},p(w,[A]){const go=A&1?oy(T,[A&1&&Bh(w[0]),A&0&&Bh(Wh)]):{};A&2&&(go.$$scope={dirty:A,ctx:w}),m.$set(go)},i(w){H||(Zh(m.$$.fragment,w),H=!0)},o(w){sv(m.$$.fragment,w),H=!1},d(w){ov(m,w)}}}const Wh={title:"Super Silly Hackathon 2019",date:"2019-12-14T08:00:00Z",lastUpdated:"2019-12-15T15:19:00Z",description:"A quick walkthrough on how I created my pet in the browser for the Super Silly Hackathon 2019.",tags:["JavaScript","hackathon"],series:"Hackathon Projects",label:"blog"};function fy(_o,m,H){return ty("blog",{image:ly}),_o.$$set=T=>{H(0,m=yc(yc({},m),zh(T)))},m=zh(m),[m]}class Sy extends Yv{constructor(m){super();Zv(this,m,fy,xy,sy,{})}}export{Sy as default,Wh as metadata};
