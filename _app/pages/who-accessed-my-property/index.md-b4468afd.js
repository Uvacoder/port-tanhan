import{S as na,i as ia,s as ca,C as rs,w as pa,x as ha,y as da,z as fa,A as ea,q as ua,o as ya,B as va,r as ka,Y as ta,e as r,t as s,k as d,c as l,a as n,h as a,d as t,m as f,b as i,g as h,H as e,J as wa}from"../../chunks/vendor-9710682b.js";import{B as _a}from"../../chunks/BlogLayout-9a08402e.js";import{_ as ga}from"../../chunks/twitter-card-image-a57df29d.js";import"../../chunks/stores-f9c97213.js";import"../../chunks/TableOfContent-2fa6a472.js";/* empty css                                */function ma(U){let p,x,_,$,u,v,Q,yt,Z,vt,kt,Ue,j,He,wt,_t,F,gt,mt,Qe,Ze,Fe,y,$e,Et,bt,I,xt,Ot,L,jt,Dt,G,Ct,Pt,K,St,Tt,X,At,Rt,Ke,Y,sa=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line"><span style="color: var(--shiki-token-comment)">// setting a property in the &#96;$scope&#96; object triggers</span></span>
<span class="line"><span style="color: var(--shiki-token-comment)">// the framework to update the model and the DOM</span></span>
<span class="line"><span style="color: var(--shiki-token-constant)">$scope</span><span style="color: var(--shiki-color-text)">.name </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;Hello&#39;</span><span style="color: var(--shiki-color-text)">;</span></span></code></pre>`,Xe,et,tt,D,Ie,Wt,Ht,N,ee,$t,It,ot,M,te,Lt,Gt,st,k,Yt,oe,Nt,Mt,se,Vt,qt,ae,zt,Bt,re,Jt,Ut,at,g,E,Le,le,Qt,Zt,ne,ie,Ft,Kt,Xt,ce,pe,eo,he,to,oo,so,m,ao,de,ro,lo,fe,no,io,ue,co,po,ye,ho,fo,b,Ge,ve,uo,yo,ke,we,vo,ko,wo,Ye,_e,_o,ge,go,mo,V,Eo,me,bo,xo,Oo,C,Ne,Ee,jo,Do,q,Co,be,Po,So,To,Me,xe,Ao,Oe,Ro,Wo,P,Ve,je,Ho,$o,z,Io,De,Lo,Go,Yo,qe,Ce,No,Pe,Mo,rt,Se,Vo,lt,T,qo,B,Te,zo,Bo,nt,A,Jo,ze,Uo,Qo,it,Ae,Zo,ct,J,aa=`<pre class="shiki" style="background-color: var(--shiki-color-background)"><code><span class="line dim"><span style="color: var(--shiki-token-keyword)">let</span><span style="color: var(--shiki-color-text)"> _value;</span></span>
<span class="line dim"><span style="color: var(--shiki-token-constant)">Object</span><span style="color: var(--shiki-token-function)">.defineProperty</span><span style="color: var(--shiki-color-text)">(obj</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;awesome&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-function)">get</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">try</span><span style="color: var(--shiki-color-text)"> &#123;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-comment)">// intentionally throw an Error to get the call stack</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">throw</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">new</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">Error</span><span style="color: var(--shiki-color-text)">();</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">    &#125; </span><span style="color: var(--shiki-token-keyword)">catch</span><span style="color: var(--shiki-color-text)"> (error) &#123;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-comment)">// stack is the stack trace, </span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-comment)">// containing error message and the stack</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">stack</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">error</span><span style="color: var(--shiki-color-text)">.stack;</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-comment)">// print the callee stack</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">        stack</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">          </span><span style="color: var(--shiki-token-function)">.split</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;&#92;n&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">          </span><span style="color: var(--shiki-token-function)">.slice</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-color-text)">)</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">          </span><span style="color: var(--shiki-token-function)">.join</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;&#92;n&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">      );</span></span>
<span class="line highlight"><span style="color: var(--shiki-color-text)">    &#125;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> _value;</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">  &#125;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line dim"><span style="color: var(--shiki-color-text)">&#125;);</span></span></code></pre>`;return{c(){p=r("p"),x=s("Say you defined an object "),_=r("code"),$=s("const obj = { awesome: true }"),u=s(" so that anywhere within your code, you can access the value of "),v=r("code"),Q=s("obj.awesome"),yt=s(" as well as modify its value via "),Z=r("code"),vt=s("obj.awesome = false"),kt=s("."),Ue=d(),j=r("p"),He=r("strong"),wt=s("Question"),_t=s(": How do you know where and when "),F=r("code"),gt=s("obj.awesome"),mt=s(" is being accessed or modified?"),Qe=d(),Ze=r("hr"),Fe=d(),y=r("p"),$e=r("strong"),Et=s("So why is this important?"),bt=s(" If you are using frontend framework that does "),I=r("a"),xt=s("2-way binding"),Ot=s(", eg: "),L=r("a"),jt=s("Angular"),Dt=s(", "),G=r("a"),Ct=s("Vue"),Pt=s(", do you know how does the framework \u201Cwatch\u201D your "),K=r("code"),St=s("state"),Tt=s(" object? How does the framework knows when to update your DOM when you set some property of the "),X=r("code"),At=s("state"),Rt=s(" object?"),Ke=d(),Y=r("div"),Xe=d(),et=r("hr"),tt=d(),D=r("p"),Ie=r("strong"),Wt=s("Answer:"),Ht=s(" You use "),N=r("a"),ee=r("code"),$t=s("Object.defineProperty()"),It=s("."),ot=d(),M=r("p"),te=r("code"),Lt=s("Object.defineProperty(obj, prop, descriptor)"),Gt=s(" allows us to define a property to an object with a descriptor for the property being defined."),st=d(),k=r("p"),Yt=s("Well, nothing special about defining a property of an object, you can do it easily with "),oe=r("code"),Nt=s("obj[prop] = value"),Mt=s(". What so special about this "),se=r("code"),Vt=s("Object.defineProperty()"),qt=s(" is the "),ae=r("code"),zt=s("descriptor"),Bt=s(" object that you pass in. Lets' take a look at what can be configured through the "),re=r("code"),Jt=s("descriptor"),Ut=s(":"),at=d(),g=r("ul"),E=r("li"),Le=r("p"),le=r("code"),Qt=s("enumerable"),Zt=d(),ne=r("p"),ie=r("code"),Ft=s("true"),Kt=s(" if and only if this property shows up during enumeration of the properties on the corresponding object."),Xt=d(),ce=r("p"),pe=r("strong"),eo=s("Defaults to "),he=r("code"),to=s("false"),oo=s("."),so=d(),m=r("p"),ao=s("If you have a property's "),de=r("code"),ro=s("enumerable"),lo=s(" set to "),fe=r("code"),no=s("false"),io=s(", meaning you will not see the property when you do "),ue=r("code"),co=s("Object.keys(obj)"),po=s(" or "),ye=r("code"),ho=s("for (const key in obj) { ... }"),fo=d(),b=r("li"),Ge=r("p"),ve=r("code"),uo=s("writable"),yo=d(),ke=r("p"),we=r("code"),vo=s("true"),ko=s(" if and only if the value associated with the property may be changed with an assignment operator."),wo=d(),Ye=r("p"),_e=r("strong"),_o=s("Defaults to "),ge=r("code"),go=s("false"),mo=d(),V=r("p"),Eo=s("This allows us to create "),me=r("code"),bo=s("read-only"),xo=s(" property of an object."),Oo=d(),C=r("li"),Ne=r("p"),Ee=r("code"),jo=s("get"),Do=d(),q=r("p"),Co=s("A function which serves as a getter for the property, or "),be=r("code"),Po=s("undefined"),So=s(" if there is no getter. The return value will be used as the value of the property."),To=d(),Me=r("p"),xe=r("strong"),Ao=s("Defaults to "),Oe=r("code"),Ro=s("undefined"),Wo=d(),P=r("li"),Ve=r("p"),je=r("code"),Ho=s("set"),$o=d(),z=r("p"),Io=s("A function which serves as a setter for the property, or "),De=r("code"),Lo=s("undefined"),Go=s(" if there is no setter. When the property is assigned to, this function is called with one argument (the value being assigned to the property)."),Yo=d(),qe=r("p"),Ce=r("strong"),No=s("Defaults to "),Pe=r("code"),Mo=s("undefined"),rt=d(),Se=r("p"),Vo=s("So, there you have it. What you need is to define the getter and setter function of the property, and they will be called when the property is accessed or being assigned to a value."),lt=d(),T=r("p"),qo=s("You can add a breakpoint via "),B=r("a"),Te=r("code"),zo=s("debugger;"),Bo=s(" in your getter and setter function, to invoke the debugging feature of your development tools to look at the call stack."),nt=d(),A=r("p"),Jo=s("Another way of looking at the call stack without using a debugger is to "),ze=r("strong"),Uo=s("throw an Error"),Qo=s(" in the getter and setter function."),it=d(),Ae=r("p"),Zo=s("Yes. You hear me right. Throwing an error will allow you to get the call stack when the error is thrown:"),ct=d(),J=r("div"),this.h()},l(o){p=l(o,"P",{});var c=n(p);x=a(c,"Say you defined an object "),_=l(c,"CODE",{class:!0});var ls=n(_);$=a(ls,"const obj = { awesome: true }"),ls.forEach(t),u=a(c," so that anywhere within your code, you can access the value of "),v=l(c,"CODE",{class:!0});var ns=n(v);Q=a(ns,"obj.awesome"),ns.forEach(t),yt=a(c," as well as modify its value via "),Z=l(c,"CODE",{class:!0});var is=n(Z);vt=a(is,"obj.awesome = false"),is.forEach(t),kt=a(c,"."),c.forEach(t),Ue=f(o),j=l(o,"P",{});var Be=n(j);He=l(Be,"STRONG",{});var cs=n(He);wt=a(cs,"Question"),cs.forEach(t),_t=a(Be,": How do you know where and when "),F=l(Be,"CODE",{class:!0});var ps=n(F);gt=a(ps,"obj.awesome"),ps.forEach(t),mt=a(Be," is being accessed or modified?"),Be.forEach(t),Qe=f(o),Ze=l(o,"HR",{}),Fe=f(o),y=l(o,"P",{});var w=n(y);$e=l(w,"STRONG",{});var hs=n($e);Et=a(hs,"So why is this important?"),hs.forEach(t),bt=a(w," If you are using frontend framework that does "),I=l(w,"A",{href:!0,rel:!0});var ds=n(I);xt=a(ds,"2-way binding"),ds.forEach(t),Ot=a(w,", eg: "),L=l(w,"A",{href:!0,rel:!0});var fs=n(L);jt=a(fs,"Angular"),fs.forEach(t),Dt=a(w,", "),G=l(w,"A",{href:!0,rel:!0});var us=n(G);Ct=a(us,"Vue"),us.forEach(t),Pt=a(w,", do you know how does the framework \u201Cwatch\u201D your "),K=l(w,"CODE",{class:!0});var ys=n(K);St=a(ys,"state"),ys.forEach(t),Tt=a(w," object? How does the framework knows when to update your DOM when you set some property of the "),X=l(w,"CODE",{class:!0});var vs=n(X);At=a(vs,"state"),vs.forEach(t),Rt=a(w," object?"),w.forEach(t),Ke=f(o),Y=l(o,"DIV",{class:!0});var ra=n(Y);ra.forEach(t),Xe=f(o),et=l(o,"HR",{}),tt=f(o),D=l(o,"P",{});var Je=n(D);Ie=l(Je,"STRONG",{});var ks=n(Ie);Wt=a(ks,"Answer:"),ks.forEach(t),Ht=a(Je," You use "),N=l(Je,"A",{href:!0,rel:!0});var ws=n(N);ee=l(ws,"CODE",{class:!0});var _s=n(ee);$t=a(_s,"Object.defineProperty()"),_s.forEach(t),ws.forEach(t),It=a(Je,"."),Je.forEach(t),ot=f(o),M=l(o,"P",{});var Fo=n(M);te=l(Fo,"CODE",{class:!0});var gs=n(te);Lt=a(gs,"Object.defineProperty(obj, prop, descriptor)"),gs.forEach(t),Gt=a(Fo," allows us to define a property to an object with a descriptor for the property being defined."),Fo.forEach(t),st=f(o),k=l(o,"P",{});var O=n(k);Yt=a(O,"Well, nothing special about defining a property of an object, you can do it easily with "),oe=l(O,"CODE",{class:!0});var ms=n(oe);Nt=a(ms,"obj[prop] = value"),ms.forEach(t),Mt=a(O,". What so special about this "),se=l(O,"CODE",{class:!0});var Es=n(se);Vt=a(Es,"Object.defineProperty()"),Es.forEach(t),qt=a(O," is the "),ae=l(O,"CODE",{class:!0});var bs=n(ae);zt=a(bs,"descriptor"),bs.forEach(t),Bt=a(O," object that you pass in. Lets' take a look at what can be configured through the "),re=l(O,"CODE",{class:!0});var xs=n(re);Jt=a(xs,"descriptor"),xs.forEach(t),Ut=a(O,":"),O.forEach(t),at=f(o),g=l(o,"UL",{});var R=n(g);E=l(R,"LI",{});var W=n(E);Le=l(W,"P",{});var Os=n(Le);le=l(Os,"CODE",{class:!0});var js=n(le);Qt=a(js,"enumerable"),js.forEach(t),Os.forEach(t),Zt=f(W),ne=l(W,"P",{});var Ko=n(ne);ie=l(Ko,"CODE",{class:!0});var Ds=n(ie);Ft=a(Ds,"true"),Ds.forEach(t),Kt=a(Ko," if and only if this property shows up during enumeration of the properties on the corresponding object."),Ko.forEach(t),Xt=f(W),ce=l(W,"P",{});var Xo=n(ce);pe=l(Xo,"STRONG",{});var es=n(pe);eo=a(es,"Defaults to "),he=l(es,"CODE",{class:!0});var Cs=n(he);to=a(Cs,"false"),Cs.forEach(t),es.forEach(t),oo=a(Xo,"."),Xo.forEach(t),so=f(W),m=l(W,"P",{});var S=n(m);ao=a(S,"If you have a property's "),de=l(S,"CODE",{class:!0});var Ps=n(de);ro=a(Ps,"enumerable"),Ps.forEach(t),lo=a(S," set to "),fe=l(S,"CODE",{class:!0});var Ss=n(fe);no=a(Ss,"false"),Ss.forEach(t),io=a(S,", meaning you will not see the property when you do "),ue=l(S,"CODE",{class:!0});var Ts=n(ue);co=a(Ts,"Object.keys(obj)"),Ts.forEach(t),po=a(S," or "),ye=l(S,"CODE",{class:!0});var As=n(ye);ho=a(As,"for (const key in obj) { ... }"),As.forEach(t),S.forEach(t),W.forEach(t),fo=f(R),b=l(R,"LI",{});var H=n(b);Ge=l(H,"P",{});var Rs=n(Ge);ve=l(Rs,"CODE",{class:!0});var Ws=n(ve);uo=a(Ws,"writable"),Ws.forEach(t),Rs.forEach(t),yo=f(H),ke=l(H,"P",{});var ts=n(ke);we=l(ts,"CODE",{class:!0});var Hs=n(we);vo=a(Hs,"true"),Hs.forEach(t),ko=a(ts," if and only if the value associated with the property may be changed with an assignment operator."),ts.forEach(t),wo=f(H),Ye=l(H,"P",{});var $s=n(Ye);_e=l($s,"STRONG",{});var os=n(_e);_o=a(os,"Defaults to "),ge=l(os,"CODE",{class:!0});var Is=n(ge);go=a(Is,"false"),Is.forEach(t),os.forEach(t),$s.forEach(t),mo=f(H),V=l(H,"P",{});var pt=n(V);Eo=a(pt,"This allows us to create "),me=l(pt,"CODE",{class:!0});var Ls=n(me);bo=a(Ls,"read-only"),Ls.forEach(t),xo=a(pt," property of an object."),pt.forEach(t),H.forEach(t),Oo=f(R),C=l(R,"LI",{});var Re=n(C);Ne=l(Re,"P",{});var Gs=n(Ne);Ee=l(Gs,"CODE",{class:!0});var Ys=n(Ee);jo=a(Ys,"get"),Ys.forEach(t),Gs.forEach(t),Do=f(Re),q=l(Re,"P",{});var ht=n(q);Co=a(ht,"A function which serves as a getter for the property, or "),be=l(ht,"CODE",{class:!0});var Ns=n(be);Po=a(Ns,"undefined"),Ns.forEach(t),So=a(ht," if there is no getter. The return value will be used as the value of the property."),ht.forEach(t),To=f(Re),Me=l(Re,"P",{});var Ms=n(Me);xe=l(Ms,"STRONG",{});var ss=n(xe);Ao=a(ss,"Defaults to "),Oe=l(ss,"CODE",{class:!0});var Vs=n(Oe);Ro=a(Vs,"undefined"),Vs.forEach(t),ss.forEach(t),Ms.forEach(t),Re.forEach(t),Wo=f(R),P=l(R,"LI",{});var We=n(P);Ve=l(We,"P",{});var qs=n(Ve);je=l(qs,"CODE",{class:!0});var zs=n(je);Ho=a(zs,"set"),zs.forEach(t),qs.forEach(t),$o=f(We),z=l(We,"P",{});var dt=n(z);Io=a(dt,"A function which serves as a setter for the property, or "),De=l(dt,"CODE",{class:!0});var Bs=n(De);Lo=a(Bs,"undefined"),Bs.forEach(t),Go=a(dt," if there is no setter. When the property is assigned to, this function is called with one argument (the value being assigned to the property)."),dt.forEach(t),Yo=f(We),qe=l(We,"P",{});var Js=n(qe);Ce=l(Js,"STRONG",{});var as=n(Ce);No=a(as,"Defaults to "),Pe=l(as,"CODE",{class:!0});var Us=n(Pe);Mo=a(Us,"undefined"),Us.forEach(t),as.forEach(t),Js.forEach(t),We.forEach(t),R.forEach(t),rt=f(o),Se=l(o,"P",{});var Qs=n(Se);Vo=a(Qs,"So, there you have it. What you need is to define the getter and setter function of the property, and they will be called when the property is accessed or being assigned to a value."),Qs.forEach(t),lt=f(o),T=l(o,"P",{});var ft=n(T);qo=a(ft,"You can add a breakpoint via "),B=l(ft,"A",{href:!0,rel:!0});var Zs=n(B);Te=l(Zs,"CODE",{class:!0});var Fs=n(Te);zo=a(Fs,"debugger;"),Fs.forEach(t),Zs.forEach(t),Bo=a(ft," in your getter and setter function, to invoke the debugging feature of your development tools to look at the call stack."),ft.forEach(t),nt=f(o),A=l(o,"P",{});var ut=n(A);Jo=a(ut,"Another way of looking at the call stack without using a debugger is to "),ze=l(ut,"STRONG",{});var Ks=n(ze);Uo=a(Ks,"throw an Error"),Ks.forEach(t),Qo=a(ut," in the getter and setter function."),ut.forEach(t),it=f(o),Ae=l(o,"P",{});var Xs=n(Ae);Zo=a(Xs,"Yes. You hear me right. Throwing an error will allow you to get the call stack when the error is thrown:"),Xs.forEach(t),ct=f(o),J=l(o,"DIV",{class:!0});var la=n(J);la.forEach(t),this.h()},h(){i(_,"class","inline"),i(v,"class","inline"),i(Z,"class","inline"),i(F,"class","inline"),i(I,"href","https://stackoverflow.com/a/13504965"),i(I,"rel","nofollow"),i(L,"href","https://angular.io/guide/ajs-quick-reference#ng-model"),i(L,"rel","nofollow"),i(G,"href","https://vuejs.org/v2/guide/forms.html"),i(G,"rel","nofollow"),i(K,"class","inline"),i(X,"class","inline"),i(Y,"class","code-section"),i(ee,"class","inline"),i(N,"href","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty"),i(N,"rel","nofollow"),i(te,"class","inline"),i(oe,"class","inline"),i(se,"class","inline"),i(ae,"class","inline"),i(re,"class","inline"),i(le,"class","inline"),i(ie,"class","inline"),i(he,"class","inline"),i(de,"class","inline"),i(fe,"class","inline"),i(ue,"class","inline"),i(ye,"class","inline"),i(ve,"class","inline"),i(we,"class","inline"),i(ge,"class","inline"),i(me,"class","inline"),i(Ee,"class","inline"),i(be,"class","inline"),i(Oe,"class","inline"),i(je,"class","inline"),i(De,"class","inline"),i(Pe,"class","inline"),i(Te,"class","inline"),i(B,"href","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/debugger"),i(B,"rel","nofollow"),i(J,"class","code-section")},m(o,c){h(o,p,c),e(p,x),e(p,_),e(_,$),e(p,u),e(p,v),e(v,Q),e(p,yt),e(p,Z),e(Z,vt),e(p,kt),h(o,Ue,c),h(o,j,c),e(j,He),e(He,wt),e(j,_t),e(j,F),e(F,gt),e(j,mt),h(o,Qe,c),h(o,Ze,c),h(o,Fe,c),h(o,y,c),e(y,$e),e($e,Et),e(y,bt),e(y,I),e(I,xt),e(y,Ot),e(y,L),e(L,jt),e(y,Dt),e(y,G),e(G,Ct),e(y,Pt),e(y,K),e(K,St),e(y,Tt),e(y,X),e(X,At),e(y,Rt),h(o,Ke,c),h(o,Y,c),Y.innerHTML=sa,h(o,Xe,c),h(o,et,c),h(o,tt,c),h(o,D,c),e(D,Ie),e(Ie,Wt),e(D,Ht),e(D,N),e(N,ee),e(ee,$t),e(D,It),h(o,ot,c),h(o,M,c),e(M,te),e(te,Lt),e(M,Gt),h(o,st,c),h(o,k,c),e(k,Yt),e(k,oe),e(oe,Nt),e(k,Mt),e(k,se),e(se,Vt),e(k,qt),e(k,ae),e(ae,zt),e(k,Bt),e(k,re),e(re,Jt),e(k,Ut),h(o,at,c),h(o,g,c),e(g,E),e(E,Le),e(Le,le),e(le,Qt),e(E,Zt),e(E,ne),e(ne,ie),e(ie,Ft),e(ne,Kt),e(E,Xt),e(E,ce),e(ce,pe),e(pe,eo),e(pe,he),e(he,to),e(ce,oo),e(E,so),e(E,m),e(m,ao),e(m,de),e(de,ro),e(m,lo),e(m,fe),e(fe,no),e(m,io),e(m,ue),e(ue,co),e(m,po),e(m,ye),e(ye,ho),e(g,fo),e(g,b),e(b,Ge),e(Ge,ve),e(ve,uo),e(b,yo),e(b,ke),e(ke,we),e(we,vo),e(ke,ko),e(b,wo),e(b,Ye),e(Ye,_e),e(_e,_o),e(_e,ge),e(ge,go),e(b,mo),e(b,V),e(V,Eo),e(V,me),e(me,bo),e(V,xo),e(g,Oo),e(g,C),e(C,Ne),e(Ne,Ee),e(Ee,jo),e(C,Do),e(C,q),e(q,Co),e(q,be),e(be,Po),e(q,So),e(C,To),e(C,Me),e(Me,xe),e(xe,Ao),e(xe,Oe),e(Oe,Ro),e(g,Wo),e(g,P),e(P,Ve),e(Ve,je),e(je,Ho),e(P,$o),e(P,z),e(z,Io),e(z,De),e(De,Lo),e(z,Go),e(P,Yo),e(P,qe),e(qe,Ce),e(Ce,No),e(Ce,Pe),e(Pe,Mo),h(o,rt,c),h(o,Se,c),e(Se,Vo),h(o,lt,c),h(o,T,c),e(T,qo),e(T,B),e(B,Te),e(Te,zo),e(T,Bo),h(o,nt,c),h(o,A,c),e(A,Jo),e(A,ze),e(ze,Uo),e(A,Qo),h(o,it,c),h(o,Ae,c),e(Ae,Zo),h(o,ct,c),h(o,J,c),J.innerHTML=aa},p:wa,d(o){o&&t(p),o&&t(Ue),o&&t(j),o&&t(Qe),o&&t(Ze),o&&t(Fe),o&&t(y),o&&t(Ke),o&&t(Y),o&&t(Xe),o&&t(et),o&&t(tt),o&&t(D),o&&t(ot),o&&t(M),o&&t(st),o&&t(k),o&&t(at),o&&t(g),o&&t(rt),o&&t(Se),o&&t(lt),o&&t(T),o&&t(nt),o&&t(A),o&&t(it),o&&t(Ae),o&&t(ct),o&&t(J)}}}function Ea(U){let p,x;const _=[U[0],oa];let $={$$slots:{default:[ma]},$$scope:{ctx:U}};for(let u=0;u<_.length;u+=1)$=rs($,_[u]);return p=new _a({props:$}),{c(){pa(p.$$.fragment)},l(u){ha(p.$$.fragment,u)},m(u,v){da(p,u,v),x=!0},p(u,[v]){const Q=v&1?fa(_,[v&1&&ea(u[0]),v&0&&ea(oa)]):{};v&2&&(Q.$$scope={dirty:v,ctx:u}),p.$set(Q)},i(u){x||(ua(p.$$.fragment,u),x=!0)},o(u){ya(p.$$.fragment,u),x=!1},d(u){va(p,u)}}}const oa={title:"Who accessed my property?",date:"2019-03-24T08:00:00Z",description:"How to know when object property get accessed or modified",label:"blog"};function ba(U,p,x){return ka("blog",{image:ga}),U.$$set=_=>{x(0,p=rs(rs({},p),ta(_)))},p=ta(p),[p]}class Sa extends na{constructor(p){super();ia(this,p,ba,Ea,ca,{})}}export{Sa as default,oa as metadata};
