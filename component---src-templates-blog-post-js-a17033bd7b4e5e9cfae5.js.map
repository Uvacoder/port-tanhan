{"version":3,"sources":["webpack:///./src/components/PostSeo.js","webpack:///./src/components/ArticleFooter.js","webpack:///./src/templates/blog-post.js"],"names":["SEO","siteLanguage","meta","title","description","image","twitterImage","url","post","site","profilePicture","file","publicURL","metaDescription","siteMetadata","metaImage","siteUrl","metaKeywords","tags","split","htmlAttributes","lang","titleTemplate","name","content","property","author","concat","length","join","type","JSON","stringify","copyrightHolder","copyrightYear","creator","publisher","logo","datePublished","date","dateModified","lastUpdated","headline","inLanguage","mainEntityOfPage","itemListElement","item","position","itemprop","ArticleFooter","style","marginBottom","rhythm","href","getGoodTweetLink","encodeURIComponent","BlogPostTemplate","props","blogRef","React","useRef","useEffect","current","querySelectorAll","forEach","script","innerHTML","window","eval","src","s","document","createElement","async","head","appendChild","innerWidth","id","body","console","log","ad","getElementById","parentNode","removeChild","data","markdownRemark","siteTitle","pageContext","previous","next","heroImageUrl","heroTwitterImageUrl","isWip","fields","wip","location","itemscope","itemtype","frontmatter","excerpt","slug","scale","display","marginTop","dateTime","dateTimestamp","fontStyle","marginLeft","lastUpdatedTimestamp","ref","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","rel","pageQuery"],"mappings":"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","file":"component---src-templates-blog-post-js-a17033bd7b4e5e9cfae5.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({\n  siteLanguage = 'en',\n  meta = [],\n  title,\n  description,\n  image,\n  twitterImage,\n  url,\n  post,\n}) {\n  const {\n    site,\n    file: { publicURL: profilePicture },\n  } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            siteUrl\n          }\n        }\n        file(\n          sourceInstanceName: { eq: \"assets\" }\n          relativePath: { eq: \"profile-pic.png\" }\n        ) {\n          publicURL\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const metaImage = `${site.siteMetadata.siteUrl}${twitterImage || image || profilePicture}`;\n  const metaKeywords = post.tags ? post.tags.split(',') : [];\n\n  return (\n    <>\n      <Helmet\n        htmlAttributes={{\n          lang: siteLanguage,\n        }}\n        title={title}\n        titleTemplate={`%s | ${site.siteMetadata.title}`}\n        meta={[\n          {\n            name: `description`,\n            content: metaDescription,\n          },\n          {\n            name: 'image',\n            content: metaImage,\n          },\n          {\n            property: 'og:image',\n            content: metaImage,\n          },\n          {\n            property: `og:title`,\n            content: title,\n          },\n          {\n            property: `og:description`,\n            content: metaDescription,\n          },\n          {\n            property: `og:type`,\n            content: `website`,\n          },\n          {\n            name: 'twitter:site',\n            content: '@lihautan',\n          },\n          {\n            name: `twitter:card`,\n            content: twitterImage ? 'summary_large_image' : `summary`,\n          },\n          {\n            name: `twitter:creator`,\n            content: site.siteMetadata.author,\n          },\n          {\n            name: `twitter:title`,\n            content: title,\n          },\n          {\n            name: `twitter:description`,\n            content: metaDescription,\n          },\n          {\n            name: `twitter:image`,\n            content: metaImage,\n          },\n        ]\n          .concat(\n            metaKeywords.length > 0\n              ? {\n                  name: `keywords`,\n                  content: metaKeywords.join(`, `),\n                }\n              : []\n          )\n          .concat(meta)}\n      />\n      <script type=\"application/ld+json\">\n        {JSON.stringify({\n          '@context': 'http://schema.org',\n          '@type': 'Article',\n          author: {\n            '@type': 'Person',\n            name: site.siteMetadata.author,\n          },\n          copyrightHolder: {\n            '@type': 'Person',\n            name: site.siteMetadata.author,\n          },\n          copyrightYear: '2019',\n          creator: {\n            '@type': 'Person',\n            name: site.siteMetadata.author,\n          },\n          publisher: {\n            '@type': 'Organization',\n            name: site.siteMetadata.author,\n            logo: {\n              '@type': 'ImageObject',\n              url: profilePicture,\n            },\n          },\n          datePublished: post.date,\n          dateModified: post.lastUpdated || post.date,\n          description: metaDescription,\n          headline: title,\n          inLanguage: siteLanguage,\n          url: `${site.siteMetadata.siteUrl}${url}`,\n          name: title,\n          image: {\n            '@type': 'ImageObject',\n            url: metaImage,\n          },\n          mainEntityOfPage: `${site.siteMetadata.siteUrl}${url}`,\n        })}\n      </script>\n      <script type=\"application/ld+json\">\n        {JSON.stringify({\n          '@context': 'http://schema.org',\n          '@type': 'BreadcrumbList',\n          description: 'Breadcrumbs list',\n          name: 'Breadcrumbs',\n          itemListElement: [\n            {\n              '@type': 'ListItem',\n              item: {\n                '@id': site.siteMetadata.siteUrl,\n                name: 'Homepage',\n              },\n              position: 1,\n            },\n            {\n              '@type': 'ListItem',\n              item: {\n                '@id': `${site.siteMetadata.siteUrl}${url}`,\n                name: title,\n              },\n              position: 2,\n            },\n          ],\n        })}\n      </script>\n      <meta itemprop=\"url\" content={`${site.siteMetadata.siteUrl}${url}`} />\n      <meta itemprop=\"image\" content={metaImage} />\n    </>\n  );\n}\n\nexport default SEO;\n","import React from 'react';\nimport { rhythm } from '../utils/typography';\n\nexport default function ArticleFooter({ url }) {\n  return (\n    <>\n      <hr\n        style={{\n          marginBottom: rhythm(1),\n        }}\n      />\n      <p>\n        Thank you for your time reading through this article.\n        <br />\n        It means a lot to me.\n      </p>\n      <p>\n        {' I would appreciate if you '}\n        <a href={getGoodTweetLink(url)}>tweet about it.</a>\n        {/* {' or buy me a coffee.'}\n        <a href=\"https://www.buymeacoffee.com/lihautan\" target=\"_blank\">\n          <img\n            src=\"https://cdn.buymeacoffee.com/buttons/arial-black.png\"\n            alt=\"Buy Me A Coffee\"\n            style={{\n              height: 51,\n              width: 217,\n              display: 'block',\n              margin: '16px auto',\n            }}\n          />\n        </a> */}\n      </p>\n    </>\n  );\n}\n\nfunction getGoodTweetLink(url) {\n  return `https://twitter.com/intent/tweet?text=${encodeURIComponent(\n    'Insightful article from @lihautan'\n  )}&url=${url}`;\n}\n\n// function getBadTweetLink(url) {\n//   return `https://twitter.com/intent/tweet?text=${encodeURIComponent(\n//     \"I disgree with @lihautan's article\"\n//   )}&url=${url}`;\n// }\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/PostSeo';\nimport ArticleFooter from '../components/ArticleFooter';\nimport { rhythm, scale } from '../utils/typography';\n\nfunction BlogPostTemplate(props) {\n  // TODO: NOTE: this is making XSS possible.\n  // go figure out MDX so we dont need to manually execute scripts in the .md\n  const blogRef = React.useRef();\n  React.useEffect(() => {\n    const scripts = blogRef.current.querySelectorAll('script');\n    scripts.forEach(script => {\n      if (script.innerHTML) {\n        /* eslint-disable no-eval */\n        window.eval(script.innerHTML);\n      } else if (script.src) {\n        const s = document.createElement('script');\n        s.async = script.async;\n        s.src = script.src;\n        document.head.appendChild(s);\n      }\n    });\n  }, []);\n\n  React.useEffect(() => {\n    if (window.innerWidth > 1080) {\n      const script = document.createElement('script');\n      script.async = true;\n      script.type = 'text/javascript';\n      script.src =\n        '//cdn.carbonads.com/carbon.js?serve=CE7ITK3E&placement=lihautancom';\n      script.id = '_carbonads_js';\n      document.body.appendChild(script);\n      console.log('script', script);\n    }\n    return () => {\n      const ad = document.getElementById('carbonads');\n      ad.parentNode.removeChild(ad);\n    };\n  }, []);\n\n  const post = props.data.markdownRemark;\n  const siteTitle = props.data.site.siteMetadata.title;\n  const {\n    previous,\n    next,\n    heroImageUrl,\n    heroTwitterImageUrl,\n  } = props.pageContext;\n  const isWip = post.fields.wip;\n\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <article\n        itemscope\n        itemtype=\"http://schema.org/Article\"\n        itemprop=\"mainEntity\"\n      >\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n          image={heroImageUrl}\n          twitterImage={heroTwitterImageUrl}\n          url={post.fields.slug}\n          post={post.frontmatter}\n        />\n        <h1 itemprop=\"name headline\">\n          {isWip ? 'WIP: ' : null}\n          {post.frontmatter.title}\n        </h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-0.5),\n          }}\n        >\n          <time\n            itemprop=\"datePublished\"\n            dateTime={post.frontmatter.dateTimestamp}\n          >\n            {post.frontmatter.date}\n          </time>\n          {post.frontmatter.lastUpdated && (\n            <span style={{ fontStyle: 'italic', marginLeft: rhythm(0.2) }}>\n              (Last updated:{' '}\n              <time\n                itemprop=\"dateUpdated\"\n                dateTime={post.frontmatter.lastUpdatedTimestamp}\n              >\n                {post.frontmatter.lastUpdated}\n              </time>\n              )\n            </span>\n          )}\n        </p>\n        <div\n          itemprop=\"articleBody\"\n          ref={blogRef}\n          dangerouslySetInnerHTML={{ __html: post.html }}\n        />\n      </article>\n      <ArticleFooter url={props.location.href} />\n      <hr\n        style={{\n          marginBottom: rhythm(1),\n        }}\n      />\n\n      <ul\n        style={{\n          display: `flex`,\n          flexWrap: `wrap`,\n          justifyContent: `space-between`,\n          listStyle: `none`,\n          padding: 0,\n        }}\n      >\n        <li>\n          {previous && (\n            <Link to={previous.fields.slug} rel=\"prev\">\n              ← {previous.frontmatter.title}\n            </Link>\n          )}\n        </li>\n        <li>\n          {next && (\n            <Link to={next.fields.slug} rel=\"next\">\n              {next.frontmatter.title} →\n            </Link>\n          )}\n        </li>\n      </ul>\n    </Layout>\n  );\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        slug\n        wip\n      }\n      frontmatter {\n        title\n        dateTimestamp: date(formatString: \"YYYY-MM-DDThh:mm:ssz\")\n        date(formatString: \"MMMM DD, YYYY\")\n        lastUpdatedTimestamp: lastUpdated(formatString: \"YYYY-MM-DDThh:mm:ssz\")\n        lastUpdated(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}