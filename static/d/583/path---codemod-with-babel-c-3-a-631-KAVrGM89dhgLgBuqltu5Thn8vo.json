{"data":{"site":{"siteMetadata":{"title":"Tan Li Hau","author":"Tan Li Hau"}},"markdownRemark":{"id":"9102142a-7caa-517f-be4d-88720e0f4876","excerpt":"","html":"<p>A general template that I used:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> babel <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@babel/core'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> promisify <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'util'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> writeFile <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">promisify</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>writeFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> code <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> babel<span class=\"token punctuation\">.</span><span class=\"token function\">transformFileAsync</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    plugins<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">manipulateOptions</span><span class=\"token punctuation\">(</span>opts<span class=\"token punctuation\">,</span> parserOpts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">/*\n             add to parserOpts.plugins to enable the syntax\n             eg: \n              jsx, flow, typescript, objectRestSpread, pipelineOperator, \n              throwExpressions, optionalChaining, nullishCoalescingOperator, \n              exportDefaultFrom, dynamicImport, ...\n            */</span>\n            parserOpts<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>\n              <span class=\"token string\">'classProperties'</span><span class=\"token punctuation\">,</span>\n              <span class=\"token string\">'classPrivateProperties'</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          visitor<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// fill in a transformer here</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> <span class=\"token function\">writeFile</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>[WIP] I am going to explain how it works and how to use it.</p>","fields":{"wip":false},"frontmatter":{"title":"Codemod with babel","date":"March 13, 2019","lastUpdated":null,"description":"A template which I used"}}},"pageContext":{"slug":"/codemod-with-babel/","type":"blog","noteDate":null,"noteTitle":null,"wip":false,"previous":{"fileAbsolutePath":"/Users/lhtan/Projects/lihautan/content/blog/eslint-for-flow-explicit-type-argument-syntax/index.md","fields":{"slug":"/eslint-for-flow-explicit-type-argument-syntax/","type":"blog","noteDate":null,"noteTitle":null,"wip":false},"frontmatter":{"title":"My eslint doesn’t work with for flow 0.85’s explicit type argument syntax"}},"next":{"fileAbsolutePath":"/Users/lhtan/Projects/lihautan/content/blog/understand-the-frontend-tools/index.md","fields":{"slug":"/understand-the-frontend-tools/","type":"blog","noteDate":null,"noteTitle":null,"wip":false},"frontmatter":{"title":"Understand the frontend tools"}}}}