/* generated by Svelte v3.24.0 */
import {
	SvelteComponent,
	append,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	noop,
	safe_not_equal,
	space,
	text,
	transition_in,
	transition_out
} from "/svelte/internal.js";

import Notes from "/components/Notes.js";

function create_fragment(ctx) {
	let h2;
	let t1;
	let blockquote;
	let t6;
	let p1;
	let t8;
	let ul2;
	let li1;
	let t12;
	let li3;
	let t13;
	let ul1;
	let li2;
	let t14;
	let notes;
	let current;

	notes = new Notes({
			props: {
				note: "like how you would for external dependencies"
			}
		});

	return {
		c() {
			h2 = element("h2");
			h2.textContent = "üèØ Monorepo";
			t1 = space();
			blockquote = element("blockquote");
			blockquote.innerHTML = `<p>way of organising <strong>clearly defined</strong> packages within <strong>1 git repository</strong></p>`;
			t6 = space();
			p1 = element("p");
			p1.innerHTML = `<strong>clearly defined</strong>`;
			t8 = space();
			ul2 = element("ul");
			li1 = element("li");
			li1.innerHTML = `explicitly defined dependencies<ul><li>using <code>package.json</code></li></ul>`;
			t12 = space();
			li3 = element("li");
			t13 = text("clear boundaries & interfaces");
			ul1 = element("ul");
			li2 = element("li");
			t14 = text("no assumptions on the inner structure of the package ");
			create_component(notes.$$.fragment);
		},
		m(target, anchor) {
			insert(target, h2, anchor);
			insert(target, t1, anchor);
			insert(target, blockquote, anchor);
			insert(target, t6, anchor);
			insert(target, p1, anchor);
			insert(target, t8, anchor);
			insert(target, ul2, anchor);
			append(ul2, li1);
			append(ul2, t12);
			append(ul2, li3);
			append(li3, t13);
			append(li3, ul1);
			append(ul1, li2);
			append(li2, t14);
			mount_component(notes, li2, null);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(notes.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(notes.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(h2);
			if (detaching) detach(t1);
			if (detaching) detach(blockquote);
			if (detaching) detach(t6);
			if (detaching) detach(p1);
			if (detaching) detach(t8);
			if (detaching) detach(ul2);
			destroy_component(notes);
		}
	};
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Component;