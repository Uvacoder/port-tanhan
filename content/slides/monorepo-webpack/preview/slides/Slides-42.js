/* generated by Svelte v3.24.0 */
import {
	SvelteComponent,
	attr,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	space
} from "/svelte/internal.js";

function create_fragment(ctx) {
	let h2;
	let t2;
	let pre;

	let raw_value = `
<code class="language-js"><span class="token keyword">if</span> <span class="token punctuation">(</span>moduleA<span class="token punctuation">.</span><span class="token function">identifier</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!==</span> moduleB<span class="token punctuation">.</span><span class="token function">identifier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">&#125;</span></code>` + "";

	return {
		c() {
			h2 = element("h2");
			h2.innerHTML = `üêõ Solution #2: <code>symlinks: false</code>`;
			t2 = space();
			pre = element("pre");
			attr(pre, "class", "language-js");
		},
		m(target, anchor) {
			insert(target, h2, anchor);
			insert(target, t2, anchor);
			insert(target, pre, anchor);
			pre.innerHTML = raw_value;
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(h2);
			if (detaching) detach(t2);
			if (detaching) detach(pre);
		}
	};
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Component;